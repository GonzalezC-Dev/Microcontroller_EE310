

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun May 04 18:01:39 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text33,global,reloc=4,class=CODE,space=0,delta=1
    46                           	psect	ivt0x4008,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Generated 12/10/2023 GMT
    52                           ; 
    53                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F47K42 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   003FE0                     bsr             equ	16352
    86   003FE9                     fsr0            equ	16361
    87   003FEA                     fsr0h           equ	16362
    88   003FE9                     fsr0l           equ	16361
    89   003FE1                     fsr1            equ	16353
    90   003FE2                     fsr1h           equ	16354
    91   003FE1                     fsr1l           equ	16353
    92   003FD9                     fsr2            equ	16345
    93   003FDA                     fsr2h           equ	16346
    94   003FD9                     fsr2l           equ	16345
    95   003FEF                     indf0           equ	16367
    96   003FE7                     indf1           equ	16359
    97   003FDF                     indf2           equ	16351
    98   003FD2                     intcon          equ	16338
    99   0039E5                     nvmcon          equ	14821
   100   003FF9                     pcl             equ	16377
   101   003FFA                     pclath          equ	16378
   102   003FFB                     pclatu          equ	16379
   103   003FEB                     plusw0          equ	16363
   104   003FE3                     plusw1          equ	16355
   105   003FDB                     plusw2          equ	16347
   106   003FED                     postdec0        equ	16365
   107   003FE5                     postdec1        equ	16357
   108   003FDD                     postdec2        equ	16349
   109   003FEE                     postinc0        equ	16366
   110   003FE6                     postinc1        equ	16358
   111   003FDE                     postinc2        equ	16350
   112   003FEC                     preinc0         equ	16364
   113   003FE4                     preinc1         equ	16356
   114   003FDC                     preinc2         equ	16348
   115   003FF3                     prod            equ	16371
   116   003FF4                     prodh           equ	16372
   117   003FF3                     prodl           equ	16371
   118   003FD8                     status          equ	16344
   119   003FF5                     tablat          equ	16373
   120   003FF6                     tblptr          equ	16374
   121   003FF7                     tblptrh         equ	16375
   122   003FF6                     tblptrl         equ	16374
   123   003FF8                     tblptru         equ	16376
   124   003FFD                     tosl            equ	16381
   125   003FE8                     wreg            equ	16360
   126   003880                     STATUS_CSHAD    equ	14464	;# 
   127   003881                     WREG_CSHAD      equ	14465	;# 
   128   003882                     BSR_CSHAD       equ	14466	;# 
   129   003883                     SHADCON         equ	14467	;# 
   130   003884                     STATUS_SHAD     equ	14468	;# 
   131   003885                     WREG_SHAD       equ	14469	;# 
   132   003886                     BSR_SHAD        equ	14470	;# 
   133   003887                     PCLATH_SHAD     equ	14471	;# 
   134   003888                     PCLATU_SHAD     equ	14472	;# 
   135   003889                     FSR0SH          equ	14473	;# 
   136   003889                     FSR0L_SHAD      equ	14473	;# 
   137   00388A                     FSR0H_SHAD      equ	14474	;# 
   138   00388B                     FSR1SH          equ	14475	;# 
   139   00388B                     FSR1L_SHAD      equ	14475	;# 
   140   00388C                     FSR1H_SHAD      equ	14476	;# 
   141   00388D                     FSR2SH          equ	14477	;# 
   142   00388D                     FSR2L_SHAD      equ	14477	;# 
   143   00388E                     FSR2H_SHAD      equ	14478	;# 
   144   00388F                     PRODSH          equ	14479	;# 
   145   00388F                     PRODL_SHAD      equ	14479	;# 
   146   003890                     PRODH_SHAD      equ	14480	;# 
   147   00389D                     IVTADL          equ	14493	;# 
   148   00389E                     IVTADH          equ	14494	;# 
   149   00389F                     IVTADU          equ	14495	;# 
   150   00395B                     WDTCON0         equ	14683	;# 
   151   00395C                     WDTCON1         equ	14684	;# 
   152   00395D                     WDTPSL          equ	14685	;# 
   153   00395E                     WDTPSH          equ	14686	;# 
   154   00395F                     WDTTMR          equ	14687	;# 
   155   003960                     CRCDATA         equ	14688	;# 
   156   003960                     CRCDATL         equ	14688	;# 
   157   003961                     CRCDATH         equ	14689	;# 
   158   003962                     CRCACC          equ	14690	;# 
   159   003962                     CRCACCL         equ	14690	;# 
   160   003963                     CRCACCH         equ	14691	;# 
   161   003964                     CRCSHFT         equ	14692	;# 
   162   003964                     CRCSHIFTL       equ	14692	;# 
   163   003965                     CRCSHIFTH       equ	14693	;# 
   164   003966                     CRCXOR          equ	14694	;# 
   165   003966                     CRCXORL         equ	14694	;# 
   166   003967                     CRCXORH         equ	14695	;# 
   167   003968                     CRCCON0         equ	14696	;# 
   168   003969                     CRCCON1         equ	14697	;# 
   169   003976                     SCANLADR        equ	14710	;# 
   170   003976                     SCANLADRL       equ	14710	;# 
   171   003977                     SCANLADRH       equ	14711	;# 
   172   003978                     SCANLADRU       equ	14712	;# 
   173   003979                     SCANHADR        equ	14713	;# 
   174   003979                     SCANHADRL       equ	14713	;# 
   175   00397A                     SCANHADRH       equ	14714	;# 
   176   00397B                     SCANHADRU       equ	14715	;# 
   177   00397C                     SCANCON0        equ	14716	;# 
   178   00397D                     SCANTRIG        equ	14717	;# 
   179   003980                     IPR0            equ	14720	;# 
   180   003981                     IPR1            equ	14721	;# 
   181   003982                     IPR2            equ	14722	;# 
   182   003983                     IPR3            equ	14723	;# 
   183   003984                     IPR4            equ	14724	;# 
   184   003985                     IPR5            equ	14725	;# 
   185   003986                     IPR6            equ	14726	;# 
   186   003987                     IPR7            equ	14727	;# 
   187   003988                     IPR8            equ	14728	;# 
   188   003989                     IPR9            equ	14729	;# 
   189   00398A                     IPR10           equ	14730	;# 
   190   003990                     PIE0            equ	14736	;# 
   191   003991                     PIE1            equ	14737	;# 
   192   003992                     PIE2            equ	14738	;# 
   193   003993                     PIE3            equ	14739	;# 
   194   003994                     PIE4            equ	14740	;# 
   195   003995                     PIE5            equ	14741	;# 
   196   003996                     PIE6            equ	14742	;# 
   197   003997                     PIE7            equ	14743	;# 
   198   003998                     PIE8            equ	14744	;# 
   199   003999                     PIE9            equ	14745	;# 
   200   00399A                     PIE10           equ	14746	;# 
   201   0039A0                     PIR0            equ	14752	;# 
   202   0039A1                     PIR1            equ	14753	;# 
   203   0039A2                     PIR2            equ	14754	;# 
   204   0039A3                     PIR3            equ	14755	;# 
   205   0039A4                     PIR4            equ	14756	;# 
   206   0039A5                     PIR5            equ	14757	;# 
   207   0039A6                     PIR6            equ	14758	;# 
   208   0039A7                     PIR7            equ	14759	;# 
   209   0039A8                     PIR8            equ	14760	;# 
   210   0039A9                     PIR9            equ	14761	;# 
   211   0039AA                     PIR10           equ	14762	;# 
   212   0039C0                     PMD0            equ	14784	;# 
   213   0039C1                     PMD1            equ	14785	;# 
   214   0039C2                     PMD2            equ	14786	;# 
   215   0039C3                     PMD3            equ	14787	;# 
   216   0039C4                     PMD4            equ	14788	;# 
   217   0039C5                     PMD5            equ	14789	;# 
   218   0039C6                     PMD6            equ	14790	;# 
   219   0039C7                     PMD7            equ	14791	;# 
   220   0039D0                     BORCON          equ	14800	;# 
   221   0039D1                     VREGCON         equ	14801	;# 
   222   0039D8                     CPUDOZE         equ	14808	;# 
   223   0039D9                     OSCCON1         equ	14809	;# 
   224   0039DA                     OSCCON2         equ	14810	;# 
   225   0039DB                     OSCCON3         equ	14811	;# 
   226   0039DC                     OSCSTAT         equ	14812	;# 
   227   0039DC                     OSCSTAT1        equ	14812	;# 
   228   0039DD                     OSCEN           equ	14813	;# 
   229   0039DE                     OSCTUNE         equ	14814	;# 
   230   0039DF                     OSCFRQ          equ	14815	;# 
   231   0039E0                     NVMADRL         equ	14816	;# 
   232   0039E1                     NVMADRH         equ	14817	;# 
   233   0039E3                     NVMDAT          equ	14819	;# 
   234   0039E5                     NVMCON1         equ	14821	;# 
   235   0039E6                     NVMCON2         equ	14822	;# 
   236   0039EF                     PRLOCK          equ	14831	;# 
   237   0039F1                     ISRPR           equ	14833	;# 
   238   0039F2                     MAINPR          equ	14834	;# 
   239   0039F3                     DMA1PR          equ	14835	;# 
   240   0039F4                     DMA2PR          equ	14836	;# 
   241   0039F7                     SCANPR          equ	14839	;# 
   242   003A00                     RA0PPS          equ	14848	;# 
   243   003A01                     RA1PPS          equ	14849	;# 
   244   003A02                     RA2PPS          equ	14850	;# 
   245   003A03                     RA3PPS          equ	14851	;# 
   246   003A04                     RA4PPS          equ	14852	;# 
   247   003A05                     RA5PPS          equ	14853	;# 
   248   003A06                     RA6PPS          equ	14854	;# 
   249   003A07                     RA7PPS          equ	14855	;# 
   250   003A08                     RB0PPS          equ	14856	;# 
   251   003A09                     RB1PPS          equ	14857	;# 
   252   003A0A                     RB2PPS          equ	14858	;# 
   253   003A0B                     RB3PPS          equ	14859	;# 
   254   003A0C                     RB4PPS          equ	14860	;# 
   255   003A0D                     RB5PPS          equ	14861	;# 
   256   003A0E                     RB6PPS          equ	14862	;# 
   257   003A0F                     RB7PPS          equ	14863	;# 
   258   003A10                     RC0PPS          equ	14864	;# 
   259   003A11                     RC1PPS          equ	14865	;# 
   260   003A12                     RC2PPS          equ	14866	;# 
   261   003A13                     RC3PPS          equ	14867	;# 
   262   003A14                     RC4PPS          equ	14868	;# 
   263   003A15                     RC5PPS          equ	14869	;# 
   264   003A16                     RC6PPS          equ	14870	;# 
   265   003A17                     RC7PPS          equ	14871	;# 
   266   003A18                     RD0PPS          equ	14872	;# 
   267   003A19                     RD1PPS          equ	14873	;# 
   268   003A1A                     RD2PPS          equ	14874	;# 
   269   003A1B                     RD3PPS          equ	14875	;# 
   270   003A1C                     RD4PPS          equ	14876	;# 
   271   003A1D                     RD5PPS          equ	14877	;# 
   272   003A1E                     RD6PPS          equ	14878	;# 
   273   003A1F                     RD7PPS          equ	14879	;# 
   274   003A20                     RE0PPS          equ	14880	;# 
   275   003A21                     RE1PPS          equ	14881	;# 
   276   003A22                     RE2PPS          equ	14882	;# 
   277   003A40                     ANSELA          equ	14912	;# 
   278   003A41                     WPUA            equ	14913	;# 
   279   003A42                     ODCONA          equ	14914	;# 
   280   003A43                     SLRCONA         equ	14915	;# 
   281   003A44                     INLVLA          equ	14916	;# 
   282   003A45                     IOCAP           equ	14917	;# 
   283   003A46                     IOCAN           equ	14918	;# 
   284   003A47                     IOCAF           equ	14919	;# 
   285   003A50                     ANSELB          equ	14928	;# 
   286   003A51                     WPUB            equ	14929	;# 
   287   003A52                     ODCONB          equ	14930	;# 
   288   003A53                     SLRCONB         equ	14931	;# 
   289   003A54                     INLVLB          equ	14932	;# 
   290   003A55                     IOCBP           equ	14933	;# 
   291   003A56                     IOCBN           equ	14934	;# 
   292   003A57                     IOCBF           equ	14935	;# 
   293   003A5A                     RB1I2C          equ	14938	;# 
   294   003A5B                     RB2I2C          equ	14939	;# 
   295   003A60                     ANSELC          equ	14944	;# 
   296   003A61                     WPUC            equ	14945	;# 
   297   003A62                     ODCONC          equ	14946	;# 
   298   003A63                     SLRCONC         equ	14947	;# 
   299   003A64                     INLVLC          equ	14948	;# 
   300   003A65                     IOCCP           equ	14949	;# 
   301   003A66                     IOCCN           equ	14950	;# 
   302   003A67                     IOCCF           equ	14951	;# 
   303   003A6A                     RC3I2C          equ	14954	;# 
   304   003A6B                     RC4I2C          equ	14955	;# 
   305   003A70                     ANSELD          equ	14960	;# 
   306   003A71                     WPUD            equ	14961	;# 
   307   003A72                     ODCOND          equ	14962	;# 
   308   003A73                     SLRCOND         equ	14963	;# 
   309   003A74                     INLVLD          equ	14964	;# 
   310   003A7A                     RD0I2C          equ	14970	;# 
   311   003A7B                     RD1I2C          equ	14971	;# 
   312   003A80                     ANSELE          equ	14976	;# 
   313   003A81                     WPUE            equ	14977	;# 
   314   003A82                     ODCONE          equ	14978	;# 
   315   003A83                     SLRCONE         equ	14979	;# 
   316   003A84                     INLVLE          equ	14980	;# 
   317   003A85                     IOCEP           equ	14981	;# 
   318   003A86                     IOCEN           equ	14982	;# 
   319   003A87                     IOCEF           equ	14983	;# 
   320   003ABF                     PPSLOCK         equ	15039	;# 
   321   003AC0                     INT0PPS         equ	15040	;# 
   322   003AC1                     INT1PPS         equ	15041	;# 
   323   003AC2                     INT2PPS         equ	15042	;# 
   324   003AC3                     T0CKIPPS        equ	15043	;# 
   325   003AC4                     T1CKIPPS        equ	15044	;# 
   326   003AC5                     T1GPPS          equ	15045	;# 
   327   003AC6                     T3CKIPPS        equ	15046	;# 
   328   003AC7                     T3GPPS          equ	15047	;# 
   329   003AC8                     T5CKIPPS        equ	15048	;# 
   330   003AC9                     T5GPPS          equ	15049	;# 
   331   003ACA                     T2INPPS         equ	15050	;# 
   332   003ACB                     T4INPPS         equ	15051	;# 
   333   003ACC                     T6INPPS         equ	15052	;# 
   334   003ACD                     CCP1PPS         equ	15053	;# 
   335   003ACE                     CCP2PPS         equ	15054	;# 
   336   003ACF                     CCP3PPS         equ	15055	;# 
   337   003AD0                     CCP4PPS         equ	15056	;# 
   338   003AD1                     SMT1WINPPS      equ	15057	;# 
   339   003AD2                     SMT1SIGPPS      equ	15058	;# 
   340   003AD3                     CWG1INPPS       equ	15059	;# 
   341   003AD4                     CWG2INPPS       equ	15060	;# 
   342   003AD5                     CWG3INPPS       equ	15061	;# 
   343   003AD6                     MD1CARLPPS      equ	15062	;# 
   344   003AD7                     MD1CARHPPS      equ	15063	;# 
   345   003AD8                     MD1SRCPPS       equ	15064	;# 
   346   003AD9                     CLCIN0PPS       equ	15065	;# 
   347   003ADA                     CLCIN1PPS       equ	15066	;# 
   348   003ADB                     CLCIN2PPS       equ	15067	;# 
   349   003ADC                     CLCIN3PPS       equ	15068	;# 
   350   003ADD                     ADACTPPS        equ	15069	;# 
   351   003ADE                     SPI1SCKPPS      equ	15070	;# 
   352   003ADF                     SPI1SDIPPS      equ	15071	;# 
   353   003AE0                     SPI1SSPPS       equ	15072	;# 
   354   003AE1                     I2C1SCLPPS      equ	15073	;# 
   355   003AE2                     I2C1SDAPPS      equ	15074	;# 
   356   003AE3                     I2C2SCLPPS      equ	15075	;# 
   357   003AE4                     I2C2SDAPPS      equ	15076	;# 
   358   003AE5                     U1RXPPS         equ	15077	;# 
   359   003AE6                     U1CTSPPS        equ	15078	;# 
   360   003AE8                     U2RXPPS         equ	15080	;# 
   361   003AE9                     U2CTSPPS        equ	15081	;# 
   362   003BC9                     DMA2BUF         equ	15305	;# 
   363   003BCA                     DMA2DCNT        equ	15306	;# 
   364   003BCA                     DMA2DCNTL       equ	15306	;# 
   365   003BCB                     DMA2DCNTH       equ	15307	;# 
   366   003BCC                     DMA2DPTR        equ	15308	;# 
   367   003BCC                     DMA2DPTRL       equ	15308	;# 
   368   003BCD                     DMA2DPTRH       equ	15309	;# 
   369   003BCE                     DMA2DSZ         equ	15310	;# 
   370   003BCE                     DMA2DSZL        equ	15310	;# 
   371   003BCF                     DMA2DSZH        equ	15311	;# 
   372   003BD0                     DMA2DSA         equ	15312	;# 
   373   003BD0                     DMA2DSAL        equ	15312	;# 
   374   003BD1                     DMA2DSAH        equ	15313	;# 
   375   003BD2                     DMA2SCNT        equ	15314	;# 
   376   003BD2                     DMA2SCNTL       equ	15314	;# 
   377   003BD3                     DMA2SCNTH       equ	15315	;# 
   378   003BD4                     DMA2SPTR        equ	15316	;# 
   379   003BD4                     DMA2SPTRL       equ	15316	;# 
   380   003BD5                     DMA2SPTRH       equ	15317	;# 
   381   003BD6                     DMA2SPTRU       equ	15318	;# 
   382   003BD7                     DMA2SSZ         equ	15319	;# 
   383   003BD7                     DMA2SSZL        equ	15319	;# 
   384   003BD8                     DMA2SSZH        equ	15320	;# 
   385   003BD9                     DMA2SSA         equ	15321	;# 
   386   003BD9                     DMA2SSAL        equ	15321	;# 
   387   003BDA                     DMA2SSAH        equ	15322	;# 
   388   003BDB                     DMA2SSAU        equ	15323	;# 
   389   003BDC                     DMA2CON0        equ	15324	;# 
   390   003BDD                     DMA2CON1        equ	15325	;# 
   391   003BDE                     DMA2AIRQ        equ	15326	;# 
   392   003BDF                     DMA2SIRQ        equ	15327	;# 
   393   003BE9                     DMA1BUF         equ	15337	;# 
   394   003BEA                     DMA1DCNT        equ	15338	;# 
   395   003BEA                     DMA1DCNTL       equ	15338	;# 
   396   003BEB                     DMA1DCNTH       equ	15339	;# 
   397   003BEC                     DMA1DPTR        equ	15340	;# 
   398   003BEC                     DMA1DPTRL       equ	15340	;# 
   399   003BED                     DMA1DPTRH       equ	15341	;# 
   400   003BEE                     DMA1DSZ         equ	15342	;# 
   401   003BEE                     DMA1DSZL        equ	15342	;# 
   402   003BEF                     DMA1DSZH        equ	15343	;# 
   403   003BF0                     DMA1DSA         equ	15344	;# 
   404   003BF0                     DMA1DSAL        equ	15344	;# 
   405   003BF1                     DMA1DSAH        equ	15345	;# 
   406   003BF2                     DMA1SCNT        equ	15346	;# 
   407   003BF2                     DMA1SCNTL       equ	15346	;# 
   408   003BF3                     DMA1SCNTH       equ	15347	;# 
   409   003BF4                     DMA1SPTR        equ	15348	;# 
   410   003BF4                     DMA1SPTRL       equ	15348	;# 
   411   003BF5                     DMA1SPTRH       equ	15349	;# 
   412   003BF6                     DMA1SPTRU       equ	15350	;# 
   413   003BF7                     DMA1SSZ         equ	15351	;# 
   414   003BF7                     DMA1SSZL        equ	15351	;# 
   415   003BF8                     DMA1SSZH        equ	15352	;# 
   416   003BF9                     DMA1SSA         equ	15353	;# 
   417   003BF9                     DMA1SSAL        equ	15353	;# 
   418   003BFA                     DMA1SSAH        equ	15354	;# 
   419   003BFB                     DMA1SSAU        equ	15355	;# 
   420   003BFC                     DMA1CON0        equ	15356	;# 
   421   003BFD                     DMA1CON1        equ	15357	;# 
   422   003BFE                     DMA1AIRQ        equ	15358	;# 
   423   003BFF                     DMA1SIRQ        equ	15359	;# 
   424   003C56                     CLC4CON         equ	15446	;# 
   425   003C57                     CLC4POL         equ	15447	;# 
   426   003C58                     CLC4SEL0        equ	15448	;# 
   427   003C59                     CLC4SEL1        equ	15449	;# 
   428   003C5A                     CLC4SEL2        equ	15450	;# 
   429   003C5B                     CLC4SEL3        equ	15451	;# 
   430   003C5C                     CLC4GLS0        equ	15452	;# 
   431   003C5D                     CLC4GLS1        equ	15453	;# 
   432   003C5E                     CLC4GLS2        equ	15454	;# 
   433   003C5F                     CLC4GLS3        equ	15455	;# 
   434   003C60                     CLC3CON         equ	15456	;# 
   435   003C61                     CLC3POL         equ	15457	;# 
   436   003C62                     CLC3SEL0        equ	15458	;# 
   437   003C63                     CLC3SEL1        equ	15459	;# 
   438   003C64                     CLC3SEL2        equ	15460	;# 
   439   003C65                     CLC3SEL3        equ	15461	;# 
   440   003C66                     CLC3GLS0        equ	15462	;# 
   441   003C67                     CLC3GLS1        equ	15463	;# 
   442   003C68                     CLC3GLS2        equ	15464	;# 
   443   003C69                     CLC3GLS3        equ	15465	;# 
   444   003C6A                     CLC2CON         equ	15466	;# 
   445   003C6B                     CLC2POL         equ	15467	;# 
   446   003C6C                     CLC2SEL0        equ	15468	;# 
   447   003C6D                     CLC2SEL1        equ	15469	;# 
   448   003C6E                     CLC2SEL2        equ	15470	;# 
   449   003C6F                     CLC2SEL3        equ	15471	;# 
   450   003C70                     CLC2GLS0        equ	15472	;# 
   451   003C71                     CLC2GLS1        equ	15473	;# 
   452   003C72                     CLC2GLS2        equ	15474	;# 
   453   003C73                     CLC2GLS3        equ	15475	;# 
   454   003C74                     CLC1CON         equ	15476	;# 
   455   003C75                     CLC1POL         equ	15477	;# 
   456   003C76                     CLC1SEL0        equ	15478	;# 
   457   003C77                     CLC1SEL1        equ	15479	;# 
   458   003C78                     CLC1SEL2        equ	15480	;# 
   459   003C79                     CLC1SEL3        equ	15481	;# 
   460   003C7A                     CLC1GLS0        equ	15482	;# 
   461   003C7B                     CLC1GLS1        equ	15483	;# 
   462   003C7C                     CLC1GLS2        equ	15484	;# 
   463   003C7D                     CLC1GLS3        equ	15485	;# 
   464   003C7E                     CLCDATA0        equ	15486	;# 
   465   003CE5                     CLKRCON         equ	15589	;# 
   466   003CE6                     CLKRCLK         equ	15590	;# 
   467   003CFA                     MD1CON0         equ	15610	;# 
   468   003CFB                     MD1CON1         equ	15611	;# 
   469   003CFC                     MD1SRC          equ	15612	;# 
   470   003CFD                     MD1CARL         equ	15613	;# 
   471   003CFE                     MD1CARH         equ	15614	;# 
   472   003D10                     SPI1RXB         equ	15632	;# 
   473   003D11                     SPI1TXB         equ	15633	;# 
   474   003D12                     SPI1TCNT        equ	15634	;# 
   475   003D12                     SPI1TCNTL       equ	15634	;# 
   476   003D13                     SPI1TCNTH       equ	15635	;# 
   477   003D14                     SPI1CON0        equ	15636	;# 
   478   003D15                     SPI1CON1        equ	15637	;# 
   479   003D16                     SPI1CON2        equ	15638	;# 
   480   003D17                     SPI1STATUS      equ	15639	;# 
   481   003D18                     SPI1TWIDTH      equ	15640	;# 
   482   003D19                     SPI1BAUD        equ	15641	;# 
   483   003D1A                     SPI1INTF        equ	15642	;# 
   484   003D1B                     SPI1INTE        equ	15643	;# 
   485   003D1C                     SPI1CLK         equ	15644	;# 
   486   003D54                     I2C2RXB         equ	15700	;# 
   487   003D55                     I2C2TXB         equ	15701	;# 
   488   003D56                     I2C2CNT         equ	15702	;# 
   489   003D57                     I2C2ADB0        equ	15703	;# 
   490   003D58                     I2C2ADB1        equ	15704	;# 
   491   003D59                     I2C2ADR0        equ	15705	;# 
   492   003D5A                     I2C2ADR1        equ	15706	;# 
   493   003D5B                     I2C2ADR2        equ	15707	;# 
   494   003D5C                     I2C2ADR3        equ	15708	;# 
   495   003D5D                     I2C2CON0        equ	15709	;# 
   496   003D5E                     I2C2CON1        equ	15710	;# 
   497   003D5F                     I2C2CON2        equ	15711	;# 
   498   003D60                     I2C2ERR         equ	15712	;# 
   499   003D61                     I2C2STAT0       equ	15713	;# 
   500   003D62                     I2C2STAT1       equ	15714	;# 
   501   003D63                     I2C2PIR         equ	15715	;# 
   502   003D64                     I2C2PIE         equ	15716	;# 
   503   003D65                     I2C2CLK         equ	15717	;# 
   504   003D66                     I2C2BTO         equ	15718	;# 
   505   003D6A                     I2C1RXB         equ	15722	;# 
   506   003D6B                     I2C1TXB         equ	15723	;# 
   507   003D6C                     I2C1CNT         equ	15724	;# 
   508   003D6D                     I2C1ADB0        equ	15725	;# 
   509   003D6E                     I2C1ADB1        equ	15726	;# 
   510   003D6F                     I2C1ADR0        equ	15727	;# 
   511   003D70                     I2C1ADR1        equ	15728	;# 
   512   003D71                     I2C1ADR2        equ	15729	;# 
   513   003D72                     I2C1ADR3        equ	15730	;# 
   514   003D73                     I2C1CON0        equ	15731	;# 
   515   003D74                     I2C1CON1        equ	15732	;# 
   516   003D75                     I2C1CON2        equ	15733	;# 
   517   003D76                     I2C1ERR         equ	15734	;# 
   518   003D77                     I2C1STAT0       equ	15735	;# 
   519   003D78                     I2C1STAT1       equ	15736	;# 
   520   003D79                     I2C1PIR         equ	15737	;# 
   521   003D7A                     I2C1PIE         equ	15738	;# 
   522   003D7B                     I2C1CLK         equ	15739	;# 
   523   003D7C                     I2C1BTO         equ	15740	;# 
   524   003DD0                     U2RXB           equ	15824	;# 
   525   003DD0                     U2RXBL          equ	15824	;# 
   526   003DD2                     U2TXB           equ	15826	;# 
   527   003DD2                     U2TXBL          equ	15826	;# 
   528   003DD4                     U2P1            equ	15828	;# 
   529   003DD4                     U2P1L           equ	15828	;# 
   530   003DD6                     U2P2            equ	15830	;# 
   531   003DD6                     U2P2L           equ	15830	;# 
   532   003DD8                     U2P3            equ	15832	;# 
   533   003DD8                     U2P3L           equ	15832	;# 
   534   003DDA                     U2CON0          equ	15834	;# 
   535   003DDB                     U2CON1          equ	15835	;# 
   536   003DDC                     U2CON2          equ	15836	;# 
   537   003DDD                     U2BRG           equ	15837	;# 
   538   003DDD                     U2BRGL          equ	15837	;# 
   539   003DDE                     U2BRGH          equ	15838	;# 
   540   003DDF                     U2FIFO          equ	15839	;# 
   541   003DE0                     U2UIR           equ	15840	;# 
   542   003DE1                     U2ERRIR         equ	15841	;# 
   543   003DE2                     U2ERRIE         equ	15842	;# 
   544   003DE8                     U1RXB           equ	15848	;# 
   545   003DE8                     U1RXBL          equ	15848	;# 
   546   003DE9                     U1RXCHK         equ	15849	;# 
   547   003DEA                     U1TXB           equ	15850	;# 
   548   003DEA                     U1TXBL          equ	15850	;# 
   549   003DEB                     U1TXCHK         equ	15851	;# 
   550   003DEC                     U1P1            equ	15852	;# 
   551   003DEC                     U1P1L           equ	15852	;# 
   552   003DED                     U1P1H           equ	15853	;# 
   553   003DEE                     U1P2            equ	15854	;# 
   554   003DEE                     U1P2L           equ	15854	;# 
   555   003DEF                     U1P2H           equ	15855	;# 
   556   003DF0                     U1P3            equ	15856	;# 
   557   003DF0                     U1P3L           equ	15856	;# 
   558   003DF1                     U1P3H           equ	15857	;# 
   559   003DF2                     U1CON0          equ	15858	;# 
   560   003DF3                     U1CON1          equ	15859	;# 
   561   003DF4                     U1CON2          equ	15860	;# 
   562   003DF5                     U1BRG           equ	15861	;# 
   563   003DF5                     U1BRGL          equ	15861	;# 
   564   003DF6                     U1BRGH          equ	15862	;# 
   565   003DF7                     U1FIFO          equ	15863	;# 
   566   003DF8                     U1UIR           equ	15864	;# 
   567   003DF9                     U1ERRIR         equ	15865	;# 
   568   003DFA                     U1ERRIE         equ	15866	;# 
   569   003E9C                     DAC1CON1        equ	16028	;# 
   570   003E9E                     DAC1CON0        equ	16030	;# 
   571   003EB8                     CM2CON0         equ	16056	;# 
   572   003EB9                     CM2CON1         equ	16057	;# 
   573   003EBA                     CM2NCH          equ	16058	;# 
   574   003EBB                     CM2PCH          equ	16059	;# 
   575   003EBC                     CM1CON0         equ	16060	;# 
   576   003EBD                     CM1CON1         equ	16061	;# 
   577   003EBE                     CM1NCH          equ	16062	;# 
   578   003EBF                     CM1PCH          equ	16063	;# 
   579   003EC0                     CMOUT           equ	16064	;# 
   580   003EC1                     FVRCON          equ	16065	;# 
   581   003EC3                     ZCDCON          equ	16067	;# 
   582   003EC9                     HLVDCON0        equ	16073	;# 
   583   003ECA                     HLVDCON1        equ	16074	;# 
   584   003ED7                     ADCP            equ	16087	;# 
   585   003EDE                     ADLTH           equ	16094	;# 
   586   003EDE                     ADLTHL          equ	16094	;# 
   587   003EDF                     ADLTHH          equ	16095	;# 
   588   003EE0                     ADUTH           equ	16096	;# 
   589   003EE0                     ADUTHL          equ	16096	;# 
   590   003EE1                     ADUTHH          equ	16097	;# 
   591   003EE2                     ADERR           equ	16098	;# 
   592   003EE2                     ADERRL          equ	16098	;# 
   593   003EE3                     ADERRH          equ	16099	;# 
   594   003EE4                     ADSTPT          equ	16100	;# 
   595   003EE4                     ADSTPTL         equ	16100	;# 
   596   003EE5                     ADSTPTH         equ	16101	;# 
   597   003EE6                     ADFLTR          equ	16102	;# 
   598   003EE6                     ADFLTRL         equ	16102	;# 
   599   003EE7                     ADFLTRH         equ	16103	;# 
   600   003EE8                     ADACC           equ	16104	;# 
   601   003EE8                     ADACCL          equ	16104	;# 
   602   003EE9                     ADACCH          equ	16105	;# 
   603   003EEA                     ADACCU          equ	16106	;# 
   604   003EEB                     ADCNT           equ	16107	;# 
   605   003EEC                     ADRPT           equ	16108	;# 
   606   003EED                     ADPREV          equ	16109	;# 
   607   003EED                     ADPREVL         equ	16109	;# 
   608   003EEE                     ADPREVH         equ	16110	;# 
   609   003EEF                     ADRES           equ	16111	;# 
   610   003EEF                     ADRESL          equ	16111	;# 
   611   003EF0                     ADRESH          equ	16112	;# 
   612   003EF1                     ADPCH           equ	16113	;# 
   613   003EF3                     ADACQ           equ	16115	;# 
   614   003EF3                     ADACQL          equ	16115	;# 
   615   003EF4                     ADACQH          equ	16116	;# 
   616   003EF5                     ADCAP           equ	16117	;# 
   617   003EF6                     ADPRE           equ	16118	;# 
   618   003EF6                     ADPREL          equ	16118	;# 
   619   003EF7                     ADPREH          equ	16119	;# 
   620   003EF8                     ADCON0          equ	16120	;# 
   621   003EF9                     ADCON1          equ	16121	;# 
   622   003EFA                     ADCON2          equ	16122	;# 
   623   003EFB                     ADCON3          equ	16123	;# 
   624   003EFC                     ADSTAT          equ	16124	;# 
   625   003EFD                     ADREF           equ	16125	;# 
   626   003EFE                     ADACT           equ	16126	;# 
   627   003EFF                     ADCLK           equ	16127	;# 
   628   003F12                     SMT1TMR         equ	16146	;# 
   629   003F12                     SMT1TMRL        equ	16146	;# 
   630   003F13                     SMT1TMRH        equ	16147	;# 
   631   003F14                     SMT1TMRU        equ	16148	;# 
   632   003F15                     SMT1CPR         equ	16149	;# 
   633   003F15                     SMT1CPRL        equ	16149	;# 
   634   003F16                     SMT1CPRH        equ	16150	;# 
   635   003F17                     SMT1CPRU        equ	16151	;# 
   636   003F18                     SMT1CPW         equ	16152	;# 
   637   003F18                     SMT1CPWL        equ	16152	;# 
   638   003F19                     SMT1CPWH        equ	16153	;# 
   639   003F1A                     SMT1CPWU        equ	16154	;# 
   640   003F1B                     SMT1PR          equ	16155	;# 
   641   003F1B                     SMT1PRL         equ	16155	;# 
   642   003F1C                     SMT1PRH         equ	16156	;# 
   643   003F1D                     SMT1PRU         equ	16157	;# 
   644   003F1E                     SMT1CON0        equ	16158	;# 
   645   003F1F                     SMT1CON1        equ	16159	;# 
   646   003F20                     SMT1STAT        equ	16160	;# 
   647   003F21                     SMT1CLK         equ	16161	;# 
   648   003F22                     SMT1SIG         equ	16162	;# 
   649   003F23                     SMT1WIN         equ	16163	;# 
   650   003F38                     NCO1ACC         equ	16184	;# 
   651   003F38                     NCO1ACCL        equ	16184	;# 
   652   003F39                     NCO1ACCH        equ	16185	;# 
   653   003F3A                     NCO1ACCU        equ	16186	;# 
   654   003F3B                     NCO1INC         equ	16187	;# 
   655   003F3B                     NCO1INCL        equ	16187	;# 
   656   003F3C                     NCO1INCH        equ	16188	;# 
   657   003F3D                     NCO1INCU        equ	16189	;# 
   658   003F3E                     NCO1CON         equ	16190	;# 
   659   003F3F                     NCO1CLK         equ	16191	;# 
   660   003F40                     CWG3CLK         equ	16192	;# 
   661   003F40                     CWG3CLKCON      equ	16192	;# 
   662   003F41                     CWG3ISM         equ	16193	;# 
   663   003F41                     CWG3DAT         equ	16193	;# 
   664   003F42                     CWG3DBR         equ	16194	;# 
   665   003F43                     CWG3DBF         equ	16195	;# 
   666   003F44                     CWG3CON0        equ	16196	;# 
   667   003F45                     CWG3CON1        equ	16197	;# 
   668   003F46                     CWG3AS0         equ	16198	;# 
   669   003F47                     CWG3AS1         equ	16199	;# 
   670   003F48                     CWG3STR         equ	16200	;# 
   671   003F49                     CWG2CLK         equ	16201	;# 
   672   003F49                     CWG2CLKCON      equ	16201	;# 
   673   003F4A                     CWG2ISM         equ	16202	;# 
   674   003F4A                     CWG2DAT         equ	16202	;# 
   675   003F4B                     CWG2DBR         equ	16203	;# 
   676   003F4C                     CWG2DBF         equ	16204	;# 
   677   003F4D                     CWG2CON0        equ	16205	;# 
   678   003F4E                     CWG2CON1        equ	16206	;# 
   679   003F4F                     CWG2AS0         equ	16207	;# 
   680   003F50                     CWG2AS1         equ	16208	;# 
   681   003F51                     CWG2STR         equ	16209	;# 
   682   003F52                     CWG1CLK         equ	16210	;# 
   683   003F52                     CWG1CLKCON      equ	16210	;# 
   684   003F53                     CWG1ISM         equ	16211	;# 
   685   003F53                     CWG1DAT         equ	16211	;# 
   686   003F54                     CWG1DBR         equ	16212	;# 
   687   003F55                     CWG1DBF         equ	16213	;# 
   688   003F56                     CWG1CON0        equ	16214	;# 
   689   003F57                     CWG1CON1        equ	16215	;# 
   690   003F58                     CWG1AS0         equ	16216	;# 
   691   003F59                     CWG1AS1         equ	16217	;# 
   692   003F5A                     CWG1STR         equ	16218	;# 
   693   003F5E                     CCPTMRS0        equ	16222	;# 
   694   003F5F                     CCPTMRS1        equ	16223	;# 
   695   003F60                     PWM8DC          equ	16224	;# 
   696   003F60                     PWM8DCL         equ	16224	;# 
   697   003F61                     PWM8DCH         equ	16225	;# 
   698   003F62                     PWM8CON         equ	16226	;# 
   699   003F64                     PWM7DC          equ	16228	;# 
   700   003F64                     PWM7DCL         equ	16228	;# 
   701   003F65                     PWM7DCH         equ	16229	;# 
   702   003F66                     PWM7CON         equ	16230	;# 
   703   003F68                     PWM6DC          equ	16232	;# 
   704   003F68                     PWM6DCL         equ	16232	;# 
   705   003F69                     PWM6DCH         equ	16233	;# 
   706   003F6A                     PWM6CON         equ	16234	;# 
   707   003F6C                     PWM5DC          equ	16236	;# 
   708   003F6C                     PWM5DCL         equ	16236	;# 
   709   003F6D                     PWM5DCH         equ	16237	;# 
   710   003F6E                     PWM5CON         equ	16238	;# 
   711   003F70                     CCPR4           equ	16240	;# 
   712   003F70                     CCPR4L          equ	16240	;# 
   713   003F71                     CCPR4H          equ	16241	;# 
   714   003F72                     CCP4CON         equ	16242	;# 
   715   003F73                     CCP4CAP         equ	16243	;# 
   716   003F74                     CCPR3           equ	16244	;# 
   717   003F74                     CCPR3L          equ	16244	;# 
   718   003F75                     CCPR3H          equ	16245	;# 
   719   003F76                     CCP3CON         equ	16246	;# 
   720   003F77                     CCP3CAP         equ	16247	;# 
   721   003F78                     CCPR2           equ	16248	;# 
   722   003F78                     CCPR2L          equ	16248	;# 
   723   003F79                     CCPR2H          equ	16249	;# 
   724   003F7A                     CCP2CON         equ	16250	;# 
   725   003F7B                     CCP2CAP         equ	16251	;# 
   726   003F7C                     CCPR1           equ	16252	;# 
   727   003F7C                     CCPR1L          equ	16252	;# 
   728   003F7D                     CCPR1H          equ	16253	;# 
   729   003F7E                     CCP1CON         equ	16254	;# 
   730   003F7F                     CCP1CAP         equ	16255	;# 
   731   003F92                     T6TMR           equ	16274	;# 
   732   003F92                     TMR6            equ	16274	;# 
   733   003F93                     T6PR            equ	16275	;# 
   734   003F93                     PR6             equ	16275	;# 
   735   003F94                     T6CON           equ	16276	;# 
   736   003F95                     T6HLT           equ	16277	;# 
   737   003F96                     T6CLKCON        equ	16278	;# 
   738   003F96                     T6CLK           equ	16278	;# 
   739   003F97                     T6RST           equ	16279	;# 
   740   003F98                     TMR5            equ	16280	;# 
   741   003F98                     TMR5L           equ	16280	;# 
   742   003F99                     TMR5H           equ	16281	;# 
   743   003F9A                     T5CON           equ	16282	;# 
   744   003F9A                     TMR5CON         equ	16282	;# 
   745   003F9B                     T5GCON          equ	16283	;# 
   746   003F9B                     TMR5GCON        equ	16283	;# 
   747   003F9C                     T5GATE          equ	16284	;# 
   748   003F9C                     TMR5GATE        equ	16284	;# 
   749   003F9D                     T5CLK           equ	16285	;# 
   750   003F9D                     TMR5CLK         equ	16285	;# 
   751   003F9D                     PR5             equ	16285	;# 
   752   003F9E                     T4TMR           equ	16286	;# 
   753   003F9E                     TMR4            equ	16286	;# 
   754   003F9F                     T4PR            equ	16287	;# 
   755   003F9F                     PR4             equ	16287	;# 
   756   003FA0                     T4CON           equ	16288	;# 
   757   003FA1                     T4HLT           equ	16289	;# 
   758   003FA2                     T4CLKCON        equ	16290	;# 
   759   003FA2                     T4CLK           equ	16290	;# 
   760   003FA3                     T4RST           equ	16291	;# 
   761   003FA4                     TMR3            equ	16292	;# 
   762   003FA4                     TMR3L           equ	16292	;# 
   763   003FA5                     TMR3H           equ	16293	;# 
   764   003FA6                     T3CON           equ	16294	;# 
   765   003FA6                     TMR3CON         equ	16294	;# 
   766   003FA7                     T3GCON          equ	16295	;# 
   767   003FA7                     TMR3GCON        equ	16295	;# 
   768   003FA8                     T3GATE          equ	16296	;# 
   769   003FA8                     TMR3GATE        equ	16296	;# 
   770   003FA9                     T3CLK           equ	16297	;# 
   771   003FA9                     TMR3CLK         equ	16297	;# 
   772   003FA9                     PR3             equ	16297	;# 
   773   003FAA                     T2TMR           equ	16298	;# 
   774   003FAA                     TMR2            equ	16298	;# 
   775   003FAB                     T2PR            equ	16299	;# 
   776   003FAB                     PR2             equ	16299	;# 
   777   003FAC                     T2CON           equ	16300	;# 
   778   003FAD                     T2HLT           equ	16301	;# 
   779   003FAE                     T2CLKCON        equ	16302	;# 
   780   003FAE                     T2CLK           equ	16302	;# 
   781   003FAF                     T2RST           equ	16303	;# 
   782   003FB0                     TMR1            equ	16304	;# 
   783   003FB0                     TMR1L           equ	16304	;# 
   784   003FB1                     TMR1H           equ	16305	;# 
   785   003FB2                     T1CON           equ	16306	;# 
   786   003FB2                     TMR1CON         equ	16306	;# 
   787   003FB3                     T1GCON          equ	16307	;# 
   788   003FB3                     TMR1GCON        equ	16307	;# 
   789   003FB4                     T1GATE          equ	16308	;# 
   790   003FB4                     TMR1GATE        equ	16308	;# 
   791   003FB5                     T1CLK           equ	16309	;# 
   792   003FB5                     TMR1CLK         equ	16309	;# 
   793   003FB5                     PR1             equ	16309	;# 
   794   003FB6                     TMR0L           equ	16310	;# 
   795   003FB6                     TMR0            equ	16310	;# 
   796   003FB7                     TMR0H           equ	16311	;# 
   797   003FB7                     PR0             equ	16311	;# 
   798   003FB8                     T0CON0          equ	16312	;# 
   799   003FB9                     T0CON1          equ	16313	;# 
   800   003FBA                     LATA            equ	16314	;# 
   801   003FBB                     LATB            equ	16315	;# 
   802   003FBC                     LATC            equ	16316	;# 
   803   003FBD                     LATD            equ	16317	;# 
   804   003FBE                     LATE            equ	16318	;# 
   805   003FC2                     TRISA           equ	16322	;# 
   806   003FC3                     TRISB           equ	16323	;# 
   807   003FC4                     TRISC           equ	16324	;# 
   808   003FC5                     TRISD           equ	16325	;# 
   809   003FC6                     TRISE           equ	16326	;# 
   810   003FCA                     PORTA           equ	16330	;# 
   811   003FCB                     PORTB           equ	16331	;# 
   812   003FCC                     PORTC           equ	16332	;# 
   813   003FCD                     PORTD           equ	16333	;# 
   814   003FCE                     PORTE           equ	16334	;# 
   815   003FD2                     INTCON0         equ	16338	;# 
   816   003FD3                     INTCON1         equ	16339	;# 
   817   003FD4                     IVTLOCK         equ	16340	;# 
   818   003FD5                     IVTBASE         equ	16341	;# 
   819   003FD5                     IVTBASEL        equ	16341	;# 
   820   003FD6                     IVTBASEH        equ	16342	;# 
   821   003FD7                     IVTBASEU        equ	16343	;# 
   822   003FD8                     STATUS          equ	16344	;# 
   823   003FD9                     FSR2            equ	16345	;# 
   824   003FD9                     FSR2L           equ	16345	;# 
   825   003FDA                     FSR2H           equ	16346	;# 
   826   003FDB                     PLUSW2          equ	16347	;# 
   827   003FDC                     PREINC2         equ	16348	;# 
   828   003FDD                     POSTDEC2        equ	16349	;# 
   829   003FDE                     POSTINC2        equ	16350	;# 
   830   003FDF                     INDF2           equ	16351	;# 
   831   003FE0                     BSR             equ	16352	;# 
   832   003FE1                     FSR1            equ	16353	;# 
   833   003FE1                     FSR1L           equ	16353	;# 
   834   003FE2                     FSR1H           equ	16354	;# 
   835   003FE3                     PLUSW1          equ	16355	;# 
   836   003FE4                     PREINC1         equ	16356	;# 
   837   003FE5                     POSTDEC1        equ	16357	;# 
   838   003FE6                     POSTINC1        equ	16358	;# 
   839   003FE7                     INDF1           equ	16359	;# 
   840   003FE8                     WREG            equ	16360	;# 
   841   003FE9                     FSR0            equ	16361	;# 
   842   003FE9                     FSR0L           equ	16361	;# 
   843   003FEA                     FSR0H           equ	16362	;# 
   844   003FEB                     PLUSW0          equ	16363	;# 
   845   003FEC                     PREINC0         equ	16364	;# 
   846   003FED                     POSTDEC0        equ	16365	;# 
   847   003FEE                     POSTINC0        equ	16366	;# 
   848   003FEF                     INDF0           equ	16367	;# 
   849   003FF0                     PCON0           equ	16368	;# 
   850   003FF1                     PCON1           equ	16369	;# 
   851   003FF3                     PROD            equ	16371	;# 
   852   003FF3                     PRODL           equ	16371	;# 
   853   003FF4                     PRODH           equ	16372	;# 
   854   003FF5                     TABLAT          equ	16373	;# 
   855   003FF6                     TBLPTR          equ	16374	;# 
   856   003FF6                     TBLPTRL         equ	16374	;# 
   857   003FF7                     TBLPTRH         equ	16375	;# 
   858   003FF8                     TBLPTRU         equ	16376	;# 
   859   003FF9                     PCLAT           equ	16377	;# 
   860   003FF9                     PCL             equ	16377	;# 
   861   003FFA                     PCLATH          equ	16378	;# 
   862   003FFB                     PCLATU          equ	16379	;# 
   863   003FFC                     STKPTR          equ	16380	;# 
   864   003FFD                     TOS             equ	16381	;# 
   865   003FFD                     TOSL            equ	16381	;# 
   866   003FFE                     TOSH            equ	16382	;# 
   867   003FFF                     TOSU            equ	16383	;# 
   868   003990                     _PIE0bits       set	14736
   869   0039A0                     _PIR0bits       set	14752
   870   003A40                     _ANSELAbits     set	14912
   871   003A66                     _IOCCNbits      set	14950
   872   003A65                     _IOCCPbits      set	14949
   873   003A61                     _WPUCbits       set	14945
   874   003A60                     _ANSELCbits     set	14944
   875   003A67                     _IOCCFbits      set	14951
   876   003EF4                     _ADACQH         set	16116
   877   003EF3                     _ADACQL         set	16115
   878   003EF7                     _ADPREH         set	16119
   879   003EF6                     _ADPREL         set	16118
   880   003EFF                     _ADCLK          set	16127
   881   003EF1                     _ADPCH          set	16113
   882   003EEF                     _ADRESL         set	16111
   883   003EF0                     _ADRESH         set	16112
   884   003EF8                     _ADCON0bits     set	16120
   885   003FC2                     _TRISAbits      set	16322
   886   003FBB                     _LATB           set	16315
   887   003FC5                     _TRISD          set	16325
   888   003FC3                     _TRISB          set	16323
   889   003FD5                     _IVTBASEL       set	16341
   890   003FD6                     _IVTBASEH       set	16342
   891   003FD7                     _IVTBASEU       set	16343
   892   003FD2                     _INTCON0bits    set	16338
   893   003FC4                     _TRISCbits      set	16324
   894   003FBC                     _LATCbits       set	16316
   895   01FDE9                     _LATD1          set	130537
   896   01FDE8                     _LATD0          set	130536
   897                           
   898                           	psect	smallconst
   899   002000                     __psmallconst:
   900                           	callstack 0
   901   002000  00                 	db	0
   902   002001                     STR_1:
   903   002001  56                 	db	86	;'V'
   904   002002  6F                 	db	111	;'o'
   905   002003  6C                 	db	108	;'l'
   906   002004  74                 	db	116	;'t'
   907   002005  61                 	db	97	;'a'
   908   002006  67                 	db	103	;'g'
   909   002007  65                 	db	101	;'e'
   910   002008  3A                 	db	58	;':'
   911   002009  00                 	db	0
   912   00200A                     STR_2:
   913   00200A  25                 	db	37
   914   00200B  2E                 	db	46
   915   00200C  32                 	db	50	;'2'
   916   00200D  66                 	db	102	;'f'
   917   00200E  00                 	db	0
   918   00200F                     STR_4:
   919   00200F  69                 	db	105	;'i'
   920   002010  6E                 	db	110	;'n'
   921   002011  66                 	db	102	;'f'
   922   002012  00                 	db	0
   923   002013                     STR_7:
   924   002013  6E                 	db	110	;'n'
   925   002014  61                 	db	97	;'a'
   926   002015  6E                 	db	110	;'n'
   927   002016  00                 	db	0
   928   002017                     STR_3:
   929   002017  20                 	db	32
   930   002018  56                 	db	86	;'V'
   931   002019  00                 	db	0
   932   002013                     STR_8           equ	STR_7
   933   002013                     STR_9           equ	STR_7
   934   00200F                     STR_5           equ	STR_4
   935   00200F                     STR_6           equ	STR_4
   936   00201A  00                 	db	0	; dummy byte at the end
   937   002000                     __smallconst    set	__psmallconst
   938   002000                     __mediumconst   set	__psmallconst
   939   000003                     __activetblptr  equ	3
   940                           
   941                           ; #config settings
   942                           
   943                           	psect	cinit
   944   006764                     __pcinit:
   945                           	callstack 0
   946   006764                     start_initialization:
   947                           	callstack 0
   948   006764                     __initialization:
   949                           	callstack 0
   950                           
   951                           ; Clear objects allocated to BANK0 (98 bytes)
   952   006764  EE00  F060         	lfsr	0,__pbssBANK0
   953   006768  0E62               	movlw	98
   954   00676A                     clear_0:
   955   00676A  6AEE               	clrf	postinc0,c
   956   00676C  06E8               	decf	wreg,f,c
   957   00676E  E1FD               	bnz	clear_0
   958                           
   959                           ; Clear objects allocated to COMRAM (11 bytes)
   960   006770  EE00  F04A         	lfsr	0,__pbssCOMRAM
   961   006774  0E0B               	movlw	11
   962   006776                     clear_1:
   963   006776  6AEE               	clrf	postinc0,c
   964   006778  06E8               	decf	wreg,f,c
   965   00677A  E1FD               	bnz	clear_1
   966                           
   967                           ;
   968                           ; Setup IVTBASE
   969                           ;
   970   003FD5                     IVTBASEL        equ	16341
   971   003FD6                     IVTBASEH        equ	16342
   972   003FD7                     IVTBASEU        equ	16343
   973   00677C  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   974   00677E  6ED5               	movwf	213,c
   975   006780  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   976   006782  6ED6               	movwf	214,c
   977   006784  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   978   006786  6ED7               	movwf	215,c
   979   006788                     end_of_initialization:
   980                           	callstack 0
   981   006788                     __end_of__initialization:
   982                           	callstack 0
   983   006788  0100               	movlb	0
   984   00678A  EFF4  F02F         	goto	_main	;jump to C main() function
   985                           
   986                           	psect	bssCOMRAM
   987   00004A                     __pbssCOMRAM:
   988                           	callstack 0
   989   00004A                     ___fpclassifyf@F465:
   990                           	callstack 0
   991   00004A                     	ds	4
   992   00004E                     _voltage:
   993                           	callstack 0
   994   00004E                     	ds	4
   995   000052                     _digital:
   996                           	callstack 0
   997   000052                     	ds	2
   998   000054                     _flags:
   999                           	callstack 0
  1000   000054                     	ds	1
  1001                           
  1002                           	psect	bssBANK0
  1003   000060                     __pbssBANK0:
  1004                           	callstack 0
  1005   000060                     floorf@F521:
  1006                           	callstack 0
  1007   000060                     	ds	4
  1008   000064                     _width:
  1009                           	callstack 0
  1010   000064                     	ds	2
  1011   000066                     _prec:
  1012                           	callstack 0
  1013   000066                     	ds	2
  1014   000068                     _dbuf:
  1015                           	callstack 0
  1016   000068                     	ds	80
  1017   0000B8                     _data:
  1018                           	callstack 0
  1019   0000B8                     	ds	10
  1020                           
  1021                           	psect	cstackBANK1
  1022   000100                     __pcstackBANK1:
  1023                           	callstack 0
  1024   000100                     sprintf@ap:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0x0
  1028   000100                     	ds	1
  1029   000101                     sprintf@f:
  1030                           	callstack 0
  1031                           
  1032                           ; 11 bytes @ 0x1
  1033   000101                     	ds	11
  1034                           
  1035                           	psect	cstackBANK0
  1036   0000C2                     __pcstackBANK0:
  1037                           	callstack 0
  1038   0000C2                     efgtoa@ne:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x0
  1042   0000C2                     	ds	2
  1043   0000C4                     efgtoa@p:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x2
  1047   0000C4                     	ds	2
  1048   0000C6                     efgtoa@t:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x4
  1052   0000C6                     	ds	2
  1053   0000C8                     _efgtoa$1128:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x6
  1057   0000C8                     	ds	2
  1058   0000CA                     efgtoa@pp:
  1059                           	callstack 0
  1060                           
  1061                           ; 1 bytes @ 0x8
  1062   0000CA                     	ds	1
  1063   0000CB                     efgtoa@mode:
  1064                           	callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x9
  1067   0000CB                     	ds	1
  1068   0000CC                     efgtoa@nmode:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0xA
  1072   0000CC                     	ds	1
  1073   0000CD                     efgtoa@d:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0xB
  1077   0000CD                     	ds	2
  1078   0000CF                     efgtoa@m:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0xD
  1082   0000CF                     	ds	2
  1083   0000D1                     efgtoa@e:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0xF
  1087   0000D1                     	ds	2
  1088   0000D3                     efgtoa@w:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x11
  1092   0000D3                     	ds	2
  1093   0000D5                     efgtoa@ou:
  1094                           	callstack 0
  1095                           
  1096                           ; 4 bytes @ 0x13
  1097   0000D5                     	ds	4
  1098   0000D9                     efgtoa@i:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x17
  1102   0000D9                     	ds	2
  1103   0000DB                     efgtoa@h:
  1104                           	callstack 0
  1105                           
  1106                           ; 4 bytes @ 0x19
  1107   0000DB                     	ds	4
  1108   0000DF                     efgtoa@l:
  1109                           	callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x1D
  1112   0000DF                     	ds	4
  1113   0000E3                     efgtoa@sign:
  1114                           	callstack 0
  1115                           
  1116                           ; 1 bytes @ 0x21
  1117   0000E3                     	ds	1
  1118   0000E4                     efgtoa@g:
  1119                           	callstack 0
  1120                           
  1121                           ; 4 bytes @ 0x22
  1122   0000E4                     	ds	4
  1123   0000E8                     efgtoa@n:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x26
  1127   0000E8                     	ds	2
  1128   0000EA                     efgtoa@u:
  1129                           	callstack 0
  1130                           
  1131                           ; 4 bytes @ 0x28
  1132   0000EA                     	ds	4
  1133   0000EE                     vfpfcnvrt@fp:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x2C
  1137   0000EE                     	ds	2
  1138   0000F0                     vfpfcnvrt@fmt:
  1139                           	callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x2E
  1142   0000F0                     	ds	1
  1143   0000F1                     vfpfcnvrt@ap:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x2F
  1147   0000F1                     	ds	2
  1148   0000F3                     ?_vfprintf:
  1149                           	callstack 0
  1150   0000F3                     vfprintf@fp:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x31
  1154   0000F3                     	ds	2
  1155   0000F5                     vfprintf@fmt:
  1156                           	callstack 0
  1157                           
  1158                           ; 1 bytes @ 0x33
  1159   0000F5                     	ds	1
  1160   0000F6                     vfprintf@ap:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x34
  1164   0000F6                     	ds	2
  1165   0000F8                     ?_sprintf:
  1166                           	callstack 0
  1167   0000F8                     sprintf@s:
  1168                           	callstack 0
  1169                           
  1170                           ; 1 bytes @ 0x36
  1171   0000F8                     	ds	1
  1172   0000F9                     sprintf@fmt:
  1173                           	callstack 0
  1174                           
  1175                           ; 1 bytes @ 0x37
  1176   0000F9                     	ds	5
  1177                           
  1178                           	psect	cstackCOMRAM
  1179   000001                     __pcstackCOMRAM:
  1180                           	callstack 0
  1181   000001                     ??_IOC_ISR:
  1182                           
  1183                           ; 1 bytes @ 0x0
  1184   000001                     	ds	2
  1185   000003                     IOC_ISR@i:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x2
  1189   000003                     	ds	2
  1190   000005                     ?___fpclassifyf:
  1191                           	callstack 0
  1192   000005                     ?_read_prec_or_width:
  1193                           	callstack 0
  1194   000005                     ?___fladd:
  1195                           	callstack 0
  1196   000005                     ?___fldiv:
  1197                           	callstack 0
  1198   000005                     ?_labs:
  1199                           	callstack 0
  1200   000005                     ?___flneg:
  1201                           	callstack 0
  1202   000005                     ?___fltol:
  1203                           	callstack 0
  1204   000005                     ?___xxtofl:
  1205                           	callstack 0
  1206   000005                     read_prec_or_width@fmt:
  1207                           	callstack 0
  1208   000005                     memcpy@d1:
  1209                           	callstack 0
  1210   000005                     strcat@dest:
  1211                           	callstack 0
  1212   000005                     strcpy@dest:
  1213                           	callstack 0
  1214   000005                     MSdelay@val:
  1215                           	callstack 0
  1216   000005                     fputc@c:
  1217                           	callstack 0
  1218   000005                     ___fleq@ff1:
  1219                           	callstack 0
  1220   000005                     ___flneg@f1:
  1221                           	callstack 0
  1222   000005                     ___fltol@f1:
  1223                           	callstack 0
  1224   000005                     ___fladd@b:
  1225                           	callstack 0
  1226   000005                     ___fldiv@b:
  1227                           	callstack 0
  1228   000005                     ___xxtofl@val:
  1229                           	callstack 0
  1230   000005                     ___fpclassifyf@x:
  1231                           	callstack 0
  1232   000005                     labs@a:
  1233                           	callstack 0
  1234   000005                     
  1235                           ; 1 bytes @ 0x4
  1236   000005                     	ds	1
  1237   000006                     memcpy@s1:
  1238                           	callstack 0
  1239   000006                     strcat@src:
  1240                           	callstack 0
  1241   000006                     strcpy@src:
  1242                           	callstack 0
  1243   000006                     read_prec_or_width@ap:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x5
  1247   000006                     	ds	1
  1248   000007                     MSdelay@i:
  1249                           	callstack 0
  1250   000007                     memcpy@n:
  1251                           	callstack 0
  1252   000007                     fputc@fp:
  1253                           	callstack 0
  1254   000007                     strcat@i:
  1255                           	callstack 0
  1256   000007                     ??_strcpy:
  1257                           
  1258                           ; 1 bytes @ 0x6
  1259   000007                     	ds	1
  1260   000008                     strcpy@d:
  1261                           	callstack 0
  1262   000008                     ??_read_prec_or_width:
  1263                           
  1264                           ; 1 bytes @ 0x7
  1265   000008                     	ds	1
  1266   000009                     memcpy@tmp:
  1267                           	callstack 0
  1268   000009                     MSdelay@j:
  1269                           	callstack 0
  1270   000009                     ___fleq@ff2:
  1271                           	callstack 0
  1272   000009                     ___fladd@a:
  1273                           	callstack 0
  1274   000009                     ___fldiv@a:
  1275                           	callstack 0
  1276   000009                     ??_fputc:
  1277   000009                     ??___fpclassifyf:
  1278   000009                     ??_labs:
  1279   000009                     ??___fltol:
  1280   000009                     ??___xxtofl:
  1281                           
  1282                           ; 1 bytes @ 0x8
  1283   000009                     	ds	1
  1284   00000A                     read_prec_or_width@c:
  1285                           	callstack 0
  1286   00000A                     memcpy@d:
  1287                           	callstack 0
  1288                           
  1289                           ; 1 bytes @ 0x9
  1290   00000A                     	ds	1
  1291   00000B                     LCD_Command@cmd:
  1292                           	callstack 0
  1293   00000B                     LCD_Char@dat:
  1294                           	callstack 0
  1295   00000B                     memcpy@s:
  1296                           	callstack 0
  1297   00000B                     read_prec_or_width@n:
  1298                           	callstack 0
  1299   00000B                     
  1300                           ; 1 bytes @ 0xA
  1301   00000B                     	ds	1
  1302   00000C                     LCD_String@msg:
  1303                           	callstack 0
  1304   00000C                     
  1305                           ; 1 bytes @ 0xB
  1306   00000C                     	ds	1
  1307   00000D                     ___fltol@sign1:
  1308                           	callstack 0
  1309   00000D                     ___xxtofl@sign:
  1310                           	callstack 0
  1311   00000D                     ___fpclassifyf@e:
  1312                           	callstack 0
  1313   00000D                     ??___fladd:
  1314   00000D                     ??___fldiv:
  1315   00000D                     ??___fleq:
  1316                           
  1317                           ; 1 bytes @ 0xC
  1318   00000D                     	ds	1
  1319   00000E                     LCD_String_xy@pos:
  1320                           	callstack 0
  1321   00000E                     ___fltol@exp1:
  1322                           	callstack 0
  1323   00000E                     ___xxtofl@exp:
  1324                           	callstack 0
  1325   00000E                     fputs@s:
  1326                           	callstack 0
  1327   00000E                     
  1328                           ; 1 bytes @ 0xD
  1329   00000E                     	ds	1
  1330   00000F                     LCD_String_xy@msg:
  1331                           	callstack 0
  1332   00000F                     fputs@fp:
  1333                           	callstack 0
  1334   00000F                     ___xxtofl@arg:
  1335                           	callstack 0
  1336   00000F                     ___fpclassifyf@u:
  1337                           	callstack 0
  1338                           
  1339                           ; 4 bytes @ 0xE
  1340   00000F                     	ds	2
  1341   000011                     LCD_String_xy@row:
  1342                           	callstack 0
  1343   000011                     ___fladd@signs:
  1344                           	callstack 0
  1345   000011                     fputs@c:
  1346                           	callstack 0
  1347   000011                     ___fldiv@rem:
  1348                           	callstack 0
  1349   000011                     
  1350                           ; 1 bytes @ 0x10
  1351   000011                     	ds	1
  1352   000012                     LCD_String_xy@location:
  1353                           	callstack 0
  1354   000012                     ___fladd@aexp:
  1355                           	callstack 0
  1356   000012                     fputs@i:
  1357                           	callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x11
  1360   000012                     	ds	1
  1361   000013                     ?___flmul:
  1362                           	callstack 0
  1363   000013                     ___fladd@bexp:
  1364                           	callstack 0
  1365   000013                     ___flmul@b:
  1366                           	callstack 0
  1367                           
  1368                           ; 4 bytes @ 0x12
  1369   000013                     	ds	1
  1370   000014                     ___fladd@grs:
  1371                           	callstack 0
  1372   000014                     pad@fp:
  1373                           	callstack 0
  1374                           
  1375                           ; 2 bytes @ 0x13
  1376   000014                     	ds	1
  1377   000015                     ___fldiv@sign:
  1378                           	callstack 0
  1379                           
  1380                           ; 1 bytes @ 0x14
  1381   000015                     	ds	1
  1382   000016                     pad@buf:
  1383                           	callstack 0
  1384   000016                     ___fldiv@new_exp:
  1385                           	callstack 0
  1386                           
  1387                           ; 2 bytes @ 0x15
  1388   000016                     	ds	1
  1389   000017                     pad@p:
  1390                           	callstack 0
  1391   000017                     ___flmul@a:
  1392                           	callstack 0
  1393                           
  1394                           ; 4 bytes @ 0x16
  1395   000017                     	ds	1
  1396   000018                     ___fldiv@grs:
  1397                           	callstack 0
  1398                           
  1399                           ; 4 bytes @ 0x17
  1400   000018                     	ds	1
  1401   000019                     ??_pad:
  1402                           
  1403                           ; 1 bytes @ 0x18
  1404   000019                     	ds	1
  1405   00001A                     pad@i:
  1406                           	callstack 0
  1407                           
  1408                           ; 2 bytes @ 0x19
  1409   00001A                     	ds	1
  1410   00001B                     ??___flmul:
  1411                           
  1412                           ; 1 bytes @ 0x1A
  1413   00001B                     	ds	1
  1414   00001C                     ___fldiv@bexp:
  1415                           	callstack 0
  1416                           
  1417                           ; 1 bytes @ 0x1B
  1418   00001C                     	ds	1
  1419   00001D                     ___fldiv@aexp:
  1420                           	callstack 0
  1421                           
  1422                           ; 1 bytes @ 0x1C
  1423   00001D                     	ds	1
  1424   00001E                     ?_floorf:
  1425                           	callstack 0
  1426   00001E                     floorf@x:
  1427                           	callstack 0
  1428                           
  1429                           ; 4 bytes @ 0x1D
  1430   00001E                     	ds	1
  1431   00001F                     ___flmul@sign:
  1432                           	callstack 0
  1433                           
  1434                           ; 1 bytes @ 0x1E
  1435   00001F                     	ds	1
  1436   000020                     ___flmul@aexp:
  1437                           	callstack 0
  1438                           
  1439                           ; 1 bytes @ 0x1F
  1440   000020                     	ds	1
  1441   000021                     ___flmul@grs:
  1442                           	callstack 0
  1443                           
  1444                           ; 4 bytes @ 0x20
  1445   000021                     	ds	1
  1446   000022                     ??_floorf:
  1447                           
  1448                           ; 1 bytes @ 0x21
  1449   000022                     	ds	3
  1450   000025                     ___flmul@bexp:
  1451                           	callstack 0
  1452                           
  1453                           ; 1 bytes @ 0x24
  1454   000025                     	ds	1
  1455   000026                     ___flmul@prod:
  1456                           	callstack 0
  1457                           
  1458                           ; 4 bytes @ 0x25
  1459   000026                     	ds	2
  1460   000028                     floorf@m:
  1461                           	callstack 0
  1462                           
  1463                           ; 4 bytes @ 0x27
  1464   000028                     	ds	2
  1465   00002A                     ___flmul@temp:
  1466                           	callstack 0
  1467                           
  1468                           ; 2 bytes @ 0x29
  1469   00002A                     	ds	2
  1470   00002C                     ?___flsub:
  1471                           	callstack 0
  1472   00002C                     floorf@e:
  1473                           	callstack 0
  1474   00002C                     ___flge@ff1:
  1475                           	callstack 0
  1476   00002C                     ___flsub@b:
  1477                           	callstack 0
  1478                           
  1479                           ; 4 bytes @ 0x2B
  1480   00002C                     	ds	2
  1481   00002E                     floorf@u:
  1482                           	callstack 0
  1483                           
  1484                           ; 4 bytes @ 0x2D
  1485   00002E                     	ds	2
  1486   000030                     ___flge@ff2:
  1487                           	callstack 0
  1488   000030                     ___flsub@a:
  1489                           	callstack 0
  1490                           
  1491                           ; 4 bytes @ 0x2F
  1492   000030                     	ds	4
  1493   000034                     ??___flge:
  1494                           
  1495                           ; 1 bytes @ 0x33
  1496   000034                     	ds	4
  1497   000038                     efgtoa@fp:
  1498                           	callstack 0
  1499                           
  1500                           ; 2 bytes @ 0x37
  1501   000038                     	ds	2
  1502   00003A                     efgtoa@f:
  1503                           	callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x39
  1506   00003A                     	ds	4
  1507   00003E                     efgtoa@c:
  1508                           	callstack 0
  1509                           
  1510                           ; 1 bytes @ 0x3D
  1511   00003E                     	ds	1
  1512   00003F                     ??_efgtoa:
  1513                           
  1514                           ; 1 bytes @ 0x3E
  1515   00003F                     	ds	1
  1516   000040                     ??_vfpfcnvrt:
  1517                           
  1518                           ; 1 bytes @ 0x3F
  1519   000040                     	ds	1
  1520   000041                     vfpfcnvrt@convarg:
  1521                           	callstack 0
  1522                           
  1523                           ; 4 bytes @ 0x40
  1524   000041                     	ds	4
  1525   000045                     vfpfcnvrt@c:
  1526                           	callstack 0
  1527                           
  1528                           ; 1 bytes @ 0x44
  1529   000045                     	ds	1
  1530   000046                     vfpfcnvrt@cp:
  1531                           	callstack 0
  1532                           
  1533                           ; 1 bytes @ 0x45
  1534   000046                     	ds	1
  1535   000047                     vfprintf@cfmt:
  1536                           	callstack 0
  1537   000047                     
  1538                           ; 1 bytes @ 0x46
  1539   000047                     	ds	1
  1540   000048                     ??_main:
  1541                           
  1542                           ; 1 bytes @ 0x47
  1543   000048                     	ds	2
  1544                           
  1545 ;;
  1546 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1547 ;;
  1548 ;; *************** function _main *****************
  1549 ;; Defined at:
  1550 ;;		line 155 in file "ACD_LCD_main.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;		None
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1566 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1567 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1568 ;;Total ram usage:        2 bytes
  1569 ;; Hardware stack levels required when called: 9
  1570 ;; This function calls:
  1571 ;;		_ADC_Init
  1572 ;;		_IOCC2_Init
  1573 ;;		_LCD_Init
  1574 ;;		_LCD_String_xy
  1575 ;;		___flmul
  1576 ;;		___xxtofl
  1577 ;;		_sprintf
  1578 ;;		_strcat
  1579 ;; This function is called by:
  1580 ;;		Startup code after reset
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text0
  1585   005FE8                     __ptext0:
  1586                           	callstack 0
  1587   005FE8                     _main:
  1588                           	callstack 22
  1589   005FE8                     
  1590                           ;ACD_LCD_main.c: 158:     ADC_Init();
  1591   005FE8  ECDC  F033         	call	_ADC_Init	;wreg free
  1592   005FEC                     
  1593                           ;ACD_LCD_main.c: 159:     LCD_Init();
  1594   005FEC  ECC7  F033         	call	_LCD_Init	;wreg free
  1595   005FF0                     
  1596                           ;ACD_LCD_main.c: 160:     IOCC2_Init();
  1597   005FF0  ECF0  F033         	call	_IOCC2_Init	;wreg free
  1598   005FF4                     
  1599                           ;ACD_LCD_main.c: 162:     TRISCbits.TRISC3 = 0;
  1600   005FF4  96C4               	bcf	196,3,c	;volatile
  1601   005FF6                     
  1602                           ;ACD_LCD_main.c: 163:     LATCbits.LATC3 = 0;
  1603   005FF6  96BC               	bcf	188,3,c	;volatile
  1604   005FF8                     
  1605                           ;ACD_LCD_main.c: 192:     LCD_String_xy(1, 0, "Voltage:");
  1606   005FF8  0E00               	movlw	0
  1607   005FFA  6E0E               	movwf	LCD_String_xy@pos^0,c
  1608   005FFC  0E01               	movlw	low STR_1
  1609   005FFE  6E0F               	movwf	LCD_String_xy@msg^0,c
  1610   006000  500F               	movf	LCD_String_xy@msg^0,w,c
  1611   006002  A4D8               	btfss	status,2,c
  1612   006004  0E20               	movlw	high __smallconst
  1613   006006  6E10               	movwf	(LCD_String_xy@msg+1)^0,c
  1614   006008  0E01               	movlw	1
  1615   00600A  EC59  F033         	call	_LCD_String_xy
  1616   00600E                     l4322:
  1617                           
  1618                           ;ACD_LCD_main.c: 195:     {;ACD_LCD_main.c: 196:         ADCON0bits.GO = 1;
  1619   00600E  013E               	movlb	62	; () banked
  1620   006010  81F8               	bsf	248,0,b	;volatile
  1621   006012                     l98:
  1622                           
  1623                           ; BSR set to: 62
  1624   006012  B1F8               	btfsc	248,0,b	;volatile
  1625   006014  EF0E  F030         	goto	u5271
  1626   006018  EF10  F030         	goto	u5270
  1627   00601C                     u5271:
  1628   00601C  EF09  F030         	goto	l98
  1629   006020                     u5270:
  1630   006020                     
  1631                           ; BSR set to: 62
  1632                           ;ACD_LCD_main.c: 198:         digital = (ADRESH*256) | (ADRESL);
  1633   006020  51EF               	movf	239,w,b	;volatile
  1634   006022  006F FBC0  F048    	movff	16112,??_main	;volatile
  1635   006028  6A49               	clrf	(??_main+1)^0,c
  1636   00602A  C048  F049         	movff	??_main,??_main+1
  1637   00602E  6A48               	clrf	??_main^0,c
  1638   006030  1048               	iorwf	??_main^0,w,c
  1639   006032  6E52               	movwf	_digital^0,c
  1640   006034  5049               	movf	(??_main+1)^0,w,c
  1641   006036  6E53               	movwf	(_digital+1)^0,c
  1642   006038                     
  1643                           ; BSR set to: 62
  1644                           ;ACD_LCD_main.c: 199:         voltage= digital*((float)5.0/(float)(4096));
  1645   006038  C052  F005         	movff	_digital,___xxtofl@val
  1646   00603C  C053  F006         	movff	_digital+1,___xxtofl@val+1
  1647   006040  0E00               	movlw	0
  1648   006042  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  1649   006044  0EFF               	movlw	-1
  1650   006046  6E07               	movwf	(___xxtofl@val+2)^0,c
  1651   006048  6E08               	movwf	(___xxtofl@val+3)^0,c
  1652   00604A  0E01               	movlw	1
  1653   00604C  EC96  F02D         	call	___xxtofl
  1654   006050  C005  F013         	movff	?___xxtofl,___flmul@b
  1655   006054  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1656   006058  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1657   00605C  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1658   006060  0E00               	movlw	0
  1659   006062  6E17               	movwf	___flmul@a^0,c
  1660   006064  0E00               	movlw	0
  1661   006066  6E18               	movwf	(___flmul@a+1)^0,c
  1662   006068  0EA0               	movlw	160
  1663   00606A  6E19               	movwf	(___flmul@a+2)^0,c
  1664   00606C  0E3A               	movlw	58
  1665   00606E  6E1A               	movwf	(___flmul@a+3)^0,c
  1666   006070  EC8A  F027         	call	___flmul	;wreg free
  1667   006074  C013  F04E         	movff	?___flmul,_voltage
  1668   006078  C014  F04F         	movff	?___flmul+1,_voltage+1
  1669   00607C  C015  F050         	movff	?___flmul+2,_voltage+2
  1670   006080  C016  F051         	movff	?___flmul+3,_voltage+3
  1671   006084                     
  1672                           ;ACD_LCD_main.c: 203:         sprintf(data,"%.2f",voltage);
  1673   006084  0EB8               	movlw	low _data
  1674   006086  0100               	movlb	0	; () banked
  1675   006088  6FF8               	movwf	sprintf@s& (0+255),b
  1676   00608A  0E0A               	movlw	low STR_2
  1677   00608C  6FF9               	movwf	sprintf@fmt& (0+255),b
  1678   00608E  C04E  F0FA         	movff	_voltage,?_sprintf+2
  1679   006092  C04F  F0FB         	movff	_voltage+1,?_sprintf+3
  1680   006096  C050  F0FC         	movff	_voltage+2,?_sprintf+4
  1681   00609A  C051  F0FD         	movff	_voltage+3,?_sprintf+5
  1682   00609E  ECF6  F032         	call	_sprintf	;wreg free
  1683   0060A2                     
  1684                           ;ACD_LCD_main.c: 205:         strcat(data," V");
  1685   0060A2  0EB8               	movlw	low _data
  1686   0060A4  6E05               	movwf	strcat@dest^0,c
  1687   0060A6  0E17               	movlw	low STR_3
  1688   0060A8  6E06               	movwf	strcat@src^0,c
  1689   0060AA  EC2A  F032         	call	_strcat	;wreg free
  1690   0060AE                     
  1691                           ;ACD_LCD_main.c: 206:         LCD_String_xy(2,4,data);
  1692   0060AE  0E04               	movlw	4
  1693   0060B0  6E0E               	movwf	LCD_String_xy@pos^0,c
  1694   0060B2  0EB8               	movlw	low _data
  1695   0060B4  6E0F               	movwf	LCD_String_xy@msg^0,c
  1696   0060B6  6A10               	clrf	(LCD_String_xy@msg+1)^0,c
  1697   0060B8  0E02               	movlw	2
  1698   0060BA  EC59  F033         	call	_LCD_String_xy
  1699   0060BE                     
  1700                           ;ACD_LCD_main.c: 208:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1701   0060BE  0E03               	movlw	3
  1702   0060C0  6E49               	movwf	(??_main+1)^0,c
  1703   0060C2  0E8A               	movlw	138
  1704   0060C4  6E48               	movwf	??_main^0,c
  1705   0060C6  0E56               	movlw	86
  1706   0060C8                     u5287:
  1707   0060C8  2EE8               	decfsz	wreg,f,c
  1708   0060CA  D7FE               	bra	u5287
  1709   0060CC  2E48               	decfsz	??_main^0,f,c
  1710   0060CE  D7FC               	bra	u5287
  1711   0060D0  2E49               	decfsz	(??_main+1)^0,f,c
  1712   0060D2  D7FA               	bra	u5287
  1713   0060D4  EF07  F030         	goto	l4322
  1714   0060D8  EF57  F020         	goto	start
  1715   0060DC                     __end_of_main:
  1716                           	callstack 0
  1717                           
  1718 ;; *************** function _strcat *****************
  1719 ;; Defined at:
  1720 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcat.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  dest            1    4[COMRAM] PTR unsigned char 
  1723 ;;		 -> data(10), 
  1724 ;;  src             1    5[COMRAM] PTR const unsigned char 
  1725 ;;		 -> STR_3(3), 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  i               2    6[COMRAM] unsigned int 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    4[COMRAM] PTR unsigned char 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1740 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1741 ;;Total ram usage:        4 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text1
  1752   006454                     __ptext1:
  1753                           	callstack 0
  1754   006454                     _strcat:
  1755                           	callstack 29
  1756   006454  0E00               	movlw	0
  1757   006456  6E08               	movwf	(strcat@i+1)^0,c
  1758   006458  0E00               	movlw	0
  1759   00645A  6E07               	movwf	strcat@i^0,c
  1760   00645C  EF32  F032         	goto	l3258
  1761   006460                     l3256:
  1762   006460  4A07               	infsnz	strcat@i^0,f,c
  1763   006462  2A08               	incf	(strcat@i+1)^0,f,c
  1764   006464                     l3258:
  1765   006464  5005               	movf	strcat@dest^0,w,c
  1766   006466  2407               	addwf	strcat@i^0,w,c
  1767   006468  6ED9               	movwf	fsr2l,c
  1768   00646A  6ADA               	clrf	fsr2h,c
  1769   00646C  50DF               	movf	indf2,w,c
  1770   00646E  A4D8               	btfss	status,2,c
  1771   006470  EF3C  F032         	goto	u3521
  1772   006474  EF3E  F032         	goto	u3520
  1773   006478                     u3521:
  1774   006478  EF30  F032         	goto	l3256
  1775   00647C                     u3520:
  1776   00647C  EF43  F032         	goto	l3262
  1777   006480                     l3260:
  1778   006480  4A07               	infsnz	strcat@i^0,f,c
  1779   006482  2A08               	incf	(strcat@i+1)^0,f,c
  1780   006484  2A06               	incf	strcat@src^0,f,c
  1781   006486                     l3262:
  1782   006486  0060  F01B  FFF6   	movff	strcat@src,tblptrl
  1783   00648C                     	if	1	;There is more than 1 active tblptr byte
  1784   00648C  0E20               	movlw	high __smallconst
  1785   00648E  6EF7               	movwf	tblptrh,c
  1786   006490                     	endif
  1787   006490                     	if	0	;tblptru may be non-zero
  1788   006490                     	endif
  1789   006490                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1790   006490  0E00               	movlw	low (__smallconst shr (0+16))
  1791   006492  6EF8               	movwf	tblptru,c
  1792   006494                     	endif
  1793   006494  5005               	movf	strcat@dest^0,w,c
  1794   006496  2407               	addwf	strcat@i^0,w,c
  1795   006498  6ED9               	movwf	fsr2l,c
  1796   00649A  6ADA               	clrf	fsr2h,c
  1797   00649C  0008               	tblrd		*
  1798   00649E  006F FFD7 FFDF     	movff	tablat,indf2
  1799   0064A4  50DF               	movf	indf2,w,c
  1800   0064A6  A4D8               	btfss	status,2,c
  1801   0064A8  EF58  F032         	goto	u3531
  1802   0064AC  EF5A  F032         	goto	u3530
  1803   0064B0                     u3531:
  1804   0064B0  EF40  F032         	goto	l3260
  1805   0064B4                     u3530:
  1806   0064B4  0012               	return		;funcret
  1807   0064B6                     __end_of_strcat:
  1808                           	callstack 0
  1809                           
  1810 ;; *************** function _sprintf *****************
  1811 ;; Defined at:
  1812 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  s               1   54[BANK0 ] PTR unsigned char 
  1815 ;;		 -> data(10), 
  1816 ;;  fmt             1   55[BANK0 ] PTR const unsigned char 
  1817 ;;		 -> STR_2(5), 
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  f              11    1[BANK1 ] struct _IO_FILE
  1820 ;;  ret             2    0        int 
  1821 ;;  ap              1    0[BANK1 ] PTR void [1]
  1822 ;;		 -> ?_sprintf(2), 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  2   54[BANK0 ] int 
  1825 ;; Registers used:
  1826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1832 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1833 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1835 ;;      Totals:         0       6      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1836 ;;Total ram usage:       18 bytes
  1837 ;; Hardware stack levels used: 1
  1838 ;; Hardware stack levels required when called: 8
  1839 ;; This function calls:
  1840 ;;		_vfprintf
  1841 ;; This function is called by:
  1842 ;;		_main
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text2
  1847   0065EC                     __ptext2:
  1848                           	callstack 0
  1849   0065EC                     _sprintf:
  1850                           	callstack 22
  1851   0065EC  0EFA               	movlw	low (?_sprintf+2)
  1852   0065EE  0101               	movlb	1	; () banked
  1853   0065F0  6F00               	movwf	sprintf@ap& (0+255),b
  1854   0065F2  C0F8  F101         	movff	sprintf@s,sprintf@f
  1855   0065F6                     
  1856                           ; BSR set to: 1
  1857   0065F6  0E00               	movlw	0
  1858   0065F8  6F04               	movwf	(sprintf@f+3)& (0+255),b
  1859   0065FA  0E00               	movlw	0
  1860   0065FC  6F03               	movwf	(sprintf@f+2)& (0+255),b
  1861   0065FE                     
  1862                           ; BSR set to: 1
  1863   0065FE  0E00               	movlw	0
  1864   006600  6F0B               	movwf	(sprintf@f+10)& (0+255),b
  1865   006602  0E00               	movlw	0
  1866   006604  6F0A               	movwf	(sprintf@f+9)& (0+255),b
  1867   006606                     
  1868                           ; BSR set to: 1
  1869   006606  0E01               	movlw	low sprintf@f
  1870   006608  0100               	movlb	0	; () banked
  1871   00660A  6FF3               	movwf	vfprintf@fp& (0+255),b
  1872   00660C  0E01               	movlw	high sprintf@f
  1873   00660E  6FF4               	movwf	(vfprintf@fp+1)& (0+255),b
  1874   006610  C0F9  F0F5         	movff	sprintf@fmt,vfprintf@fmt
  1875   006614  0E00               	movlw	low sprintf@ap
  1876   006616  6FF6               	movwf	vfprintf@ap& (0+255),b
  1877   006618  0E01               	movlw	high sprintf@ap
  1878   00661A  6FF7               	movwf	(vfprintf@ap+1)& (0+255),b
  1879   00661C  EC86  F032         	call	_vfprintf	;wreg free
  1880   006620  0100               	movlb	0	; () banked
  1881   006622  51F8               	movf	sprintf@s& (0+255),w,b
  1882   006624  0101               	movlb	1	; () banked
  1883   006626  2503               	addwf	(sprintf@f+2)& (0+255),w,b
  1884   006628  6ED9               	movwf	fsr2l,c
  1885   00662A  6ADA               	clrf	fsr2h,c
  1886   00662C  6ADF               	clrf	indf2,c
  1887   00662E                     
  1888                           ; BSR set to: 1
  1889   00662E  0012               	return		;funcret
  1890   006630                     __end_of_sprintf:
  1891                           	callstack 0
  1892                           
  1893 ;; *************** function _vfprintf *****************
  1894 ;; Defined at:
  1895 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  fp              2   49[BANK0 ] PTR struct _IO_FILE
  1898 ;;		 -> sprintf@f(11), 
  1899 ;;  fmt             1   51[BANK0 ] PTR const unsigned char 
  1900 ;;		 -> STR_2(5), 
  1901 ;;  ap              2   52[BANK0 ] PTR PTR void 
  1902 ;;		 -> sprintf@ap(1), 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  cfmt            1   70[COMRAM] PTR unsigned char 
  1905 ;;		 -> STR_2(5), 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  2   49[BANK0 ] int 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1915 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1918 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1919 ;;Total ram usage:        6 bytes
  1920 ;; Hardware stack levels used: 1
  1921 ;; Hardware stack levels required when called: 7
  1922 ;; This function calls:
  1923 ;;		_vfpfcnvrt
  1924 ;; This function is called by:
  1925 ;;		_sprintf
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text3
  1930   00650C                     __ptext3:
  1931                           	callstack 0
  1932   00650C                     _vfprintf:
  1933                           	callstack 22
  1934   00650C                     
  1935                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1936   00650C  C0F5  F047         	movff	vfprintf@fmt,vfprintf@cfmt
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1939   006510  EF97  F032         	goto	l4292
  1940   006514                     l4290:
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1943   006514  C0F3  F0EE         	movff	vfprintf@fp,vfpfcnvrt@fp
  1944   006518  C0F4  F0EF         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1945   00651C  0E47               	movlw	low vfprintf@cfmt
  1946   00651E  0100               	movlb	0	; () banked
  1947   006520  6FF0               	movwf	vfpfcnvrt@fmt& (0+255),b
  1948   006522  C0F6  F0F1         	movff	vfprintf@ap,vfpfcnvrt@ap
  1949   006526  C0F7  F0F2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1950   00652A  EC77  F02B         	call	_vfpfcnvrt	;wreg free
  1951   00652E                     l4292:
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1954   00652E  0060  F11F  FFF6   	movff	vfprintf@cfmt,tblptrl
  1955   006534                     	if	1	;There is more than 1 active tblptr byte
  1956   006534  0E20               	movlw	high __smallconst
  1957   006536  6EF7               	movwf	tblptrh,c
  1958   006538                     	endif
  1959   006538                     	if	0	;tblptru may be non-zero
  1960   006538                     	endif
  1961   006538                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1962   006538  0E00               	movlw	low (__smallconst shr (0+16))
  1963   00653A  6EF8               	movwf	tblptru,c
  1964   00653C                     	endif
  1965   00653C  0008               	tblrd		*
  1966   00653E  50F5               	movf	tablat,w,c
  1967   006540  0900               	iorlw	0
  1968   006542  A4D8               	btfss	status,2,c
  1969   006544  EFA6  F032         	goto	u5261
  1970   006548  EFA8  F032         	goto	u5260
  1971   00654C                     u5261:
  1972   00654C  EF8A  F032         	goto	l4290
  1973   006550                     u5260:
  1974   006550                     
  1975                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1976   006550  0E00               	movlw	0
  1977   006552  0100               	movlb	0	; () banked
  1978   006554  6FF4               	movwf	(?_vfprintf+1)& (0+255),b
  1979   006556  0E00               	movlw	0
  1980   006558  6FF3               	movwf	?_vfprintf& (0+255),b
  1981   00655A                     
  1982                           ; BSR set to: 0
  1983   00655A  0012               	return		;funcret
  1984   00655C                     __end_of_vfprintf:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _vfpfcnvrt *****************
  1988 ;; Defined at:
  1989 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1992 ;;		 -> sprintf@f(11), 
  1993 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  1994 ;;		 -> vfprintf@cfmt(1), 
  1995 ;;  ap              2   47[BANK0 ] PTR PTR void 
  1996 ;;		 -> sprintf@ap(1), 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  convarg         4   64[COMRAM] struct .
  1999 ;;  cp              1   69[COMRAM] PTR unsigned char 
  2000 ;;		 -> STR_2(5), 
  2001 ;;  c               1   68[COMRAM] unsigned char 
  2002 ;;  done            1    0        _Bool 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2012 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2013 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2014 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2015 ;;      Totals:         7       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2016 ;;Total ram usage:       12 bytes
  2017 ;; Hardware stack levels used: 1
  2018 ;; Hardware stack levels required when called: 6
  2019 ;; This function calls:
  2020 ;;		_efgtoa
  2021 ;;		_fputc
  2022 ;;		_read_prec_or_width
  2023 ;; This function is called by:
  2024 ;;		_vfprintf
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text4
  2029   0056EE                     __ptext4:
  2030                           	callstack 0
  2031   0056EE                     _vfpfcnvrt:
  2032                           	callstack 22
  2033   0056EE                     
  2034                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2035   0056EE  0100               	movlb	0	; () banked
  2036   0056F0  51F0               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2037   0056F2  6ED9               	movwf	fsr2l,c
  2038   0056F4  6ADA               	clrf	fsr2h,c
  2039   0056F6  006F FF7F FFF6     	movff	indf2,tblptrl
  2040   0056FC                     	if	1	;There is more than 1 active tblptr byte
  2041   0056FC  0E20               	movlw	high __smallconst
  2042   0056FE  6EF7               	movwf	tblptrh,c
  2043   005700                     	endif
  2044   005700                     	if	0	;tblptru may be non-zero
  2045   005700                     	endif
  2046   005700                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2047   005700  0E00               	movlw	low (__smallconst shr (0+16))
  2048   005702  6EF8               	movwf	tblptru,c
  2049   005704                     	endif
  2050   005704  0008               	tblrd		*
  2051   005706  50F5               	movf	tablat,w,c
  2052   005708  0A25               	xorlw	37
  2053   00570A  A4D8               	btfss	status,2,c
  2054   00570C  EF8A  F02B         	goto	u5231
  2055   005710  EF8C  F02B         	goto	u5230
  2056   005714                     u5231:
  2057   005714  EF76  F02C         	goto	l4282
  2058   005718                     u5230:
  2059   005718                     
  2060                           ; BSR set to: 0
  2061                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2062   005718  51F0               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2063   00571A  6ED9               	movwf	fsr2l,c
  2064   00571C  6ADA               	clrf	fsr2h,c
  2065   00571E  2ADF               	incf	indf2,f,c
  2066   005720                     
  2067                           ; BSR set to: 0
  2068                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2069   005720  0E00               	movlw	0
  2070   005722  6F65               	movwf	(_width+1)& (0+255),b
  2071   005724  0E00               	movlw	0
  2072   005726  6F64               	movwf	_width& (0+255),b
  2073   005728  C064  F054         	movff	_width,_flags
  2074   00572C                     
  2075                           ; BSR set to: 0
  2076                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2077   00572C  6966               	setf	_prec& (0+255),b
  2078   00572E  6967               	setf	(_prec+1)& (0+255),b
  2079   005730                     
  2080                           ; BSR set to: 0
  2081                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2082   005730  51F0               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2083   005732  6ED9               	movwf	fsr2l,c
  2084   005734  6ADA               	clrf	fsr2h,c
  2085   005736  006F FF7F FFF6     	movff	indf2,tblptrl
  2086   00573C                     	if	1	;There is more than 1 active tblptr byte
  2087   00573C  0E20               	movlw	high __smallconst
  2088   00573E  6EF7               	movwf	tblptrh,c
  2089   005740                     	endif
  2090   005740                     	if	0	;tblptru may be non-zero
  2091   005740                     	endif
  2092   005740                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2093   005740  0E00               	movlw	low (__smallconst shr (0+16))
  2094   005742  6EF8               	movwf	tblptru,c
  2095   005744                     	endif
  2096   005744  0008               	tblrd		*
  2097   005746  50F5               	movf	tablat,w,c
  2098   005748  0A2E               	xorlw	46
  2099   00574A  A4D8               	btfss	status,2,c
  2100   00574C  EFAA  F02B         	goto	u5241
  2101   005750  EFAC  F02B         	goto	u5240
  2102   005754                     u5241:
  2103   005754  EFBC  F02B         	goto	l4246
  2104   005758                     u5240:
  2105   005758                     
  2106                           ; BSR set to: 0
  2107                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2108   005758  51F0               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2109   00575A  6ED9               	movwf	fsr2l,c
  2110   00575C  6ADA               	clrf	fsr2h,c
  2111   00575E  2ADF               	incf	indf2,f,c
  2112   005760                     
  2113                           ; BSR set to: 0
  2114                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2115   005760  C0F0  F005         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2116   005764  C0F1  F006         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2117   005768  C0F2  F007         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  2118   00576C  ECCE  F030         	call	_read_prec_or_width	;wreg free
  2119   005770  C005  F066         	movff	?_read_prec_or_width,_prec
  2120   005774  C006  F067         	movff	?_read_prec_or_width+1,_prec+1
  2121   005778                     l4246:
  2122                           
  2123                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2124   005778  0100               	movlb	0	; () banked
  2125   00577A  51F0               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2126   00577C  6ED9               	movwf	fsr2l,c
  2127   00577E  6ADA               	clrf	fsr2h,c
  2128   005780  50DF               	movf	indf2,w,c
  2129   005782  6E46               	movwf	vfpfcnvrt@cp^0,c
  2130   005784                     
  2131                           ; BSR set to: 0
  2132                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2133   005784  0060  F11B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2134   00578A                     	if	1	;There is more than 1 active tblptr byte
  2135   00578A  0E20               	movlw	high __smallconst
  2136   00578C  6EF7               	movwf	tblptrh,c
  2137   00578E                     	endif
  2138   00578E                     	if	0	;tblptru may be non-zero
  2139   00578E                     	endif
  2140   00578E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2141   00578E  0E00               	movlw	low (__smallconst shr (0+16))
  2142   005790  6EF8               	movwf	tblptru,c
  2143   005792                     	endif
  2144   005792  0008               	tblrd		*
  2145   005794  006F FFD4  F045    	movff	tablat,vfpfcnvrt@c
  2146                           
  2147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2148   00579A  EFD9  F02B         	goto	l4256
  2149   00579E                     l4250:
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2153   00579E  2A46               	incf	vfpfcnvrt@cp^0,f,c
  2154                           
  2155                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  2156   0057A0  EFE8  F02B         	goto	l4258
  2157   0057A4                     l4252:
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2161   0057A4  0E6C               	movlw	108
  2162   0057A6  6E45               	movwf	vfpfcnvrt@c^0,c
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  2165   0057A8  EFE8  F02B         	goto	l4258
  2166   0057AC                     l922:
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2170   0057AC  6A45               	clrf	vfpfcnvrt@c^0,c
  2171                           
  2172                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  2173   0057AE  EFE8  F02B         	goto	l4258
  2174   0057B2                     l4256:
  2175                           
  2176                           ; BSR set to: 0
  2177   0057B2  5045               	movf	vfpfcnvrt@c^0,w,c
  2178                           
  2179                           ; Switch size 1, requested type "simple"
  2180                           ; Number of cases is 3, Range of values is 76 to 108
  2181                           ; switch strategies available:
  2182                           ; Name         Instructions Cycles
  2183                           ; simple_byte           10     6 (average)
  2184                           ;	Chosen strategy is simple_byte
  2185   0057B4  0A4C               	xorlw	76	; case 76
  2186   0057B6  B4D8               	btfsc	status,2,c
  2187   0057B8  EFCF  F02B         	goto	l4250
  2188   0057BC  0A2A               	xorlw	42	; case 102
  2189   0057BE  B4D8               	btfsc	status,2,c
  2190   0057C0  EFD2  F02B         	goto	l4252
  2191   0057C4  0A0A               	xorlw	10	; case 108
  2192   0057C6  B4D8               	btfsc	status,2,c
  2193   0057C8  EFCF  F02B         	goto	l4250
  2194   0057CC  EFD6  F02B         	goto	l922
  2195   0057D0                     l4258:
  2196                           
  2197                           ; BSR set to: 0
  2198   0057D0  0060  F11B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2199   0057D6                     	if	1	;There is more than 1 active tblptr byte
  2200   0057D6  0E20               	movlw	high __smallconst
  2201   0057D8  6EF7               	movwf	tblptrh,c
  2202   0057DA                     	endif
  2203   0057DA                     	if	0	;tblptru may be non-zero
  2204   0057DA                     	endif
  2205   0057DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2206   0057DA  0E00               	movlw	low (__smallconst shr (0+16))
  2207   0057DC  6EF8               	movwf	tblptru,c
  2208   0057DE                     	endif
  2209   0057DE  0008               	tblrd		*
  2210   0057E0  50F5               	movf	tablat,w,c
  2211   0057E2  0A66               	xorlw	102
  2212   0057E4  A4D8               	btfss	status,2,c
  2213   0057E6  EFF7  F02B         	goto	u5251
  2214   0057EA  EFF9  F02B         	goto	u5250
  2215   0057EE                     u5251:
  2216   0057EE  EF6F  F02C         	goto	l4278
  2217   0057F2                     u5250:
  2218   0057F2  EF33  F02C         	goto	l4266
  2219   0057F6                     l4260:
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2223   0057F6  0060  F3C7  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2224   0057FC  0060  F3CB  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2225   005802  006F FF7C  F040    	movff	indf2,??_vfpfcnvrt
  2226   005808  0E04               	movlw	4
  2227   00580A  26DF               	addwf	indf2,f,c
  2228   00580C  5040               	movf	??_vfpfcnvrt^0,w,c
  2229   00580E  6ED9               	movwf	fsr2l,c
  2230   005810  6ADA               	clrf	fsr2h,c
  2231   005812  006F FF78  F041    	movff	postinc2,vfpfcnvrt@convarg
  2232   005818  006F FF78  F042    	movff	postinc2,vfpfcnvrt@convarg+1
  2233   00581E  006F FF78  F043    	movff	postinc2,vfpfcnvrt@convarg+2
  2234   005824  006F FF78  F044    	movff	postinc2,vfpfcnvrt@convarg+3
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  2237   00582A  EF3E  F02C         	goto	l4268
  2238   00582E                     l4262:
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2242   00582E  0060  F3C7  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2243   005834  0060  F3CB  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2244   00583A  006F FF7C  F040    	movff	indf2,??_vfpfcnvrt
  2245   005840  0E04               	movlw	4
  2246   005842  26DF               	addwf	indf2,f,c
  2247   005844  5040               	movf	??_vfpfcnvrt^0,w,c
  2248   005846  6ED9               	movwf	fsr2l,c
  2249   005848  6ADA               	clrf	fsr2h,c
  2250   00584A  006F FF78  F041    	movff	postinc2,vfpfcnvrt@convarg
  2251   005850  006F FF78  F042    	movff	postinc2,vfpfcnvrt@convarg+1
  2252   005856  006F FF78  F043    	movff	postinc2,vfpfcnvrt@convarg+2
  2253   00585C  006F FF78  F044    	movff	postinc2,vfpfcnvrt@convarg+3
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  2256   005862  EF3E  F02C         	goto	l4268
  2257   005866                     l4266:
  2258                           
  2259                           ; BSR set to: 0
  2260   005866  5045               	movf	vfpfcnvrt@c^0,w,c
  2261                           
  2262                           ; Switch size 1, requested type "simple"
  2263                           ; Number of cases is 2, Range of values is 76 to 108
  2264                           ; switch strategies available:
  2265                           ; Name         Instructions Cycles
  2266                           ; simple_byte            7     4 (average)
  2267                           ;	Chosen strategy is simple_byte
  2268   005868  0A4C               	xorlw	76	; case 76
  2269   00586A  B4D8               	btfsc	status,2,c
  2270   00586C  EF17  F02C         	goto	l4262
  2271   005870  0A20               	xorlw	32	; case 108
  2272   005872  B4D8               	btfsc	status,2,c
  2273   005874  EFFB  F02B         	goto	l4260
  2274   005878  EF3E  F02C         	goto	l4268
  2275   00587C                     l4268:
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2279   00587C  51F0               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2280   00587E  6ED9               	movwf	fsr2l,c
  2281   005880  6ADA               	clrf	fsr2h,c
  2282   005882  2846               	incf	vfpfcnvrt@cp^0,w,c
  2283   005884  6EDF               	movwf	indf2,c
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2286   005886  EF60  F02C         	goto	l4276
  2287   00588A                     l4270:
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2291   00588A  C0EE  F038         	movff	vfpfcnvrt@fp,efgtoa@fp
  2292   00588E  C0EF  F039         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2293   005892  C041  F03A         	movff	vfpfcnvrt@convarg,efgtoa@f
  2294   005896  C042  F03B         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2295   00589A  C043  F03C         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2296   00589E  C044  F03D         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2297   0058A2  0060  F11B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2298   0058A8                     	if	1	;There is more than 1 active tblptr byte
  2299   0058A8  0E20               	movlw	high __smallconst
  2300   0058AA  6EF7               	movwf	tblptrh,c
  2301   0058AC                     	endif
  2302   0058AC                     	if	0	;tblptru may be non-zero
  2303   0058AC                     	endif
  2304   0058AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2305   0058AC  0E00               	movlw	low (__smallconst shr (0+16))
  2306   0058AE  6EF8               	movwf	tblptru,c
  2307   0058B0                     	endif
  2308   0058B0  0008               	tblrd		*
  2309   0058B2  006F FFD4  F03E    	movff	tablat,efgtoa@c
  2310   0058B8  EC59  F020         	call	_efgtoa	;wreg free
  2311   0058BC  EF8C  F02C         	goto	l932
  2312   0058C0                     l4276:
  2313                           
  2314                           ; BSR set to: 0
  2315   0058C0  0060  F11B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2316   0058C6                     	if	1	;There is more than 1 active tblptr byte
  2317   0058C6  0E20               	movlw	high __smallconst
  2318   0058C8  6EF7               	movwf	tblptrh,c
  2319   0058CA                     	endif
  2320   0058CA                     	if	0	;tblptru may be non-zero
  2321   0058CA                     	endif
  2322   0058CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2323   0058CA  0E00               	movlw	low (__smallconst shr (0+16))
  2324   0058CC  6EF8               	movwf	tblptru,c
  2325   0058CE                     	endif
  2326   0058CE  0008               	tblrd		*
  2327   0058D0  50F5               	movf	tablat,w,c
  2328                           
  2329                           ; Switch size 1, requested type "simple"
  2330                           ; Number of cases is 1, Range of values is 102 to 102
  2331                           ; switch strategies available:
  2332                           ; Name         Instructions Cycles
  2333                           ; simple_byte            4     3 (average)
  2334                           ;	Chosen strategy is simple_byte
  2335   0058D2  0A66               	xorlw	102	; case 102
  2336   0058D4  B4D8               	btfsc	status,2,c
  2337   0058D6  EF45  F02C         	goto	l4270
  2338   0058DA  EF6F  F02C         	goto	l4278
  2339   0058DE                     l4278:
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2342   0058DE  0100               	movlb	0	; () banked
  2343   0058E0  51F0               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2344   0058E2  6ED9               	movwf	fsr2l,c
  2345   0058E4  6ADA               	clrf	fsr2h,c
  2346   0058E6  2ADF               	incf	indf2,f,c
  2347   0058E8  EF8C  F02C         	goto	l932
  2348   0058EC                     l4282:
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2352   0058EC  51F0               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2353   0058EE  6ED9               	movwf	fsr2l,c
  2354   0058F0  6ADA               	clrf	fsr2h,c
  2355   0058F2  006F FF7F FFF6     	movff	indf2,tblptrl
  2356   0058F8                     	if	1	;There is more than 1 active tblptr byte
  2357   0058F8  0E20               	movlw	high __smallconst
  2358   0058FA  6EF7               	movwf	tblptrh,c
  2359   0058FC                     	endif
  2360   0058FC                     	if	0	;tblptru may be non-zero
  2361   0058FC                     	endif
  2362   0058FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2363   0058FC  0E00               	movlw	low (__smallconst shr (0+16))
  2364   0058FE  6EF8               	movwf	tblptru,c
  2365   005900                     	endif
  2366   005900  0008               	tblrd		*
  2367   005902  50F5               	movf	tablat,w,c
  2368   005904  6E05               	movwf	fputc@c^0,c
  2369   005906  6A06               	clrf	(fputc@c+1)^0,c
  2370   005908  C0EE  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2371   00590C  C0EF  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2372   005910  EC6E  F030         	call	_fputc	;wreg free
  2373   005914  EF6F  F02C         	goto	l4278
  2374   005918                     l932:
  2375   005918  0012               	return		;funcret
  2376   00591A                     __end_of_vfpfcnvrt:
  2377                           	callstack 0
  2378                           
  2379 ;; *************** function _read_prec_or_width *****************
  2380 ;; Defined at:
  2381 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  fmt             1    4[COMRAM] PTR PTR const unsigned c
  2384 ;;		 -> vfprintf@cfmt(1), 
  2385 ;;  ap              2    5[COMRAM] PTR PTR void [1]
  2386 ;;		 -> sprintf@ap(1), 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  c               1    9[COMRAM] unsigned char 
  2389 ;;  n               2   10[COMRAM] int 
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  2    4[COMRAM] int 
  2392 ;; Registers used:
  2393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2399 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2400 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2401 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2402 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2403 ;;Total ram usage:        8 bytes
  2404 ;; Hardware stack levels used: 1
  2405 ;; Hardware stack levels required when called: 1
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_vfpfcnvrt
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text5
  2414   00619C                     __ptext5:
  2415                           	callstack 0
  2416   00619C                     _read_prec_or_width:
  2417                           	callstack 26
  2418   00619C                     
  2419                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2420   00619C  0E00               	movlw	0
  2421   00619E  6E0C               	movwf	(read_prec_or_width@n+1)^0,c
  2422   0061A0  0E00               	movlw	0
  2423   0061A2  6E0B               	movwf	read_prec_or_width@n^0,c
  2424   0061A4                     
  2425                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2426   0061A4  5005               	movf	read_prec_or_width@fmt^0,w,c
  2427   0061A6  6ED9               	movwf	fsr2l,c
  2428   0061A8  6ADA               	clrf	fsr2h,c
  2429   0061AA  006F FF7F FFF6     	movff	indf2,tblptrl
  2430   0061B0                     	if	1	;There is more than 1 active tblptr byte
  2431   0061B0  0E20               	movlw	high __smallconst
  2432   0061B2  6EF7               	movwf	tblptrh,c
  2433   0061B4                     	endif
  2434   0061B4                     	if	0	;tblptru may be non-zero
  2435   0061B4                     	endif
  2436   0061B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2437   0061B4  0E00               	movlw	low (__smallconst shr (0+16))
  2438   0061B6  6EF8               	movwf	tblptru,c
  2439   0061B8                     	endif
  2440   0061B8  0008               	tblrd		*
  2441   0061BA  50F5               	movf	tablat,w,c
  2442   0061BC  0A2A               	xorlw	42
  2443   0061BE  A4D8               	btfss	status,2,c
  2444   0061C0  EFE4  F030         	goto	u5211
  2445   0061C4  EFE6  F030         	goto	u5210
  2446   0061C8                     u5211:
  2447   0061C8  EF12  F031         	goto	l4230
  2448   0061CC                     u5210:
  2449   0061CC                     
  2450                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2451   0061CC  5005               	movf	read_prec_or_width@fmt^0,w,c
  2452   0061CE  6ED9               	movwf	fsr2l,c
  2453   0061D0  6ADA               	clrf	fsr2h,c
  2454   0061D2  2ADF               	incf	indf2,f,c
  2455   0061D4                     
  2456                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2457   0061D4  0060  F01B  FFD9   	movff	read_prec_or_width@ap,fsr2l
  2458   0061DA  0060  F01F  FFDA   	movff	read_prec_or_width@ap+1,fsr2h
  2459   0061E0  0E02               	movlw	2
  2460   0061E2  26DF               	addwf	indf2,f,c
  2461   0061E4  5CDF               	subwf	indf2,w,c
  2462   0061E6  6ED9               	movwf	fsr2l,c
  2463   0061E8  6ADA               	clrf	fsr2h,c
  2464   0061EA  006F FF78  F00B    	movff	postinc2,read_prec_or_width@n
  2465   0061F0  006F FF78  F00C    	movff	postinc2,read_prec_or_width@n+1
  2466                           
  2467                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2468   0061F6  EF28  F031         	goto	l908
  2469   0061FA                     l4226:
  2470                           
  2471                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2472   0061FA  0E0A               	movlw	10
  2473   0061FC  020B               	mulwf	read_prec_or_width@n^0,c
  2474   0061FE  006F FFCC  F008    	movff	prodl,??_read_prec_or_width
  2475   006204  006F FFD0  F009    	movff	prodh,??_read_prec_or_width+1
  2476   00620A  020C               	mulwf	(read_prec_or_width@n+1)^0,c
  2477   00620C  50F3               	movf	prodl,w,c
  2478   00620E  2609               	addwf	(??_read_prec_or_width+1)^0,f,c
  2479   006210  500A               	movf	read_prec_or_width@c^0,w,c
  2480   006212  2408               	addwf	??_read_prec_or_width^0,w,c
  2481   006214  6E0B               	movwf	read_prec_or_width@n^0,c
  2482   006216  0E00               	movlw	0
  2483   006218  2009               	addwfc	(??_read_prec_or_width+1)^0,w,c
  2484   00621A  6E0C               	movwf	(read_prec_or_width@n+1)^0,c
  2485   00621C                     
  2486                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2487   00621C  5005               	movf	read_prec_or_width@fmt^0,w,c
  2488   00621E  6ED9               	movwf	fsr2l,c
  2489   006220  6ADA               	clrf	fsr2h,c
  2490   006222  2ADF               	incf	indf2,f,c
  2491   006224                     l4230:
  2492                           
  2493                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2494   006224  5005               	movf	read_prec_or_width@fmt^0,w,c
  2495   006226  6ED9               	movwf	fsr2l,c
  2496   006228  6ADA               	clrf	fsr2h,c
  2497   00622A  006F FF7F FFF6     	movff	indf2,tblptrl
  2498   006230                     	if	1	;There is more than 1 active tblptr byte
  2499   006230  0E20               	movlw	high __smallconst
  2500   006232  6EF7               	movwf	tblptrh,c
  2501   006234                     	endif
  2502   006234                     	if	0	;tblptru may be non-zero
  2503   006234                     	endif
  2504   006234                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2505   006234  0E00               	movlw	low (__smallconst shr (0+16))
  2506   006236  6EF8               	movwf	tblptru,c
  2507   006238                     	endif
  2508   006238  0008               	tblrd		*
  2509   00623A  50F5               	movf	tablat,w,c
  2510   00623C  0FD0               	addlw	208
  2511   00623E  6E0A               	movwf	read_prec_or_width@c^0,c
  2512   006240  0E09               	movlw	9
  2513   006242  640A               	cpfsgt	read_prec_or_width@c^0,c
  2514   006244  EF26  F031         	goto	u5221
  2515   006248  EF28  F031         	goto	u5220
  2516   00624C                     u5221:
  2517   00624C  EFFD  F030         	goto	l4226
  2518   006250                     u5220:
  2519   006250                     l908:
  2520                           
  2521                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2522   006250  C00B  F005         	movff	read_prec_or_width@n,?_read_prec_or_width
  2523   006254  C00C  F006         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2524   006258  0012               	return		;funcret
  2525   00625A                     __end_of_read_prec_or_width:
  2526                           	callstack 0
  2527                           
  2528 ;; *************** function _efgtoa *****************
  2529 ;; Defined at:
  2530 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  fp              2   55[COMRAM] PTR struct _IO_FILE
  2533 ;;		 -> sprintf@f(11), 
  2534 ;;  f               4   57[COMRAM] PTR struct _IO_FILE
  2535 ;;  c               1   61[COMRAM] unsigned char 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  u               4   40[BANK0 ] struct flui
  2538 ;;  g               4   34[BANK0 ] struct flui
  2539 ;;  l               4   29[BANK0 ] struct flui
  2540 ;;  h               4   25[BANK0 ] struct flui
  2541 ;;  ou              4   19[BANK0 ] struct flui
  2542 ;;  n               2   38[BANK0 ] int 
  2543 ;;  i               2   23[BANK0 ] int 
  2544 ;;  w               2   17[BANK0 ] int 
  2545 ;;  e               2   15[BANK0 ] int 
  2546 ;;  m               2   13[BANK0 ] int 
  2547 ;;  d               2   11[BANK0 ] int 
  2548 ;;  t               2    4[BANK0 ] int 
  2549 ;;  p               2    2[BANK0 ] int 
  2550 ;;  ne              2    0[BANK0 ] int 
  2551 ;;  sign            1   33[BANK0 ] unsigned char 
  2552 ;;  nmode           1   10[BANK0 ] unsigned char 
  2553 ;;  mode            1    9[BANK0 ] unsigned char 
  2554 ;;  pp              1    8[BANK0 ] unsigned char 
  2555 ;;  esign           1    0        unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2565 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2566 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2567 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2568 ;;      Totals:         8      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2569 ;;Total ram usage:       52 bytes
  2570 ;; Hardware stack levels used: 1
  2571 ;; Hardware stack levels required when called: 5
  2572 ;; This function calls:
  2573 ;;		___fladd
  2574 ;;		___fldiv
  2575 ;;		___fleq
  2576 ;;		___flge
  2577 ;;		___flmul
  2578 ;;		___flneg
  2579 ;;		___flsub
  2580 ;;		___fltol
  2581 ;;		___fpclassifyf
  2582 ;;		_floorf
  2583 ;;		_labs
  2584 ;;		_memcpy
  2585 ;;		_pad
  2586 ;;		_strcpy
  2587 ;; This function is called by:
  2588 ;;		_vfpfcnvrt
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text6
  2593   0040B2                     __ptext6:
  2594                           	callstack 0
  2595   0040B2                     _efgtoa:
  2596                           	callstack 22
  2597   0040B2                     
  2598                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2599   0040B2  0100               	movlb	0	; () banked
  2600   0040B4  6BE3               	clrf	efgtoa@sign& (0+255),b
  2601                           
  2602                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2603   0040B6  C03A  F0E4         	movff	efgtoa@f,efgtoa@g
  2604   0040BA  C03B  F0E5         	movff	efgtoa@f+1,efgtoa@g+1
  2605   0040BE  C03C  F0E6         	movff	efgtoa@f+2,efgtoa@g+2
  2606   0040C2  C03D  F0E7         	movff	efgtoa@f+3,efgtoa@g+3
  2607   0040C6                     
  2608                           ; BSR set to: 0
  2609                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2610   0040C6  BFE7               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2611   0040C8  EF6A  F020         	goto	u4890
  2612   0040CC  EF68  F020         	goto	u4891
  2613   0040D0                     u4891:
  2614   0040D0  EF7E  F020         	goto	l4006
  2615   0040D4                     u4890:
  2616   0040D4                     
  2617                           ; BSR set to: 0
  2618                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2619   0040D4  0E01               	movlw	1
  2620   0040D6  6FE3               	movwf	efgtoa@sign& (0+255),b
  2621   0040D8                     
  2622                           ; BSR set to: 0
  2623                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2624   0040D8  C0E4  F005         	movff	efgtoa@g,___flneg@f1
  2625   0040DC  C0E5  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2626   0040E0  C0E6  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2627   0040E4  C0E7  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2628   0040E8  EC96  F033         	call	___flneg	;wreg free
  2629   0040EC  C005  F0E4         	movff	?___flneg,efgtoa@g
  2630   0040F0  C006  F0E5         	movff	?___flneg+1,efgtoa@g+1
  2631   0040F4  C007  F0E6         	movff	?___flneg+2,efgtoa@g+2
  2632   0040F8  C008  F0E7         	movff	?___flneg+3,efgtoa@g+3
  2633   0040FC                     l4006:
  2634                           
  2635                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2636   0040FC  0E00               	movlw	0
  2637   0040FE  0100               	movlb	0	; () banked
  2638   004100  6FE9               	movwf	(efgtoa@n+1)& (0+255),b
  2639   004102  0E00               	movlw	0
  2640   004104  6FE8               	movwf	efgtoa@n& (0+255),b
  2641   004106                     
  2642                           ; BSR set to: 0
  2643                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2644   004106  C064  F0D3         	movff	_width,efgtoa@w
  2645   00410A  C065  F0D4         	movff	_width+1,efgtoa@w+1
  2646   00410E                     
  2647                           ; BSR set to: 0
  2648                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2649   00410E  51E3               	movf	efgtoa@sign& (0+255),w,b
  2650   004110  B4D8               	btfsc	status,2,c
  2651   004112  EF8D  F020         	goto	u4901
  2652   004116  EF8F  F020         	goto	u4900
  2653   00411A                     u4901:
  2654   00411A  EFA3  F020         	goto	l4020
  2655   00411E                     u4900:
  2656   00411E                     
  2657                           ; BSR set to: 0
  2658                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2659   00411E  51E3               	movf	efgtoa@sign& (0+255),w,b
  2660   004120  A4D8               	btfss	status,2,c
  2661   004122  EF95  F020         	goto	u4911
  2662   004126  EF97  F020         	goto	u4910
  2663   00412A                     u4911:
  2664   00412A  EF9D  F020         	goto	l4016
  2665   00412E                     u4910:
  2666   00412E                     
  2667                           ; BSR set to: 0
  2668   00412E  0E00               	movlw	0
  2669   004130  6FC9               	movwf	(_efgtoa$1128+1)& (0+255),b
  2670   004132  0E2B               	movlw	43
  2671   004134  6FC8               	movwf	_efgtoa$1128& (0+255),b
  2672   004136  EFA1  F020         	goto	l4018
  2673   00413A                     l4016:
  2674                           
  2675                           ; BSR set to: 0
  2676   00413A  0E00               	movlw	0
  2677   00413C  6FC9               	movwf	(_efgtoa$1128+1)& (0+255),b
  2678   00413E  0E2D               	movlw	45
  2679   004140  6FC8               	movwf	_efgtoa$1128& (0+255),b
  2680   004142                     l4018:
  2681                           
  2682                           ; BSR set to: 0
  2683   004142  C0C8  F0E3         	movff	_efgtoa$1128,efgtoa@sign
  2684   004146                     l4020:
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2688   004146  C0E4  F005         	movff	efgtoa@g,___fpclassifyf@x
  2689   00414A  C0E5  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2690   00414E  C0E6  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2691   004152  C0E7  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2692   004156  EC75  F02F         	call	___fpclassifyf	;wreg free
  2693   00415A  0405               	decf	?___fpclassifyf^0,w,c
  2694   00415C  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2695   00415E  A4D8               	btfss	status,2,c
  2696   004160  EFB4  F020         	goto	u4921
  2697   004164  EFB6  F020         	goto	u4920
  2698   004168                     u4921:
  2699   004168  EFE2  F020         	goto	l4038
  2700   00416C                     u4920:
  2701   00416C                     
  2702                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2703   00416C  0100               	movlb	0	; () banked
  2704   00416E  51E3               	movf	efgtoa@sign& (0+255),w,b
  2705   004170  B4D8               	btfsc	status,2,c
  2706   004172  EFBD  F020         	goto	u4931
  2707   004176  EFBF  F020         	goto	u4930
  2708   00417A                     u4931:
  2709   00417A  EFC8  F020         	goto	l4030
  2710   00417E                     u4930:
  2711   00417E                     
  2712                           ; BSR set to: 0
  2713                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2714   00417E  C0E3  F068         	movff	efgtoa@sign,_dbuf
  2715   004182                     
  2716                           ; BSR set to: 0
  2717                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  2718   004182  07D3               	decf	efgtoa@w& (0+255),f,b
  2719   004184  A0D8               	btfss	status,0,c
  2720   004186  07D4               	decf	(efgtoa@w+1)& (0+255),f,b
  2721   004188                     
  2722                           ; BSR set to: 0
  2723                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2724   004188  0E00               	movlw	0
  2725   00418A  6FE9               	movwf	(efgtoa@n+1)& (0+255),b
  2726   00418C  0E01               	movlw	1
  2727   00418E  6FE8               	movwf	efgtoa@n& (0+255),b
  2728   004190                     l4030:
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2732   004190  51E8               	movf	efgtoa@n& (0+255),w,b
  2733   004192  0F68               	addlw	low _dbuf
  2734   004194  6E05               	movwf	strcpy@dest^0,c
  2735   004196  0E0F               	movlw	low STR_4
  2736   004198  6E06               	movwf	strcpy@src^0,c
  2737   00419A  EC79  F033         	call	_strcpy	;wreg free
  2738   00419E                     l4032:
  2739                           
  2740                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2741   00419E  0100               	movlb	0	; () banked
  2742   0041A0  0EFD               	movlw	253
  2743   0041A2  27D3               	addwf	efgtoa@w& (0+255),f,b
  2744   0041A4  0EFF               	movlw	255
  2745   0041A6  23D4               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2746   0041A8                     
  2747                           ; BSR set to: 0
  2748                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2749   0041A8  C038  F014         	movff	efgtoa@fp,pad@fp
  2750   0041AC  C039  F015         	movff	efgtoa@fp+1,pad@fp+1
  2751   0041B0  0E68               	movlw	low _dbuf
  2752   0041B2  6E16               	movwf	pad@buf^0,c
  2753   0041B4  C0D3  F017         	movff	efgtoa@w,pad@p
  2754   0041B8  C0D4  F018         	movff	efgtoa@w+1,pad@p+1
  2755   0041BC  ECF5  F031         	call	_pad	;wreg free
  2756   0041C0  EF2E  F025         	goto	l863
  2757   0041C4                     l4038:
  2758                           
  2759                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2760   0041C4  C0E4  F005         	movff	efgtoa@g,___fpclassifyf@x
  2761   0041C8  C0E5  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2762   0041CC  C0E6  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2763   0041D0  C0E7  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2764   0041D4  EC75  F02F         	call	___fpclassifyf	;wreg free
  2765   0041D8  5005               	movf	?___fpclassifyf^0,w,c
  2766   0041DA  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2767   0041DC  A4D8               	btfss	status,2,c
  2768   0041DE  EFF3  F020         	goto	u4941
  2769   0041E2  EFF5  F020         	goto	u4940
  2770   0041E6                     u4941:
  2771   0041E6  EF10  F021         	goto	l4056
  2772   0041EA                     u4940:
  2773   0041EA                     
  2774                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2775   0041EA  0100               	movlb	0	; () banked
  2776   0041EC  51E3               	movf	efgtoa@sign& (0+255),w,b
  2777   0041EE  B4D8               	btfsc	status,2,c
  2778   0041F0  EFFC  F020         	goto	u4951
  2779   0041F4  EFFE  F020         	goto	u4950
  2780   0041F8                     u4951:
  2781   0041F8  EF07  F021         	goto	l4048
  2782   0041FC                     u4950:
  2783   0041FC                     
  2784                           ; BSR set to: 0
  2785                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2786   0041FC  C0E3  F068         	movff	efgtoa@sign,_dbuf
  2787   004200                     
  2788                           ; BSR set to: 0
  2789                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  2790   004200  07D3               	decf	efgtoa@w& (0+255),f,b
  2791   004202  A0D8               	btfss	status,0,c
  2792   004204  07D4               	decf	(efgtoa@w+1)& (0+255),f,b
  2793   004206                     
  2794                           ; BSR set to: 0
  2795                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2796   004206  0E00               	movlw	0
  2797   004208  6FE9               	movwf	(efgtoa@n+1)& (0+255),b
  2798   00420A  0E01               	movlw	1
  2799   00420C  6FE8               	movwf	efgtoa@n& (0+255),b
  2800   00420E                     l4048:
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2804   00420E  51E8               	movf	efgtoa@n& (0+255),w,b
  2805   004210  0F68               	addlw	low _dbuf
  2806   004212  6E05               	movwf	strcpy@dest^0,c
  2807   004214  0E13               	movlw	low STR_7
  2808   004216  6E06               	movwf	strcpy@src^0,c
  2809   004218  EC79  F033         	call	_strcpy	;wreg free
  2810   00421C  EFCF  F020         	goto	l4032
  2811   004220                     l4056:
  2812                           
  2813                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2814   004220  0E00               	movlw	0
  2815   004222  0100               	movlb	0	; () banked
  2816   004224  6FEA               	movwf	efgtoa@u& (0+255),b
  2817   004226  0E00               	movlw	0
  2818   004228  6FEB               	movwf	(efgtoa@u+1)& (0+255),b
  2819   00422A  0E80               	movlw	128
  2820   00422C  6FEC               	movwf	(efgtoa@u+2)& (0+255),b
  2821   00422E  0E3F               	movlw	63
  2822   004230  6FED               	movwf	(efgtoa@u+3)& (0+255),b
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2825   004232  0E00               	movlw	0
  2826   004234  6FD2               	movwf	(efgtoa@e+1)& (0+255),b
  2827   004236  0E00               	movlw	0
  2828   004238  6FD1               	movwf	efgtoa@e& (0+255),b
  2829   00423A                     
  2830                           ; BSR set to: 0
  2831                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2832   00423A  C0E4  F005         	movff	efgtoa@g,___fleq@ff1
  2833   00423E  C0E5  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2834   004242  C0E6  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2835   004246  C0E7  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2836   00424A  0E00               	movlw	0
  2837   00424C  6E09               	movwf	___fleq@ff2^0,c
  2838   00424E  0E00               	movlw	0
  2839   004250  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2840   004252  0E00               	movlw	0
  2841   004254  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2842   004256  0E00               	movlw	0
  2843   004258  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2844   00425A  EC2D  F031         	call	___fleq	;wreg free
  2845   00425E  B0D8               	btfsc	status,0,c
  2846   004260  EF34  F021         	goto	u4961
  2847   004264  EF36  F021         	goto	u4960
  2848   004268                     u4961:
  2849   004268  EF15  F022         	goto	l866
  2850   00426C                     u4960:
  2851   00426C  EF43  F021         	goto	l4064
  2852   004270                     l868:
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2855   004270  C0D5  F0EA         	movff	efgtoa@ou,efgtoa@u
  2856   004274  C0D6  F0EB         	movff	efgtoa@ou+1,efgtoa@u+1
  2857   004278  C0D7  F0EC         	movff	efgtoa@ou+2,efgtoa@u+2
  2858   00427C  C0D8  F0ED         	movff	efgtoa@ou+3,efgtoa@u+3
  2859   004280                     
  2860                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2861   004280  0100               	movlb	0	; () banked
  2862   004282  4BD1               	infsnz	efgtoa@e& (0+255),f,b
  2863   004284  2BD2               	incf	(efgtoa@e+1)& (0+255),f,b
  2864   004286                     l4064:
  2865                           
  2866                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2867   004286  C0EA  F013         	movff	efgtoa@u,___flmul@b
  2868   00428A  C0EB  F014         	movff	efgtoa@u+1,___flmul@b+1
  2869   00428E  C0EC  F015         	movff	efgtoa@u+2,___flmul@b+2
  2870   004292  C0ED  F016         	movff	efgtoa@u+3,___flmul@b+3
  2871   004296  0E00               	movlw	0
  2872   004298  6E17               	movwf	___flmul@a^0,c
  2873   00429A  0E00               	movlw	0
  2874   00429C  6E18               	movwf	(___flmul@a+1)^0,c
  2875   00429E  0E20               	movlw	32
  2876   0042A0  6E19               	movwf	(___flmul@a+2)^0,c
  2877   0042A2  0E41               	movlw	65
  2878   0042A4  6E1A               	movwf	(___flmul@a+3)^0,c
  2879   0042A6  EC8A  F027         	call	___flmul	;wreg free
  2880   0042AA  C013  F0D5         	movff	?___flmul,efgtoa@ou
  2881   0042AE  C014  F0D6         	movff	?___flmul+1,efgtoa@ou+1
  2882   0042B2  C015  F0D7         	movff	?___flmul+2,efgtoa@ou+2
  2883   0042B6  C016  F0D8         	movff	?___flmul+3,efgtoa@ou+3
  2884   0042BA  0100               	movlb	0	; () banked
  2885   0042BC  51D5               	movf	efgtoa@ou& (0+255),w,b
  2886   0042BE  5DE4               	subwf	efgtoa@g& (0+255),w,b
  2887   0042C0  6E05               	movwf	labs@a^0,c
  2888   0042C2  51D6               	movf	(efgtoa@ou+1)& (0+255),w,b
  2889   0042C4  59E5               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2890   0042C6  6E06               	movwf	(labs@a+1)^0,c
  2891   0042C8  51D7               	movf	(efgtoa@ou+2)& (0+255),w,b
  2892   0042CA  59E6               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2893   0042CC  6E07               	movwf	(labs@a+2)^0,c
  2894   0042CE  51D8               	movf	(efgtoa@ou+3)& (0+255),w,b
  2895   0042D0  59E7               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2896   0042D2  6E08               	movwf	(labs@a+3)^0,c
  2897   0042D4  EC5B  F032         	call	_labs	;wreg free
  2898   0042D8  BE08               	btfsc	(?_labs+3)^0,7,c
  2899   0042DA  EF7A  F021         	goto	u4971
  2900   0042DE  5008               	movf	(?_labs+3)^0,w,c
  2901   0042E0  1007               	iorwf	(?_labs+2)^0,w,c
  2902   0042E2  1006               	iorwf	(?_labs+1)^0,w,c
  2903   0042E4  E109               	bnz	u4970
  2904   0042E6  0E02               	movlw	2
  2905   0042E8  5C05               	subwf	?_labs^0,w,c
  2906   0042EA  A0D8               	btfss	status,0,c
  2907   0042EC  EF7A  F021         	goto	u4971
  2908   0042F0  EF7C  F021         	goto	u4970
  2909   0042F4                     u4971:
  2910   0042F4  EF38  F021         	goto	l868
  2911   0042F8                     u4970:
  2912   0042F8  C0D5  F02C         	movff	efgtoa@ou,___flge@ff1
  2913   0042FC  C0D6  F02D         	movff	efgtoa@ou+1,___flge@ff1+1
  2914   004300  C0D7  F02E         	movff	efgtoa@ou+2,___flge@ff1+2
  2915   004304  C0D8  F02F         	movff	efgtoa@ou+3,___flge@ff1+3
  2916   004308  C0E4  F030         	movff	efgtoa@g,___flge@ff2
  2917   00430C  C0E5  F031         	movff	efgtoa@g+1,___flge@ff2+1
  2918   004310  C0E6  F032         	movff	efgtoa@g+2,___flge@ff2+2
  2919   004314  C0E7  F033         	movff	efgtoa@g+3,___flge@ff2+3
  2920   004318  ECF3  F02E         	call	___flge	;wreg free
  2921   00431C  A0D8               	btfss	status,0,c
  2922   00431E  EF93  F021         	goto	u4981
  2923   004322  EF95  F021         	goto	u4980
  2924   004326                     u4981:
  2925   004326  EF38  F021         	goto	l868
  2926   00432A                     u4980:
  2927   00432A                     
  2928                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2929   00432A  0100               	movlb	0	; () banked
  2930   00432C  51EA               	movf	efgtoa@u& (0+255),w,b
  2931   00432E  5DE4               	subwf	efgtoa@g& (0+255),w,b
  2932   004330  6E05               	movwf	labs@a^0,c
  2933   004332  51EB               	movf	(efgtoa@u+1)& (0+255),w,b
  2934   004334  59E5               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2935   004336  6E06               	movwf	(labs@a+1)^0,c
  2936   004338  51EC               	movf	(efgtoa@u+2)& (0+255),w,b
  2937   00433A  59E6               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2938   00433C  6E07               	movwf	(labs@a+2)^0,c
  2939   00433E  51ED               	movf	(efgtoa@u+3)& (0+255),w,b
  2940   004340  59E7               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2941   004342  6E08               	movwf	(labs@a+3)^0,c
  2942   004344  EC5B  F032         	call	_labs	;wreg free
  2943   004348  BE08               	btfsc	(?_labs+3)^0,7,c
  2944   00434A  EFB4  F021         	goto	u4990
  2945   00434E  5008               	movf	(?_labs+3)^0,w,c
  2946   004350  1007               	iorwf	(?_labs+2)^0,w,c
  2947   004352  1006               	iorwf	(?_labs+1)^0,w,c
  2948   004354  E107               	bnz	u4991
  2949   004356  0E02               	movlw	2
  2950   004358  5C05               	subwf	?_labs^0,w,c
  2951   00435A  B0D8               	btfsc	status,0,c
  2952   00435C  EFB2  F021         	goto	u4991
  2953   004360  EFB4  F021         	goto	u4990
  2954   004364                     u4991:
  2955   004364  EFFC  F021         	goto	l4082
  2956   004368                     u4990:
  2957   004368                     l4072:
  2958                           
  2959                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  2960   004368  C0EA  F0E4         	movff	efgtoa@u,efgtoa@g
  2961   00436C  C0EB  F0E5         	movff	efgtoa@u+1,efgtoa@g+1
  2962   004370  C0EC  F0E6         	movff	efgtoa@u+2,efgtoa@g+2
  2963   004374  C0ED  F0E7         	movff	efgtoa@u+3,efgtoa@g+3
  2964                           
  2965                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  2966   004378  EF15  F022         	goto	l866
  2967   00437C                     l4074:
  2968                           
  2969                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  2970   00437C  C0EA  F005         	movff	efgtoa@u,___fldiv@b
  2971   004380  C0EB  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2972   004384  C0EC  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2973   004388  C0ED  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2974   00438C  0E00               	movlw	0
  2975   00438E  6E09               	movwf	___fldiv@a^0,c
  2976   004390  0E00               	movlw	0
  2977   004392  6E0A               	movwf	(___fldiv@a+1)^0,c
  2978   004394  0E20               	movlw	32
  2979   004396  6E0B               	movwf	(___fldiv@a+2)^0,c
  2980   004398  0E41               	movlw	65
  2981   00439A  6E0C               	movwf	(___fldiv@a+3)^0,c
  2982   00439C  ECAF  F029         	call	___fldiv	;wreg free
  2983   0043A0  C005  F0EA         	movff	?___fldiv,efgtoa@u
  2984   0043A4  C006  F0EB         	movff	?___fldiv+1,efgtoa@u+1
  2985   0043A8  C007  F0EC         	movff	?___fldiv+2,efgtoa@u+2
  2986   0043AC  C008  F0ED         	movff	?___fldiv+3,efgtoa@u+3
  2987   0043B0                     
  2988                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  2989   0043B0  0100               	movlb	0	; () banked
  2990   0043B2  07D1               	decf	efgtoa@e& (0+255),f,b
  2991   0043B4  A0D8               	btfss	status,0,c
  2992   0043B6  07D2               	decf	(efgtoa@e+1)& (0+255),f,b
  2993   0043B8                     
  2994                           ; BSR set to: 0
  2995                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2996   0043B8  51EA               	movf	efgtoa@u& (0+255),w,b
  2997   0043BA  5DE4               	subwf	efgtoa@g& (0+255),w,b
  2998   0043BC  6E05               	movwf	labs@a^0,c
  2999   0043BE  51EB               	movf	(efgtoa@u+1)& (0+255),w,b
  3000   0043C0  59E5               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3001   0043C2  6E06               	movwf	(labs@a+1)^0,c
  3002   0043C4  51EC               	movf	(efgtoa@u+2)& (0+255),w,b
  3003   0043C6  59E6               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3004   0043C8  6E07               	movwf	(labs@a+2)^0,c
  3005   0043CA  51ED               	movf	(efgtoa@u+3)& (0+255),w,b
  3006   0043CC  59E7               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3007   0043CE  6E08               	movwf	(labs@a+3)^0,c
  3008   0043D0  EC5B  F032         	call	_labs	;wreg free
  3009   0043D4  BE08               	btfsc	(?_labs+3)^0,7,c
  3010   0043D6  EFFA  F021         	goto	u5000
  3011   0043DA  5008               	movf	(?_labs+3)^0,w,c
  3012   0043DC  1007               	iorwf	(?_labs+2)^0,w,c
  3013   0043DE  1006               	iorwf	(?_labs+1)^0,w,c
  3014   0043E0  E107               	bnz	u5001
  3015   0043E2  0E02               	movlw	2
  3016   0043E4  5C05               	subwf	?_labs^0,w,c
  3017   0043E6  B0D8               	btfsc	status,0,c
  3018   0043E8  EFF8  F021         	goto	u5001
  3019   0043EC  EFFA  F021         	goto	u5000
  3020   0043F0                     u5001:
  3021   0043F0  EFFC  F021         	goto	l4082
  3022   0043F4                     u5000:
  3023   0043F4  EFB4  F021         	goto	l4072
  3024   0043F8                     l4082:
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3027   0043F8  C0E4  F02C         	movff	efgtoa@g,___flge@ff1
  3028   0043FC  C0E5  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  3029   004400  C0E6  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  3030   004404  C0E7  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  3031   004408  C0EA  F030         	movff	efgtoa@u,___flge@ff2
  3032   00440C  C0EB  F031         	movff	efgtoa@u+1,___flge@ff2+1
  3033   004410  C0EC  F032         	movff	efgtoa@u+2,___flge@ff2+2
  3034   004414  C0ED  F033         	movff	efgtoa@u+3,___flge@ff2+3
  3035   004418  ECF3  F02E         	call	___flge	;wreg free
  3036   00441C  A0D8               	btfss	status,0,c
  3037   00441E  EF13  F022         	goto	u5011
  3038   004422  EF15  F022         	goto	u5010
  3039   004426                     u5011:
  3040   004426  EFBE  F021         	goto	l4074
  3041   00442A                     u5010:
  3042   00442A                     l866:
  3043                           
  3044                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3045   00442A  C03E  F0CB         	movff	efgtoa@c,efgtoa@mode
  3046                           
  3047                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3048   00442E  C0CB  F0CC         	movff	efgtoa@mode,efgtoa@nmode
  3049   004432                     
  3050                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3051   004432  0100               	movlb	0	; () banked
  3052   004434  BF67               	btfsc	(_prec+1)& (0+255),7,b
  3053   004436  EF1F  F022         	goto	u5021
  3054   00443A  EF21  F022         	goto	u5020
  3055   00443E                     u5021:
  3056   00443E  EF27  F022         	goto	l4088
  3057   004442                     u5020:
  3058   004442                     
  3059                           ; BSR set to: 0
  3060   004442  C066  F0C4         	movff	_prec,efgtoa@p
  3061   004446  C067  F0C5         	movff	_prec+1,efgtoa@p+1
  3062   00444A  EF2B  F022         	goto	l4090
  3063   00444E                     l4088:
  3064                           
  3065                           ; BSR set to: 0
  3066   00444E  0E00               	movlw	0
  3067   004450  6FC5               	movwf	(efgtoa@p+1)& (0+255),b
  3068   004452  0E06               	movlw	6
  3069   004454  6FC4               	movwf	efgtoa@p& (0+255),b
  3070   004456                     l4090:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3074   004456  C0C4  F0CF         	movff	efgtoa@p,efgtoa@m
  3075   00445A  C0C5  F0D0         	movff	efgtoa@p+1,efgtoa@m+1
  3076   00445E                     
  3077                           ; BSR set to: 0
  3078                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3079   00445E  4BCF               	infsnz	efgtoa@m& (0+255),f,b
  3080   004460  2BD0               	incf	(efgtoa@m+1)& (0+255),f,b
  3081   004462                     
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3084   004462  0E66               	movlw	102
  3085   004464  19CC               	xorwf	efgtoa@nmode& (0+255),w,b
  3086   004466  A4D8               	btfss	status,2,c
  3087   004468  EF38  F022         	goto	u5031
  3088   00446C  EF3A  F022         	goto	u5030
  3089   004470                     u5031:
  3090   004470  EF5A  F022         	goto	l4104
  3091   004474                     u5030:
  3092   004474                     
  3093                           ; BSR set to: 0
  3094                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3095   004474  BFD2               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3096   004476  EF41  F022         	goto	u5040
  3097   00447A  EF3F  F022         	goto	u5041
  3098   00447E                     u5041:
  3099   00447E  EF4D  F022         	goto	l4100
  3100   004482                     u5040:
  3101   004482                     
  3102                           ; BSR set to: 0
  3103                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3104   004482  0E00               	movlw	0
  3105   004484  6FEA               	movwf	efgtoa@u& (0+255),b
  3106   004486  0E00               	movlw	0
  3107   004488  6FEB               	movwf	(efgtoa@u+1)& (0+255),b
  3108   00448A  0E80               	movlw	128
  3109   00448C  6FEC               	movwf	(efgtoa@u+2)& (0+255),b
  3110   00448E  0E3F               	movlw	63
  3111   004490  6FED               	movwf	(efgtoa@u+3)& (0+255),b
  3112                           
  3113                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3114   004492  0E00               	movlw	0
  3115   004494  6FD2               	movwf	(efgtoa@e+1)& (0+255),b
  3116   004496  0E00               	movlw	0
  3117   004498  6FD1               	movwf	efgtoa@e& (0+255),b
  3118   00449A                     l4100:
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3122   00449A  0E67               	movlw	103
  3123   00449C  19CB               	xorwf	efgtoa@mode& (0+255),w,b
  3124   00449E  B4D8               	btfsc	status,2,c
  3125   0044A0  EF54  F022         	goto	u5051
  3126   0044A4  EF56  F022         	goto	u5050
  3127   0044A8                     u5051:
  3128   0044A8  EF5A  F022         	goto	l4104
  3129   0044AC                     u5050:
  3130   0044AC                     
  3131                           ; BSR set to: 0
  3132                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3133   0044AC  51D1               	movf	efgtoa@e& (0+255),w,b
  3134   0044AE  27CF               	addwf	efgtoa@m& (0+255),f,b
  3135   0044B0  51D2               	movf	(efgtoa@e+1)& (0+255),w,b
  3136   0044B2  23D0               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3137   0044B4                     l4104:
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3141   0044B4  0E00               	movlw	0
  3142   0044B6  6FDA               	movwf	(efgtoa@i+1)& (0+255),b
  3143   0044B8  0E00               	movlw	0
  3144   0044BA  6FD9               	movwf	efgtoa@i& (0+255),b
  3145   0044BC                     
  3146                           ; BSR set to: 0
  3147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3148   0044BC  C0E4  F0DB         	movff	efgtoa@g,efgtoa@h
  3149   0044C0  C0E5  F0DC         	movff	efgtoa@g+1,efgtoa@h+1
  3150   0044C4  C0E6  F0DD         	movff	efgtoa@g+2,efgtoa@h+2
  3151   0044C8  C0E7  F0DE         	movff	efgtoa@g+3,efgtoa@h+3
  3152   0044CC                     
  3153                           ; BSR set to: 0
  3154                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3155   0044CC  C0EA  F0D5         	movff	efgtoa@u,efgtoa@ou
  3156   0044D0  C0EB  F0D6         	movff	efgtoa@u+1,efgtoa@ou+1
  3157   0044D4  C0EC  F0D7         	movff	efgtoa@u+2,efgtoa@ou+2
  3158   0044D8  C0ED  F0D8         	movff	efgtoa@u+3,efgtoa@ou+3
  3159                           
  3160                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3161   0044DC  EFEB  F022         	goto	l4118
  3162   0044E0                     l4110:
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3166   0044E0  C0DB  F005         	movff	efgtoa@h,___fldiv@b
  3167   0044E4  C0DC  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3168   0044E8  C0DD  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3169   0044EC  C0DE  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3170   0044F0  C0EA  F009         	movff	efgtoa@u,___fldiv@a
  3171   0044F4  C0EB  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3172   0044F8  C0EC  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3173   0044FC  C0ED  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3174   004500  ECAF  F029         	call	___fldiv	;wreg free
  3175   004504  C005  F01E         	movff	?___fldiv,floorf@x
  3176   004508  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3177   00450C  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3178   004510  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3179   004514  EC8D  F02C         	call	_floorf	;wreg free
  3180   004518  C01E  F0DF         	movff	?_floorf,efgtoa@l
  3181   00451C  C01F  F0E0         	movff	?_floorf+1,efgtoa@l+1
  3182   004520  C020  F0E1         	movff	?_floorf+2,efgtoa@l+2
  3183   004524  C021  F0E2         	movff	?_floorf+3,efgtoa@l+3
  3184                           
  3185                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3186   004528  C0DF  F005         	movff	efgtoa@l,___fltol@f1
  3187   00452C  C0E0  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3188   004530  C0E1  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3189   004534  C0E2  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3190   004538  EC70  F02E         	call	___fltol	;wreg free
  3191   00453C  C005  F0CD         	movff	?___fltol,efgtoa@d
  3192   004540  C006  F0CE         	movff	?___fltol+1,efgtoa@d+1
  3193   004544                     
  3194                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3195   004544  C0DB  F02C         	movff	efgtoa@h,___flsub@b
  3196   004548  C0DC  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3197   00454C  C0DD  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3198   004550  C0DE  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3199   004554  C0DF  F017         	movff	efgtoa@l,___flmul@a
  3200   004558  C0E0  F018         	movff	efgtoa@l+1,___flmul@a+1
  3201   00455C  C0E1  F019         	movff	efgtoa@l+2,___flmul@a+2
  3202   004560  C0E2  F01A         	movff	efgtoa@l+3,___flmul@a+3
  3203   004564  C0EA  F013         	movff	efgtoa@u,___flmul@b
  3204   004568  C0EB  F014         	movff	efgtoa@u+1,___flmul@b+1
  3205   00456C  C0EC  F015         	movff	efgtoa@u+2,___flmul@b+2
  3206   004570  C0ED  F016         	movff	efgtoa@u+3,___flmul@b+3
  3207   004574  EC8A  F027         	call	___flmul	;wreg free
  3208   004578  C013  F030         	movff	?___flmul,___flsub@a
  3209   00457C  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3210   004580  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3211   004584  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3212   004588  ECD3  F032         	call	___flsub	;wreg free
  3213   00458C  C02C  F0DB         	movff	?___flsub,efgtoa@h
  3214   004590  C02D  F0DC         	movff	?___flsub+1,efgtoa@h+1
  3215   004594  C02E  F0DD         	movff	?___flsub+2,efgtoa@h+2
  3216   004598  C02F  F0DE         	movff	?___flsub+3,efgtoa@h+3
  3217   00459C                     
  3218                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3219   00459C  C0EA  F005         	movff	efgtoa@u,___fldiv@b
  3220   0045A0  C0EB  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3221   0045A4  C0EC  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3222   0045A8  C0ED  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3223   0045AC  0E00               	movlw	0
  3224   0045AE  6E09               	movwf	___fldiv@a^0,c
  3225   0045B0  0E00               	movlw	0
  3226   0045B2  6E0A               	movwf	(___fldiv@a+1)^0,c
  3227   0045B4  0E20               	movlw	32
  3228   0045B6  6E0B               	movwf	(___fldiv@a+2)^0,c
  3229   0045B8  0E41               	movlw	65
  3230   0045BA  6E0C               	movwf	(___fldiv@a+3)^0,c
  3231   0045BC  ECAF  F029         	call	___fldiv	;wreg free
  3232   0045C0  C005  F0EA         	movff	?___fldiv,efgtoa@u
  3233   0045C4  C006  F0EB         	movff	?___fldiv+1,efgtoa@u+1
  3234   0045C8  C007  F0EC         	movff	?___fldiv+2,efgtoa@u+2
  3235   0045CC  C008  F0ED         	movff	?___fldiv+3,efgtoa@u+3
  3236   0045D0                     
  3237                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3238   0045D0  0100               	movlb	0	; () banked
  3239   0045D2  4BD9               	infsnz	efgtoa@i& (0+255),f,b
  3240   0045D4  2BDA               	incf	(efgtoa@i+1)& (0+255),f,b
  3241   0045D6                     l4118:
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3245   0045D6  51CF               	movf	efgtoa@m& (0+255),w,b
  3246   0045D8  5DD9               	subwf	efgtoa@i& (0+255),w,b
  3247   0045DA  51DA               	movf	(efgtoa@i+1)& (0+255),w,b
  3248   0045DC  0A80               	xorlw	128
  3249   0045DE  6E3F               	movwf	??_efgtoa^0,c
  3250   0045E0  51D0               	movf	(efgtoa@m+1)& (0+255),w,b
  3251   0045E2  0A80               	xorlw	128
  3252   0045E4  583F               	subwfb	??_efgtoa^0,w,c
  3253   0045E6  A0D8               	btfss	status,0,c
  3254   0045E8  EFF8  F022         	goto	u5061
  3255   0045EC  EFFA  F022         	goto	u5060
  3256   0045F0                     u5061:
  3257   0045F0  EF70  F022         	goto	l4110
  3258   0045F4                     u5060:
  3259   0045F4                     
  3260                           ; BSR set to: 0
  3261                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3262   0045F4  C0EA  F013         	movff	efgtoa@u,___flmul@b
  3263   0045F8  C0EB  F014         	movff	efgtoa@u+1,___flmul@b+1
  3264   0045FC  C0EC  F015         	movff	efgtoa@u+2,___flmul@b+2
  3265   004600  C0ED  F016         	movff	efgtoa@u+3,___flmul@b+3
  3266   004604  0E00               	movlw	0
  3267   004606  6E17               	movwf	___flmul@a^0,c
  3268   004608  0E00               	movlw	0
  3269   00460A  6E18               	movwf	(___flmul@a+1)^0,c
  3270   00460C  0EA0               	movlw	160
  3271   00460E  6E19               	movwf	(___flmul@a+2)^0,c
  3272   004610  0E40               	movlw	64
  3273   004612  6E1A               	movwf	(___flmul@a+3)^0,c
  3274   004614  EC8A  F027         	call	___flmul	;wreg free
  3275   004618  C013  F0DF         	movff	?___flmul,efgtoa@l
  3276   00461C  C014  F0E0         	movff	?___flmul+1,efgtoa@l+1
  3277   004620  C015  F0E1         	movff	?___flmul+2,efgtoa@l+2
  3278   004624  C016  F0E2         	movff	?___flmul+3,efgtoa@l+3
  3279   004628                     
  3280                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3281   004628  C0DB  F02C         	movff	efgtoa@h,___flge@ff1
  3282   00462C  C0DC  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3283   004630  C0DD  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3284   004634  C0DE  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3285   004638  C0DF  F030         	movff	efgtoa@l,___flge@ff2
  3286   00463C  C0E0  F031         	movff	efgtoa@l+1,___flge@ff2+1
  3287   004640  C0E1  F032         	movff	efgtoa@l+2,___flge@ff2+2
  3288   004644  C0E2  F033         	movff	efgtoa@l+3,___flge@ff2+3
  3289   004648  ECF3  F02E         	call	___flge	;wreg free
  3290   00464C  B0D8               	btfsc	status,0,c
  3291   00464E  EF2B  F023         	goto	u5071
  3292   004652  EF2D  F023         	goto	u5070
  3293   004656                     u5071:
  3294   004656  EF38  F023         	goto	l4126
  3295   00465A                     u5070:
  3296   00465A                     
  3297                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3298   00465A  0E00               	movlw	0
  3299   00465C  0100               	movlb	0	; () banked
  3300   00465E  6FDF               	movwf	efgtoa@l& (0+255),b
  3301   004660  0E00               	movlw	0
  3302   004662  6FE0               	movwf	(efgtoa@l+1)& (0+255),b
  3303   004664  0E00               	movlw	0
  3304   004666  6FE1               	movwf	(efgtoa@l+2)& (0+255),b
  3305   004668  0E00               	movlw	0
  3306   00466A  6FE2               	movwf	(efgtoa@l+3)& (0+255),b
  3307                           
  3308                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
  3309   00466C  EF61  F023         	goto	l4132
  3310   004670                     l4126:
  3311                           
  3312                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3313   004670  C0DB  F005         	movff	efgtoa@h,___fleq@ff1
  3314   004674  C0DC  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3315   004678  C0DD  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3316   00467C  C0DE  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3317   004680  C0DF  F009         	movff	efgtoa@l,___fleq@ff2
  3318   004684  C0E0  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3319   004688  C0E1  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3320   00468C  C0E2  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3321   004690  EC2D  F031         	call	___fleq	;wreg free
  3322   004694  A0D8               	btfss	status,0,c
  3323   004696  EF4F  F023         	goto	u5081
  3324   00469A  EF51  F023         	goto	u5080
  3325   00469E                     u5081:
  3326   00469E  EF61  F023         	goto	l4132
  3327   0046A2                     u5080:
  3328   0046A2  0100               	movlb	0	; () banked
  3329   0046A4  B1CD               	btfsc	efgtoa@d& (0+255),0,b
  3330   0046A6  EF57  F023         	goto	u5091
  3331   0046AA  EF59  F023         	goto	u5090
  3332   0046AE                     u5091:
  3333   0046AE  EF61  F023         	goto	l4132
  3334   0046B2                     u5090:
  3335   0046B2                     
  3336                           ; BSR set to: 0
  3337                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3338   0046B2  0E00               	movlw	0
  3339   0046B4  6FDF               	movwf	efgtoa@l& (0+255),b
  3340   0046B6  0E00               	movlw	0
  3341   0046B8  6FE0               	movwf	(efgtoa@l+1)& (0+255),b
  3342   0046BA  0E00               	movlw	0
  3343   0046BC  6FE1               	movwf	(efgtoa@l+2)& (0+255),b
  3344   0046BE  0E00               	movlw	0
  3345   0046C0  6FE2               	movwf	(efgtoa@l+3)& (0+255),b
  3346   0046C2                     l4132:
  3347                           
  3348                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3349   0046C2  C0E4  F005         	movff	efgtoa@g,___fladd@b
  3350   0046C6  C0E5  F006         	movff	efgtoa@g+1,___fladd@b+1
  3351   0046CA  C0E6  F007         	movff	efgtoa@g+2,___fladd@b+2
  3352   0046CE  C0E7  F008         	movff	efgtoa@g+3,___fladd@b+3
  3353   0046D2  C0DF  F009         	movff	efgtoa@l,___fladd@a
  3354   0046D6  C0E0  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3355   0046DA  C0E1  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3356   0046DE  C0E2  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3357   0046E2  EC2F  F025         	call	___fladd	;wreg free
  3358   0046E6  C005  F0DB         	movff	?___fladd,efgtoa@h
  3359   0046EA  C006  F0DC         	movff	?___fladd+1,efgtoa@h+1
  3360   0046EE  C007  F0DD         	movff	?___fladd+2,efgtoa@h+2
  3361   0046F2  C008  F0DE         	movff	?___fladd+3,efgtoa@h+3
  3362   0046F6                     
  3363                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3364   0046F6  C0DB  F02C         	movff	efgtoa@h,___flge@ff1
  3365   0046FA  C0DC  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3366   0046FE  C0DD  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3367   004702  C0DE  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3368   004706  0E00               	movlw	0
  3369   004708  6E17               	movwf	___flmul@a^0,c
  3370   00470A  0E00               	movlw	0
  3371   00470C  6E18               	movwf	(___flmul@a+1)^0,c
  3372   00470E  0E20               	movlw	32
  3373   004710  6E19               	movwf	(___flmul@a+2)^0,c
  3374   004712  0E41               	movlw	65
  3375   004714  6E1A               	movwf	(___flmul@a+3)^0,c
  3376   004716  C0D5  F013         	movff	efgtoa@ou,___flmul@b
  3377   00471A  C0D6  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3378   00471E  C0D7  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3379   004722  C0D8  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3380   004726  EC8A  F027         	call	___flmul	;wreg free
  3381   00472A  C013  F030         	movff	?___flmul,___flge@ff2
  3382   00472E  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  3383   004732  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  3384   004736  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  3385   00473A  ECF3  F02E         	call	___flge	;wreg free
  3386   00473E  A0D8               	btfss	status,0,c
  3387   004740  EFA4  F023         	goto	u5101
  3388   004744  EFA6  F023         	goto	u5100
  3389   004748                     u5101:
  3390   004748  EFCF  F023         	goto	l4144
  3391   00474C                     u5100:
  3392   00474C                     
  3393                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
  3394   00474C  0100               	movlb	0	; () banked
  3395   00474E  4BD1               	infsnz	efgtoa@e& (0+255),f,b
  3396   004750  2BD2               	incf	(efgtoa@e+1)& (0+255),f,b
  3397   004752                     
  3398                           ; BSR set to: 0
  3399                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3400   004752  C0D5  F013         	movff	efgtoa@ou,___flmul@b
  3401   004756  C0D6  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3402   00475A  C0D7  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3403   00475E  C0D8  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3404   004762  0E00               	movlw	0
  3405   004764  6E17               	movwf	___flmul@a^0,c
  3406   004766  0E00               	movlw	0
  3407   004768  6E18               	movwf	(___flmul@a+1)^0,c
  3408   00476A  0E20               	movlw	32
  3409   00476C  6E19               	movwf	(___flmul@a+2)^0,c
  3410   00476E  0E41               	movlw	65
  3411   004770  6E1A               	movwf	(___flmul@a+3)^0,c
  3412   004772  EC8A  F027         	call	___flmul	;wreg free
  3413   004776  C013  F0D5         	movff	?___flmul,efgtoa@ou
  3414   00477A  C014  F0D6         	movff	?___flmul+1,efgtoa@ou+1
  3415   00477E  C015  F0D7         	movff	?___flmul+2,efgtoa@ou+2
  3416   004782  C016  F0D8         	movff	?___flmul+3,efgtoa@ou+3
  3417   004786                     
  3418                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3419   004786  0E66               	movlw	102
  3420   004788  0100               	movlb	0	; () banked
  3421   00478A  19CC               	xorwf	efgtoa@nmode& (0+255),w,b
  3422   00478C  A4D8               	btfss	status,2,c
  3423   00478E  EFCB  F023         	goto	u5111
  3424   004792  EFCD  F023         	goto	u5110
  3425   004796                     u5111:
  3426   004796  EFCF  F023         	goto	l4144
  3427   00479A                     u5110:
  3428   00479A                     
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
  3431   00479A  4BCF               	infsnz	efgtoa@m& (0+255),f,b
  3432   00479C  2BD0               	incf	(efgtoa@m+1)& (0+255),f,b
  3433   00479E                     l4144:
  3434                           
  3435                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3436   00479E  C0D5  F0EA         	movff	efgtoa@ou,efgtoa@u
  3437   0047A2  C0D6  F0EB         	movff	efgtoa@ou+1,efgtoa@u+1
  3438   0047A6  C0D7  F0EC         	movff	efgtoa@ou+2,efgtoa@u+2
  3439   0047AA  C0D8  F0ED         	movff	efgtoa@ou+3,efgtoa@u+3
  3440   0047AE                     
  3441                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3442   0047AE  C0D1  F0C2         	movff	efgtoa@e,efgtoa@ne
  3443   0047B2  C0D2  F0C3         	movff	efgtoa@e+1,efgtoa@ne+1
  3444   0047B6                     
  3445                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3446   0047B6  0100               	movlb	0	; () banked
  3447   0047B8  6BCA               	clrf	efgtoa@pp& (0+255),b
  3448   0047BA                     
  3449                           ; BSR set to: 0
  3450                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3451   0047BA  0E00               	movlw	0
  3452   0047BC  6FC7               	movwf	(efgtoa@t+1)& (0+255),b
  3453   0047BE  0E00               	movlw	0
  3454   0047C0  6FC6               	movwf	efgtoa@t& (0+255),b
  3455   0047C2                     
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3458   0047C2  0E00               	movlw	0
  3459   0047C4  6FDA               	movwf	(efgtoa@i+1)& (0+255),b
  3460   0047C6  0E00               	movlw	0
  3461   0047C8  6FD9               	movwf	efgtoa@i& (0+255),b
  3462                           
  3463                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3464   0047CA  EFC6  F024         	goto	l4194
  3465   0047CE                     l4154:
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3469   0047CE  C0DB  F005         	movff	efgtoa@h,___fldiv@b
  3470   0047D2  C0DC  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3471   0047D6  C0DD  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3472   0047DA  C0DE  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3473   0047DE  C0EA  F009         	movff	efgtoa@u,___fldiv@a
  3474   0047E2  C0EB  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3475   0047E6  C0EC  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3476   0047EA  C0ED  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3477   0047EE  ECAF  F029         	call	___fldiv	;wreg free
  3478   0047F2  C005  F01E         	movff	?___fldiv,floorf@x
  3479   0047F6  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3480   0047FA  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3481   0047FE  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3482   004802  EC8D  F02C         	call	_floorf	;wreg free
  3483   004806  C01E  F0DF         	movff	?_floorf,efgtoa@l
  3484   00480A  C01F  F0E0         	movff	?_floorf+1,efgtoa@l+1
  3485   00480E  C020  F0E1         	movff	?_floorf+2,efgtoa@l+2
  3486   004812  C021  F0E2         	movff	?_floorf+3,efgtoa@l+3
  3487                           
  3488                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3489   004816  C0DF  F005         	movff	efgtoa@l,___fltol@f1
  3490   00481A  C0E0  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3491   00481E  C0E1  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3492   004822  C0E2  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3493   004826  EC70  F02E         	call	___fltol	;wreg free
  3494   00482A  BE06               	btfsc	(?___fltol+1)^0,7,c
  3495   00482C  EF23  F024         	goto	u5120
  3496   004830  5006               	movf	(?___fltol+1)^0,w,c
  3497   004832  E107               	bnz	u5121
  3498   004834  0E0A               	movlw	10
  3499   004836  5C05               	subwf	?___fltol^0,w,c
  3500   004838  B0D8               	btfsc	status,0,c
  3501   00483A  EF21  F024         	goto	u5121
  3502   00483E  EF23  F024         	goto	u5120
  3503   004842                     u5121:
  3504   004842  EF33  F024         	goto	l4158
  3505   004846                     u5120:
  3506   004846  C0DF  F005         	movff	efgtoa@l,___fltol@f1
  3507   00484A  C0E0  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3508   00484E  C0E1  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3509   004852  C0E2  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3510   004856  EC70  F02E         	call	___fltol	;wreg free
  3511   00485A  C005  F0CD         	movff	?___fltol,efgtoa@d
  3512   00485E  C006  F0CE         	movff	?___fltol+1,efgtoa@d+1
  3513   004862  EF38  F024         	goto	l896
  3514   004866                     l4158:
  3515   004866  0E00               	movlw	0
  3516   004868  0100               	movlb	0	; () banked
  3517   00486A  6FCE               	movwf	(efgtoa@d+1)& (0+255),b
  3518   00486C  0E09               	movlw	9
  3519   00486E  6FCD               	movwf	efgtoa@d& (0+255),b
  3520   004870                     l896:
  3521                           
  3522                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3523   004870  0100               	movlb	0	; () banked
  3524   004872  51CA               	movf	efgtoa@pp& (0+255),w,b
  3525   004874  A4D8               	btfss	status,2,c
  3526   004876  EF3F  F024         	goto	u5131
  3527   00487A  EF41  F024         	goto	u5130
  3528   00487E                     u5131:
  3529   00487E  EF65  F024         	goto	l4178
  3530   004882                     u5130:
  3531   004882                     
  3532                           ; BSR set to: 0
  3533   004882  BFC3               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3534   004884  EF48  F024         	goto	u5140
  3535   004888  EF46  F024         	goto	u5141
  3536   00488C                     u5141:
  3537   00488C  EF65  F024         	goto	l4178
  3538   004890                     u5140:
  3539   004890                     
  3540                           ; BSR set to: 0
  3541                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3542   004890  51E8               	movf	efgtoa@n& (0+255),w,b
  3543   004892  0F68               	addlw	low _dbuf
  3544   004894  6ED9               	movwf	fsr2l,c
  3545   004896  6ADA               	clrf	fsr2h,c
  3546   004898  0E2E               	movlw	46
  3547   00489A  6EDF               	movwf	indf2,c
  3548   00489C                     
  3549                           ; BSR set to: 0
  3550   00489C  4BE8               	infsnz	efgtoa@n& (0+255),f,b
  3551   00489E  2BE9               	incf	(efgtoa@n+1)& (0+255),f,b
  3552   0048A0                     
  3553                           ; BSR set to: 0
  3554                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3555   0048A0  07D3               	decf	efgtoa@w& (0+255),f,b
  3556   0048A2  A0D8               	btfss	status,0,c
  3557   0048A4  07D4               	decf	(efgtoa@w+1)& (0+255),f,b
  3558   0048A6                     
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3561   0048A6  0E01               	movlw	1
  3562   0048A8  6FCA               	movwf	efgtoa@pp& (0+255),b
  3563   0048AA  EF65  F024         	goto	l4178
  3564   0048AE                     l4170:
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3568   0048AE  51E8               	movf	efgtoa@n& (0+255),w,b
  3569   0048B0  0F68               	addlw	low _dbuf
  3570   0048B2  6ED9               	movwf	fsr2l,c
  3571   0048B4  6ADA               	clrf	fsr2h,c
  3572   0048B6  0E30               	movlw	48
  3573   0048B8  6EDF               	movwf	indf2,c
  3574   0048BA                     
  3575                           ; BSR set to: 0
  3576   0048BA  4BE8               	infsnz	efgtoa@n& (0+255),f,b
  3577   0048BC  2BE9               	incf	(efgtoa@n+1)& (0+255),f,b
  3578   0048BE                     
  3579                           ; BSR set to: 0
  3580                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3581   0048BE  07D3               	decf	efgtoa@w& (0+255),f,b
  3582   0048C0  A0D8               	btfss	status,0,c
  3583   0048C2  07D4               	decf	(efgtoa@w+1)& (0+255),f,b
  3584   0048C4                     
  3585                           ; BSR set to: 0
  3586                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3587   0048C4  07C6               	decf	efgtoa@t& (0+255),f,b
  3588   0048C6  A0D8               	btfss	status,0,c
  3589   0048C8  07C7               	decf	(efgtoa@t+1)& (0+255),f,b
  3590   0048CA                     l4178:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3594   0048CA  51C6               	movf	efgtoa@t& (0+255),w,b
  3595   0048CC  11C7               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3596   0048CE  A4D8               	btfss	status,2,c
  3597   0048D0  EF6C  F024         	goto	u5151
  3598   0048D4  EF6E  F024         	goto	u5150
  3599   0048D8                     u5151:
  3600   0048D8  EF57  F024         	goto	l4170
  3601   0048DC                     u5150:
  3602   0048DC                     
  3603                           ; BSR set to: 0
  3604                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3605   0048DC  51E8               	movf	efgtoa@n& (0+255),w,b
  3606   0048DE  0F68               	addlw	low _dbuf
  3607   0048E0  6ED9               	movwf	fsr2l,c
  3608   0048E2  6ADA               	clrf	fsr2h,c
  3609   0048E4  51CD               	movf	efgtoa@d& (0+255),w,b
  3610   0048E6  0F30               	addlw	48
  3611   0048E8  6EDF               	movwf	indf2,c
  3612   0048EA                     
  3613                           ; BSR set to: 0
  3614   0048EA  4BE8               	infsnz	efgtoa@n& (0+255),f,b
  3615   0048EC  2BE9               	incf	(efgtoa@n+1)& (0+255),f,b
  3616   0048EE                     
  3617                           ; BSR set to: 0
  3618                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3619   0048EE  07D3               	decf	efgtoa@w& (0+255),f,b
  3620   0048F0  A0D8               	btfss	status,0,c
  3621   0048F2  07D4               	decf	(efgtoa@w+1)& (0+255),f,b
  3622   0048F4                     
  3623                           ; BSR set to: 0
  3624                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3625   0048F4  C0DB  F02C         	movff	efgtoa@h,___flsub@b
  3626   0048F8  C0DC  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3627   0048FC  C0DD  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3628   004900  C0DE  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3629   004904  C0DF  F017         	movff	efgtoa@l,___flmul@a
  3630   004908  C0E0  F018         	movff	efgtoa@l+1,___flmul@a+1
  3631   00490C  C0E1  F019         	movff	efgtoa@l+2,___flmul@a+2
  3632   004910  C0E2  F01A         	movff	efgtoa@l+3,___flmul@a+3
  3633   004914  C0EA  F013         	movff	efgtoa@u,___flmul@b
  3634   004918  C0EB  F014         	movff	efgtoa@u+1,___flmul@b+1
  3635   00491C  C0EC  F015         	movff	efgtoa@u+2,___flmul@b+2
  3636   004920  C0ED  F016         	movff	efgtoa@u+3,___flmul@b+3
  3637   004924  EC8A  F027         	call	___flmul	;wreg free
  3638   004928  C013  F030         	movff	?___flmul,___flsub@a
  3639   00492C  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3640   004930  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3641   004934  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3642   004938  ECD3  F032         	call	___flsub	;wreg free
  3643   00493C  C02C  F0DB         	movff	?___flsub,efgtoa@h
  3644   004940  C02D  F0DC         	movff	?___flsub+1,efgtoa@h+1
  3645   004944  C02E  F0DD         	movff	?___flsub+2,efgtoa@h+2
  3646   004948  C02F  F0DE         	movff	?___flsub+3,efgtoa@h+3
  3647   00494C                     
  3648                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3649   00494C  C0EA  F005         	movff	efgtoa@u,___fldiv@b
  3650   004950  C0EB  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3651   004954  C0EC  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3652   004958  C0ED  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3653   00495C  0E00               	movlw	0
  3654   00495E  6E09               	movwf	___fldiv@a^0,c
  3655   004960  0E00               	movlw	0
  3656   004962  6E0A               	movwf	(___fldiv@a+1)^0,c
  3657   004964  0E20               	movlw	32
  3658   004966  6E0B               	movwf	(___fldiv@a+2)^0,c
  3659   004968  0E41               	movlw	65
  3660   00496A  6E0C               	movwf	(___fldiv@a+3)^0,c
  3661   00496C  ECAF  F029         	call	___fldiv	;wreg free
  3662   004970  C005  F0EA         	movff	?___fldiv,efgtoa@u
  3663   004974  C006  F0EB         	movff	?___fldiv+1,efgtoa@u+1
  3664   004978  C007  F0EC         	movff	?___fldiv+2,efgtoa@u+2
  3665   00497C  C008  F0ED         	movff	?___fldiv+3,efgtoa@u+3
  3666   004980                     
  3667                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3668   004980  0100               	movlb	0	; () banked
  3669   004982  07C2               	decf	efgtoa@ne& (0+255),f,b
  3670   004984  A0D8               	btfss	status,0,c
  3671   004986  07C3               	decf	(efgtoa@ne+1)& (0+255),f,b
  3672   004988                     
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3675   004988  4BD9               	infsnz	efgtoa@i& (0+255),f,b
  3676   00498A  2BDA               	incf	(efgtoa@i+1)& (0+255),f,b
  3677   00498C                     l4194:
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3681   00498C  51CF               	movf	efgtoa@m& (0+255),w,b
  3682   00498E  5DD9               	subwf	efgtoa@i& (0+255),w,b
  3683   004990  51DA               	movf	(efgtoa@i+1)& (0+255),w,b
  3684   004992  0A80               	xorlw	128
  3685   004994  6E3F               	movwf	??_efgtoa^0,c
  3686   004996  51D0               	movf	(efgtoa@m+1)& (0+255),w,b
  3687   004998  0A80               	xorlw	128
  3688   00499A  583F               	subwfb	??_efgtoa^0,w,c
  3689   00499C  B0D8               	btfsc	status,0,c
  3690   00499E  EFD3  F024         	goto	u5161
  3691   0049A2  EFD5  F024         	goto	u5160
  3692   0049A6                     u5161:
  3693   0049A6  EFE3  F024         	goto	l4198
  3694   0049AA                     u5160:
  3695   0049AA                     
  3696                           ; BSR set to: 0
  3697   0049AA  BFE9               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3698   0049AC  EFE1  F024         	goto	u5171
  3699   0049B0  51E9               	movf	(efgtoa@n+1)& (0+255),w,b
  3700   0049B2  E109               	bnz	u5170
  3701   0049B4  0E4B               	movlw	75
  3702   0049B6  5DE8               	subwf	efgtoa@n& (0+255),w,b
  3703   0049B8  A0D8               	btfss	status,0,c
  3704   0049BA  EFE1  F024         	goto	u5171
  3705   0049BE  EFE3  F024         	goto	u5170
  3706   0049C2                     u5171:
  3707   0049C2  EFE7  F023         	goto	l4154
  3708   0049C6                     u5170:
  3709   0049C6                     l4198:
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3713   0049C6  0E00               	movlw	0
  3714   0049C8  6FDA               	movwf	(efgtoa@i+1)& (0+255),b
  3715   0049CA  0E4F               	movlw	79
  3716   0049CC  6FD9               	movwf	efgtoa@i& (0+255),b
  3717   0049CE                     
  3718                           ; BSR set to: 0
  3719                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3720   0049CE  51D9               	movf	efgtoa@i& (0+255),w,b
  3721   0049D0  0F68               	addlw	low _dbuf
  3722   0049D2  6ED9               	movwf	fsr2l,c
  3723   0049D4  6ADA               	clrf	fsr2h,c
  3724   0049D6  6ADF               	clrf	indf2,c
  3725   0049D8                     
  3726                           ; BSR set to: 0
  3727                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3728   0049D8  51E8               	movf	efgtoa@n& (0+255),w,b
  3729   0049DA  0868               	sublw	low _dbuf
  3730   0049DC  25D9               	addwf	efgtoa@i& (0+255),w,b
  3731   0049DE  6E05               	movwf	memcpy@d1^0,c
  3732   0049E0  0E68               	movlw	low _dbuf
  3733   0049E2  6E06               	movwf	memcpy@s1^0,c
  3734   0049E4  C0E8  F007         	movff	efgtoa@n,memcpy@n
  3735   0049E8  C0E9  F008         	movff	efgtoa@n+1,memcpy@n+1
  3736   0049EC  EC18  F033         	call	_memcpy	;wreg free
  3737   0049F0                     
  3738                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3739   0049F0  0100               	movlb	0	; () banked
  3740   0049F2  51E8               	movf	efgtoa@n& (0+255),w,b
  3741   0049F4  5DD9               	subwf	efgtoa@i& (0+255),w,b
  3742   0049F6  6FE8               	movwf	efgtoa@n& (0+255),b
  3743   0049F8  51E9               	movf	(efgtoa@n+1)& (0+255),w,b
  3744   0049FA  59DA               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3745   0049FC  6FE9               	movwf	(efgtoa@n+1)& (0+255),b
  3746   0049FE                     
  3747                           ; BSR set to: 0
  3748                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3749   0049FE  51E3               	movf	efgtoa@sign& (0+255),w,b
  3750   004A00  A4D8               	btfss	status,2,c
  3751   004A02  EF05  F025         	goto	u5181
  3752   004A06  EF08  F025         	goto	u5180
  3753   004A0A                     u5181:
  3754   004A0A  0E01               	movlw	1
  3755   004A0C  EF09  F025         	goto	u5190
  3756   004A10                     u5180:
  3757   004A10  0E00               	movlw	0
  3758   004A12                     u5190:
  3759   004A12  6FD9               	movwf	efgtoa@i& (0+255),b
  3760   004A14  6BDA               	clrf	(efgtoa@i+1)& (0+255),b
  3761   004A16                     
  3762                           ; BSR set to: 0
  3763                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3764   004A16  51E3               	movf	efgtoa@sign& (0+255),w,b
  3765   004A18  B4D8               	btfsc	status,2,c
  3766   004A1A  EF11  F025         	goto	u5201
  3767   004A1E  EF13  F025         	goto	u5200
  3768   004A22                     u5201:
  3769   004A22  EF1D  F025         	goto	l4212
  3770   004A26                     u5200:
  3771   004A26                     
  3772                           ; BSR set to: 0
  3773                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3774   004A26  07E8               	decf	efgtoa@n& (0+255),f,b
  3775   004A28  A0D8               	btfss	status,0,c
  3776   004A2A  07E9               	decf	(efgtoa@n+1)& (0+255),f,b
  3777   004A2C  51E8               	movf	efgtoa@n& (0+255),w,b
  3778   004A2E  0F68               	addlw	low _dbuf
  3779   004A30  6ED9               	movwf	fsr2l,c
  3780   004A32  6ADA               	clrf	fsr2h,c
  3781   004A34  0060  F38F  FFDF   	movff	efgtoa@sign,indf2
  3782   004A3A                     l4212:
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3786   004A3A  51D9               	movf	efgtoa@i& (0+255),w,b
  3787   004A3C  5FD3               	subwf	efgtoa@w& (0+255),f,b
  3788   004A3E  51DA               	movf	(efgtoa@i+1)& (0+255),w,b
  3789   004A40  5BD4               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3790   004A42                     
  3791                           ; BSR set to: 0
  3792                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3793   004A42  C038  F014         	movff	efgtoa@fp,pad@fp
  3794   004A46  C039  F015         	movff	efgtoa@fp+1,pad@fp+1
  3795   004A4A  51E8               	movf	efgtoa@n& (0+255),w,b
  3796   004A4C  0F68               	addlw	low _dbuf
  3797   004A4E  6E16               	movwf	pad@buf^0,c
  3798   004A50  C0D3  F017         	movff	efgtoa@w,pad@p
  3799   004A54  C0D4  F018         	movff	efgtoa@w+1,pad@p+1
  3800   004A58  ECF5  F031         	call	_pad	;wreg free
  3801   004A5C                     l863:
  3802   004A5C  0012               	return		;funcret
  3803   004A5E                     __end_of_efgtoa:
  3804                           	callstack 0
  3805                           
  3806 ;; *************** function _strcpy *****************
  3807 ;; Defined at:
  3808 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  dest            1    4[COMRAM] PTR unsigned char 
  3811 ;;		 -> dbuf(80), 
  3812 ;;  src             1    5[COMRAM] PTR const unsigned char 
  3813 ;;		 -> STR_7(4), STR_4(4), 
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;  d               1    7[COMRAM] PTR unsigned char 
  3816 ;;		 -> dbuf(80), 
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    4[COMRAM] PTR unsigned char 
  3819 ;; Registers used:
  3820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3826 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3829 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3830 ;;Total ram usage:        4 bytes
  3831 ;; Hardware stack levels used: 1
  3832 ;; Hardware stack levels required when called: 1
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_efgtoa
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text7
  3841   0066F2                     __ptext7:
  3842                           	callstack 0
  3843   0066F2                     _strcpy:
  3844                           	callstack 25
  3845   0066F2  C005  F008         	movff	strcpy@dest,strcpy@d
  3846   0066F6                     l3950:
  3847   0066F6  2A06               	incf	strcpy@src^0,f,c
  3848   0066F8  0406               	decf	strcpy@src^0,w,c
  3849   0066FA  6E07               	movwf	??_strcpy^0,c
  3850   0066FC  0060  F01F  FFF6   	movff	??_strcpy,tblptrl
  3851   006702                     	if	1	;There is more than 1 active tblptr byte
  3852   006702  0E20               	movlw	high __smallconst
  3853   006704  6EF7               	movwf	tblptrh,c
  3854   006706                     	endif
  3855   006706                     	if	0	;tblptru may be non-zero
  3856   006706                     	endif
  3857   006706                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3858   006706  0E00               	movlw	low (__smallconst shr (0+16))
  3859   006708  6EF8               	movwf	tblptru,c
  3860   00670A                     	endif
  3861   00670A  2A08               	incf	strcpy@d^0,f,c
  3862   00670C  0408               	decf	strcpy@d^0,w,c
  3863   00670E  6ED9               	movwf	fsr2l,c
  3864   006710  6ADA               	clrf	fsr2h,c
  3865   006712  0008               	tblrd		*
  3866   006714  006F FFD7 FFDF     	movff	tablat,indf2
  3867   00671A  50DF               	movf	indf2,w,c
  3868   00671C  A4D8               	btfss	status,2,c
  3869   00671E  EF93  F033         	goto	u4761
  3870   006722  EF95  F033         	goto	u4760
  3871   006726                     u4761:
  3872   006726  EF7B  F033         	goto	l3950
  3873   00672A                     u4760:
  3874   00672A  0012               	return		;funcret
  3875   00672C                     __end_of_strcpy:
  3876                           	callstack 0
  3877                           
  3878 ;; *************** function _pad *****************
  3879 ;; Defined at:
  3880 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  3883 ;;		 -> sprintf@f(11), 
  3884 ;;  buf             1   21[COMRAM] PTR unsigned char 
  3885 ;;		 -> dbuf(80), 
  3886 ;;  p               2   22[COMRAM] int 
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;  i               2   25[COMRAM] int 
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  1    wreg      void 
  3891 ;; Registers used:
  3892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3898 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3899 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3901 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3902 ;;Total ram usage:        8 bytes
  3903 ;; Hardware stack levels used: 1
  3904 ;; Hardware stack levels required when called: 4
  3905 ;; This function calls:
  3906 ;;		_fputc
  3907 ;;		_fputs
  3908 ;; This function is called by:
  3909 ;;		_efgtoa
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text8
  3914   0063EA                     __ptext8:
  3915                           	callstack 0
  3916   0063EA                     _pad:
  3917                           	callstack 22
  3918   0063EA                     
  3919                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  3920   0063EA  BE18               	btfsc	(pad@p+1)^0,7,c
  3921   0063EC  EFFC  F031         	goto	u4670
  3922   0063F0  EFFA  F031         	goto	u4671
  3923   0063F4                     u4671:
  3924   0063F4  EF00  F032         	goto	l848
  3925   0063F8                     u4670:
  3926   0063F8                     
  3927                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3928   0063F8  0E00               	movlw	0
  3929   0063FA  6E18               	movwf	(pad@p+1)^0,c
  3930   0063FC  0E00               	movlw	0
  3931   0063FE  6E17               	movwf	pad@p^0,c
  3932   006400                     l848:
  3933                           
  3934                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3935   006400  0E00               	movlw	0
  3936   006402  6E1B               	movwf	(pad@i+1)^0,c
  3937   006404  0E00               	movlw	0
  3938   006406  6E1A               	movwf	pad@i^0,c
  3939                           
  3940                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3941   006408  EF12  F032         	goto	l3922
  3942   00640C                     l3918:
  3943                           
  3944                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3945   00640C  0E00               	movlw	0
  3946   00640E  6E06               	movwf	(fputc@c+1)^0,c
  3947   006410  0E20               	movlw	32
  3948   006412  6E05               	movwf	fputc@c^0,c
  3949   006414  C014  F007         	movff	pad@fp,fputc@fp
  3950   006418  C015  F008         	movff	pad@fp+1,fputc@fp+1
  3951   00641C  EC6E  F030         	call	_fputc	;wreg free
  3952   006420                     
  3953                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3954   006420  4A1A               	infsnz	pad@i^0,f,c
  3955   006422  2A1B               	incf	(pad@i+1)^0,f,c
  3956   006424                     l3922:
  3957                           
  3958                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3959   006424  5017               	movf	pad@p^0,w,c
  3960   006426  5C1A               	subwf	pad@i^0,w,c
  3961   006428  501B               	movf	(pad@i+1)^0,w,c
  3962   00642A  0A80               	xorlw	128
  3963   00642C  6E19               	movwf	??_pad^0,c
  3964   00642E  5018               	movf	(pad@p+1)^0,w,c
  3965   006430  0A80               	xorlw	128
  3966   006432  5819               	subwfb	??_pad^0,w,c
  3967   006434  A0D8               	btfss	status,0,c
  3968   006436  EF1F  F032         	goto	u4681
  3969   00643A  EF21  F032         	goto	u4680
  3970   00643E                     u4681:
  3971   00643E  EF06  F032         	goto	l3918
  3972   006442                     u4680:
  3973   006442                     
  3974                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3975   006442  C016  F00E         	movff	pad@buf,fputs@s
  3976   006446  C014  F00F         	movff	pad@fp,fputs@fp
  3977   00644A  C015  F010         	movff	pad@fp+1,fputs@fp+1
  3978   00644E  EC39  F033         	call	_fputs	;wreg free
  3979   006452  0012               	return		;funcret
  3980   006454                     __end_of_pad:
  3981                           	callstack 0
  3982                           
  3983 ;; *************** function _fputs *****************
  3984 ;; Defined at:
  3985 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  s               1   13[COMRAM] PTR const unsigned char 
  3988 ;;		 -> dbuf(80), 
  3989 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  3990 ;;		 -> sprintf@f(11), 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  i               2   17[COMRAM] int 
  3993 ;;  c               1   16[COMRAM] unsigned char 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  2   13[COMRAM] int 
  3996 ;; Registers used:
  3997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4003 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4004 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4006 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4007 ;;Total ram usage:        6 bytes
  4008 ;; Hardware stack levels used: 1
  4009 ;; Hardware stack levels required when called: 3
  4010 ;; This function calls:
  4011 ;;		_fputc
  4012 ;; This function is called by:
  4013 ;;		_pad
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           	psect	text9
  4018   006672                     __ptext9:
  4019                           	callstack 0
  4020   006672                     _fputs:
  4021                           	callstack 22
  4022   006672  0E00               	movlw	0
  4023   006674  6E13               	movwf	(fputs@i+1)^0,c
  4024   006676  0E00               	movlw	0
  4025   006678  6E12               	movwf	fputs@i^0,c
  4026   00667A  EF4A  F033         	goto	l3552
  4027   00667E                     l3548:
  4028   00667E  C011  F005         	movff	fputs@c,fputc@c
  4029   006682  6A06               	clrf	(fputc@c+1)^0,c
  4030   006684  C00F  F007         	movff	fputs@fp,fputc@fp
  4031   006688  C010  F008         	movff	fputs@fp+1,fputc@fp+1
  4032   00668C  EC6E  F030         	call	_fputc	;wreg free
  4033   006690  4A12               	infsnz	fputs@i^0,f,c
  4034   006692  2A13               	incf	(fputs@i+1)^0,f,c
  4035   006694                     l3552:
  4036   006694  500E               	movf	fputs@s^0,w,c
  4037   006696  2412               	addwf	fputs@i^0,w,c
  4038   006698  6ED9               	movwf	fsr2l,c
  4039   00669A  6ADA               	clrf	fsr2h,c
  4040   00669C  50DF               	movf	indf2,w,c
  4041   00669E  6E11               	movwf	fputs@c^0,c
  4042   0066A0  5011               	movf	fputs@c^0,w,c
  4043   0066A2  A4D8               	btfss	status,2,c
  4044   0066A4  EF56  F033         	goto	u4081
  4045   0066A8  EF58  F033         	goto	u4080
  4046   0066AC                     u4081:
  4047   0066AC  EF3F  F033         	goto	l3548
  4048   0066B0                     u4080:
  4049   0066B0  0012               	return		;funcret
  4050   0066B2                     __end_of_fputs:
  4051                           	callstack 0
  4052                           
  4053 ;; *************** function _fputc *****************
  4054 ;; Defined at:
  4055 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  c               2    4[COMRAM] int 
  4058 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  4059 ;;		 -> sprintf@f(11), 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;		None
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  2    4[COMRAM] int 
  4064 ;; Registers used:
  4065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4071 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4073 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4074 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4075 ;;Total ram usage:        9 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; Hardware stack levels required when called: 2
  4078 ;; This function calls:
  4079 ;;		_putch
  4080 ;; This function is called by:
  4081 ;;		_pad
  4082 ;;		_vfpfcnvrt
  4083 ;;		_fputs
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text10
  4088   0060DC                     __ptext10:
  4089                           	callstack 0
  4090   0060DC                     _fputc:
  4091                           	callstack 25
  4092   0060DC  5007               	movf	fputc@fp^0,w,c
  4093   0060DE  1008               	iorwf	(fputc@fp+1)^0,w,c
  4094   0060E0  B4D8               	btfsc	status,2,c
  4095   0060E2  EF75  F030         	goto	u3651
  4096   0060E6  EF77  F030         	goto	u3650
  4097   0060EA                     u3651:
  4098   0060EA  EF80  F030         	goto	l3342
  4099   0060EE                     u3650:
  4100   0060EE  5007               	movf	fputc@fp^0,w,c
  4101   0060F0  1008               	iorwf	(fputc@fp+1)^0,w,c
  4102   0060F2  A4D8               	btfss	status,2,c
  4103   0060F4  EF7E  F030         	goto	u3661
  4104   0060F8  EF80  F030         	goto	u3660
  4105   0060FC                     u3661:
  4106   0060FC  EF85  F030         	goto	l3344
  4107   006100                     u3660:
  4108   006100                     l3342:
  4109   006100  5005               	movf	fputc@c^0,w,c
  4110   006102  EC20  F034         	call	_putch
  4111   006106  EFCD  F030         	goto	l988
  4112   00610A                     l3344:
  4113   00610A  EE20 F009          	lfsr	2,9
  4114   00610E  5007               	movf	fputc@fp^0,w,c
  4115   006110  26D9               	addwf	fsr2l,f,c
  4116   006112  5008               	movf	(fputc@fp+1)^0,w,c
  4117   006114  22DA               	addwfc	fsr2h,f,c
  4118   006116  50DE               	movf	postinc2,w,c
  4119   006118  10DE               	iorwf	postinc2,w,c
  4120   00611A  B4D8               	btfsc	status,2,c
  4121   00611C  EF92  F030         	goto	u3671
  4122   006120  EF94  F030         	goto	u3670
  4123   006124                     u3671:
  4124   006124  EFAF  F030         	goto	l3348
  4125   006128                     u3670:
  4126   006128  EE20 F009          	lfsr	2,9
  4127   00612C  5007               	movf	fputc@fp^0,w,c
  4128   00612E  26D9               	addwf	fsr2l,f,c
  4129   006130  5008               	movf	(fputc@fp+1)^0,w,c
  4130   006132  22DA               	addwfc	fsr2h,f,c
  4131   006134  EE10 F002          	lfsr	1,2
  4132   006138  5007               	movf	fputc@fp^0,w,c
  4133   00613A  26E1               	addwf	fsr1l,f,c
  4134   00613C  5008               	movf	(fputc@fp+1)^0,w,c
  4135   00613E  22E2               	addwfc	fsr1h,f,c
  4136   006140  50DE               	movf	postinc2,w,c
  4137   006142  5CE6               	subwf	postinc1,w,c
  4138   006144  50E6               	movf	postinc1,w,c
  4139   006146  0A80               	xorlw	128
  4140   006148  6E0D               	movwf	(??_fputc+4)^0,c
  4141   00614A  50DE               	movf	postinc2,w,c
  4142   00614C  0A80               	xorlw	128
  4143   00614E  580D               	subwfb	(??_fputc+4)^0,w,c
  4144   006150  B0D8               	btfsc	status,0,c
  4145   006152  EFAD  F030         	goto	u3681
  4146   006156  EFAF  F030         	goto	u3680
  4147   00615A                     u3681:
  4148   00615A  EFCD  F030         	goto	l988
  4149   00615E                     u3680:
  4150   00615E                     l3348:
  4151   00615E  EE20 F002          	lfsr	2,2
  4152   006162  5007               	movf	fputc@fp^0,w,c
  4153   006164  26D9               	addwf	fsr2l,f,c
  4154   006166  5008               	movf	(fputc@fp+1)^0,w,c
  4155   006168  22DA               	addwfc	fsr2h,f,c
  4156   00616A  50DF               	movf	indf2,w,c
  4157   00616C  6E09               	movwf	??_fputc^0,c
  4158   00616E  0060  F01F  FFD9   	movff	fputc@fp,fsr2l
  4159   006174  0060  F023  FFDA   	movff	fputc@fp+1,fsr2h
  4160   00617A  50DF               	movf	indf2,w,c
  4161   00617C  2409               	addwf	??_fputc^0,w,c
  4162   00617E  6ED9               	movwf	fsr2l,c
  4163   006180  6ADA               	clrf	fsr2h,c
  4164   006182  0060  F017  FFDF   	movff	fputc@c,indf2
  4165   006188  EE20 F002          	lfsr	2,2
  4166   00618C  5007               	movf	fputc@fp^0,w,c
  4167   00618E  26D9               	addwf	fsr2l,f,c
  4168   006190  5008               	movf	(fputc@fp+1)^0,w,c
  4169   006192  22DA               	addwfc	fsr2h,f,c
  4170   006194  2ADE               	incf	postinc2,f,c
  4171   006196  0E00               	movlw	0
  4172   006198  22DD               	addwfc	postdec2,f,c
  4173   00619A                     l988:
  4174   00619A  0012               	return		;funcret
  4175   00619C                     __end_of_fputc:
  4176                           	callstack 0
  4177                           
  4178 ;; *************** function _putch *****************
  4179 ;; Defined at:
  4180 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  c               1    wreg     unsigned char 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  c               1    0[COMRAM] unsigned char 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      void 
  4187 ;; Registers used:
  4188 ;;		wreg
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4198 ;;Total ram usage:        0 bytes
  4199 ;; Hardware stack levels used: 1
  4200 ;; Hardware stack levels required when called: 1
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_fputc
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text11
  4209   006840                     __ptext11:
  4210                           	callstack 0
  4211   006840                     _putch:
  4212                           	callstack 25
  4213   006840  0012               	return		;funcret
  4214   006842                     __end_of_putch:
  4215                           	callstack 0
  4216                           
  4217 ;; *************** function _memcpy *****************
  4218 ;; Defined at:
  4219 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  d1              1    4[COMRAM] PTR void 
  4222 ;;		 -> dbuf(80), 
  4223 ;;  s1              1    5[COMRAM] PTR const void 
  4224 ;;		 -> dbuf(80), 
  4225 ;;  n               2    6[COMRAM] unsigned int 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  s               1   10[COMRAM] PTR const unsigned char 
  4228 ;;		 -> dbuf(80), 
  4229 ;;  d               1    9[COMRAM] PTR unsigned char 
  4230 ;;		 -> dbuf(80), 
  4231 ;;  tmp             1    8[COMRAM] unsigned char 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    4[COMRAM] PTR void 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4241 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4242 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4244 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4245 ;;Total ram usage:        7 bytes
  4246 ;; Hardware stack levels used: 1
  4247 ;; Hardware stack levels required when called: 1
  4248 ;; This function calls:
  4249 ;;		Nothing
  4250 ;; This function is called by:
  4251 ;;		_efgtoa
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text12
  4256   006630                     __ptext12:
  4257                           	callstack 0
  4258   006630                     _memcpy:
  4259                           	callstack 25
  4260   006630  C006  F00B         	movff	memcpy@s1,memcpy@s
  4261   006634  C005  F00A         	movff	memcpy@d1,memcpy@d
  4262   006638  EF2B  F033         	goto	l3996
  4263   00663C                     l3990:
  4264   00663C  500B               	movf	memcpy@s^0,w,c
  4265   00663E  6ED9               	movwf	fsr2l,c
  4266   006640  6ADA               	clrf	fsr2h,c
  4267   006642  50DF               	movf	indf2,w,c
  4268   006644  6E09               	movwf	memcpy@tmp^0,c
  4269   006646  2A0B               	incf	memcpy@s^0,f,c
  4270   006648  500A               	movf	memcpy@d^0,w,c
  4271   00664A  6ED9               	movwf	fsr2l,c
  4272   00664C  6ADA               	clrf	fsr2h,c
  4273   00664E  0060  F027  FFDF   	movff	memcpy@tmp,indf2
  4274   006654  2A0A               	incf	memcpy@d^0,f,c
  4275   006656                     l3996:
  4276   006656  0607               	decf	memcpy@n^0,f,c
  4277   006658  A0D8               	btfss	status,0,c
  4278   00665A  0608               	decf	(memcpy@n+1)^0,f,c
  4279   00665C  2807               	incf	memcpy@n^0,w,c
  4280   00665E  E106               	bnz	u4881
  4281   006660  2808               	incf	(memcpy@n+1)^0,w,c
  4282   006662  A4D8               	btfss	status,2,c
  4283   006664  EF36  F033         	goto	u4881
  4284   006668  EF38  F033         	goto	u4880
  4285   00666C                     u4881:
  4286   00666C  EF1E  F033         	goto	l3990
  4287   006670                     u4880:
  4288   006670  0012               	return		;funcret
  4289   006672                     __end_of_memcpy:
  4290                           	callstack 0
  4291                           
  4292 ;; *************** function _labs *****************
  4293 ;; Defined at:
  4294 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  a               4    4[COMRAM] long 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;		None
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  4    4[COMRAM] long 
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4308 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4310 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4311 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4312 ;;Total ram usage:        8 bytes
  4313 ;; Hardware stack levels used: 1
  4314 ;; Hardware stack levels required when called: 1
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		_efgtoa
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text13
  4323   0064B6                     __ptext13:
  4324                           	callstack 0
  4325   0064B6                     _labs:
  4326                           	callstack 25
  4327   0064B6  BE08               	btfsc	(labs@a+3)^0,7,c
  4328   0064B8  EF60  F032         	goto	u4771
  4329   0064BC  EF62  F032         	goto	u4770
  4330   0064C0                     u4771:
  4331   0064C0  EF6C  F032         	goto	l3956
  4332   0064C4                     u4770:
  4333   0064C4  C005  F005         	movff	labs@a,?_labs
  4334   0064C8  C006  F006         	movff	labs@a+1,?_labs+1
  4335   0064CC  C007  F007         	movff	labs@a+2,?_labs+2
  4336   0064D0  C008  F008         	movff	labs@a+3,?_labs+3
  4337   0064D4  EF85  F032         	goto	l970
  4338   0064D8                     l3956:
  4339   0064D8  C005  F009         	movff	labs@a,??_labs
  4340   0064DC  C006  F00A         	movff	labs@a+1,??_labs+1
  4341   0064E0  C007  F00B         	movff	labs@a+2,??_labs+2
  4342   0064E4  C008  F00C         	movff	labs@a+3,??_labs+3
  4343   0064E8  1E09               	comf	??_labs^0,f,c
  4344   0064EA  1E0A               	comf	(??_labs+1)^0,f,c
  4345   0064EC  1E0B               	comf	(??_labs+2)^0,f,c
  4346   0064EE  1E0C               	comf	(??_labs+3)^0,f,c
  4347   0064F0  2A09               	incf	??_labs^0,f,c
  4348   0064F2  0E00               	movlw	0
  4349   0064F4  220A               	addwfc	(??_labs+1)^0,f,c
  4350   0064F6  220B               	addwfc	(??_labs+2)^0,f,c
  4351   0064F8  220C               	addwfc	(??_labs+3)^0,f,c
  4352   0064FA  C009  F005         	movff	??_labs,?_labs
  4353   0064FE  C00A  F006         	movff	??_labs+1,?_labs+1
  4354   006502  C00B  F007         	movff	??_labs+2,?_labs+2
  4355   006506  C00C  F008         	movff	??_labs+3,?_labs+3
  4356   00650A                     l970:
  4357   00650A  0012               	return		;funcret
  4358   00650C                     __end_of_labs:
  4359                           	callstack 0
  4360                           
  4361 ;; *************** function _floorf *****************
  4362 ;; Defined at:
  4363 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;  x               4   29[COMRAM] float 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  u               4   45[COMRAM] struct .
  4368 ;;  m               4   39[COMRAM] unsigned long 
  4369 ;;  e               2   43[COMRAM] int 
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  4   29[COMRAM] float 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2, status,0
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4380 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4381 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4382 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4383 ;;Total ram usage:       20 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; Hardware stack levels required when called: 1
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_efgtoa
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text14
  4394   00591A                     __ptext14:
  4395                           	callstack 0
  4396   00591A                     _floorf:
  4397                           	callstack 25
  4398   00591A  C060  F02E         	movff	floorf@F521,floorf@u
  4399   00591E  C061  F02F         	movff	floorf@F521+1,floorf@u+1
  4400   005922  C062  F030         	movff	floorf@F521+2,floorf@u+2
  4401   005926  C063  F031         	movff	floorf@F521+3,floorf@u+3
  4402   00592A  C01E  F02E         	movff	floorf@x,floorf@u
  4403   00592E  C01F  F02F         	movff	floorf@x+1,floorf@u+1
  4404   005932  C020  F030         	movff	floorf@x+2,floorf@u+2
  4405   005936  C021  F031         	movff	floorf@x+3,floorf@u+3
  4406   00593A  0E81               	movlw	129
  4407   00593C  6E22               	movwf	??_floorf^0,c
  4408   00593E  0EFF               	movlw	255
  4409   005940  6E23               	movwf	(??_floorf+1)^0,c
  4410   005942  C02E  F024         	movff	floorf@u,??_floorf+2
  4411   005946  C02F  F025         	movff	floorf@u+1,??_floorf+3
  4412   00594A  C030  F026         	movff	floorf@u+2,??_floorf+4
  4413   00594E  C031  F027         	movff	floorf@u+3,??_floorf+5
  4414   005952  0E18               	movlw	24
  4415   005954  EFB1  F02C         	goto	u4780
  4416   005958                     u4785:
  4417   005958  90D8               	bcf	status,0,c
  4418   00595A  3227               	rrcf	(??_floorf+5)^0,f,c
  4419   00595C  3226               	rrcf	(??_floorf+4)^0,f,c
  4420   00595E  3225               	rrcf	(??_floorf+3)^0,f,c
  4421   005960  3224               	rrcf	(??_floorf+2)^0,f,c
  4422   005962                     u4780:
  4423   005962  2EE8               	decfsz	wreg,f,c
  4424   005964  EFAC  F02C         	goto	u4785
  4425   005968  5024               	movf	(??_floorf+2)^0,w,c
  4426   00596A  2422               	addwf	??_floorf^0,w,c
  4427   00596C  6E2C               	movwf	floorf@e^0,c
  4428   00596E  0E00               	movlw	0
  4429   005970  2023               	addwfc	(??_floorf+1)^0,w,c
  4430   005972  6E2D               	movwf	(floorf@e+1)^0,c
  4431   005974  BE2D               	btfsc	(floorf@e+1)^0,7,c
  4432   005976  EFC6  F02C         	goto	u4791
  4433   00597A  502D               	movf	(floorf@e+1)^0,w,c
  4434   00597C  E109               	bnz	u4790
  4435   00597E  0E17               	movlw	23
  4436   005980  5C2C               	subwf	floorf@e^0,w,c
  4437   005982  A0D8               	btfss	status,0,c
  4438   005984  EFC6  F02C         	goto	u4791
  4439   005988  EFC8  F02C         	goto	u4790
  4440   00598C                     u4791:
  4441   00598C  EFD2  F02C         	goto	l3966
  4442   005990                     u4790:
  4443   005990                     l3964:
  4444   005990  C01E  F01E         	movff	floorf@x,?_floorf
  4445   005994  C01F  F01F         	movff	floorf@x+1,?_floorf+1
  4446   005998  C020  F020         	movff	floorf@x+2,?_floorf+2
  4447   00599C  C021  F021         	movff	floorf@x+3,?_floorf+3
  4448   0059A0  EF95  F02D         	goto	l956
  4449   0059A4                     l3966:
  4450   0059A4  BE2D               	btfsc	(floorf@e+1)^0,7,c
  4451   0059A6  EFD7  F02C         	goto	u4801
  4452   0059AA  EFD9  F02C         	goto	u4800
  4453   0059AE                     u4801:
  4454   0059AE  EF49  F02D         	goto	l3976
  4455   0059B2                     u4800:
  4456   0059B2  C02C  F022         	movff	floorf@e,??_floorf
  4457   0059B6  0EFF               	movlw	255
  4458   0059B8  6E23               	movwf	(??_floorf+1)^0,c
  4459   0059BA  0EFF               	movlw	255
  4460   0059BC  6E24               	movwf	(??_floorf+2)^0,c
  4461   0059BE  0E7F               	movlw	127
  4462   0059C0  6E25               	movwf	(??_floorf+3)^0,c
  4463   0059C2  0E00               	movlw	0
  4464   0059C4  6E26               	movwf	(??_floorf+4)^0,c
  4465   0059C6                     u4815:
  4466   0059C6  6622               	tstfsz	??_floorf^0,c
  4467   0059C8  EFE8  F02C         	goto	u4816
  4468   0059CC  EFF0  F02C         	goto	u4817
  4469   0059D0                     u4816:
  4470   0059D0  3426               	rlcf	(??_floorf+4)^0,w,c
  4471   0059D2  3226               	rrcf	(??_floorf+4)^0,f,c
  4472   0059D4  3225               	rrcf	(??_floorf+3)^0,f,c
  4473   0059D6  3224               	rrcf	(??_floorf+2)^0,f,c
  4474   0059D8  3223               	rrcf	(??_floorf+1)^0,f,c
  4475   0059DA  2E22               	decfsz	??_floorf^0,f,c
  4476   0059DC  EFE3  F02C         	goto	u4815
  4477   0059E0                     u4817:
  4478   0059E0  C023  F028         	movff	??_floorf+1,floorf@m
  4479   0059E4  C024  F029         	movff	??_floorf+2,floorf@m+1
  4480   0059E8  C025  F02A         	movff	??_floorf+3,floorf@m+2
  4481   0059EC  C026  F02B         	movff	??_floorf+4,floorf@m+3
  4482   0059F0  5028               	movf	floorf@m^0,w,c
  4483   0059F2  142E               	andwf	floorf@u^0,w,c
  4484   0059F4  6E22               	movwf	??_floorf^0,c
  4485   0059F6  5029               	movf	(floorf@m+1)^0,w,c
  4486   0059F8  142F               	andwf	(floorf@u+1)^0,w,c
  4487   0059FA  6E23               	movwf	(??_floorf+1)^0,c
  4488   0059FC  502A               	movf	(floorf@m+2)^0,w,c
  4489   0059FE  1430               	andwf	(floorf@u+2)^0,w,c
  4490   005A00  6E24               	movwf	(??_floorf+2)^0,c
  4491   005A02  502B               	movf	(floorf@m+3)^0,w,c
  4492   005A04  1431               	andwf	(floorf@u+3)^0,w,c
  4493   005A06  6E25               	movwf	(??_floorf+3)^0,c
  4494   005A08  5022               	movf	??_floorf^0,w,c
  4495   005A0A  1023               	iorwf	(??_floorf+1)^0,w,c
  4496   005A0C  1024               	iorwf	(??_floorf+2)^0,w,c
  4497   005A0E  1025               	iorwf	(??_floorf+3)^0,w,c
  4498   005A10  A4D8               	btfss	status,2,c
  4499   005A12  EF0D  F02D         	goto	u4821
  4500   005A16  EF0F  F02D         	goto	u4820
  4501   005A1A                     u4821:
  4502   005A1A  EF11  F02D         	goto	l3972
  4503   005A1E                     u4820:
  4504   005A1E  EFC8  F02C         	goto	l3964
  4505   005A22                     l3972:
  4506   005A22  C02E  F022         	movff	floorf@u,??_floorf
  4507   005A26  C02F  F023         	movff	floorf@u+1,??_floorf+1
  4508   005A2A  C030  F024         	movff	floorf@u+2,??_floorf+2
  4509   005A2E  C031  F025         	movff	floorf@u+3,??_floorf+3
  4510   005A32  0E20               	movlw	32
  4511   005A34  EF21  F02D         	goto	u4830
  4512   005A38                     u4835:
  4513   005A38  90D8               	bcf	status,0,c
  4514   005A3A  3225               	rrcf	(??_floorf+3)^0,f,c
  4515   005A3C  3224               	rrcf	(??_floorf+2)^0,f,c
  4516   005A3E  3223               	rrcf	(??_floorf+1)^0,f,c
  4517   005A40  3222               	rrcf	??_floorf^0,f,c
  4518   005A42                     u4830:
  4519   005A42  2EE8               	decfsz	wreg,f,c
  4520   005A44  EF1C  F02D         	goto	u4835
  4521   005A48  5022               	movf	??_floorf^0,w,c
  4522   005A4A  1023               	iorwf	(??_floorf+1)^0,w,c
  4523   005A4C  1024               	iorwf	(??_floorf+2)^0,w,c
  4524   005A4E  1025               	iorwf	(??_floorf+3)^0,w,c
  4525   005A50  B4D8               	btfsc	status,2,c
  4526   005A52  EF2D  F02D         	goto	u4841
  4527   005A56  EF2F  F02D         	goto	u4840
  4528   005A5A                     u4841:
  4529   005A5A  EF37  F02D         	goto	l959
  4530   005A5E                     u4840:
  4531   005A5E  5028               	movf	floorf@m^0,w,c
  4532   005A60  262E               	addwf	floorf@u^0,f,c
  4533   005A62  5029               	movf	(floorf@m+1)^0,w,c
  4534   005A64  222F               	addwfc	(floorf@u+1)^0,f,c
  4535   005A66  502A               	movf	(floorf@m+2)^0,w,c
  4536   005A68  2230               	addwfc	(floorf@u+2)^0,f,c
  4537   005A6A  502B               	movf	(floorf@m+3)^0,w,c
  4538   005A6C  2231               	addwfc	(floorf@u+3)^0,f,c
  4539   005A6E                     l959:
  4540   005A6E  1C28               	comf	floorf@m^0,w,c
  4541   005A70  6E22               	movwf	??_floorf^0,c
  4542   005A72  1C29               	comf	(floorf@m+1)^0,w,c
  4543   005A74  6E23               	movwf	(??_floorf+1)^0,c
  4544   005A76  1C2A               	comf	(floorf@m+2)^0,w,c
  4545   005A78  6E24               	movwf	(??_floorf+2)^0,c
  4546   005A7A  1C2B               	comf	(floorf@m+3)^0,w,c
  4547   005A7C  6E25               	movwf	(??_floorf+3)^0,c
  4548   005A7E  5022               	movf	??_floorf^0,w,c
  4549   005A80  162E               	andwf	floorf@u^0,f,c
  4550   005A82  5023               	movf	(??_floorf+1)^0,w,c
  4551   005A84  162F               	andwf	(floorf@u+1)^0,f,c
  4552   005A86  5024               	movf	(??_floorf+2)^0,w,c
  4553   005A88  1630               	andwf	(floorf@u+2)^0,f,c
  4554   005A8A  5025               	movf	(??_floorf+3)^0,w,c
  4555   005A8C  1631               	andwf	(floorf@u+3)^0,f,c
  4556   005A8E  EF8D  F02D         	goto	l3984
  4557   005A92                     l3976:
  4558   005A92  C02E  F022         	movff	floorf@u,??_floorf
  4559   005A96  C02F  F023         	movff	floorf@u+1,??_floorf+1
  4560   005A9A  C030  F024         	movff	floorf@u+2,??_floorf+2
  4561   005A9E  C031  F025         	movff	floorf@u+3,??_floorf+3
  4562   005AA2  0E20               	movlw	32
  4563   005AA4  EF59  F02D         	goto	u4850
  4564   005AA8                     u4855:
  4565   005AA8  90D8               	bcf	status,0,c
  4566   005AAA  3225               	rrcf	(??_floorf+3)^0,f,c
  4567   005AAC  3224               	rrcf	(??_floorf+2)^0,f,c
  4568   005AAE  3223               	rrcf	(??_floorf+1)^0,f,c
  4569   005AB0  3222               	rrcf	??_floorf^0,f,c
  4570   005AB2                     u4850:
  4571   005AB2  2EE8               	decfsz	wreg,f,c
  4572   005AB4  EF54  F02D         	goto	u4855
  4573   005AB8  5022               	movf	??_floorf^0,w,c
  4574   005ABA  1023               	iorwf	(??_floorf+1)^0,w,c
  4575   005ABC  1024               	iorwf	(??_floorf+2)^0,w,c
  4576   005ABE  1025               	iorwf	(??_floorf+3)^0,w,c
  4577   005AC0  A4D8               	btfss	status,2,c
  4578   005AC2  EF65  F02D         	goto	u4861
  4579   005AC6  EF67  F02D         	goto	u4860
  4580   005ACA                     u4861:
  4581   005ACA  EF71  F02D         	goto	l3980
  4582   005ACE                     u4860:
  4583   005ACE  0E00               	movlw	0
  4584   005AD0  6E2E               	movwf	floorf@u^0,c
  4585   005AD2  0E00               	movlw	0
  4586   005AD4  6E2F               	movwf	(floorf@u+1)^0,c
  4587   005AD6  0E00               	movlw	0
  4588   005AD8  6E30               	movwf	(floorf@u+2)^0,c
  4589   005ADA  0E00               	movlw	0
  4590   005ADC  6E31               	movwf	(floorf@u+3)^0,c
  4591   005ADE  EF8D  F02D         	goto	l3984
  4592   005AE2                     l3980:
  4593   005AE2  90D8               	bcf	status,0,c
  4594   005AE4  342E               	rlcf	floorf@u^0,w,c
  4595   005AE6  6E22               	movwf	??_floorf^0,c
  4596   005AE8  342F               	rlcf	(floorf@u+1)^0,w,c
  4597   005AEA  6E23               	movwf	(??_floorf+1)^0,c
  4598   005AEC  3430               	rlcf	(floorf@u+2)^0,w,c
  4599   005AEE  6E24               	movwf	(??_floorf+2)^0,c
  4600   005AF0  3431               	rlcf	(floorf@u+3)^0,w,c
  4601   005AF2  6E25               	movwf	(??_floorf+3)^0,c
  4602   005AF4  5022               	movf	??_floorf^0,w,c
  4603   005AF6  1023               	iorwf	(??_floorf+1)^0,w,c
  4604   005AF8  1024               	iorwf	(??_floorf+2)^0,w,c
  4605   005AFA  1025               	iorwf	(??_floorf+3)^0,w,c
  4606   005AFC  B4D8               	btfsc	status,2,c
  4607   005AFE  EF83  F02D         	goto	u4871
  4608   005B02  EF85  F02D         	goto	u4870
  4609   005B06                     u4871:
  4610   005B06  EF8D  F02D         	goto	l3984
  4611   005B0A                     u4870:
  4612   005B0A  0E00               	movlw	0
  4613   005B0C  6E2E               	movwf	floorf@u^0,c
  4614   005B0E  0E00               	movlw	0
  4615   005B10  6E2F               	movwf	(floorf@u+1)^0,c
  4616   005B12  0E80               	movlw	128
  4617   005B14  6E30               	movwf	(floorf@u+2)^0,c
  4618   005B16  0EBF               	movlw	191
  4619   005B18  6E31               	movwf	(floorf@u+3)^0,c
  4620   005B1A                     l3984:
  4621   005B1A  C02E  F01E         	movff	floorf@u,?_floorf
  4622   005B1E  C02F  F01F         	movff	floorf@u+1,?_floorf+1
  4623   005B22  C030  F020         	movff	floorf@u+2,?_floorf+2
  4624   005B26  C031  F021         	movff	floorf@u+3,?_floorf+3
  4625   005B2A                     l956:
  4626   005B2A  0012               	return		;funcret
  4627   005B2C                     __end_of_floorf:
  4628                           	callstack 0
  4629                           
  4630 ;; *************** function ___fpclassifyf *****************
  4631 ;; Defined at:
  4632 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  x               4    4[COMRAM] float 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  u               4   14[COMRAM] struct .
  4637 ;;  e               2   12[COMRAM] int 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  2    4[COMRAM] int 
  4640 ;; Registers used:
  4641 ;;		wreg, status,2, status,0
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4647 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4648 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4649 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4650 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4651 ;;Total ram usage:       14 bytes
  4652 ;; Hardware stack levels used: 1
  4653 ;; Hardware stack levels required when called: 1
  4654 ;; This function calls:
  4655 ;;		Nothing
  4656 ;; This function is called by:
  4657 ;;		_efgtoa
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text15
  4662   005EEA                     __ptext15:
  4663                           	callstack 0
  4664   005EEA                     ___fpclassifyf:
  4665                           	callstack 25
  4666   005EEA  C04A  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4667   005EEE  C04B  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4668   005EF2  C04C  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4669   005EF6  C04D  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4670   005EFA  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  4671   005EFE  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4672   005F02  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4673   005F06  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4674   005F0A  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4675   005F0E  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4676   005F12  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4677   005F16  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4678   005F1A  0E18               	movlw	24
  4679   005F1C  EF95  F02F         	goto	u4690
  4680   005F20                     u4695:
  4681   005F20  90D8               	bcf	status,0,c
  4682   005F22  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  4683   005F24  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  4684   005F26  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  4685   005F28  3209               	rrcf	??___fpclassifyf^0,f,c
  4686   005F2A                     u4690:
  4687   005F2A  2EE8               	decfsz	wreg,f,c
  4688   005F2C  EF90  F02F         	goto	u4695
  4689   005F30  5009               	movf	??___fpclassifyf^0,w,c
  4690   005F32  6E0D               	movwf	___fpclassifyf@e^0,c
  4691   005F34  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  4692   005F36  500D               	movf	___fpclassifyf@e^0,w,c
  4693   005F38  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4694   005F3A  A4D8               	btfss	status,2,c
  4695   005F3C  EFA2  F02F         	goto	u4701
  4696   005F40  EFA4  F02F         	goto	u4700
  4697   005F44                     u4701:
  4698   005F44  EFC4  F02F         	goto	l3938
  4699   005F48                     u4700:
  4700   005F48  90D8               	bcf	status,0,c
  4701   005F4A  340F               	rlcf	___fpclassifyf@u^0,w,c
  4702   005F4C  6E09               	movwf	??___fpclassifyf^0,c
  4703   005F4E  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4704   005F50  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  4705   005F52  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4706   005F54  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  4707   005F56  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4708   005F58  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  4709   005F5A  5009               	movf	??___fpclassifyf^0,w,c
  4710   005F5C  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4711   005F5E  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4712   005F60  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4713   005F62  A4D8               	btfss	status,2,c
  4714   005F64  EFB6  F02F         	goto	u4711
  4715   005F68  EFB8  F02F         	goto	u4710
  4716   005F6C                     u4711:
  4717   005F6C  EFBE  F02F         	goto	l3934
  4718   005F70                     u4710:
  4719   005F70  0E00               	movlw	0
  4720   005F72  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4721   005F74  0E02               	movlw	2
  4722   005F76  6E05               	movwf	?___fpclassifyf^0,c
  4723   005F78  EFF3  F02F         	goto	l949
  4724   005F7C                     l3934:
  4725   005F7C  0E00               	movlw	0
  4726   005F7E  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4727   005F80  0E03               	movlw	3
  4728   005F82  6E05               	movwf	?___fpclassifyf^0,c
  4729   005F84  EFF3  F02F         	goto	l949
  4730   005F88                     l3938:
  4731   005F88  280D               	incf	___fpclassifyf@e^0,w,c
  4732   005F8A  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4733   005F8C  A4D8               	btfss	status,2,c
  4734   005F8E  EFCB  F02F         	goto	u4721
  4735   005F92  EFCD  F02F         	goto	u4720
  4736   005F96                     u4721:
  4737   005F96  EFEF  F02F         	goto	l3944
  4738   005F9A                     u4720:
  4739   005F9A  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4740   005F9E  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4741   005FA2  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4742   005FA6  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4743   005FAA  0E09               	movlw	9
  4744   005FAC                     u4735:
  4745   005FAC  90D8               	bcf	status,0,c
  4746   005FAE  3609               	rlcf	??___fpclassifyf^0,f,c
  4747   005FB0  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  4748   005FB2  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  4749   005FB4  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  4750   005FB6  2EE8               	decfsz	wreg,f,c
  4751   005FB8  EFD6  F02F         	goto	u4735
  4752   005FBC  5009               	movf	??___fpclassifyf^0,w,c
  4753   005FBE  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4754   005FC0  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4755   005FC2  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4756   005FC4  B4D8               	btfsc	status,2,c
  4757   005FC6  EFE7  F02F         	goto	u4741
  4758   005FCA  EFEA  F02F         	goto	u4740
  4759   005FCE                     u4741:
  4760   005FCE  0E01               	movlw	1
  4761   005FD0  EFEB  F02F         	goto	u4750
  4762   005FD4                     u4740:
  4763   005FD4  0E00               	movlw	0
  4764   005FD6                     u4750:
  4765   005FD6  6E05               	movwf	?___fpclassifyf^0,c
  4766   005FD8  6A06               	clrf	(?___fpclassifyf+1)^0,c
  4767   005FDA  EFF3  F02F         	goto	l949
  4768   005FDE                     l3944:
  4769   005FDE  0E00               	movlw	0
  4770   005FE0  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4771   005FE2  0E04               	movlw	4
  4772   005FE4  6E05               	movwf	?___fpclassifyf^0,c
  4773   005FE6                     l949:
  4774   005FE6  0012               	return		;funcret
  4775   005FE8                     __end_of___fpclassifyf:
  4776                           	callstack 0
  4777                           
  4778 ;; *************** function ___fltol *****************
  4779 ;; Defined at:
  4780 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;  f1              4    4[COMRAM] int 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  exp1            1   13[COMRAM] unsigned char 
  4785 ;;  sign1           1   12[COMRAM] unsigned char 
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  4    4[COMRAM] long 
  4788 ;; Registers used:
  4789 ;;		wreg, status,2, status,0
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4795 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4796 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4797 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4798 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4799 ;;Total ram usage:       10 bytes
  4800 ;; Hardware stack levels used: 1
  4801 ;; Hardware stack levels required when called: 1
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_efgtoa
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text16
  4810   005CE0                     __ptext16:
  4811                           	callstack 0
  4812   005CE0                     ___fltol:
  4813                           	callstack 25
  4814   005CE0  3407               	rlcf	(___fltol@f1+2)^0,w,c
  4815   005CE2  3408               	rlcf	(___fltol@f1+3)^0,w,c
  4816   005CE4  6E0E               	movwf	___fltol@exp1^0,c
  4817   005CE6  500E               	movf	___fltol@exp1^0,w,c
  4818   005CE8  A4D8               	btfss	status,2,c
  4819   005CEA  EF79  F02E         	goto	u4601
  4820   005CEE  EF7B  F02E         	goto	u4600
  4821   005CF2                     u4601:
  4822   005CF2  EF85  F02E         	goto	l3876
  4823   005CF6                     u4600:
  4824   005CF6                     l3872:
  4825   005CF6  0E00               	movlw	0
  4826   005CF8  6E05               	movwf	?___fltol^0,c
  4827   005CFA  0E00               	movlw	0
  4828   005CFC  6E06               	movwf	(?___fltol+1)^0,c
  4829   005CFE  0E00               	movlw	0
  4830   005D00  6E07               	movwf	(?___fltol+2)^0,c
  4831   005D02  0E00               	movlw	0
  4832   005D04  6E08               	movwf	(?___fltol+3)^0,c
  4833   005D06  EFF2  F02E         	goto	l440
  4834   005D0A                     l3876:
  4835   005D0A  C005  F009         	movff	___fltol@f1,??___fltol
  4836   005D0E  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  4837   005D12  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  4838   005D16  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  4839   005D1A  0E20               	movlw	32
  4840   005D1C  EF95  F02E         	goto	u4610
  4841   005D20                     u4615:
  4842   005D20  90D8               	bcf	status,0,c
  4843   005D22  320C               	rrcf	(??___fltol+3)^0,f,c
  4844   005D24  320B               	rrcf	(??___fltol+2)^0,f,c
  4845   005D26  320A               	rrcf	(??___fltol+1)^0,f,c
  4846   005D28  3209               	rrcf	??___fltol^0,f,c
  4847   005D2A                     u4610:
  4848   005D2A  2EE8               	decfsz	wreg,f,c
  4849   005D2C  EF90  F02E         	goto	u4615
  4850   005D30  5009               	movf	??___fltol^0,w,c
  4851   005D32  6E0D               	movwf	___fltol@sign1^0,c
  4852   005D34  8E07               	bsf	(___fltol@f1+2)^0,7,c
  4853   005D36  0EFF               	movlw	255
  4854   005D38  1605               	andwf	___fltol@f1^0,f,c
  4855   005D3A  0EFF               	movlw	255
  4856   005D3C  1606               	andwf	(___fltol@f1+1)^0,f,c
  4857   005D3E  0EFF               	movlw	255
  4858   005D40  1607               	andwf	(___fltol@f1+2)^0,f,c
  4859   005D42  0E00               	movlw	0
  4860   005D44  1608               	andwf	(___fltol@f1+3)^0,f,c
  4861   005D46  0E96               	movlw	150
  4862   005D48  5E0E               	subwf	___fltol@exp1^0,f,c
  4863   005D4A  BE0E               	btfsc	___fltol@exp1^0,7,c
  4864   005D4C  EFAC  F02E         	goto	u4620
  4865   005D50  EFAA  F02E         	goto	u4621
  4866   005D54                     u4621:
  4867   005D54  EFC2  F02E         	goto	l3896
  4868   005D58                     u4620:
  4869   005D58  500E               	movf	___fltol@exp1^0,w,c
  4870   005D5A  0A80               	xorlw	128
  4871   005D5C  0F97               	addlw	151
  4872   005D5E  B0D8               	btfsc	status,0,c
  4873   005D60  EFB4  F02E         	goto	u4631
  4874   005D64  EFB6  F02E         	goto	u4630
  4875   005D68                     u4631:
  4876   005D68  EFB8  F02E         	goto	l3892
  4877   005D6C                     u4630:
  4878   005D6C  EF7B  F02E         	goto	l3872
  4879   005D70                     l3892:
  4880   005D70  90D8               	bcf	status,0,c
  4881   005D72  3208               	rrcf	(___fltol@f1+3)^0,f,c
  4882   005D74  3207               	rrcf	(___fltol@f1+2)^0,f,c
  4883   005D76  3206               	rrcf	(___fltol@f1+1)^0,f,c
  4884   005D78  3205               	rrcf	___fltol@f1^0,f,c
  4885   005D7A  3E0E               	incfsz	___fltol@exp1^0,f,c
  4886   005D7C  EFB8  F02E         	goto	l3892
  4887   005D80  EFDA  F02E         	goto	l3906
  4888   005D84                     l3896:
  4889   005D84  0E1F               	movlw	31
  4890   005D86  640E               	cpfsgt	___fltol@exp1^0,c
  4891   005D88  EFC8  F02E         	goto	u4641
  4892   005D8C  EFCA  F02E         	goto	u4640
  4893   005D90                     u4641:
  4894   005D90  EFD2  F02E         	goto	l3904
  4895   005D94                     u4640:
  4896   005D94  EF7B  F02E         	goto	l3872
  4897   005D98                     l3902:
  4898   005D98  90D8               	bcf	status,0,c
  4899   005D9A  3605               	rlcf	___fltol@f1^0,f,c
  4900   005D9C  3606               	rlcf	(___fltol@f1+1)^0,f,c
  4901   005D9E  3607               	rlcf	(___fltol@f1+2)^0,f,c
  4902   005DA0  3608               	rlcf	(___fltol@f1+3)^0,f,c
  4903   005DA2  060E               	decf	___fltol@exp1^0,f,c
  4904   005DA4                     l3904:
  4905   005DA4  500E               	movf	___fltol@exp1^0,w,c
  4906   005DA6  A4D8               	btfss	status,2,c
  4907   005DA8  EFD8  F02E         	goto	u4651
  4908   005DAC  EFDA  F02E         	goto	u4650
  4909   005DB0                     u4651:
  4910   005DB0  EFCC  F02E         	goto	l3902
  4911   005DB4                     u4650:
  4912   005DB4                     l3906:
  4913   005DB4  500D               	movf	___fltol@sign1^0,w,c
  4914   005DB6  B4D8               	btfsc	status,2,c
  4915   005DB8  EFE0  F02E         	goto	u4661
  4916   005DBC  EFE2  F02E         	goto	u4660
  4917   005DC0                     u4661:
  4918   005DC0  EFEA  F02E         	goto	l3910
  4919   005DC4                     u4660:
  4920   005DC4  1E08               	comf	(___fltol@f1+3)^0,f,c
  4921   005DC6  1E07               	comf	(___fltol@f1+2)^0,f,c
  4922   005DC8  1E06               	comf	(___fltol@f1+1)^0,f,c
  4923   005DCA  6C05               	negf	___fltol@f1^0,c
  4924   005DCC  0E00               	movlw	0
  4925   005DCE  2206               	addwfc	(___fltol@f1+1)^0,f,c
  4926   005DD0  2207               	addwfc	(___fltol@f1+2)^0,f,c
  4927   005DD2  2208               	addwfc	(___fltol@f1+3)^0,f,c
  4928   005DD4                     l3910:
  4929   005DD4  C005  F005         	movff	___fltol@f1,?___fltol
  4930   005DD8  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  4931   005DDC  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  4932   005DE0  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  4933   005DE4                     l440:
  4934   005DE4  0012               	return		;funcret
  4935   005DE6                     __end_of___fltol:
  4936                           	callstack 0
  4937                           
  4938 ;; *************** function ___flsub *****************
  4939 ;; Defined at:
  4940 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  b               4   43[COMRAM] long 
  4943 ;;  a               4   47[COMRAM] long 
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;		None
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  4   43[COMRAM] long 
  4948 ;; Registers used:
  4949 ;;		wreg, status,2, status,0, cstack
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4955 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4958 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4959 ;;Total ram usage:        8 bytes
  4960 ;; Hardware stack levels used: 1
  4961 ;; Hardware stack levels required when called: 2
  4962 ;; This function calls:
  4963 ;;		___fladd
  4964 ;; This function is called by:
  4965 ;;		_efgtoa
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           	psect	text17
  4970   0065A6                     __ptext17:
  4971                           	callstack 0
  4972   0065A6                     ___flsub:
  4973                           	callstack 24
  4974   0065A6  0E00               	movlw	0
  4975   0065A8  1A30               	xorwf	___flsub@a^0,f,c
  4976   0065AA  0E00               	movlw	0
  4977   0065AC  1A31               	xorwf	(___flsub@a+1)^0,f,c
  4978   0065AE  0E00               	movlw	0
  4979   0065B0  1A32               	xorwf	(___flsub@a+2)^0,f,c
  4980   0065B2  0E80               	movlw	128
  4981   0065B4  1A33               	xorwf	(___flsub@a+3)^0,f,c
  4982   0065B6  C02C  F005         	movff	___flsub@b,___fladd@b
  4983   0065BA  C02D  F006         	movff	___flsub@b+1,___fladd@b+1
  4984   0065BE  C02E  F007         	movff	___flsub@b+2,___fladd@b+2
  4985   0065C2  C02F  F008         	movff	___flsub@b+3,___fladd@b+3
  4986   0065C6  C030  F009         	movff	___flsub@a,___fladd@a
  4987   0065CA  C031  F00A         	movff	___flsub@a+1,___fladd@a+1
  4988   0065CE  C032  F00B         	movff	___flsub@a+2,___fladd@a+2
  4989   0065D2  C033  F00C         	movff	___flsub@a+3,___fladd@a+3
  4990   0065D6  EC2F  F025         	call	___fladd	;wreg free
  4991   0065DA  C005  F02C         	movff	?___fladd,?___flsub
  4992   0065DE  C006  F02D         	movff	?___fladd+1,?___flsub+1
  4993   0065E2  C007  F02E         	movff	?___fladd+2,?___flsub+2
  4994   0065E6  C008  F02F         	movff	?___fladd+3,?___flsub+3
  4995   0065EA  0012               	return		;funcret
  4996   0065EC                     __end_of___flsub:
  4997                           	callstack 0
  4998                           
  4999 ;; *************** function ___fladd *****************
  5000 ;; Defined at:
  5001 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  b               4    4[COMRAM] long 
  5004 ;;  a               4    8[COMRAM] long 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;  grs             1   19[COMRAM] unsigned char 
  5007 ;;  bexp            1   18[COMRAM] unsigned char 
  5008 ;;  aexp            1   17[COMRAM] unsigned char 
  5009 ;;  signs           1   16[COMRAM] unsigned char 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  4    4[COMRAM] unsigned char 
  5012 ;; Registers used:
  5013 ;;		wreg, status,2, status,0
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5019 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5020 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5021 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5022 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5023 ;;Total ram usage:       16 bytes
  5024 ;; Hardware stack levels used: 1
  5025 ;; Hardware stack levels required when called: 1
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		___flsub
  5030 ;;		_efgtoa
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text18
  5035   004A5E                     __ptext18:
  5036                           	callstack 0
  5037   004A5E                     ___fladd:
  5038                           	callstack 24
  5039   004A5E  5008               	movf	(___fladd@b+3)^0,w,c
  5040   004A60  0B80               	andlw	128
  5041   004A62  6E11               	movwf	___fladd@signs^0,c
  5042   004A64  5008               	movf	(___fladd@b+3)^0,w,c
  5043   004A66  2408               	addwf	(___fladd@b+3)^0,w,c
  5044   004A68  6E13               	movwf	___fladd@bexp^0,c
  5045   004A6A  AE07               	btfss	(___fladd@b+2)^0,7,c
  5046   004A6C  EF3A  F025         	goto	u3691
  5047   004A70  EF3C  F025         	goto	u3690
  5048   004A74                     u3691:
  5049   004A74  EF3D  F025         	goto	l3358
  5050   004A78                     u3690:
  5051   004A78  8013               	bsf	___fladd@bexp^0,0,c
  5052   004A7A                     l3358:
  5053   004A7A  5013               	movf	___fladd@bexp^0,w,c
  5054   004A7C  B4D8               	btfsc	status,2,c
  5055   004A7E  EF43  F025         	goto	u3701
  5056   004A82  EF45  F025         	goto	u3700
  5057   004A86                     u3701:
  5058   004A86  EF59  F025         	goto	l3368
  5059   004A8A                     u3700:
  5060   004A8A  2813               	incf	___fladd@bexp^0,w,c
  5061   004A8C  A4D8               	btfss	status,2,c
  5062   004A8E  EF4B  F025         	goto	u3711
  5063   004A92  EF4D  F025         	goto	u3710
  5064   004A96                     u3711:
  5065   004A96  EF55  F025         	goto	l3364
  5066   004A9A                     u3710:
  5067   004A9A  0E00               	movlw	0
  5068   004A9C  6E05               	movwf	___fladd@b^0,c
  5069   004A9E  0E00               	movlw	0
  5070   004AA0  6E06               	movwf	(___fladd@b+1)^0,c
  5071   004AA2  0E00               	movlw	0
  5072   004AA4  6E07               	movwf	(___fladd@b+2)^0,c
  5073   004AA6  0E00               	movlw	0
  5074   004AA8  6E08               	movwf	(___fladd@b+3)^0,c
  5075   004AAA                     l3364:
  5076   004AAA  8E07               	bsf	(___fladd@b+2)^0,7,c
  5077   004AAC  6A08               	clrf	(___fladd@b+3)^0,c
  5078   004AAE  EF61  F025         	goto	l3370
  5079   004AB2                     l3368:
  5080   004AB2  0E00               	movlw	0
  5081   004AB4  6E05               	movwf	___fladd@b^0,c
  5082   004AB6  0E00               	movlw	0
  5083   004AB8  6E06               	movwf	(___fladd@b+1)^0,c
  5084   004ABA  0E00               	movlw	0
  5085   004ABC  6E07               	movwf	(___fladd@b+2)^0,c
  5086   004ABE  0E00               	movlw	0
  5087   004AC0  6E08               	movwf	(___fladd@b+3)^0,c
  5088   004AC2                     l3370:
  5089   004AC2  500C               	movf	(___fladd@a+3)^0,w,c
  5090   004AC4  0B80               	andlw	128
  5091   004AC6  6E12               	movwf	___fladd@aexp^0,c
  5092   004AC8  5011               	movf	___fladd@signs^0,w,c
  5093   004ACA  1812               	xorwf	___fladd@aexp^0,w,c
  5094   004ACC  B4D8               	btfsc	status,2,c
  5095   004ACE  EF6B  F025         	goto	u3721
  5096   004AD2  EF6D  F025         	goto	u3720
  5097   004AD6                     u3721:
  5098   004AD6  EF6E  F025         	goto	l3376
  5099   004ADA                     u3720:
  5100   004ADA  8C11               	bsf	___fladd@signs^0,6,c
  5101   004ADC                     l3376:
  5102   004ADC  500C               	movf	(___fladd@a+3)^0,w,c
  5103   004ADE  240C               	addwf	(___fladd@a+3)^0,w,c
  5104   004AE0  6E12               	movwf	___fladd@aexp^0,c
  5105   004AE2  AE0B               	btfss	(___fladd@a+2)^0,7,c
  5106   004AE4  EF76  F025         	goto	u3731
  5107   004AE8  EF78  F025         	goto	u3730
  5108   004AEC                     u3731:
  5109   004AEC  EF79  F025         	goto	l3382
  5110   004AF0                     u3730:
  5111   004AF0  8012               	bsf	___fladd@aexp^0,0,c
  5112   004AF2                     l3382:
  5113   004AF2  5012               	movf	___fladd@aexp^0,w,c
  5114   004AF4  B4D8               	btfsc	status,2,c
  5115   004AF6  EF7F  F025         	goto	u3741
  5116   004AFA  EF81  F025         	goto	u3740
  5117   004AFE                     u3741:
  5118   004AFE  EF95  F025         	goto	l3392
  5119   004B02                     u3740:
  5120   004B02  2812               	incf	___fladd@aexp^0,w,c
  5121   004B04  A4D8               	btfss	status,2,c
  5122   004B06  EF87  F025         	goto	u3751
  5123   004B0A  EF89  F025         	goto	u3750
  5124   004B0E                     u3751:
  5125   004B0E  EF91  F025         	goto	l3388
  5126   004B12                     u3750:
  5127   004B12  0E00               	movlw	0
  5128   004B14  6E09               	movwf	___fladd@a^0,c
  5129   004B16  0E00               	movlw	0
  5130   004B18  6E0A               	movwf	(___fladd@a+1)^0,c
  5131   004B1A  0E00               	movlw	0
  5132   004B1C  6E0B               	movwf	(___fladd@a+2)^0,c
  5133   004B1E  0E00               	movlw	0
  5134   004B20  6E0C               	movwf	(___fladd@a+3)^0,c
  5135   004B22                     l3388:
  5136   004B22  8E0B               	bsf	(___fladd@a+2)^0,7,c
  5137   004B24  6A0C               	clrf	(___fladd@a+3)^0,c
  5138   004B26  EF9D  F025         	goto	l3394
  5139   004B2A                     l3392:
  5140   004B2A  0E00               	movlw	0
  5141   004B2C  6E09               	movwf	___fladd@a^0,c
  5142   004B2E  0E00               	movlw	0
  5143   004B30  6E0A               	movwf	(___fladd@a+1)^0,c
  5144   004B32  0E00               	movlw	0
  5145   004B34  6E0B               	movwf	(___fladd@a+2)^0,c
  5146   004B36  0E00               	movlw	0
  5147   004B38  6E0C               	movwf	(___fladd@a+3)^0,c
  5148   004B3A                     l3394:
  5149   004B3A  5013               	movf	___fladd@bexp^0,w,c
  5150   004B3C  5C12               	subwf	___fladd@aexp^0,w,c
  5151   004B3E  B0D8               	btfsc	status,0,c
  5152   004B40  EFA4  F025         	goto	u3761
  5153   004B44  EFA6  F025         	goto	u3760
  5154   004B48                     u3761:
  5155   004B48  EFCD  F025         	goto	l3430
  5156   004B4C                     u3760:
  5157   004B4C  AC11               	btfss	___fladd@signs^0,6,c
  5158   004B4E  EFAB  F025         	goto	u3771
  5159   004B52  EFAD  F025         	goto	u3770
  5160   004B56                     u3771:
  5161   004B56  EFAF  F025         	goto	l3400
  5162   004B5A                     u3770:
  5163   004B5A  0E80               	movlw	128
  5164   004B5C  1A11               	xorwf	___fladd@signs^0,f,c
  5165   004B5E                     l3400:
  5166   004B5E  C013  F014         	movff	___fladd@bexp,___fladd@grs
  5167   004B62  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5168   004B66  C014  F012         	movff	___fladd@grs,___fladd@aexp
  5169   004B6A  C005  F014         	movff	___fladd@b,___fladd@grs
  5170   004B6E  C009  F005         	movff	___fladd@a,___fladd@b
  5171   004B72  C014  F009         	movff	___fladd@grs,___fladd@a
  5172   004B76  C006  F014         	movff	___fladd@b+1,___fladd@grs
  5173   004B7A  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  5174   004B7E  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  5175   004B82  C007  F014         	movff	___fladd@b+2,___fladd@grs
  5176   004B86  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  5177   004B8A  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  5178   004B8E  C008  F014         	movff	___fladd@b+3,___fladd@grs
  5179   004B92  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  5180   004B96  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  5181   004B9A                     l3430:
  5182   004B9A  6A14               	clrf	___fladd@grs^0,c
  5183   004B9C  5013               	movf	___fladd@bexp^0,w,c
  5184   004B9E  C012  F00D         	movff	___fladd@aexp,??___fladd
  5185   004BA2  6A0E               	clrf	(??___fladd+1)^0,c
  5186   004BA4  5E0D               	subwf	??___fladd^0,f,c
  5187   004BA6  0E00               	movlw	0
  5188   004BA8  5A0E               	subwfb	(??___fladd+1)^0,f,c
  5189   004BAA  BE0E               	btfsc	(??___fladd+1)^0,7,c
  5190   004BAC  EFE1  F025         	goto	u3781
  5191   004BB0  500E               	movf	(??___fladd+1)^0,w,c
  5192   004BB2  E109               	bnz	u3780
  5193   004BB4  0E1A               	movlw	26
  5194   004BB6  5C0D               	subwf	??___fladd^0,w,c
  5195   004BB8  A0D8               	btfss	status,0,c
  5196   004BBA  EFE1  F025         	goto	u3781
  5197   004BBE  EFE3  F025         	goto	u3780
  5198   004BC2                     u3781:
  5199   004BC2  EF1A  F026         	goto	l672
  5200   004BC6                     u3780:
  5201   004BC6  5005               	movf	___fladd@b^0,w,c
  5202   004BC8  1006               	iorwf	(___fladd@b+1)^0,w,c
  5203   004BCA  1007               	iorwf	(___fladd@b+2)^0,w,c
  5204   004BCC  1008               	iorwf	(___fladd@b+3)^0,w,c
  5205   004BCE  A4D8               	btfss	status,2,c
  5206   004BD0  EFEC  F025         	goto	u3791
  5207   004BD4  EFEF  F025         	goto	u3790
  5208   004BD8                     u3791:
  5209   004BD8  0E01               	movlw	1
  5210   004BDA  EFF0  F025         	goto	u3800
  5211   004BDE                     u3790:
  5212   004BDE  0E00               	movlw	0
  5213   004BE0                     u3800:
  5214   004BE0  6E14               	movwf	___fladd@grs^0,c
  5215   004BE2  0E00               	movlw	0
  5216   004BE4  6E05               	movwf	___fladd@b^0,c
  5217   004BE6  0E00               	movlw	0
  5218   004BE8  6E06               	movwf	(___fladd@b+1)^0,c
  5219   004BEA  0E00               	movlw	0
  5220   004BEC  6E07               	movwf	(___fladd@b+2)^0,c
  5221   004BEE  0E00               	movlw	0
  5222   004BF0  6E08               	movwf	(___fladd@b+3)^0,c
  5223   004BF2  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5224   004BF6  EF23  F026         	goto	l671
  5225   004BFA                     l673:
  5226   004BFA  A014               	btfss	___fladd@grs^0,0,c
  5227   004BFC  EF02  F026         	goto	u3811
  5228   004C00  EF04  F026         	goto	u3810
  5229   004C04                     u3811:
  5230   004C04  EF0A  F026         	goto	l3440
  5231   004C08                     u3810:
  5232   004C08  90D8               	bcf	status,0,c
  5233   004C0A  3014               	rrcf	___fladd@grs^0,w,c
  5234   004C0C  0901               	iorlw	1
  5235   004C0E  6E14               	movwf	___fladd@grs^0,c
  5236   004C10  EF0C  F026         	goto	l3442
  5237   004C14                     l3440:
  5238   004C14  90D8               	bcf	status,0,c
  5239   004C16  3214               	rrcf	___fladd@grs^0,f,c
  5240   004C18                     l3442:
  5241   004C18  A005               	btfss	___fladd@b^0,0,c
  5242   004C1A  EF11  F026         	goto	u3821
  5243   004C1E  EF13  F026         	goto	u3820
  5244   004C22                     u3821:
  5245   004C22  EF14  F026         	goto	l3446
  5246   004C26                     u3820:
  5247   004C26  8E14               	bsf	___fladd@grs^0,7,c
  5248   004C28                     l3446:
  5249   004C28  3408               	rlcf	(___fladd@b+3)^0,w,c
  5250   004C2A  3208               	rrcf	(___fladd@b+3)^0,f,c
  5251   004C2C  3207               	rrcf	(___fladd@b+2)^0,f,c
  5252   004C2E  3206               	rrcf	(___fladd@b+1)^0,f,c
  5253   004C30  3205               	rrcf	___fladd@b^0,f,c
  5254   004C32  2A13               	incf	___fladd@bexp^0,f,c
  5255   004C34                     l672:
  5256   004C34  5012               	movf	___fladd@aexp^0,w,c
  5257   004C36  5C13               	subwf	___fladd@bexp^0,w,c
  5258   004C38  A0D8               	btfss	status,0,c
  5259   004C3A  EF21  F026         	goto	u3831
  5260   004C3E  EF23  F026         	goto	u3830
  5261   004C42                     u3831:
  5262   004C42  EFFD  F025         	goto	l673
  5263   004C46                     u3830:
  5264   004C46                     l671:
  5265   004C46  BC11               	btfsc	___fladd@signs^0,6,c
  5266   004C48  EF28  F026         	goto	u3841
  5267   004C4C  EF2A  F026         	goto	u3840
  5268   004C50                     u3841:
  5269   004C50  EF6A  F026         	goto	l3474
  5270   004C54                     u3840:
  5271   004C54  5013               	movf	___fladd@bexp^0,w,c
  5272   004C56  A4D8               	btfss	status,2,c
  5273   004C58  EF30  F026         	goto	u3851
  5274   004C5C  EF32  F026         	goto	u3850
  5275   004C60                     u3851:
  5276   004C60  EF3C  F026         	goto	l3456
  5277   004C64                     u3850:
  5278   004C64  0E00               	movlw	0
  5279   004C66  6E05               	movwf	?___fladd^0,c
  5280   004C68  0E00               	movlw	0
  5281   004C6A  6E06               	movwf	(?___fladd+1)^0,c
  5282   004C6C  0E00               	movlw	0
  5283   004C6E  6E07               	movwf	(?___fladd+2)^0,c
  5284   004C70  0E00               	movlw	0
  5285   004C72  6E08               	movwf	(?___fladd+3)^0,c
  5286   004C74  EF89  F027         	goto	l680
  5287   004C78                     l3456:
  5288   004C78  5009               	movf	___fladd@a^0,w,c
  5289   004C7A  2605               	addwf	___fladd@b^0,f,c
  5290   004C7C  500A               	movf	(___fladd@a+1)^0,w,c
  5291   004C7E  2206               	addwfc	(___fladd@b+1)^0,f,c
  5292   004C80  500B               	movf	(___fladd@a+2)^0,w,c
  5293   004C82  2207               	addwfc	(___fladd@b+2)^0,f,c
  5294   004C84  500C               	movf	(___fladd@a+3)^0,w,c
  5295   004C86  2208               	addwfc	(___fladd@b+3)^0,f,c
  5296   004C88  A008               	btfss	(___fladd@b+3)^0,0,c
  5297   004C8A  EF49  F026         	goto	u3861
  5298   004C8E  EF4B  F026         	goto	u3860
  5299   004C92                     u3861:
  5300   004C92  EFF7  F026         	goto	l685
  5301   004C96                     u3860:
  5302   004C96  A014               	btfss	___fladd@grs^0,0,c
  5303   004C98  EF50  F026         	goto	u3871
  5304   004C9C  EF52  F026         	goto	u3870
  5305   004CA0                     u3871:
  5306   004CA0  EF58  F026         	goto	l3464
  5307   004CA4                     u3870:
  5308   004CA4  90D8               	bcf	status,0,c
  5309   004CA6  3014               	rrcf	___fladd@grs^0,w,c
  5310   004CA8  0901               	iorlw	1
  5311   004CAA  6E14               	movwf	___fladd@grs^0,c
  5312   004CAC  EF5A  F026         	goto	l3466
  5313   004CB0                     l3464:
  5314   004CB0  90D8               	bcf	status,0,c
  5315   004CB2  3214               	rrcf	___fladd@grs^0,f,c
  5316   004CB4                     l3466:
  5317   004CB4  A005               	btfss	___fladd@b^0,0,c
  5318   004CB6  EF5F  F026         	goto	u3881
  5319   004CBA  EF61  F026         	goto	u3880
  5320   004CBE                     u3881:
  5321   004CBE  EF62  F026         	goto	l3470
  5322   004CC2                     u3880:
  5323   004CC2  8E14               	bsf	___fladd@grs^0,7,c
  5324   004CC4                     l3470:
  5325   004CC4  3408               	rlcf	(___fladd@b+3)^0,w,c
  5326   004CC6  3208               	rrcf	(___fladd@b+3)^0,f,c
  5327   004CC8  3207               	rrcf	(___fladd@b+2)^0,f,c
  5328   004CCA  3206               	rrcf	(___fladd@b+1)^0,f,c
  5329   004CCC  3205               	rrcf	___fladd@b^0,f,c
  5330   004CCE  2A13               	incf	___fladd@bexp^0,f,c
  5331   004CD0  EFF7  F026         	goto	l685
  5332   004CD4                     l3474:
  5333   004CD4  5009               	movf	___fladd@a^0,w,c
  5334   004CD6  5C05               	subwf	___fladd@b^0,w,c
  5335   004CD8  500A               	movf	(___fladd@a+1)^0,w,c
  5336   004CDA  5806               	subwfb	(___fladd@b+1)^0,w,c
  5337   004CDC  500B               	movf	(___fladd@a+2)^0,w,c
  5338   004CDE  5807               	subwfb	(___fladd@b+2)^0,w,c
  5339   004CE0  5008               	movf	(___fladd@b+3)^0,w,c
  5340   004CE2  0A80               	xorlw	128
  5341   004CE4  6E0D               	movwf	??___fladd^0,c
  5342   004CE6  500C               	movf	(___fladd@a+3)^0,w,c
  5343   004CE8  0A80               	xorlw	128
  5344   004CEA  580D               	subwfb	??___fladd^0,w,c
  5345   004CEC  B0D8               	btfsc	status,0,c
  5346   004CEE  EF7B  F026         	goto	u3891
  5347   004CF2  EF7D  F026         	goto	u3890
  5348   004CF6                     u3891:
  5349   004CF6  EFA8  F026         	goto	l3484
  5350   004CFA                     u3890:
  5351   004CFA  5005               	movf	___fladd@b^0,w,c
  5352   004CFC  5C09               	subwf	___fladd@a^0,w,c
  5353   004CFE  6E0D               	movwf	??___fladd^0,c
  5354   004D00  5006               	movf	(___fladd@b+1)^0,w,c
  5355   004D02  580A               	subwfb	(___fladd@a+1)^0,w,c
  5356   004D04  6E0E               	movwf	(??___fladd+1)^0,c
  5357   004D06  5007               	movf	(___fladd@b+2)^0,w,c
  5358   004D08  580B               	subwfb	(___fladd@a+2)^0,w,c
  5359   004D0A  6E0F               	movwf	(??___fladd+2)^0,c
  5360   004D0C  5008               	movf	(___fladd@b+3)^0,w,c
  5361   004D0E  580C               	subwfb	(___fladd@a+3)^0,w,c
  5362   004D10  6E10               	movwf	(??___fladd+3)^0,c
  5363   004D12  0EFF               	movlw	255
  5364   004D14  240D               	addwf	??___fladd^0,w,c
  5365   004D16  6E05               	movwf	___fladd@b^0,c
  5366   004D18  0EFF               	movlw	255
  5367   004D1A  200E               	addwfc	(??___fladd+1)^0,w,c
  5368   004D1C  6E06               	movwf	(___fladd@b+1)^0,c
  5369   004D1E  0EFF               	movlw	255
  5370   004D20  200F               	addwfc	(??___fladd+2)^0,w,c
  5371   004D22  6E07               	movwf	(___fladd@b+2)^0,c
  5372   004D24  0EFF               	movlw	255
  5373   004D26  2010               	addwfc	(??___fladd+3)^0,w,c
  5374   004D28  6E08               	movwf	(___fladd@b+3)^0,c
  5375   004D2A  0E80               	movlw	128
  5376   004D2C  1A11               	xorwf	___fladd@signs^0,f,c
  5377   004D2E  6C14               	negf	___fladd@grs^0,c
  5378   004D30  5014               	movf	___fladd@grs^0,w,c
  5379   004D32  A4D8               	btfss	status,2,c
  5380   004D34  EF9E  F026         	goto	u3901
  5381   004D38  EFA0  F026         	goto	u3900
  5382   004D3C                     u3901:
  5383   004D3C  EFB0  F026         	goto	l688
  5384   004D40                     u3900:
  5385   004D40  0E01               	movlw	1
  5386   004D42  2605               	addwf	___fladd@b^0,f,c
  5387   004D44  0E00               	movlw	0
  5388   004D46  2206               	addwfc	(___fladd@b+1)^0,f,c
  5389   004D48  2207               	addwfc	(___fladd@b+2)^0,f,c
  5390   004D4A  2208               	addwfc	(___fladd@b+3)^0,f,c
  5391   004D4C  EFB0  F026         	goto	l688
  5392   004D50                     l3484:
  5393   004D50  5009               	movf	___fladd@a^0,w,c
  5394   004D52  5E05               	subwf	___fladd@b^0,f,c
  5395   004D54  500A               	movf	(___fladd@a+1)^0,w,c
  5396   004D56  5A06               	subwfb	(___fladd@b+1)^0,f,c
  5397   004D58  500B               	movf	(___fladd@a+2)^0,w,c
  5398   004D5A  5A07               	subwfb	(___fladd@b+2)^0,f,c
  5399   004D5C  500C               	movf	(___fladd@a+3)^0,w,c
  5400   004D5E  5A08               	subwfb	(___fladd@b+3)^0,f,c
  5401   004D60                     l688:
  5402   004D60  5005               	movf	___fladd@b^0,w,c
  5403   004D62  1006               	iorwf	(___fladd@b+1)^0,w,c
  5404   004D64  1007               	iorwf	(___fladd@b+2)^0,w,c
  5405   004D66  1008               	iorwf	(___fladd@b+3)^0,w,c
  5406   004D68  A4D8               	btfss	status,2,c
  5407   004D6A  EFB9  F026         	goto	u3911
  5408   004D6E  EFBB  F026         	goto	u3910
  5409   004D72                     u3911:
  5410   004D72  EFF0  F026         	goto	l3508
  5411   004D76                     u3910:
  5412   004D76  5014               	movf	___fladd@grs^0,w,c
  5413   004D78  A4D8               	btfss	status,2,c
  5414   004D7A  EFC1  F026         	goto	u3921
  5415   004D7E  EFC3  F026         	goto	u3920
  5416   004D82                     u3921:
  5417   004D82  EFF0  F026         	goto	l3508
  5418   004D86                     u3920:
  5419   004D86  0E00               	movlw	0
  5420   004D88  6E05               	movwf	?___fladd^0,c
  5421   004D8A  0E00               	movlw	0
  5422   004D8C  6E06               	movwf	(?___fladd+1)^0,c
  5423   004D8E  0E00               	movlw	0
  5424   004D90  6E07               	movwf	(?___fladd+2)^0,c
  5425   004D92  0E00               	movlw	0
  5426   004D94  6E08               	movwf	(?___fladd+3)^0,c
  5427   004D96  EF89  F027         	goto	l680
  5428   004D9A                     l3492:
  5429   004D9A  90D8               	bcf	status,0,c
  5430   004D9C  3605               	rlcf	___fladd@b^0,f,c
  5431   004D9E  3606               	rlcf	(___fladd@b+1)^0,f,c
  5432   004DA0  3607               	rlcf	(___fladd@b+2)^0,f,c
  5433   004DA2  3608               	rlcf	(___fladd@b+3)^0,f,c
  5434   004DA4  AE14               	btfss	___fladd@grs^0,7,c
  5435   004DA6  EFD7  F026         	goto	u3931
  5436   004DAA  EFD9  F026         	goto	u3930
  5437   004DAE                     u3931:
  5438   004DAE  EFDA  F026         	goto	l3498
  5439   004DB2                     u3930:
  5440   004DB2  8005               	bsf	___fladd@b^0,0,c
  5441   004DB4                     l3498:
  5442   004DB4  A014               	btfss	___fladd@grs^0,0,c
  5443   004DB6  EFDF  F026         	goto	u3941
  5444   004DBA  EFE1  F026         	goto	u3940
  5445   004DBE                     u3941:
  5446   004DBE  EFE5  F026         	goto	l3502
  5447   004DC2                     u3940:
  5448   004DC2  80D8               	bsf	status,0,c
  5449   004DC4  3614               	rlcf	___fladd@grs^0,f,c
  5450   004DC6  EFE7  F026         	goto	l3504
  5451   004DCA                     l3502:
  5452   004DCA  90D8               	bcf	status,0,c
  5453   004DCC  3614               	rlcf	___fladd@grs^0,f,c
  5454   004DCE                     l3504:
  5455   004DCE  5013               	movf	___fladd@bexp^0,w,c
  5456   004DD0  B4D8               	btfsc	status,2,c
  5457   004DD2  EFED  F026         	goto	u3951
  5458   004DD6  EFEF  F026         	goto	u3950
  5459   004DDA                     u3951:
  5460   004DDA  EFF0  F026         	goto	l3508
  5461   004DDE                     u3950:
  5462   004DDE  0613               	decf	___fladd@bexp^0,f,c
  5463   004DE0                     l3508:
  5464   004DE0  AE07               	btfss	(___fladd@b+2)^0,7,c
  5465   004DE2  EFF5  F026         	goto	u3961
  5466   004DE6  EFF7  F026         	goto	u3960
  5467   004DEA                     u3961:
  5468   004DEA  EFCD  F026         	goto	l3492
  5469   004DEE                     u3960:
  5470   004DEE                     l685:
  5471   004DEE  6A12               	clrf	___fladd@aexp^0,c
  5472   004DF0  AE14               	btfss	___fladd@grs^0,7,c
  5473   004DF2  EFFD  F026         	goto	u3971
  5474   004DF6  EFFF  F026         	goto	u3970
  5475   004DFA                     u3971:
  5476   004DFA  EF17  F027         	goto	l697
  5477   004DFE                     u3970:
  5478   004DFE  C014  F00D         	movff	___fladd@grs,??___fladd
  5479   004E02  0E7F               	movlw	127
  5480   004E04  160D               	andwf	??___fladd^0,f,c
  5481   004E06  B4D8               	btfsc	status,2,c
  5482   004E08  EF08  F027         	goto	u3981
  5483   004E0C  EF0A  F027         	goto	u3980
  5484   004E10                     u3981:
  5485   004E10  EF0E  F027         	goto	l698
  5486   004E14                     u3980:
  5487   004E14                     l3512:
  5488   004E14  0E01               	movlw	1
  5489   004E16  6E12               	movwf	___fladd@aexp^0,c
  5490   004E18  EF17  F027         	goto	l697
  5491   004E1C                     l698:
  5492   004E1C  A005               	btfss	___fladd@b^0,0,c
  5493   004E1E  EF13  F027         	goto	u3991
  5494   004E22  EF15  F027         	goto	u3990
  5495   004E26                     u3991:
  5496   004E26  EF17  F027         	goto	l697
  5497   004E2A                     u3990:
  5498   004E2A  EF0A  F027         	goto	l3512
  5499   004E2E                     l697:
  5500   004E2E  5012               	movf	___fladd@aexp^0,w,c
  5501   004E30  B4D8               	btfsc	status,2,c
  5502   004E32  EF1D  F027         	goto	u4001
  5503   004E36  EF1F  F027         	goto	u4000
  5504   004E3A                     u4001:
  5505   004E3A  EF4A  F027         	goto	l3524
  5506   004E3E                     u4000:
  5507   004E3E  0E01               	movlw	1
  5508   004E40  2605               	addwf	___fladd@b^0,f,c
  5509   004E42  0E00               	movlw	0
  5510   004E44  2206               	addwfc	(___fladd@b+1)^0,f,c
  5511   004E46  2207               	addwfc	(___fladd@b+2)^0,f,c
  5512   004E48  2208               	addwfc	(___fladd@b+3)^0,f,c
  5513   004E4A  A008               	btfss	(___fladd@b+3)^0,0,c
  5514   004E4C  EF2A  F027         	goto	u4011
  5515   004E50  EF2C  F027         	goto	u4010
  5516   004E54                     u4011:
  5517   004E54  EF4A  F027         	goto	l3524
  5518   004E58                     u4010:
  5519   004E58  C005  F00D         	movff	___fladd@b,??___fladd
  5520   004E5C  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  5521   004E60  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  5522   004E64  C008  F010         	movff	___fladd@b+3,??___fladd+3
  5523   004E68  3410               	rlcf	(??___fladd+3)^0,w,c
  5524   004E6A  3210               	rrcf	(??___fladd+3)^0,f,c
  5525   004E6C  320F               	rrcf	(??___fladd+2)^0,f,c
  5526   004E6E  320E               	rrcf	(??___fladd+1)^0,f,c
  5527   004E70  320D               	rrcf	??___fladd^0,f,c
  5528   004E72  C00D  F005         	movff	??___fladd,___fladd@b
  5529   004E76  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  5530   004E7A  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  5531   004E7E  C010  F008         	movff	??___fladd+3,___fladd@b+3
  5532   004E82  2813               	incf	___fladd@bexp^0,w,c
  5533   004E84  B4D8               	btfsc	status,2,c
  5534   004E86  EF47  F027         	goto	u4021
  5535   004E8A  EF49  F027         	goto	u4020
  5536   004E8E                     u4021:
  5537   004E8E  EF4A  F027         	goto	l3524
  5538   004E92                     u4020:
  5539   004E92  2A13               	incf	___fladd@bexp^0,f,c
  5540   004E94                     l3524:
  5541   004E94  2813               	incf	___fladd@bexp^0,w,c
  5542   004E96  B4D8               	btfsc	status,2,c
  5543   004E98  EF50  F027         	goto	u4031
  5544   004E9C  EF52  F027         	goto	u4030
  5545   004EA0                     u4031:
  5546   004EA0  EF5A  F027         	goto	l3528
  5547   004EA4                     u4030:
  5548   004EA4  5013               	movf	___fladd@bexp^0,w,c
  5549   004EA6  A4D8               	btfss	status,2,c
  5550   004EA8  EF58  F027         	goto	u4041
  5551   004EAC  EF5A  F027         	goto	u4040
  5552   004EB0                     u4041:
  5553   004EB0  EF6B  F027         	goto	l704
  5554   004EB4                     u4040:
  5555   004EB4                     l3528:
  5556   004EB4  0E00               	movlw	0
  5557   004EB6  6E05               	movwf	___fladd@b^0,c
  5558   004EB8  0E00               	movlw	0
  5559   004EBA  6E06               	movwf	(___fladd@b+1)^0,c
  5560   004EBC  0E00               	movlw	0
  5561   004EBE  6E07               	movwf	(___fladd@b+2)^0,c
  5562   004EC0  0E00               	movlw	0
  5563   004EC2  6E08               	movwf	(___fladd@b+3)^0,c
  5564   004EC4  5013               	movf	___fladd@bexp^0,w,c
  5565   004EC6  A4D8               	btfss	status,2,c
  5566   004EC8  EF68  F027         	goto	u4051
  5567   004ECC  EF6A  F027         	goto	u4050
  5568   004ED0                     u4051:
  5569   004ED0  EF6B  F027         	goto	l704
  5570   004ED4                     u4050:
  5571   004ED4  6A11               	clrf	___fladd@signs^0,c
  5572   004ED6                     l704:
  5573   004ED6  A013               	btfss	___fladd@bexp^0,0,c
  5574   004ED8  EF70  F027         	goto	u4061
  5575   004EDC  EF72  F027         	goto	u4060
  5576   004EE0                     u4061:
  5577   004EE0  EF75  F027         	goto	l3534
  5578   004EE4                     u4060:
  5579   004EE4  8E07               	bsf	(___fladd@b+2)^0,7,c
  5580   004EE6  EF76  F027         	goto	l3536
  5581   004EEA                     l3534:
  5582   004EEA  9E07               	bcf	(___fladd@b+2)^0,7,c
  5583   004EEC                     l3536:
  5584   004EEC  90D8               	bcf	status,0,c
  5585   004EEE  3013               	rrcf	___fladd@bexp^0,w,c
  5586   004EF0  6E08               	movwf	(___fladd@b+3)^0,c
  5587   004EF2  AE11               	btfss	___fladd@signs^0,7,c
  5588   004EF4  EF7E  F027         	goto	u4071
  5589   004EF8  EF80  F027         	goto	u4070
  5590   004EFC                     u4071:
  5591   004EFC  EF81  F027         	goto	l3542
  5592   004F00                     u4070:
  5593   004F00  8E08               	bsf	(___fladd@b+3)^0,7,c
  5594   004F02                     l3542:
  5595   004F02  C005  F005         	movff	___fladd@b,?___fladd
  5596   004F06  C006  F006         	movff	___fladd@b+1,?___fladd+1
  5597   004F0A  C007  F007         	movff	___fladd@b+2,?___fladd+2
  5598   004F0E  C008  F008         	movff	___fladd@b+3,?___fladd+3
  5599   004F12                     l680:
  5600   004F12  0012               	return		;funcret
  5601   004F14                     __end_of___fladd:
  5602                           	callstack 0
  5603                           
  5604 ;; *************** function ___flneg *****************
  5605 ;; Defined at:
  5606 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  f1              4    4[COMRAM] unsigned char 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;		None
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  4    4[COMRAM] unsigned char 
  5613 ;; Registers used:
  5614 ;;		wreg, status,2, status,0
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5620 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5623 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5624 ;;Total ram usage:        4 bytes
  5625 ;; Hardware stack levels used: 1
  5626 ;; Hardware stack levels required when called: 1
  5627 ;; This function calls:
  5628 ;;		Nothing
  5629 ;; This function is called by:
  5630 ;;		_efgtoa
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           	psect	text19
  5635   00672C                     __ptext19:
  5636                           	callstack 0
  5637   00672C                     ___flneg:
  5638                           	callstack 25
  5639   00672C  5005               	movf	___flneg@f1^0,w,c
  5640   00672E  1006               	iorwf	(___flneg@f1+1)^0,w,c
  5641   006730  1007               	iorwf	(___flneg@f1+2)^0,w,c
  5642   006732  1008               	iorwf	(___flneg@f1+3)^0,w,c
  5643   006734  B4D8               	btfsc	status,2,c
  5644   006736  EF9F  F033         	goto	u4591
  5645   00673A  EFA1  F033         	goto	u4590
  5646   00673E                     u4591:
  5647   00673E  EFA9  F033         	goto	l3866
  5648   006742                     u4590:
  5649   006742  0E00               	movlw	0
  5650   006744  1A05               	xorwf	___flneg@f1^0,f,c
  5651   006746  0E00               	movlw	0
  5652   006748  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  5653   00674A  0E00               	movlw	0
  5654   00674C  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  5655   00674E  0E80               	movlw	128
  5656   006750  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  5657   006752                     l3866:
  5658   006752  C005  F005         	movff	___flneg@f1,?___flneg
  5659   006756  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  5660   00675A  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  5661   00675E  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  5662   006762  0012               	return		;funcret
  5663   006764                     __end_of___flneg:
  5664                           	callstack 0
  5665                           
  5666 ;; *************** function ___flmul *****************
  5667 ;; Defined at:
  5668 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  b               4   18[COMRAM] unsigned char 
  5671 ;;  a               4   22[COMRAM] unsigned char 
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;  prod            4   37[COMRAM] struct .
  5674 ;;  grs             4   32[COMRAM] unsigned long 
  5675 ;;  temp            2   41[COMRAM] struct .
  5676 ;;  bexp            1   36[COMRAM] unsigned char 
  5677 ;;  aexp            1   31[COMRAM] unsigned char 
  5678 ;;  sign            1   30[COMRAM] unsigned char 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  4   18[COMRAM] unsigned char 
  5681 ;; Registers used:
  5682 ;;		wreg, status,2, status,0, prodl, prodh
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5688 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5689 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5690 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5691 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5692 ;;Total ram usage:       25 bytes
  5693 ;; Hardware stack levels used: 1
  5694 ;; Hardware stack levels required when called: 1
  5695 ;; This function calls:
  5696 ;;		Nothing
  5697 ;; This function is called by:
  5698 ;;		_main
  5699 ;;		_efgtoa
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703                           	psect	text20
  5704   004F14                     __ptext20:
  5705                           	callstack 0
  5706   004F14                     ___flmul:
  5707                           	callstack 25
  5708   004F14  5016               	movf	(___flmul@b+3)^0,w,c
  5709   004F16  0B80               	andlw	128
  5710   004F18  6E1F               	movwf	___flmul@sign^0,c
  5711   004F1A  5016               	movf	(___flmul@b+3)^0,w,c
  5712   004F1C  2416               	addwf	(___flmul@b+3)^0,w,c
  5713   004F1E  6E25               	movwf	___flmul@bexp^0,c
  5714   004F20  AE15               	btfss	(___flmul@b+2)^0,7,c
  5715   004F22  EF95  F027         	goto	u4321
  5716   004F26  EF97  F027         	goto	u4320
  5717   004F2A                     u4321:
  5718   004F2A  EF98  F027         	goto	l3696
  5719   004F2E                     u4320:
  5720   004F2E  8025               	bsf	___flmul@bexp^0,0,c
  5721   004F30                     l3696:
  5722   004F30  5025               	movf	___flmul@bexp^0,w,c
  5723   004F32  B4D8               	btfsc	status,2,c
  5724   004F34  EF9E  F027         	goto	u4331
  5725   004F38  EFA0  F027         	goto	u4330
  5726   004F3C                     u4331:
  5727   004F3C  EFB3  F027         	goto	l3704
  5728   004F40                     u4330:
  5729   004F40  2825               	incf	___flmul@bexp^0,w,c
  5730   004F42  A4D8               	btfss	status,2,c
  5731   004F44  EFA6  F027         	goto	u4341
  5732   004F48  EFA8  F027         	goto	u4340
  5733   004F4C                     u4341:
  5734   004F4C  EFB0  F027         	goto	l3702
  5735   004F50                     u4340:
  5736   004F50  0E00               	movlw	0
  5737   004F52  6E13               	movwf	___flmul@b^0,c
  5738   004F54  0E00               	movlw	0
  5739   004F56  6E14               	movwf	(___flmul@b+1)^0,c
  5740   004F58  0E00               	movlw	0
  5741   004F5A  6E15               	movwf	(___flmul@b+2)^0,c
  5742   004F5C  0E00               	movlw	0
  5743   004F5E  6E16               	movwf	(___flmul@b+3)^0,c
  5744   004F60                     l3702:
  5745   004F60  8E15               	bsf	(___flmul@b+2)^0,7,c
  5746   004F62  EFBB  F027         	goto	l3706
  5747   004F66                     l3704:
  5748   004F66  0E00               	movlw	0
  5749   004F68  6E13               	movwf	___flmul@b^0,c
  5750   004F6A  0E00               	movlw	0
  5751   004F6C  6E14               	movwf	(___flmul@b+1)^0,c
  5752   004F6E  0E00               	movlw	0
  5753   004F70  6E15               	movwf	(___flmul@b+2)^0,c
  5754   004F72  0E00               	movlw	0
  5755   004F74  6E16               	movwf	(___flmul@b+3)^0,c
  5756   004F76                     l3706:
  5757   004F76  501A               	movf	(___flmul@a+3)^0,w,c
  5758   004F78  0B80               	andlw	128
  5759   004F7A  1A1F               	xorwf	___flmul@sign^0,f,c
  5760   004F7C  501A               	movf	(___flmul@a+3)^0,w,c
  5761   004F7E  241A               	addwf	(___flmul@a+3)^0,w,c
  5762   004F80  6E20               	movwf	___flmul@aexp^0,c
  5763   004F82  AE19               	btfss	(___flmul@a+2)^0,7,c
  5764   004F84  EFC6  F027         	goto	u4351
  5765   004F88  EFC8  F027         	goto	u4350
  5766   004F8C                     u4351:
  5767   004F8C  EFC9  F027         	goto	l3714
  5768   004F90                     u4350:
  5769   004F90  8020               	bsf	___flmul@aexp^0,0,c
  5770   004F92                     l3714:
  5771   004F92  5020               	movf	___flmul@aexp^0,w,c
  5772   004F94  B4D8               	btfsc	status,2,c
  5773   004F96  EFCF  F027         	goto	u4361
  5774   004F9A  EFD1  F027         	goto	u4360
  5775   004F9E                     u4361:
  5776   004F9E  EFE4  F027         	goto	l3722
  5777   004FA2                     u4360:
  5778   004FA2  2820               	incf	___flmul@aexp^0,w,c
  5779   004FA4  A4D8               	btfss	status,2,c
  5780   004FA6  EFD7  F027         	goto	u4371
  5781   004FAA  EFD9  F027         	goto	u4370
  5782   004FAE                     u4371:
  5783   004FAE  EFE1  F027         	goto	l3720
  5784   004FB2                     u4370:
  5785   004FB2  0E00               	movlw	0
  5786   004FB4  6E17               	movwf	___flmul@a^0,c
  5787   004FB6  0E00               	movlw	0
  5788   004FB8  6E18               	movwf	(___flmul@a+1)^0,c
  5789   004FBA  0E00               	movlw	0
  5790   004FBC  6E19               	movwf	(___flmul@a+2)^0,c
  5791   004FBE  0E00               	movlw	0
  5792   004FC0  6E1A               	movwf	(___flmul@a+3)^0,c
  5793   004FC2                     l3720:
  5794   004FC2  8E19               	bsf	(___flmul@a+2)^0,7,c
  5795   004FC4  EFEC  F027         	goto	l757
  5796   004FC8                     l3722:
  5797   004FC8  0E00               	movlw	0
  5798   004FCA  6E17               	movwf	___flmul@a^0,c
  5799   004FCC  0E00               	movlw	0
  5800   004FCE  6E18               	movwf	(___flmul@a+1)^0,c
  5801   004FD0  0E00               	movlw	0
  5802   004FD2  6E19               	movwf	(___flmul@a+2)^0,c
  5803   004FD4  0E00               	movlw	0
  5804   004FD6  6E1A               	movwf	(___flmul@a+3)^0,c
  5805   004FD8                     l757:
  5806   004FD8  5020               	movf	___flmul@aexp^0,w,c
  5807   004FDA  B4D8               	btfsc	status,2,c
  5808   004FDC  EFF2  F027         	goto	u4381
  5809   004FE0  EFF4  F027         	goto	u4380
  5810   004FE4                     u4381:
  5811   004FE4  EFFC  F027         	goto	l3726
  5812   004FE8                     u4380:
  5813   004FE8  5025               	movf	___flmul@bexp^0,w,c
  5814   004FEA  A4D8               	btfss	status,2,c
  5815   004FEC  EFFA  F027         	goto	u4391
  5816   004FF0  EFFC  F027         	goto	u4390
  5817   004FF4                     u4391:
  5818   004FF4  EF06  F028         	goto	l3730
  5819   004FF8                     u4390:
  5820   004FF8                     l3726:
  5821   004FF8  0E00               	movlw	0
  5822   004FFA  6E13               	movwf	?___flmul^0,c
  5823   004FFC  0E00               	movlw	0
  5824   004FFE  6E14               	movwf	(?___flmul+1)^0,c
  5825   005000  0E00               	movlw	0
  5826   005002  6E15               	movwf	(?___flmul+2)^0,c
  5827   005004  0E00               	movlw	0
  5828   005006  6E16               	movwf	(?___flmul+3)^0,c
  5829   005008  EFAE  F029         	goto	l761
  5830   00500C                     l3730:
  5831   00500C  5019               	movf	(___flmul@a+2)^0,w,c
  5832   00500E  0213               	mulwf	___flmul@b^0,c
  5833   005010  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5834   005016  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5835   00501C  502A               	movf	___flmul@temp^0,w,c
  5836   00501E  6E21               	movwf	___flmul@grs^0,c
  5837   005020  6A22               	clrf	(___flmul@grs+1)^0,c
  5838   005022  6A23               	clrf	(___flmul@grs+2)^0,c
  5839   005024  6A24               	clrf	(___flmul@grs+3)^0,c
  5840   005026  502B               	movf	(___flmul@temp+1)^0,w,c
  5841   005028  6E26               	movwf	___flmul@prod^0,c
  5842   00502A  6A27               	clrf	(___flmul@prod+1)^0,c
  5843   00502C  6A28               	clrf	(___flmul@prod+2)^0,c
  5844   00502E  6A29               	clrf	(___flmul@prod+3)^0,c
  5845   005030  5018               	movf	(___flmul@a+1)^0,w,c
  5846   005032  0214               	mulwf	(___flmul@b+1)^0,c
  5847   005034  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5848   00503A  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5849   005040  502A               	movf	___flmul@temp^0,w,c
  5850   005042  2621               	addwf	___flmul@grs^0,f,c
  5851   005044  0E00               	movlw	0
  5852   005046  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5853   005048  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5854   00504A  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5855   00504C  502B               	movf	(___flmul@temp+1)^0,w,c
  5856   00504E  2626               	addwf	___flmul@prod^0,f,c
  5857   005050  0E00               	movlw	0
  5858   005052  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5859   005054  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5860   005056  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5861   005058  5017               	movf	___flmul@a^0,w,c
  5862   00505A  0215               	mulwf	(___flmul@b+2)^0,c
  5863   00505C  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5864   005062  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5865   005068  502A               	movf	___flmul@temp^0,w,c
  5866   00506A  2621               	addwf	___flmul@grs^0,f,c
  5867   00506C  0E00               	movlw	0
  5868   00506E  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5869   005070  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5870   005072  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5871   005074  502B               	movf	(___flmul@temp+1)^0,w,c
  5872   005076  2626               	addwf	___flmul@prod^0,f,c
  5873   005078  0E00               	movlw	0
  5874   00507A  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5875   00507C  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5876   00507E  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5877   005080  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5878   005084  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5879   005088  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5880   00508C  6A21               	clrf	___flmul@grs^0,c
  5881   00508E  5017               	movf	___flmul@a^0,w,c
  5882   005090  0214               	mulwf	(___flmul@b+1)^0,c
  5883   005092  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5884   005098  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5885   00509E  502A               	movf	___flmul@temp^0,w,c
  5886   0050A0  2621               	addwf	___flmul@grs^0,f,c
  5887   0050A2  502B               	movf	(___flmul@temp+1)^0,w,c
  5888   0050A4  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5889   0050A6  0E00               	movlw	0
  5890   0050A8  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5891   0050AA  0E00               	movlw	0
  5892   0050AC  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5893   0050AE  5018               	movf	(___flmul@a+1)^0,w,c
  5894   0050B0  0213               	mulwf	___flmul@b^0,c
  5895   0050B2  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5896   0050B8  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5897   0050BE  502A               	movf	___flmul@temp^0,w,c
  5898   0050C0  2621               	addwf	___flmul@grs^0,f,c
  5899   0050C2  502B               	movf	(___flmul@temp+1)^0,w,c
  5900   0050C4  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5901   0050C6  0E00               	movlw	0
  5902   0050C8  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5903   0050CA  0E00               	movlw	0
  5904   0050CC  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5905   0050CE  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5906   0050D2  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5907   0050D6  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5908   0050DA  6A21               	clrf	___flmul@grs^0,c
  5909   0050DC  5017               	movf	___flmul@a^0,w,c
  5910   0050DE  0213               	mulwf	___flmul@b^0,c
  5911   0050E0  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5912   0050E6  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5913   0050EC  502A               	movf	___flmul@temp^0,w,c
  5914   0050EE  2621               	addwf	___flmul@grs^0,f,c
  5915   0050F0  502B               	movf	(___flmul@temp+1)^0,w,c
  5916   0050F2  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5917   0050F4  0E00               	movlw	0
  5918   0050F6  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5919   0050F8  0E00               	movlw	0
  5920   0050FA  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5921   0050FC  5019               	movf	(___flmul@a+2)^0,w,c
  5922   0050FE  0214               	mulwf	(___flmul@b+1)^0,c
  5923   005100  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5924   005106  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5925   00510C  502A               	movf	___flmul@temp^0,w,c
  5926   00510E  2626               	addwf	___flmul@prod^0,f,c
  5927   005110  502B               	movf	(___flmul@temp+1)^0,w,c
  5928   005112  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5929   005114  0E00               	movlw	0
  5930   005116  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5931   005118  0E00               	movlw	0
  5932   00511A  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5933   00511C  5018               	movf	(___flmul@a+1)^0,w,c
  5934   00511E  0215               	mulwf	(___flmul@b+2)^0,c
  5935   005120  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5936   005126  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5937   00512C  502A               	movf	___flmul@temp^0,w,c
  5938   00512E  2626               	addwf	___flmul@prod^0,f,c
  5939   005130  502B               	movf	(___flmul@temp+1)^0,w,c
  5940   005132  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5941   005134  0E00               	movlw	0
  5942   005136  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5943   005138  0E00               	movlw	0
  5944   00513A  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5945   00513C  5019               	movf	(___flmul@a+2)^0,w,c
  5946   00513E  0215               	mulwf	(___flmul@b+2)^0,c
  5947   005140  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5948   005146  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5949   00514C  502A               	movf	___flmul@temp^0,w,c
  5950   00514E  6E1B               	movwf	??___flmul^0,c
  5951   005150  502B               	movf	(___flmul@temp+1)^0,w,c
  5952   005152  6E1C               	movwf	(??___flmul+1)^0,c
  5953   005154  6A1D               	clrf	(??___flmul+2)^0,c
  5954   005156  6A1E               	clrf	(??___flmul+3)^0,c
  5955   005158  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  5956   00515C  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  5957   005160  C01B  F01C         	movff	??___flmul,??___flmul+1
  5958   005164  6A1B               	clrf	??___flmul^0,c
  5959   005166  501B               	movf	??___flmul^0,w,c
  5960   005168  2626               	addwf	___flmul@prod^0,f,c
  5961   00516A  501C               	movf	(??___flmul+1)^0,w,c
  5962   00516C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5963   00516E  501D               	movf	(??___flmul+2)^0,w,c
  5964   005170  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5965   005172  501E               	movf	(??___flmul+3)^0,w,c
  5966   005174  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5967   005176  C021  F01B         	movff	___flmul@grs,??___flmul
  5968   00517A  C022  F01C         	movff	___flmul@grs+1,??___flmul+1
  5969   00517E  C023  F01D         	movff	___flmul@grs+2,??___flmul+2
  5970   005182  C024  F01E         	movff	___flmul@grs+3,??___flmul+3
  5971   005186  0E19               	movlw	25
  5972   005188  EFCB  F028         	goto	u4400
  5973   00518C                     u4405:
  5974   00518C  90D8               	bcf	status,0,c
  5975   00518E  321E               	rrcf	(??___flmul+3)^0,f,c
  5976   005190  321D               	rrcf	(??___flmul+2)^0,f,c
  5977   005192  321C               	rrcf	(??___flmul+1)^0,f,c
  5978   005194  321B               	rrcf	??___flmul^0,f,c
  5979   005196                     u4400:
  5980   005196  2EE8               	decfsz	wreg,f,c
  5981   005198  EFC6  F028         	goto	u4405
  5982   00519C  501B               	movf	??___flmul^0,w,c
  5983   00519E  2626               	addwf	___flmul@prod^0,f,c
  5984   0051A0  501C               	movf	(??___flmul+1)^0,w,c
  5985   0051A2  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5986   0051A4  501D               	movf	(??___flmul+2)^0,w,c
  5987   0051A6  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5988   0051A8  501E               	movf	(??___flmul+3)^0,w,c
  5989   0051AA  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5990   0051AC  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5991   0051B0  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5992   0051B4  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5993   0051B8  6A21               	clrf	___flmul@grs^0,c
  5994   0051BA  5020               	movf	___flmul@aexp^0,w,c
  5995   0051BC  C025  F01B         	movff	___flmul@bexp,??___flmul
  5996   0051C0  6A1C               	clrf	(??___flmul+1)^0,c
  5997   0051C2  261B               	addwf	??___flmul^0,f,c
  5998   0051C4  0E00               	movlw	0
  5999   0051C6  221C               	addwfc	(??___flmul+1)^0,f,c
  6000   0051C8  0E82               	movlw	130
  6001   0051CA  241B               	addwf	??___flmul^0,w,c
  6002   0051CC  6E2A               	movwf	___flmul@temp^0,c
  6003   0051CE  0EFF               	movlw	255
  6004   0051D0  201C               	addwfc	(??___flmul+1)^0,w,c
  6005   0051D2  6E2B               	movwf	(___flmul@temp+1)^0,c
  6006   0051D4  EF01  F029         	goto	l3778
  6007   0051D8                     l3772:
  6008   0051D8  90D8               	bcf	status,0,c
  6009   0051DA  3626               	rlcf	___flmul@prod^0,f,c
  6010   0051DC  3627               	rlcf	(___flmul@prod+1)^0,f,c
  6011   0051DE  3628               	rlcf	(___flmul@prod+2)^0,f,c
  6012   0051E0  3629               	rlcf	(___flmul@prod+3)^0,f,c
  6013   0051E2  AE24               	btfss	(___flmul@grs+3)^0,7,c
  6014   0051E4  EFF6  F028         	goto	u4411
  6015   0051E8  EFF8  F028         	goto	u4410
  6016   0051EC                     u4411:
  6017   0051EC  EFF9  F028         	goto	l764
  6018   0051F0                     u4410:
  6019   0051F0  8026               	bsf	___flmul@prod^0,0,c
  6020   0051F2                     l764:
  6021   0051F2  90D8               	bcf	status,0,c
  6022   0051F4  3621               	rlcf	___flmul@grs^0,f,c
  6023   0051F6  3622               	rlcf	(___flmul@grs+1)^0,f,c
  6024   0051F8  3623               	rlcf	(___flmul@grs+2)^0,f,c
  6025   0051FA  3624               	rlcf	(___flmul@grs+3)^0,f,c
  6026   0051FC  062A               	decf	___flmul@temp^0,f,c
  6027   0051FE  A0D8               	btfss	status,0,c
  6028   005200  062B               	decf	(___flmul@temp+1)^0,f,c
  6029   005202                     l3778:
  6030   005202  AE28               	btfss	(___flmul@prod+2)^0,7,c
  6031   005204  EF06  F029         	goto	u4421
  6032   005208  EF08  F029         	goto	u4420
  6033   00520C                     u4421:
  6034   00520C  EFEC  F028         	goto	l3772
  6035   005210                     u4420:
  6036   005210  6A20               	clrf	___flmul@aexp^0,c
  6037   005212  AE24               	btfss	(___flmul@grs+3)^0,7,c
  6038   005214  EF0E  F029         	goto	u4431
  6039   005218  EF10  F029         	goto	u4430
  6040   00521C                     u4431:
  6041   00521C  EF34  F029         	goto	l766
  6042   005220                     u4430:
  6043   005220  0EFF               	movlw	255
  6044   005222  1421               	andwf	___flmul@grs^0,w,c
  6045   005224  6E1B               	movwf	??___flmul^0,c
  6046   005226  0EFF               	movlw	255
  6047   005228  1422               	andwf	(___flmul@grs+1)^0,w,c
  6048   00522A  6E1C               	movwf	(??___flmul+1)^0,c
  6049   00522C  0EFF               	movlw	255
  6050   00522E  1423               	andwf	(___flmul@grs+2)^0,w,c
  6051   005230  6E1D               	movwf	(??___flmul+2)^0,c
  6052   005232  0E7F               	movlw	127
  6053   005234  1424               	andwf	(___flmul@grs+3)^0,w,c
  6054   005236  6E1E               	movwf	(??___flmul+3)^0,c
  6055   005238  501B               	movf	??___flmul^0,w,c
  6056   00523A  101C               	iorwf	(??___flmul+1)^0,w,c
  6057   00523C  101D               	iorwf	(??___flmul+2)^0,w,c
  6058   00523E  101E               	iorwf	(??___flmul+3)^0,w,c
  6059   005240  B4D8               	btfsc	status,2,c
  6060   005242  EF25  F029         	goto	u4441
  6061   005246  EF27  F029         	goto	u4440
  6062   00524A                     u4441:
  6063   00524A  EF2B  F029         	goto	l767
  6064   00524E                     u4440:
  6065   00524E                     l3782:
  6066   00524E  0E01               	movlw	1
  6067   005250  6E20               	movwf	___flmul@aexp^0,c
  6068   005252  EF34  F029         	goto	l766
  6069   005256                     l767:
  6070   005256  A026               	btfss	___flmul@prod^0,0,c
  6071   005258  EF30  F029         	goto	u4451
  6072   00525C  EF32  F029         	goto	u4450
  6073   005260                     u4451:
  6074   005260  EF34  F029         	goto	l766
  6075   005264                     u4450:
  6076   005264  EF27  F029         	goto	l3782
  6077   005268                     l766:
  6078   005268  5020               	movf	___flmul@aexp^0,w,c
  6079   00526A  B4D8               	btfsc	status,2,c
  6080   00526C  EF3A  F029         	goto	u4461
  6081   005270  EF3C  F029         	goto	u4460
  6082   005274                     u4461:
  6083   005274  EF60  F029         	goto	l3794
  6084   005278                     u4460:
  6085   005278  0E01               	movlw	1
  6086   00527A  2626               	addwf	___flmul@prod^0,f,c
  6087   00527C  0E00               	movlw	0
  6088   00527E  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6089   005280  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6090   005282  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6091   005284  A029               	btfss	(___flmul@prod+3)^0,0,c
  6092   005286  EF47  F029         	goto	u4471
  6093   00528A  EF49  F029         	goto	u4470
  6094   00528E                     u4471:
  6095   00528E  EF60  F029         	goto	l3794
  6096   005292                     u4470:
  6097   005292  C026  F01B         	movff	___flmul@prod,??___flmul
  6098   005296  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  6099   00529A  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  6100   00529E  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  6101   0052A2  341E               	rlcf	(??___flmul+3)^0,w,c
  6102   0052A4  321E               	rrcf	(??___flmul+3)^0,f,c
  6103   0052A6  321D               	rrcf	(??___flmul+2)^0,f,c
  6104   0052A8  321C               	rrcf	(??___flmul+1)^0,f,c
  6105   0052AA  321B               	rrcf	??___flmul^0,f,c
  6106   0052AC  C01B  F026         	movff	??___flmul,___flmul@prod
  6107   0052B0  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  6108   0052B4  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  6109   0052B8  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  6110   0052BC  4A2A               	infsnz	___flmul@temp^0,f,c
  6111   0052BE  2A2B               	incf	(___flmul@temp+1)^0,f,c
  6112   0052C0                     l3794:
  6113   0052C0  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  6114   0052C2  EF6B  F029         	goto	u4481
  6115   0052C6  502B               	movf	(___flmul@temp+1)^0,w,c
  6116   0052C8  E108               	bnz	u4480
  6117   0052CA  282A               	incf	___flmul@temp^0,w,c
  6118   0052CC  A0D8               	btfss	status,0,c
  6119   0052CE  EF6B  F029         	goto	u4481
  6120   0052D2  EF6D  F029         	goto	u4480
  6121   0052D6                     u4481:
  6122   0052D6  EF77  F029         	goto	l3798
  6123   0052DA                     u4480:
  6124   0052DA  0E00               	movlw	0
  6125   0052DC  6E26               	movwf	___flmul@prod^0,c
  6126   0052DE  0E00               	movlw	0
  6127   0052E0  6E27               	movwf	(___flmul@prod+1)^0,c
  6128   0052E2  0E80               	movlw	128
  6129   0052E4  6E28               	movwf	(___flmul@prod+2)^0,c
  6130   0052E6  0E7F               	movlw	127
  6131   0052E8  6E29               	movwf	(___flmul@prod+3)^0,c
  6132   0052EA  EFA4  F029         	goto	l3812
  6133   0052EE                     l3798:
  6134   0052EE  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  6135   0052F0  EF84  F029         	goto	u4490
  6136   0052F4  502B               	movf	(___flmul@temp+1)^0,w,c
  6137   0052F6  E106               	bnz	u4491
  6138   0052F8  042A               	decf	___flmul@temp^0,w,c
  6139   0052FA  B0D8               	btfsc	status,0,c
  6140   0052FC  EF82  F029         	goto	u4491
  6141   005300  EF84  F029         	goto	u4490
  6142   005304                     u4491:
  6143   005304  EF8F  F029         	goto	l774
  6144   005308                     u4490:
  6145   005308  0E00               	movlw	0
  6146   00530A  6E26               	movwf	___flmul@prod^0,c
  6147   00530C  0E00               	movlw	0
  6148   00530E  6E27               	movwf	(___flmul@prod+1)^0,c
  6149   005310  0E00               	movlw	0
  6150   005312  6E28               	movwf	(___flmul@prod+2)^0,c
  6151   005314  0E00               	movlw	0
  6152   005316  6E29               	movwf	(___flmul@prod+3)^0,c
  6153   005318  6A1F               	clrf	___flmul@sign^0,c
  6154   00531A  EFA4  F029         	goto	l3812
  6155   00531E                     l774:
  6156   00531E  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  6157   005322  0EFF               	movlw	255
  6158   005324  1626               	andwf	___flmul@prod^0,f,c
  6159   005326  0EFF               	movlw	255
  6160   005328  1627               	andwf	(___flmul@prod+1)^0,f,c
  6161   00532A  0E7F               	movlw	127
  6162   00532C  1628               	andwf	(___flmul@prod+2)^0,f,c
  6163   00532E  0E00               	movlw	0
  6164   005330  1629               	andwf	(___flmul@prod+3)^0,f,c
  6165   005332  A025               	btfss	___flmul@bexp^0,0,c
  6166   005334  EF9E  F029         	goto	u4501
  6167   005338  EFA0  F029         	goto	u4500
  6168   00533C                     u4501:
  6169   00533C  EFA1  F029         	goto	l3810
  6170   005340                     u4500:
  6171   005340  8E28               	bsf	(___flmul@prod+2)^0,7,c
  6172   005342                     l3810:
  6173   005342  90D8               	bcf	status,0,c
  6174   005344  3025               	rrcf	___flmul@bexp^0,w,c
  6175   005346  6E29               	movwf	(___flmul@prod+3)^0,c
  6176   005348                     l3812:
  6177   005348  501F               	movf	___flmul@sign^0,w,c
  6178   00534A  1229               	iorwf	(___flmul@prod+3)^0,f,c
  6179   00534C  C026  F013         	movff	___flmul@prod,?___flmul
  6180   005350  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  6181   005354  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  6182   005358  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  6183   00535C                     l761:
  6184   00535C  0012               	return		;funcret
  6185   00535E                     __end_of___flmul:
  6186                           	callstack 0
  6187                           
  6188 ;; *************** function ___flge *****************
  6189 ;; Defined at:
  6190 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  ff1             4   43[COMRAM] unsigned char 
  6193 ;;  ff2             4   47[COMRAM] unsigned char 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;		None
  6196 ;; Return value:  Size  Location     Type
  6197 ;;		None               void
  6198 ;; Registers used:
  6199 ;;		wreg, status,2, status,0
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6205 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6207 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6208 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6209 ;;Total ram usage:       12 bytes
  6210 ;; Hardware stack levels used: 1
  6211 ;; Hardware stack levels required when called: 1
  6212 ;; This function calls:
  6213 ;;		Nothing
  6214 ;; This function is called by:
  6215 ;;		_efgtoa
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           	psect	text21
  6220   005DE6                     __ptext21:
  6221                           	callstack 0
  6222   005DE6                     ___flge:
  6223                           	callstack 25
  6224   005DE6  0E00               	movlw	0
  6225   005DE8  142C               	andwf	___flge@ff1^0,w,c
  6226   005DEA  6E34               	movwf	??___flge^0,c
  6227   005DEC  0E00               	movlw	0
  6228   005DEE  142D               	andwf	(___flge@ff1+1)^0,w,c
  6229   005DF0  6E35               	movwf	(??___flge+1)^0,c
  6230   005DF2  0E80               	movlw	128
  6231   005DF4  142E               	andwf	(___flge@ff1+2)^0,w,c
  6232   005DF6  6E36               	movwf	(??___flge+2)^0,c
  6233   005DF8  0E7F               	movlw	127
  6234   005DFA  142F               	andwf	(___flge@ff1+3)^0,w,c
  6235   005DFC  6E37               	movwf	(??___flge+3)^0,c
  6236   005DFE  5034               	movf	??___flge^0,w,c
  6237   005E00  1035               	iorwf	(??___flge+1)^0,w,c
  6238   005E02  1036               	iorwf	(??___flge+2)^0,w,c
  6239   005E04  1037               	iorwf	(??___flge+3)^0,w,c
  6240   005E06  A4D8               	btfss	status,2,c
  6241   005E08  EF08  F02F         	goto	u4541
  6242   005E0C  EF0A  F02F         	goto	u4540
  6243   005E10                     u4541:
  6244   005E10  EF12  F02F         	goto	l3844
  6245   005E14                     u4540:
  6246   005E14  0E00               	movlw	0
  6247   005E16  6E2C               	movwf	___flge@ff1^0,c
  6248   005E18  0E00               	movlw	0
  6249   005E1A  6E2D               	movwf	(___flge@ff1+1)^0,c
  6250   005E1C  0E00               	movlw	0
  6251   005E1E  6E2E               	movwf	(___flge@ff1+2)^0,c
  6252   005E20  0E00               	movlw	0
  6253   005E22  6E2F               	movwf	(___flge@ff1+3)^0,c
  6254   005E24                     l3844:
  6255   005E24  0E00               	movlw	0
  6256   005E26  1430               	andwf	___flge@ff2^0,w,c
  6257   005E28  6E34               	movwf	??___flge^0,c
  6258   005E2A  0E00               	movlw	0
  6259   005E2C  1431               	andwf	(___flge@ff2+1)^0,w,c
  6260   005E2E  6E35               	movwf	(??___flge+1)^0,c
  6261   005E30  0E80               	movlw	128
  6262   005E32  1432               	andwf	(___flge@ff2+2)^0,w,c
  6263   005E34  6E36               	movwf	(??___flge+2)^0,c
  6264   005E36  0E7F               	movlw	127
  6265   005E38  1433               	andwf	(___flge@ff2+3)^0,w,c
  6266   005E3A  6E37               	movwf	(??___flge+3)^0,c
  6267   005E3C  5034               	movf	??___flge^0,w,c
  6268   005E3E  1035               	iorwf	(??___flge+1)^0,w,c
  6269   005E40  1036               	iorwf	(??___flge+2)^0,w,c
  6270   005E42  1037               	iorwf	(??___flge+3)^0,w,c
  6271   005E44  A4D8               	btfss	status,2,c
  6272   005E46  EF27  F02F         	goto	u4551
  6273   005E4A  EF29  F02F         	goto	u4550
  6274   005E4E                     u4551:
  6275   005E4E  EF31  F02F         	goto	l3848
  6276   005E52                     u4550:
  6277   005E52  0E00               	movlw	0
  6278   005E54  6E30               	movwf	___flge@ff2^0,c
  6279   005E56  0E00               	movlw	0
  6280   005E58  6E31               	movwf	(___flge@ff2+1)^0,c
  6281   005E5A  0E00               	movlw	0
  6282   005E5C  6E32               	movwf	(___flge@ff2+2)^0,c
  6283   005E5E  0E00               	movlw	0
  6284   005E60  6E33               	movwf	(___flge@ff2+3)^0,c
  6285   005E62                     l3848:
  6286   005E62  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  6287   005E64  EF36  F02F         	goto	u4561
  6288   005E68  EF38  F02F         	goto	u4560
  6289   005E6C                     u4561:
  6290   005E6C  EF41  F02F         	goto	l3852
  6291   005E70                     u4560:
  6292   005E70  6C2C               	negf	___flge@ff1^0,c
  6293   005E72  1E2D               	comf	(___flge@ff1+1)^0,f,c
  6294   005E74  B0D8               	btfsc	status,0,c
  6295   005E76  2A2D               	incf	(___flge@ff1+1)^0,f,c
  6296   005E78  1E2E               	comf	(___flge@ff1+2)^0,f,c
  6297   005E7A  B0D8               	btfsc	status,0,c
  6298   005E7C  2A2E               	incf	(___flge@ff1+2)^0,f,c
  6299   005E7E  0E80               	movlw	128
  6300   005E80  562F               	subfwb	(___flge@ff1+3)^0,f,c
  6301   005E82                     l3852:
  6302   005E82  AE33               	btfss	(___flge@ff2+3)^0,7,c
  6303   005E84  EF46  F02F         	goto	u4571
  6304   005E88  EF48  F02F         	goto	u4570
  6305   005E8C                     u4571:
  6306   005E8C  EF51  F02F         	goto	l408
  6307   005E90                     u4570:
  6308   005E90  6C30               	negf	___flge@ff2^0,c
  6309   005E92  1E31               	comf	(___flge@ff2+1)^0,f,c
  6310   005E94  B0D8               	btfsc	status,0,c
  6311   005E96  2A31               	incf	(___flge@ff2+1)^0,f,c
  6312   005E98  1E32               	comf	(___flge@ff2+2)^0,f,c
  6313   005E9A  B0D8               	btfsc	status,0,c
  6314   005E9C  2A32               	incf	(___flge@ff2+2)^0,f,c
  6315   005E9E  0E80               	movlw	128
  6316   005EA0  5633               	subfwb	(___flge@ff2+3)^0,f,c
  6317   005EA2                     l408:
  6318   005EA2  0E00               	movlw	0
  6319   005EA4  1A2C               	xorwf	___flge@ff1^0,f,c
  6320   005EA6  0E00               	movlw	0
  6321   005EA8  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  6322   005EAA  0E00               	movlw	0
  6323   005EAC  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  6324   005EAE  0E80               	movlw	128
  6325   005EB0  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  6326   005EB2  0E00               	movlw	0
  6327   005EB4  1A30               	xorwf	___flge@ff2^0,f,c
  6328   005EB6  0E00               	movlw	0
  6329   005EB8  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  6330   005EBA  0E00               	movlw	0
  6331   005EBC  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  6332   005EBE  0E80               	movlw	128
  6333   005EC0  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  6334   005EC2  5030               	movf	___flge@ff2^0,w,c
  6335   005EC4  5C2C               	subwf	___flge@ff1^0,w,c
  6336   005EC6  5031               	movf	(___flge@ff2+1)^0,w,c
  6337   005EC8  582D               	subwfb	(___flge@ff1+1)^0,w,c
  6338   005ECA  5032               	movf	(___flge@ff2+2)^0,w,c
  6339   005ECC  582E               	subwfb	(___flge@ff1+2)^0,w,c
  6340   005ECE  5033               	movf	(___flge@ff2+3)^0,w,c
  6341   005ED0  582F               	subwfb	(___flge@ff1+3)^0,w,c
  6342   005ED2  B0D8               	btfsc	status,0,c
  6343   005ED4  EF6E  F02F         	goto	u4581
  6344   005ED8  EF70  F02F         	goto	u4580
  6345   005EDC                     u4581:
  6346   005EDC  EF73  F02F         	goto	l3858
  6347   005EE0                     u4580:
  6348   005EE0  90D8               	bcf	status,0,c
  6349   005EE2  EF74  F02F         	goto	l413
  6350   005EE6                     l3858:
  6351   005EE6  80D8               	bsf	status,0,c
  6352   005EE8                     l413:
  6353   005EE8  0012               	return		;funcret
  6354   005EEA                     __end_of___flge:
  6355                           	callstack 0
  6356                           
  6357 ;; *************** function ___fleq *****************
  6358 ;; Defined at:
  6359 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;  ff1             4    4[COMRAM] unsigned char 
  6362 ;;  ff2             4    8[COMRAM] unsigned char 
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;		None
  6365 ;; Return value:  Size  Location     Type
  6366 ;;		None               void
  6367 ;; Registers used:
  6368 ;;		wreg, status,2, status,0
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6374 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6376 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6377 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6378 ;;Total ram usage:       12 bytes
  6379 ;; Hardware stack levels used: 1
  6380 ;; Hardware stack levels required when called: 1
  6381 ;; This function calls:
  6382 ;;		Nothing
  6383 ;; This function is called by:
  6384 ;;		_efgtoa
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           	psect	text22
  6389   00625A                     __ptext22:
  6390                           	callstack 0
  6391   00625A                     ___fleq:
  6392                           	callstack 25
  6393   00625A  0E00               	movlw	0
  6394   00625C  1405               	andwf	___fleq@ff1^0,w,c
  6395   00625E  6E0D               	movwf	??___fleq^0,c
  6396   006260  0E00               	movlw	0
  6397   006262  1406               	andwf	(___fleq@ff1+1)^0,w,c
  6398   006264  6E0E               	movwf	(??___fleq+1)^0,c
  6399   006266  0E80               	movlw	128
  6400   006268  1407               	andwf	(___fleq@ff1+2)^0,w,c
  6401   00626A  6E0F               	movwf	(??___fleq+2)^0,c
  6402   00626C  0E7F               	movlw	127
  6403   00626E  1408               	andwf	(___fleq@ff1+3)^0,w,c
  6404   006270  6E10               	movwf	(??___fleq+3)^0,c
  6405   006272  500D               	movf	??___fleq^0,w,c
  6406   006274  100E               	iorwf	(??___fleq+1)^0,w,c
  6407   006276  100F               	iorwf	(??___fleq+2)^0,w,c
  6408   006278  1010               	iorwf	(??___fleq+3)^0,w,c
  6409   00627A  A4D8               	btfss	status,2,c
  6410   00627C  EF42  F031         	goto	u4511
  6411   006280  EF44  F031         	goto	u4510
  6412   006284                     u4511:
  6413   006284  EF4C  F031         	goto	l3828
  6414   006288                     u4510:
  6415   006288  0E00               	movlw	0
  6416   00628A  6E05               	movwf	___fleq@ff1^0,c
  6417   00628C  0E00               	movlw	0
  6418   00628E  6E06               	movwf	(___fleq@ff1+1)^0,c
  6419   006290  0E00               	movlw	0
  6420   006292  6E07               	movwf	(___fleq@ff1+2)^0,c
  6421   006294  0E00               	movlw	0
  6422   006296  6E08               	movwf	(___fleq@ff1+3)^0,c
  6423   006298                     l3828:
  6424   006298  0E00               	movlw	0
  6425   00629A  1409               	andwf	___fleq@ff2^0,w,c
  6426   00629C  6E0D               	movwf	??___fleq^0,c
  6427   00629E  0E00               	movlw	0
  6428   0062A0  140A               	andwf	(___fleq@ff2+1)^0,w,c
  6429   0062A2  6E0E               	movwf	(??___fleq+1)^0,c
  6430   0062A4  0E80               	movlw	128
  6431   0062A6  140B               	andwf	(___fleq@ff2+2)^0,w,c
  6432   0062A8  6E0F               	movwf	(??___fleq+2)^0,c
  6433   0062AA  0E7F               	movlw	127
  6434   0062AC  140C               	andwf	(___fleq@ff2+3)^0,w,c
  6435   0062AE  6E10               	movwf	(??___fleq+3)^0,c
  6436   0062B0  500D               	movf	??___fleq^0,w,c
  6437   0062B2  100E               	iorwf	(??___fleq+1)^0,w,c
  6438   0062B4  100F               	iorwf	(??___fleq+2)^0,w,c
  6439   0062B6  1010               	iorwf	(??___fleq+3)^0,w,c
  6440   0062B8  A4D8               	btfss	status,2,c
  6441   0062BA  EF61  F031         	goto	u4521
  6442   0062BE  EF63  F031         	goto	u4520
  6443   0062C2                     u4521:
  6444   0062C2  EF6B  F031         	goto	l3832
  6445   0062C6                     u4520:
  6446   0062C6  0E00               	movlw	0
  6447   0062C8  6E09               	movwf	___fleq@ff2^0,c
  6448   0062CA  0E00               	movlw	0
  6449   0062CC  6E0A               	movwf	(___fleq@ff2+1)^0,c
  6450   0062CE  0E00               	movlw	0
  6451   0062D0  6E0B               	movwf	(___fleq@ff2+2)^0,c
  6452   0062D2  0E00               	movlw	0
  6453   0062D4  6E0C               	movwf	(___fleq@ff2+3)^0,c
  6454   0062D6                     l3832:
  6455   0062D6  5009               	movf	___fleq@ff2^0,w,c
  6456   0062D8  1805               	xorwf	___fleq@ff1^0,w,c
  6457   0062DA  E10F               	bnz	u4530
  6458   0062DC  500A               	movf	(___fleq@ff2+1)^0,w,c
  6459   0062DE  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  6460   0062E0  E10C               	bnz	u4530
  6461   0062E2  500B               	movf	(___fleq@ff2+2)^0,w,c
  6462   0062E4  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  6463   0062E6  E109               	bnz	u4530
  6464   0062E8  500C               	movf	(___fleq@ff2+3)^0,w,c
  6465   0062EA  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  6466   0062EC  B4D8               	btfsc	status,2,c
  6467   0062EE  EF7B  F031         	goto	u4531
  6468   0062F2  EF7D  F031         	goto	u4530
  6469   0062F6                     u4531:
  6470   0062F6  EF80  F031         	goto	l3836
  6471   0062FA                     u4530:
  6472   0062FA  90D8               	bcf	status,0,c
  6473   0062FC  EF81  F031         	goto	l402
  6474   006300                     l3836:
  6475   006300  80D8               	bsf	status,0,c
  6476   006302                     l402:
  6477   006302  0012               	return		;funcret
  6478   006304                     __end_of___fleq:
  6479                           	callstack 0
  6480                           
  6481 ;; *************** function ___fldiv *****************
  6482 ;; Defined at:
  6483 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  b               4    4[COMRAM] unsigned char 
  6486 ;;  a               4    8[COMRAM] unsigned char 
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;  grs             4   23[COMRAM] unsigned long 
  6489 ;;  rem             4   16[COMRAM] unsigned long 
  6490 ;;  new_exp         2   21[COMRAM] short 
  6491 ;;  aexp            1   28[COMRAM] unsigned char 
  6492 ;;  bexp            1   27[COMRAM] unsigned char 
  6493 ;;  sign            1   20[COMRAM] unsigned char 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  4    4[COMRAM] unsigned char 
  6496 ;; Registers used:
  6497 ;;		wreg, status,2, status,0
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6503 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6504 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6505 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6506 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6507 ;;Total ram usage:       25 bytes
  6508 ;; Hardware stack levels used: 1
  6509 ;; Hardware stack levels required when called: 1
  6510 ;; This function calls:
  6511 ;;		Nothing
  6512 ;; This function is called by:
  6513 ;;		_efgtoa
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           	psect	text23
  6518   00535E                     __ptext23:
  6519                           	callstack 0
  6520   00535E                     ___fldiv:
  6521                           	callstack 25
  6522   00535E  5008               	movf	(___fldiv@b+3)^0,w,c
  6523   005360  0B80               	andlw	128
  6524   005362  6E15               	movwf	___fldiv@sign^0,c
  6525   005364  5008               	movf	(___fldiv@b+3)^0,w,c
  6526   005366  2408               	addwf	(___fldiv@b+3)^0,w,c
  6527   005368  6E1C               	movwf	___fldiv@bexp^0,c
  6528   00536A  AE07               	btfss	(___fldiv@b+2)^0,7,c
  6529   00536C  EFBA  F029         	goto	u4091
  6530   005370  EFBC  F029         	goto	u4090
  6531   005374                     u4091:
  6532   005374  EFBD  F029         	goto	l3560
  6533   005378                     u4090:
  6534   005378  801C               	bsf	___fldiv@bexp^0,0,c
  6535   00537A                     l3560:
  6536   00537A  501C               	movf	___fldiv@bexp^0,w,c
  6537   00537C  B4D8               	btfsc	status,2,c
  6538   00537E  EFC3  F029         	goto	u4101
  6539   005382  EFC5  F029         	goto	u4100
  6540   005386                     u4101:
  6541   005386  EFD9  F029         	goto	l3570
  6542   00538A                     u4100:
  6543   00538A  281C               	incf	___fldiv@bexp^0,w,c
  6544   00538C  A4D8               	btfss	status,2,c
  6545   00538E  EFCB  F029         	goto	u4111
  6546   005392  EFCD  F029         	goto	u4110
  6547   005396                     u4111:
  6548   005396  EFD5  F029         	goto	l3566
  6549   00539A                     u4110:
  6550   00539A  0E00               	movlw	0
  6551   00539C  6E05               	movwf	___fldiv@b^0,c
  6552   00539E  0E00               	movlw	0
  6553   0053A0  6E06               	movwf	(___fldiv@b+1)^0,c
  6554   0053A2  0E00               	movlw	0
  6555   0053A4  6E07               	movwf	(___fldiv@b+2)^0,c
  6556   0053A6  0E00               	movlw	0
  6557   0053A8  6E08               	movwf	(___fldiv@b+3)^0,c
  6558   0053AA                     l3566:
  6559   0053AA  8E07               	bsf	(___fldiv@b+2)^0,7,c
  6560   0053AC  6A08               	clrf	(___fldiv@b+3)^0,c
  6561   0053AE  EFE1  F029         	goto	l3572
  6562   0053B2                     l3570:
  6563   0053B2  0E00               	movlw	0
  6564   0053B4  6E05               	movwf	___fldiv@b^0,c
  6565   0053B6  0E00               	movlw	0
  6566   0053B8  6E06               	movwf	(___fldiv@b+1)^0,c
  6567   0053BA  0E00               	movlw	0
  6568   0053BC  6E07               	movwf	(___fldiv@b+2)^0,c
  6569   0053BE  0E00               	movlw	0
  6570   0053C0  6E08               	movwf	(___fldiv@b+3)^0,c
  6571   0053C2                     l3572:
  6572   0053C2  500C               	movf	(___fldiv@a+3)^0,w,c
  6573   0053C4  0B80               	andlw	128
  6574   0053C6  1A15               	xorwf	___fldiv@sign^0,f,c
  6575   0053C8  500C               	movf	(___fldiv@a+3)^0,w,c
  6576   0053CA  240C               	addwf	(___fldiv@a+3)^0,w,c
  6577   0053CC  6E1D               	movwf	___fldiv@aexp^0,c
  6578   0053CE  AE0B               	btfss	(___fldiv@a+2)^0,7,c
  6579   0053D0  EFEC  F029         	goto	u4121
  6580   0053D4  EFEE  F029         	goto	u4120
  6581   0053D8                     u4121:
  6582   0053D8  EFEF  F029         	goto	l3580
  6583   0053DC                     u4120:
  6584   0053DC  801D               	bsf	___fldiv@aexp^0,0,c
  6585   0053DE                     l3580:
  6586   0053DE  501D               	movf	___fldiv@aexp^0,w,c
  6587   0053E0  B4D8               	btfsc	status,2,c
  6588   0053E2  EFF5  F029         	goto	u4131
  6589   0053E6  EFF7  F029         	goto	u4130
  6590   0053EA                     u4131:
  6591   0053EA  EF0B  F02A         	goto	l3590
  6592   0053EE                     u4130:
  6593   0053EE  281D               	incf	___fldiv@aexp^0,w,c
  6594   0053F0  A4D8               	btfss	status,2,c
  6595   0053F2  EFFD  F029         	goto	u4141
  6596   0053F6  EFFF  F029         	goto	u4140
  6597   0053FA                     u4141:
  6598   0053FA  EF07  F02A         	goto	l3586
  6599   0053FE                     u4140:
  6600   0053FE  0E00               	movlw	0
  6601   005400  6E09               	movwf	___fldiv@a^0,c
  6602   005402  0E00               	movlw	0
  6603   005404  6E0A               	movwf	(___fldiv@a+1)^0,c
  6604   005406  0E00               	movlw	0
  6605   005408  6E0B               	movwf	(___fldiv@a+2)^0,c
  6606   00540A  0E00               	movlw	0
  6607   00540C  6E0C               	movwf	(___fldiv@a+3)^0,c
  6608   00540E                     l3586:
  6609   00540E  8E0B               	bsf	(___fldiv@a+2)^0,7,c
  6610   005410  6A0C               	clrf	(___fldiv@a+3)^0,c
  6611   005412  EF13  F02A         	goto	l3592
  6612   005416                     l3590:
  6613   005416  0E00               	movlw	0
  6614   005418  6E09               	movwf	___fldiv@a^0,c
  6615   00541A  0E00               	movlw	0
  6616   00541C  6E0A               	movwf	(___fldiv@a+1)^0,c
  6617   00541E  0E00               	movlw	0
  6618   005420  6E0B               	movwf	(___fldiv@a+2)^0,c
  6619   005422  0E00               	movlw	0
  6620   005424  6E0C               	movwf	(___fldiv@a+3)^0,c
  6621   005426                     l3592:
  6622   005426  5009               	movf	___fldiv@a^0,w,c
  6623   005428  100A               	iorwf	(___fldiv@a+1)^0,w,c
  6624   00542A  100B               	iorwf	(___fldiv@a+2)^0,w,c
  6625   00542C  100C               	iorwf	(___fldiv@a+3)^0,w,c
  6626   00542E  A4D8               	btfss	status,2,c
  6627   005430  EF1C  F02A         	goto	u4151
  6628   005434  EF1E  F02A         	goto	u4150
  6629   005438                     u4151:
  6630   005438  EF36  F02A         	goto	l3604
  6631   00543C                     u4150:
  6632   00543C  0E00               	movlw	0
  6633   00543E  6E05               	movwf	___fldiv@b^0,c
  6634   005440  0E00               	movlw	0
  6635   005442  6E06               	movwf	(___fldiv@b+1)^0,c
  6636   005444  0E00               	movlw	0
  6637   005446  6E07               	movwf	(___fldiv@b+2)^0,c
  6638   005448  0E00               	movlw	0
  6639   00544A  6E08               	movwf	(___fldiv@b+3)^0,c
  6640   00544C  0E80               	movlw	128
  6641   00544E  1207               	iorwf	(___fldiv@b+2)^0,f,c
  6642   005450  0E7F               	movlw	127
  6643   005452  1208               	iorwf	(___fldiv@b+3)^0,f,c
  6644   005454                     l3598:
  6645   005454  5015               	movf	___fldiv@sign^0,w,c
  6646   005456  1208               	iorwf	(___fldiv@b+3)^0,f,c
  6647   005458  C005  F005         	movff	___fldiv@b,?___fldiv
  6648   00545C  C006  F006         	movff	___fldiv@b+1,?___fldiv+1
  6649   005460  C007  F007         	movff	___fldiv@b+2,?___fldiv+2
  6650   005464  C008  F008         	movff	___fldiv@b+3,?___fldiv+3
  6651   005468  EF76  F02B         	goto	l725
  6652   00546C                     l3604:
  6653   00546C  501C               	movf	___fldiv@bexp^0,w,c
  6654   00546E  A4D8               	btfss	status,2,c
  6655   005470  EF3C  F02A         	goto	u4161
  6656   005474  EF3E  F02A         	goto	u4160
  6657   005478                     u4161:
  6658   005478  EF48  F02A         	goto	l3612
  6659   00547C                     u4160:
  6660   00547C  0E00               	movlw	0
  6661   00547E  6E05               	movwf	?___fldiv^0,c
  6662   005480  0E00               	movlw	0
  6663   005482  6E06               	movwf	(?___fldiv+1)^0,c
  6664   005484  0E00               	movlw	0
  6665   005486  6E07               	movwf	(?___fldiv+2)^0,c
  6666   005488  0E00               	movlw	0
  6667   00548A  6E08               	movwf	(?___fldiv+3)^0,c
  6668   00548C  EF76  F02B         	goto	l725
  6669   005490                     l3612:
  6670   005490  501D               	movf	___fldiv@aexp^0,w,c
  6671   005492  C01C  F00D         	movff	___fldiv@bexp,??___fldiv
  6672   005496  6A0E               	clrf	(??___fldiv+1)^0,c
  6673   005498  5E0D               	subwf	??___fldiv^0,f,c
  6674   00549A  0E00               	movlw	0
  6675   00549C  5A0E               	subwfb	(??___fldiv+1)^0,f,c
  6676   00549E  0E7F               	movlw	127
  6677   0054A0  240D               	addwf	??___fldiv^0,w,c
  6678   0054A2  6E16               	movwf	___fldiv@new_exp^0,c
  6679   0054A4  0E00               	movlw	0
  6680   0054A6  200E               	addwfc	(??___fldiv+1)^0,w,c
  6681   0054A8  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  6682   0054AA  C005  F011         	movff	___fldiv@b,___fldiv@rem
  6683   0054AE  C006  F012         	movff	___fldiv@b+1,___fldiv@rem+1
  6684   0054B2  C007  F013         	movff	___fldiv@b+2,___fldiv@rem+2
  6685   0054B6  C008  F014         	movff	___fldiv@b+3,___fldiv@rem+3
  6686   0054BA  0E00               	movlw	0
  6687   0054BC  6E05               	movwf	___fldiv@b^0,c
  6688   0054BE  0E00               	movlw	0
  6689   0054C0  6E06               	movwf	(___fldiv@b+1)^0,c
  6690   0054C2  0E00               	movlw	0
  6691   0054C4  6E07               	movwf	(___fldiv@b+2)^0,c
  6692   0054C6  0E00               	movlw	0
  6693   0054C8  6E08               	movwf	(___fldiv@b+3)^0,c
  6694   0054CA  0E00               	movlw	0
  6695   0054CC  6E18               	movwf	___fldiv@grs^0,c
  6696   0054CE  0E00               	movlw	0
  6697   0054D0  6E19               	movwf	(___fldiv@grs+1)^0,c
  6698   0054D2  0E00               	movlw	0
  6699   0054D4  6E1A               	movwf	(___fldiv@grs+2)^0,c
  6700   0054D6  0E00               	movlw	0
  6701   0054D8  6E1B               	movwf	(___fldiv@grs+3)^0,c
  6702   0054DA  6A1D               	clrf	___fldiv@aexp^0,c
  6703   0054DC  EFA8  F02A         	goto	l727
  6704   0054E0                     l3622:
  6705   0054E0  501D               	movf	___fldiv@aexp^0,w,c
  6706   0054E2  B4D8               	btfsc	status,2,c
  6707   0054E4  EF76  F02A         	goto	u4171
  6708   0054E8  EF78  F02A         	goto	u4170
  6709   0054EC                     u4171:
  6710   0054EC  EF8F  F02A         	goto	l3630
  6711   0054F0                     u4170:
  6712   0054F0  90D8               	bcf	status,0,c
  6713   0054F2  3611               	rlcf	___fldiv@rem^0,f,c
  6714   0054F4  3612               	rlcf	(___fldiv@rem+1)^0,f,c
  6715   0054F6  3613               	rlcf	(___fldiv@rem+2)^0,f,c
  6716   0054F8  3614               	rlcf	(___fldiv@rem+3)^0,f,c
  6717   0054FA  90D8               	bcf	status,0,c
  6718   0054FC  3605               	rlcf	___fldiv@b^0,f,c
  6719   0054FE  3606               	rlcf	(___fldiv@b+1)^0,f,c
  6720   005500  3607               	rlcf	(___fldiv@b+2)^0,f,c
  6721   005502  3608               	rlcf	(___fldiv@b+3)^0,f,c
  6722   005504  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6723   005506  EF87  F02A         	goto	u4181
  6724   00550A  EF89  F02A         	goto	u4180
  6725   00550E                     u4181:
  6726   00550E  EF8A  F02A         	goto	l730
  6727   005512                     u4180:
  6728   005512  8005               	bsf	___fldiv@b^0,0,c
  6729   005514                     l730:
  6730   005514  90D8               	bcf	status,0,c
  6731   005516  3618               	rlcf	___fldiv@grs^0,f,c
  6732   005518  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  6733   00551A  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  6734   00551C  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  6735   00551E                     l3630:
  6736   00551E  5009               	movf	___fldiv@a^0,w,c
  6737   005520  5C11               	subwf	___fldiv@rem^0,w,c
  6738   005522  500A               	movf	(___fldiv@a+1)^0,w,c
  6739   005524  5812               	subwfb	(___fldiv@rem+1)^0,w,c
  6740   005526  500B               	movf	(___fldiv@a+2)^0,w,c
  6741   005528  5813               	subwfb	(___fldiv@rem+2)^0,w,c
  6742   00552A  500C               	movf	(___fldiv@a+3)^0,w,c
  6743   00552C  5814               	subwfb	(___fldiv@rem+3)^0,w,c
  6744   00552E  A0D8               	btfss	status,0,c
  6745   005530  EF9C  F02A         	goto	u4191
  6746   005534  EF9E  F02A         	goto	u4190
  6747   005538                     u4191:
  6748   005538  EFA7  F02A         	goto	l3636
  6749   00553C                     u4190:
  6750   00553C  8C1B               	bsf	(___fldiv@grs+3)^0,6,c
  6751   00553E  5009               	movf	___fldiv@a^0,w,c
  6752   005540  5E11               	subwf	___fldiv@rem^0,f,c
  6753   005542  500A               	movf	(___fldiv@a+1)^0,w,c
  6754   005544  5A12               	subwfb	(___fldiv@rem+1)^0,f,c
  6755   005546  500B               	movf	(___fldiv@a+2)^0,w,c
  6756   005548  5A13               	subwfb	(___fldiv@rem+2)^0,f,c
  6757   00554A  500C               	movf	(___fldiv@a+3)^0,w,c
  6758   00554C  5A14               	subwfb	(___fldiv@rem+3)^0,f,c
  6759   00554E                     l3636:
  6760   00554E  2A1D               	incf	___fldiv@aexp^0,f,c
  6761   005550                     l727:
  6762   005550  0E19               	movlw	25
  6763   005552  641D               	cpfsgt	___fldiv@aexp^0,c
  6764   005554  EFAE  F02A         	goto	u4201
  6765   005558  EFB0  F02A         	goto	u4200
  6766   00555C                     u4201:
  6767   00555C  EF70  F02A         	goto	l3622
  6768   005560                     u4200:
  6769   005560  5011               	movf	___fldiv@rem^0,w,c
  6770   005562  1012               	iorwf	(___fldiv@rem+1)^0,w,c
  6771   005564  1013               	iorwf	(___fldiv@rem+2)^0,w,c
  6772   005566  1014               	iorwf	(___fldiv@rem+3)^0,w,c
  6773   005568  B4D8               	btfsc	status,2,c
  6774   00556A  EFB9  F02A         	goto	u4211
  6775   00556E  EFBB  F02A         	goto	u4210
  6776   005572                     u4211:
  6777   005572  EFD3  F02A         	goto	l3648
  6778   005576                     u4210:
  6779   005576  8018               	bsf	___fldiv@grs^0,0,c
  6780   005578  EFD3  F02A         	goto	l3648
  6781   00557C                     l3642:
  6782   00557C  90D8               	bcf	status,0,c
  6783   00557E  3605               	rlcf	___fldiv@b^0,f,c
  6784   005580  3606               	rlcf	(___fldiv@b+1)^0,f,c
  6785   005582  3607               	rlcf	(___fldiv@b+2)^0,f,c
  6786   005584  3608               	rlcf	(___fldiv@b+3)^0,f,c
  6787   005586  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6788   005588  EFC8  F02A         	goto	u4221
  6789   00558C  EFCA  F02A         	goto	u4220
  6790   005590                     u4221:
  6791   005590  EFCB  F02A         	goto	l736
  6792   005594                     u4220:
  6793   005594  8005               	bsf	___fldiv@b^0,0,c
  6794   005596                     l736:
  6795   005596  90D8               	bcf	status,0,c
  6796   005598  3618               	rlcf	___fldiv@grs^0,f,c
  6797   00559A  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  6798   00559C  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  6799   00559E  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  6800   0055A0  0616               	decf	___fldiv@new_exp^0,f,c
  6801   0055A2  A0D8               	btfss	status,0,c
  6802   0055A4  0617               	decf	(___fldiv@new_exp+1)^0,f,c
  6803   0055A6                     l3648:
  6804   0055A6  AE07               	btfss	(___fldiv@b+2)^0,7,c
  6805   0055A8  EFD8  F02A         	goto	u4231
  6806   0055AC  EFDA  F02A         	goto	u4230
  6807   0055B0                     u4231:
  6808   0055B0  EFBE  F02A         	goto	l3642
  6809   0055B4                     u4230:
  6810   0055B4  6A1D               	clrf	___fldiv@aexp^0,c
  6811   0055B6  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6812   0055B8  EFE0  F02A         	goto	u4241
  6813   0055BC  EFE2  F02A         	goto	u4240
  6814   0055C0                     u4241:
  6815   0055C0  EF06  F02B         	goto	l738
  6816   0055C4                     u4240:
  6817   0055C4  0EFF               	movlw	255
  6818   0055C6  1418               	andwf	___fldiv@grs^0,w,c
  6819   0055C8  6E0D               	movwf	??___fldiv^0,c
  6820   0055CA  0EFF               	movlw	255
  6821   0055CC  1419               	andwf	(___fldiv@grs+1)^0,w,c
  6822   0055CE  6E0E               	movwf	(??___fldiv+1)^0,c
  6823   0055D0  0EFF               	movlw	255
  6824   0055D2  141A               	andwf	(___fldiv@grs+2)^0,w,c
  6825   0055D4  6E0F               	movwf	(??___fldiv+2)^0,c
  6826   0055D6  0E7F               	movlw	127
  6827   0055D8  141B               	andwf	(___fldiv@grs+3)^0,w,c
  6828   0055DA  6E10               	movwf	(??___fldiv+3)^0,c
  6829   0055DC  500D               	movf	??___fldiv^0,w,c
  6830   0055DE  100E               	iorwf	(??___fldiv+1)^0,w,c
  6831   0055E0  100F               	iorwf	(??___fldiv+2)^0,w,c
  6832   0055E2  1010               	iorwf	(??___fldiv+3)^0,w,c
  6833   0055E4  B4D8               	btfsc	status,2,c
  6834   0055E6  EFF7  F02A         	goto	u4251
  6835   0055EA  EFF9  F02A         	goto	u4250
  6836   0055EE                     u4251:
  6837   0055EE  EFFD  F02A         	goto	l739
  6838   0055F2                     u4250:
  6839   0055F2                     l3652:
  6840   0055F2  0E01               	movlw	1
  6841   0055F4  6E1D               	movwf	___fldiv@aexp^0,c
  6842   0055F6  EF06  F02B         	goto	l738
  6843   0055FA                     l739:
  6844   0055FA  A005               	btfss	___fldiv@b^0,0,c
  6845   0055FC  EF02  F02B         	goto	u4261
  6846   005600  EF04  F02B         	goto	u4260
  6847   005604                     u4261:
  6848   005604  EF06  F02B         	goto	l738
  6849   005608                     u4260:
  6850   005608  EFF9  F02A         	goto	l3652
  6851   00560C                     l738:
  6852   00560C  501D               	movf	___fldiv@aexp^0,w,c
  6853   00560E  B4D8               	btfsc	status,2,c
  6854   005610  EF0C  F02B         	goto	u4271
  6855   005614  EF0E  F02B         	goto	u4270
  6856   005618                     u4271:
  6857   005618  EF32  F02B         	goto	l3664
  6858   00561C                     u4270:
  6859   00561C  0E01               	movlw	1
  6860   00561E  2605               	addwf	___fldiv@b^0,f,c
  6861   005620  0E00               	movlw	0
  6862   005622  2206               	addwfc	(___fldiv@b+1)^0,f,c
  6863   005624  2207               	addwfc	(___fldiv@b+2)^0,f,c
  6864   005626  2208               	addwfc	(___fldiv@b+3)^0,f,c
  6865   005628  A008               	btfss	(___fldiv@b+3)^0,0,c
  6866   00562A  EF19  F02B         	goto	u4281
  6867   00562E  EF1B  F02B         	goto	u4280
  6868   005632                     u4281:
  6869   005632  EF32  F02B         	goto	l3664
  6870   005636                     u4280:
  6871   005636  C005  F00D         	movff	___fldiv@b,??___fldiv
  6872   00563A  C006  F00E         	movff	___fldiv@b+1,??___fldiv+1
  6873   00563E  C007  F00F         	movff	___fldiv@b+2,??___fldiv+2
  6874   005642  C008  F010         	movff	___fldiv@b+3,??___fldiv+3
  6875   005646  3410               	rlcf	(??___fldiv+3)^0,w,c
  6876   005648  3210               	rrcf	(??___fldiv+3)^0,f,c
  6877   00564A  320F               	rrcf	(??___fldiv+2)^0,f,c
  6878   00564C  320E               	rrcf	(??___fldiv+1)^0,f,c
  6879   00564E  320D               	rrcf	??___fldiv^0,f,c
  6880   005650  C00D  F005         	movff	??___fldiv,___fldiv@b
  6881   005654  C00E  F006         	movff	??___fldiv+1,___fldiv@b+1
  6882   005658  C00F  F007         	movff	??___fldiv+2,___fldiv@b+2
  6883   00565C  C010  F008         	movff	??___fldiv+3,___fldiv@b+3
  6884   005660  4A16               	infsnz	___fldiv@new_exp^0,f,c
  6885   005662  2A17               	incf	(___fldiv@new_exp+1)^0,f,c
  6886   005664                     l3664:
  6887   005664  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6888   005666  EF3D  F02B         	goto	u4291
  6889   00566A  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  6890   00566C  E108               	bnz	u4290
  6891   00566E  2816               	incf	___fldiv@new_exp^0,w,c
  6892   005670  A0D8               	btfss	status,0,c
  6893   005672  EF3D  F02B         	goto	u4291
  6894   005676  EF3F  F02B         	goto	u4290
  6895   00567A                     u4291:
  6896   00567A  EF4A  F02B         	goto	l3668
  6897   00567E                     u4290:
  6898   00567E  0E00               	movlw	0
  6899   005680  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  6900   005682  6816               	setf	___fldiv@new_exp^0,c
  6901   005684  0E00               	movlw	0
  6902   005686  6E05               	movwf	___fldiv@b^0,c
  6903   005688  0E00               	movlw	0
  6904   00568A  6E06               	movwf	(___fldiv@b+1)^0,c
  6905   00568C  0E00               	movlw	0
  6906   00568E  6E07               	movwf	(___fldiv@b+2)^0,c
  6907   005690  0E00               	movlw	0
  6908   005692  6E08               	movwf	(___fldiv@b+3)^0,c
  6909   005694                     l3668:
  6910   005694  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6911   005696  EF57  F02B         	goto	u4300
  6912   00569A  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  6913   00569C  E106               	bnz	u4301
  6914   00569E  0416               	decf	___fldiv@new_exp^0,w,c
  6915   0056A0  B0D8               	btfsc	status,0,c
  6916   0056A2  EF55  F02B         	goto	u4301
  6917   0056A6  EF57  F02B         	goto	u4300
  6918   0056AA                     u4301:
  6919   0056AA  EF64  F02B         	goto	l3674
  6920   0056AE                     u4300:
  6921   0056AE  0E00               	movlw	0
  6922   0056B0  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  6923   0056B2  0E00               	movlw	0
  6924   0056B4  6E16               	movwf	___fldiv@new_exp^0,c
  6925   0056B6  0E00               	movlw	0
  6926   0056B8  6E05               	movwf	___fldiv@b^0,c
  6927   0056BA  0E00               	movlw	0
  6928   0056BC  6E06               	movwf	(___fldiv@b+1)^0,c
  6929   0056BE  0E00               	movlw	0
  6930   0056C0  6E07               	movwf	(___fldiv@b+2)^0,c
  6931   0056C2  0E00               	movlw	0
  6932   0056C4  6E08               	movwf	(___fldiv@b+3)^0,c
  6933   0056C6  6A15               	clrf	___fldiv@sign^0,c
  6934   0056C8                     l3674:
  6935   0056C8  C016  F01C         	movff	___fldiv@new_exp,___fldiv@bexp
  6936   0056CC  A01C               	btfss	___fldiv@bexp^0,0,c
  6937   0056CE  EF6B  F02B         	goto	u4311
  6938   0056D2  EF6D  F02B         	goto	u4310
  6939   0056D6                     u4311:
  6940   0056D6  EF70  F02B         	goto	l3680
  6941   0056DA                     u4310:
  6942   0056DA  8E07               	bsf	(___fldiv@b+2)^0,7,c
  6943   0056DC  EF71  F02B         	goto	l3682
  6944   0056E0                     l3680:
  6945   0056E0  9E07               	bcf	(___fldiv@b+2)^0,7,c
  6946   0056E2                     l3682:
  6947   0056E2  90D8               	bcf	status,0,c
  6948   0056E4  301C               	rrcf	___fldiv@bexp^0,w,c
  6949   0056E6  6E08               	movwf	(___fldiv@b+3)^0,c
  6950   0056E8  EF2A  F02A         	goto	l3598
  6951   0056EC                     l725:
  6952   0056EC  0012               	return		;funcret
  6953   0056EE                     __end_of___fldiv:
  6954                           	callstack 0
  6955                           
  6956 ;; *************** function ___xxtofl *****************
  6957 ;; Defined at:
  6958 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;  sign            1    wreg     unsigned char 
  6961 ;;  val             4    4[COMRAM] long 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;  sign            1   12[COMRAM] unsigned char 
  6964 ;;  arg             4   14[COMRAM] unsigned long 
  6965 ;;  exp             1   13[COMRAM] unsigned char 
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  4    4[COMRAM] unsigned char 
  6968 ;; Registers used:
  6969 ;;		wreg, status,2, status,0
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6975 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6976 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6977 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6978 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6979 ;;Total ram usage:       14 bytes
  6980 ;; Hardware stack levels used: 1
  6981 ;; Hardware stack levels required when called: 1
  6982 ;; This function calls:
  6983 ;;		Nothing
  6984 ;; This function is called by:
  6985 ;;		_main
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text24
  6990   005B2C                     __ptext24:
  6991                           	callstack 0
  6992   005B2C                     ___xxtofl:
  6993                           	callstack 29
  6994                           
  6995                           ;incstack = 0
  6996                           ;___xxtofl@sign stored from wreg
  6997   005B2C  6E0D               	movwf	___xxtofl@sign^0,c
  6998   005B2E  500D               	movf	___xxtofl@sign^0,w,c
  6999   005B30  B4D8               	btfsc	status,2,c
  7000   005B32  EF9D  F02D         	goto	u3541
  7001   005B36  EF9F  F02D         	goto	u3540
  7002   005B3A                     u3541:
  7003   005B3A  EFC1  F02D         	goto	l798
  7004   005B3E                     u3540:
  7005   005B3E  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7006   005B40  EFA6  F02D         	goto	u3550
  7007   005B44  EFA4  F02D         	goto	u3551
  7008   005B48                     u3551:
  7009   005B48  EFC1  F02D         	goto	l798
  7010   005B4C                     u3550:
  7011   005B4C  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7012   005B50  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  7013   005B54  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  7014   005B58  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  7015   005B5C  1E09               	comf	??___xxtofl^0,f,c
  7016   005B5E  1E0A               	comf	(??___xxtofl+1)^0,f,c
  7017   005B60  1E0B               	comf	(??___xxtofl+2)^0,f,c
  7018   005B62  1E0C               	comf	(??___xxtofl+3)^0,f,c
  7019   005B64  2A09               	incf	??___xxtofl^0,f,c
  7020   005B66  0E00               	movlw	0
  7021   005B68  220A               	addwfc	(??___xxtofl+1)^0,f,c
  7022   005B6A  220B               	addwfc	(??___xxtofl+2)^0,f,c
  7023   005B6C  220C               	addwfc	(??___xxtofl+3)^0,f,c
  7024   005B6E  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  7025   005B72  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  7026   005B76  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  7027   005B7A  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  7028   005B7E  EFC9  F02D         	goto	l3270
  7029   005B82                     l798:
  7030   005B82  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  7031   005B86  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7032   005B8A  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7033   005B8E  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7034   005B92                     l3270:
  7035   005B92  5005               	movf	___xxtofl@val^0,w,c
  7036   005B94  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  7037   005B96  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  7038   005B98  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  7039   005B9A  A4D8               	btfss	status,2,c
  7040   005B9C  EFD2  F02D         	goto	u3561
  7041   005BA0  EFD4  F02D         	goto	u3560
  7042   005BA4                     u3561:
  7043   005BA4  EFDE  F02D         	goto	l3276
  7044   005BA8                     u3560:
  7045   005BA8  0E00               	movlw	0
  7046   005BAA  6E05               	movwf	?___xxtofl^0,c
  7047   005BAC  0E00               	movlw	0
  7048   005BAE  6E06               	movwf	(?___xxtofl+1)^0,c
  7049   005BB0  0E00               	movlw	0
  7050   005BB2  6E07               	movwf	(?___xxtofl+2)^0,c
  7051   005BB4  0E00               	movlw	0
  7052   005BB6  6E08               	movwf	(?___xxtofl+3)^0,c
  7053   005BB8  EF6F  F02E         	goto	l801
  7054   005BBC                     l3276:
  7055   005BBC  0E96               	movlw	150
  7056   005BBE  6E0E               	movwf	___xxtofl@exp^0,c
  7057   005BC0  EFE8  F02D         	goto	l3280
  7058   005BC4                     l3278:
  7059   005BC4  2A0E               	incf	___xxtofl@exp^0,f,c
  7060   005BC6  90D8               	bcf	status,0,c
  7061   005BC8  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7062   005BCA  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7063   005BCC  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7064   005BCE  320F               	rrcf	___xxtofl@arg^0,f,c
  7065   005BD0                     l3280:
  7066   005BD0  0E00               	movlw	0
  7067   005BD2  140F               	andwf	___xxtofl@arg^0,w,c
  7068   005BD4  6E09               	movwf	??___xxtofl^0,c
  7069   005BD6  0E00               	movlw	0
  7070   005BD8  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7071   005BDA  6E0A               	movwf	(??___xxtofl+1)^0,c
  7072   005BDC  0E00               	movlw	0
  7073   005BDE  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7074   005BE0  6E0B               	movwf	(??___xxtofl+2)^0,c
  7075   005BE2  0EFE               	movlw	254
  7076   005BE4  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7077   005BE6  6E0C               	movwf	(??___xxtofl+3)^0,c
  7078   005BE8  5009               	movf	??___xxtofl^0,w,c
  7079   005BEA  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7080   005BEC  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7081   005BEE  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7082   005BF0  A4D8               	btfss	status,2,c
  7083   005BF2  EFFD  F02D         	goto	u3571
  7084   005BF6  EFFF  F02D         	goto	u3570
  7085   005BFA                     u3571:
  7086   005BFA  EFE2  F02D         	goto	l3278
  7087   005BFE                     u3570:
  7088   005BFE  EF0D  F02E         	goto	l805
  7089   005C02                     l3282:
  7090   005C02  2A0E               	incf	___xxtofl@exp^0,f,c
  7091   005C04  0E01               	movlw	1
  7092   005C06  260F               	addwf	___xxtofl@arg^0,f,c
  7093   005C08  0E00               	movlw	0
  7094   005C0A  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  7095   005C0C  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  7096   005C0E  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  7097   005C10  90D8               	bcf	status,0,c
  7098   005C12  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7099   005C14  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7100   005C16  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7101   005C18  320F               	rrcf	___xxtofl@arg^0,f,c
  7102   005C1A                     l805:
  7103   005C1A  0E00               	movlw	0
  7104   005C1C  140F               	andwf	___xxtofl@arg^0,w,c
  7105   005C1E  6E09               	movwf	??___xxtofl^0,c
  7106   005C20  0E00               	movlw	0
  7107   005C22  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7108   005C24  6E0A               	movwf	(??___xxtofl+1)^0,c
  7109   005C26  0E00               	movlw	0
  7110   005C28  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7111   005C2A  6E0B               	movwf	(??___xxtofl+2)^0,c
  7112   005C2C  0EFF               	movlw	255
  7113   005C2E  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7114   005C30  6E0C               	movwf	(??___xxtofl+3)^0,c
  7115   005C32  5009               	movf	??___xxtofl^0,w,c
  7116   005C34  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7117   005C36  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7118   005C38  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7119   005C3A  A4D8               	btfss	status,2,c
  7120   005C3C  EF22  F02E         	goto	u3581
  7121   005C40  EF24  F02E         	goto	u3580
  7122   005C44                     u3581:
  7123   005C44  EF01  F02E         	goto	l3282
  7124   005C48                     u3580:
  7125   005C48  EF2C  F02E         	goto	l3290
  7126   005C4C                     l3288:
  7127   005C4C  060E               	decf	___xxtofl@exp^0,f,c
  7128   005C4E  90D8               	bcf	status,0,c
  7129   005C50  360F               	rlcf	___xxtofl@arg^0,f,c
  7130   005C52  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  7131   005C54  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  7132   005C56  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  7133   005C58                     l3290:
  7134   005C58  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  7135   005C5A  EF31  F02E         	goto	u3591
  7136   005C5E  EF33  F02E         	goto	u3590
  7137   005C62                     u3591:
  7138   005C62  EF3B  F02E         	goto	l812
  7139   005C66                     u3590:
  7140   005C66  0E02               	movlw	2
  7141   005C68  600E               	cpfslt	___xxtofl@exp^0,c
  7142   005C6A  EF39  F02E         	goto	u3601
  7143   005C6E  EF3B  F02E         	goto	u3600
  7144   005C72                     u3601:
  7145   005C72  EF26  F02E         	goto	l3288
  7146   005C76                     u3600:
  7147   005C76                     l812:
  7148   005C76  B00E               	btfsc	___xxtofl@exp^0,0,c
  7149   005C78  EF40  F02E         	goto	u3611
  7150   005C7C  EF42  F02E         	goto	u3610
  7151   005C80                     u3611:
  7152   005C80  EF43  F02E         	goto	l3296
  7153   005C84                     u3610:
  7154   005C84  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  7155   005C86                     l3296:
  7156   005C86  90D8               	bcf	status,0,c
  7157   005C88  320E               	rrcf	___xxtofl@exp^0,f,c
  7158   005C8A  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  7159   005C8E  6A0A               	clrf	(??___xxtofl+1)^0,c
  7160   005C90  6A0B               	clrf	(??___xxtofl+2)^0,c
  7161   005C92  6A0C               	clrf	(??___xxtofl+3)^0,c
  7162   005C94  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  7163   005C98  6A0B               	clrf	(??___xxtofl+2)^0,c
  7164   005C9A  6A0A               	clrf	(??___xxtofl+1)^0,c
  7165   005C9C  6A09               	clrf	??___xxtofl^0,c
  7166   005C9E  5009               	movf	??___xxtofl^0,w,c
  7167   005CA0  120F               	iorwf	___xxtofl@arg^0,f,c
  7168   005CA2  500A               	movf	(??___xxtofl+1)^0,w,c
  7169   005CA4  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  7170   005CA6  500B               	movf	(??___xxtofl+2)^0,w,c
  7171   005CA8  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  7172   005CAA  500C               	movf	(??___xxtofl+3)^0,w,c
  7173   005CAC  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  7174   005CAE  500D               	movf	___xxtofl@sign^0,w,c
  7175   005CB0  B4D8               	btfsc	status,2,c
  7176   005CB2  EF5D  F02E         	goto	u3621
  7177   005CB6  EF5F  F02E         	goto	u3620
  7178   005CBA                     u3621:
  7179   005CBA  EF67  F02E         	goto	l3306
  7180   005CBE                     u3620:
  7181   005CBE  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7182   005CC0  EF66  F02E         	goto	u3630
  7183   005CC4  EF64  F02E         	goto	u3631
  7184   005CC8                     u3631:
  7185   005CC8  EF67  F02E         	goto	l3306
  7186   005CCC                     u3630:
  7187   005CCC  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  7188   005CCE                     l3306:
  7189   005CCE  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  7190   005CD2  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  7191   005CD6  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  7192   005CDA  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  7193   005CDE                     l801:
  7194   005CDE  0012               	return		;funcret
  7195   005CE0                     __end_of___xxtofl:
  7196                           	callstack 0
  7197                           
  7198 ;; *************** function _LCD_String_xy *****************
  7199 ;; Defined at:
  7200 ;;		line 281 in file "ACD_LCD_main.c"
  7201 ;; Parameters:    Size  Location     Type
  7202 ;;  row             1    wreg     unsigned char 
  7203 ;;  pos             1   13[COMRAM] unsigned char 
  7204 ;;  msg             2   14[COMRAM] PTR const unsigned char 
  7205 ;;		 -> data(10), STR_1(9), 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;  row             1   16[COMRAM] unsigned char 
  7208 ;;  location        1   17[COMRAM] unsigned char 
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      void 
  7211 ;; Registers used:
  7212 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7218 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7219 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7221 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7222 ;;Total ram usage:        5 bytes
  7223 ;; Hardware stack levels used: 1
  7224 ;; Hardware stack levels required when called: 4
  7225 ;; This function calls:
  7226 ;;		_LCD_Command
  7227 ;;		_LCD_String
  7228 ;; This function is called by:
  7229 ;;		_main
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text25
  7234   0066B2                     __ptext25:
  7235                           	callstack 0
  7236   0066B2                     _LCD_String_xy:
  7237                           	callstack 26
  7238                           
  7239                           ;incstack = 0
  7240                           ;LCD_String_xy@row stored from wreg
  7241   0066B2  6E11               	movwf	LCD_String_xy@row^0,c
  7242   0066B4                     
  7243                           ;ACD_LCD_main.c: 284:     if(row<=1)
  7244   0066B4  0E02               	movlw	2
  7245   0066B6  6011               	cpfslt	LCD_String_xy@row^0,c
  7246   0066B8  EF60  F033         	goto	u3511
  7247   0066BC  EF62  F033         	goto	u3510
  7248   0066C0                     u3511:
  7249   0066C0  EF6B  F033         	goto	l3236
  7250   0066C4                     u3510:
  7251   0066C4                     
  7252                           ;ACD_LCD_main.c: 285:     {;ACD_LCD_main.c: 286:         location=(0x80) | ((pos) & 0x0f
      +                          );
  7253   0066C4  500E               	movf	LCD_String_xy@pos^0,w,c
  7254   0066C6  0B0F               	andlw	15
  7255   0066C8  0980               	iorlw	128
  7256   0066CA  6E12               	movwf	LCD_String_xy@location^0,c
  7257   0066CC                     
  7258                           ;ACD_LCD_main.c: 287:         LCD_Command(location);
  7259   0066CC  5012               	movf	LCD_String_xy@location^0,w,c
  7260   0066CE  EC11  F034         	call	_LCD_Command
  7261                           
  7262                           ;ACD_LCD_main.c: 288:     }
  7263   0066D2  EF72  F033         	goto	l3240
  7264   0066D6                     l3236:
  7265                           
  7266                           ;ACD_LCD_main.c: 290:     {;ACD_LCD_main.c: 291:         location=(0xC0) | ((pos) & 0x0f
      +                          );
  7267   0066D6  500E               	movf	LCD_String_xy@pos^0,w,c
  7268   0066D8  0B0F               	andlw	15
  7269   0066DA  09C0               	iorlw	192
  7270   0066DC  6E12               	movwf	LCD_String_xy@location^0,c
  7271   0066DE                     
  7272                           ;ACD_LCD_main.c: 292:         LCD_Command(location);
  7273   0066DE  5012               	movf	LCD_String_xy@location^0,w,c
  7274   0066E0  EC11  F034         	call	_LCD_Command
  7275   0066E4                     l3240:
  7276                           
  7277                           ;ACD_LCD_main.c: 294:     LCD_String(msg);
  7278   0066E4  C00F  F00C         	movff	LCD_String_xy@msg,LCD_String@msg
  7279   0066E8  C010  F00D         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  7280   0066EC  EC82  F031         	call	_LCD_String	;wreg free
  7281   0066F0  0012               	return		;funcret
  7282   0066F2                     __end_of_LCD_String_xy:
  7283                           	callstack 0
  7284                           
  7285 ;; *************** function _LCD_String *****************
  7286 ;; Defined at:
  7287 ;;		line 272 in file "ACD_LCD_main.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;  msg             2   11[COMRAM] PTR const unsigned char 
  7290 ;;		 -> data(10), STR_1(9), 
  7291 ;; Auto vars:     Size  Location     Type
  7292 ;;		None
  7293 ;; Return value:  Size  Location     Type
  7294 ;;                  1    wreg      void 
  7295 ;; Registers used:
  7296 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7297 ;; Tracked objects:
  7298 ;;		On entry : 0/0
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7305 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7306 ;;Total ram usage:        2 bytes
  7307 ;; Hardware stack levels used: 1
  7308 ;; Hardware stack levels required when called: 3
  7309 ;; This function calls:
  7310 ;;		_LCD_Char
  7311 ;; This function is called by:
  7312 ;;		_LCD_String_xy
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316                           	psect	text26
  7317   006304                     __ptext26:
  7318                           	callstack 0
  7319   006304                     _LCD_String:
  7320                           	callstack 26
  7321   006304                     
  7322                           ;ACD_LCD_main.c: 272: void LCD_String(const char *msg);ACD_LCD_main.c: 273: {;ACD_LCD_ma
      +                          in.c: 274:     while((*msg)!=0)
  7323   006304  EF9D  F031         	goto	l3180
  7324   006308                     l3176:
  7325                           
  7326                           ;ACD_LCD_main.c: 275:     {;ACD_LCD_main.c: 276:       LCD_Char(*msg);
  7327   006308  0060  F033  FFF6   	movff	LCD_String@msg,tblptrl
  7328   00630E  0060  F037  FFF7   	movff	LCD_String@msg+1,tblptrh
  7329   006314  0E00               	movlw	low (__smallconst shr (0+16))
  7330   006316  6EF8               	movwf	tblptru,c
  7331   006318  0E1F               	movlw	(high __ramtop+-1)
  7332   00631A  64F7               	cpfsgt	tblptrh,c
  7333   00631C  D003               	bra	u3477
  7334   00631E  0008               	tblrd		*
  7335   006320  50F5               	movf	tablat,w,c
  7336   006322  D007               	bra	u3470
  7337   006324                     u3477:
  7338   006324  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7339   00632A  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7340   006330  50E7               	movf	indf1,w,c
  7341   006332                     u3470:
  7342   006332  EC02  F034         	call	_LCD_Char
  7343   006336                     
  7344                           ;ACD_LCD_main.c: 277:       msg++;
  7345   006336  4A0C               	infsnz	LCD_String@msg^0,f,c
  7346   006338  2A0D               	incf	(LCD_String@msg+1)^0,f,c
  7347   00633A                     l3180:
  7348                           
  7349                           ;ACD_LCD_main.c: 274:     while((*msg)!=0)
  7350   00633A  0060  F033  FFF6   	movff	LCD_String@msg,tblptrl
  7351   006340  0060  F037  FFF7   	movff	LCD_String@msg+1,tblptrh
  7352   006346  0E00               	movlw	low (__smallconst shr (0+16))
  7353   006348  6EF8               	movwf	tblptru,c
  7354   00634A  0E1F               	movlw	(high __ramtop+-1)
  7355   00634C  64F7               	cpfsgt	tblptrh,c
  7356   00634E  D003               	bra	u3487
  7357   006350  0008               	tblrd		*
  7358   006352  50F5               	movf	tablat,w,c
  7359   006354  D007               	bra	u3480
  7360   006356                     u3487:
  7361   006356  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7362   00635C  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7363   006362  50E7               	movf	indf1,w,c
  7364   006364                     u3480:
  7365   006364  0900               	iorlw	0
  7366   006366  A4D8               	btfss	status,2,c
  7367   006368  EFB8  F031         	goto	u3491
  7368   00636C  EFBA  F031         	goto	u3490
  7369   006370                     u3491:
  7370   006370  EF84  F031         	goto	l3176
  7371   006374                     u3490:
  7372   006374  0012               	return		;funcret
  7373   006376                     __end_of_LCD_String:
  7374                           	callstack 0
  7375                           
  7376 ;; *************** function _LCD_Char *****************
  7377 ;; Defined at:
  7378 ;;		line 261 in file "ACD_LCD_main.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  dat             1    wreg     unsigned char 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;  dat             1   10[COMRAM] unsigned char 
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  1    wreg      void 
  7385 ;; Registers used:
  7386 ;;		wreg, status,2, status,0, cstack
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7395 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7396 ;;Total ram usage:        1 bytes
  7397 ;; Hardware stack levels used: 1
  7398 ;; Hardware stack levels required when called: 2
  7399 ;; This function calls:
  7400 ;;		_MSdelay
  7401 ;; This function is called by:
  7402 ;;		_LCD_String
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           	psect	text27
  7407   006804                     __ptext27:
  7408                           	callstack 0
  7409   006804                     _LCD_Char:
  7410                           	callstack 26
  7411                           
  7412                           ;incstack = 0
  7413                           ;LCD_Char@dat stored from wreg
  7414   006804  6E0B               	movwf	LCD_Char@dat^0,c
  7415   006806                     
  7416                           ;ACD_LCD_main.c: 261: void LCD_Char(char dat);ACD_LCD_main.c: 262: {;ACD_LCD_main.c: 263
      +                          :     LATB= dat;
  7417   006806  0060  F02F  FFBB   	movff	LCD_Char@dat,16315	;volatile
  7418   00680C                     
  7419                           ;ACD_LCD_main.c: 264:     LATD0 = 1;
  7420   00680C  80BD               	bsf	16317,0,c	;volatile
  7421   00680E                     
  7422                           ;ACD_LCD_main.c: 265:     LATD1=1;
  7423   00680E  82BD               	bsf	16317,1,c	;volatile
  7424   006810                     
  7425                           ;ACD_LCD_main.c: 266:     __nop();
  7426   006810  0000               	nop	
  7427   006812                     
  7428                           ;ACD_LCD_main.c: 267:     LATD1=0;
  7429   006812  92BD               	bcf	16317,1,c	;volatile
  7430   006814                     
  7431                           ;ACD_LCD_main.c: 268:     MSdelay(1);
  7432   006814  0E00               	movlw	0
  7433   006816  6E06               	movwf	(MSdelay@val+1)^0,c
  7434   006818  0E01               	movlw	1
  7435   00681A  6E05               	movwf	MSdelay@val^0,c
  7436   00681C  ECAE  F032         	call	_MSdelay	;wreg free
  7437   006820  0012               	return		;funcret
  7438   006822                     __end_of_LCD_Char:
  7439                           	callstack 0
  7440                           
  7441 ;; *************** function _LCD_Init *****************
  7442 ;; Defined at:
  7443 ;;		line 235 in file "ACD_LCD_main.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;		None
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;		None
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  1    wreg      void 
  7450 ;; Registers used:
  7451 ;;		wreg, status,2, status,0, cstack
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7461 ;;Total ram usage:        0 bytes
  7462 ;; Hardware stack levels used: 1
  7463 ;; Hardware stack levels required when called: 3
  7464 ;; This function calls:
  7465 ;;		_LCD_Command
  7466 ;;		_MSdelay
  7467 ;; This function is called by:
  7468 ;;		_main
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472                           	psect	text28
  7473   00678E                     __ptext28:
  7474                           	callstack 0
  7475   00678E                     _LCD_Init:
  7476                           	callstack 27
  7477   00678E                     
  7478                           ;ACD_LCD_main.c: 237:     MSdelay(500);
  7479   00678E  0E01               	movlw	1
  7480   006790  6E06               	movwf	(MSdelay@val+1)^0,c
  7481   006792  0EF4               	movlw	244
  7482   006794  6E05               	movwf	MSdelay@val^0,c
  7483   006796  ECAE  F032         	call	_MSdelay	;wreg free
  7484   00679A                     
  7485                           ;ACD_LCD_main.c: 238:     TRISB = 0x00;
  7486   00679A  6AC3               	clrf	195,c	;volatile
  7487   00679C                     
  7488                           ;ACD_LCD_main.c: 239:     TRISD = 0x00;
  7489   00679C  6AC5               	clrf	197,c	;volatile
  7490                           
  7491                           ;ACD_LCD_main.c: 240:     LCD_Command(0x01);
  7492   00679E  0E01               	movlw	1
  7493   0067A0  EC11  F034         	call	_LCD_Command
  7494                           
  7495                           ;ACD_LCD_main.c: 241:     LCD_Command(0x38);
  7496   0067A4  0E38               	movlw	56
  7497   0067A6  EC11  F034         	call	_LCD_Command
  7498                           
  7499                           ;ACD_LCD_main.c: 242:     LCD_Command(0x0c);
  7500   0067AA  0E0C               	movlw	12
  7501   0067AC  EC11  F034         	call	_LCD_Command
  7502                           
  7503                           ;ACD_LCD_main.c: 243:     LCD_Command(0x06);
  7504   0067B0  0E06               	movlw	6
  7505   0067B2  EC11  F034         	call	_LCD_Command
  7506   0067B6  0012               	return		;funcret
  7507   0067B8                     __end_of_LCD_Init:
  7508                           	callstack 0
  7509                           
  7510 ;; *************** function _LCD_Command *****************
  7511 ;; Defined at:
  7512 ;;		line 251 in file "ACD_LCD_main.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  cmd             1    wreg     unsigned char 
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;  cmd             1   10[COMRAM] unsigned char 
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  1    wreg      void 
  7519 ;; Registers used:
  7520 ;;		wreg, status,2, status,0, cstack
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7529 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7530 ;;Total ram usage:        1 bytes
  7531 ;; Hardware stack levels used: 1
  7532 ;; Hardware stack levels required when called: 2
  7533 ;; This function calls:
  7534 ;;		_MSdelay
  7535 ;; This function is called by:
  7536 ;;		_LCD_Init
  7537 ;;		_LCD_String_xy
  7538 ;;		_LCD_Clear
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text29
  7543   006822                     __ptext29:
  7544                           	callstack 0
  7545   006822                     _LCD_Command:
  7546                           	callstack 27
  7547                           
  7548                           ;incstack = 0
  7549                           ;LCD_Command@cmd stored from wreg
  7550   006822  6E0B               	movwf	LCD_Command@cmd^0,c
  7551   006824                     
  7552                           ;ACD_LCD_main.c: 251: void LCD_Command(char cmd );ACD_LCD_main.c: 252: {;ACD_LCD_main.c:
      +                           253:     LATB= cmd;
  7553   006824  0060  F02F  FFBB   	movff	LCD_Command@cmd,16315	;volatile
  7554   00682A                     
  7555                           ;ACD_LCD_main.c: 254:     LATD0 = 0;
  7556   00682A  90BD               	bcf	16317,0,c	;volatile
  7557   00682C                     
  7558                           ;ACD_LCD_main.c: 255:     LATD1 = 1;
  7559   00682C  82BD               	bsf	16317,1,c	;volatile
  7560   00682E                     
  7561                           ;ACD_LCD_main.c: 256:     __nop();
  7562   00682E  0000               	nop	
  7563   006830                     
  7564                           ;ACD_LCD_main.c: 257:     LATD1 = 0;
  7565   006830  92BD               	bcf	16317,1,c	;volatile
  7566   006832                     
  7567                           ;ACD_LCD_main.c: 258:     MSdelay(3);
  7568   006832  0E00               	movlw	0
  7569   006834  6E06               	movwf	(MSdelay@val+1)^0,c
  7570   006836  0E03               	movlw	3
  7571   006838  6E05               	movwf	MSdelay@val^0,c
  7572   00683A  ECAE  F032         	call	_MSdelay	;wreg free
  7573   00683E  0012               	return		;funcret
  7574   006840                     __end_of_LCD_Command:
  7575                           	callstack 0
  7576                           
  7577 ;; *************** function _MSdelay *****************
  7578 ;; Defined at:
  7579 ;;		line 298 in file "ACD_LCD_main.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;  val             2    4[COMRAM] unsigned int 
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;  j               2    8[COMRAM] unsigned int 
  7584 ;;  i               2    6[COMRAM] unsigned int 
  7585 ;; Return value:  Size  Location     Type
  7586 ;;                  1    wreg      void 
  7587 ;; Registers used:
  7588 ;;		wreg, status,2, status,0
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7595 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7597 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7598 ;;Total ram usage:        6 bytes
  7599 ;; Hardware stack levels used: 1
  7600 ;; Hardware stack levels required when called: 1
  7601 ;; This function calls:
  7602 ;;		Nothing
  7603 ;; This function is called by:
  7604 ;;		_LCD_Init
  7605 ;;		_LCD_Command
  7606 ;;		_LCD_Char
  7607 ;; This function uses a non-reentrant model
  7608 ;;
  7609                           
  7610                           	psect	text30
  7611   00655C                     __ptext30:
  7612                           	callstack 0
  7613   00655C                     _MSdelay:
  7614                           	callstack 26
  7615   00655C                     
  7616                           ;ACD_LCD_main.c: 298: void MSdelay(unsigned int val);ACD_LCD_main.c: 299: {;ACD_LCD_main
      +                          .c: 300:      unsigned int i,j;;ACD_LCD_main.c: 301:         for(i=0;i<val;i++)
  7617   00655C  0E00               	movlw	0
  7618   00655E  6E08               	movwf	(MSdelay@i+1)^0,c
  7619   006560  0E00               	movlw	0
  7620   006562  6E07               	movwf	MSdelay@i^0,c
  7621   006564  EFC7  F032         	goto	l2858
  7622   006568                     l2846:
  7623                           
  7624                           ;ACD_LCD_main.c: 302:             for(j=0;j<165;j++);
  7625   006568  0E00               	movlw	0
  7626   00656A  6E0A               	movwf	(MSdelay@j+1)^0,c
  7627   00656C  0E00               	movlw	0
  7628   00656E  6E09               	movwf	MSdelay@j^0,c
  7629   006570                     l2852:
  7630   006570  4A09               	infsnz	MSdelay@j^0,f,c
  7631   006572  2A0A               	incf	(MSdelay@j+1)^0,f,c
  7632   006574  500A               	movf	(MSdelay@j+1)^0,w,c
  7633   006576  E109               	bnz	u3080
  7634   006578  0EA5               	movlw	165
  7635   00657A  5C09               	subwf	MSdelay@j^0,w,c
  7636   00657C  A0D8               	btfss	status,0,c
  7637   00657E  EFC3  F032         	goto	u3081
  7638   006582  EFC5  F032         	goto	u3080
  7639   006586                     u3081:
  7640   006586  EFB8  F032         	goto	l2852
  7641   00658A                     u3080:
  7642   00658A  4A07               	infsnz	MSdelay@i^0,f,c
  7643   00658C  2A08               	incf	(MSdelay@i+1)^0,f,c
  7644   00658E                     l2858:
  7645   00658E  5005               	movf	MSdelay@val^0,w,c
  7646   006590  5C07               	subwf	MSdelay@i^0,w,c
  7647   006592  5006               	movf	(MSdelay@val+1)^0,w,c
  7648   006594  5808               	subwfb	(MSdelay@i+1)^0,w,c
  7649   006596  A0D8               	btfss	status,0,c
  7650   006598  EFD0  F032         	goto	u3091
  7651   00659C  EFD2  F032         	goto	u3090
  7652   0065A0                     u3091:
  7653   0065A0  EFB4  F032         	goto	l2846
  7654   0065A4                     u3090:
  7655   0065A4  0012               	return		;funcret
  7656   0065A6                     __end_of_MSdelay:
  7657                           	callstack 0
  7658                           
  7659 ;; *************** function _IOCC2_Init *****************
  7660 ;; Defined at:
  7661 ;;		line 214 in file "ACD_LCD_main.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;		None
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;		None
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  1    wreg      void 
  7668 ;; Registers used:
  7669 ;;		wreg, status,2
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7679 ;;Total ram usage:        0 bytes
  7680 ;; Hardware stack levels used: 1
  7681 ;; Hardware stack levels required when called: 1
  7682 ;; This function calls:
  7683 ;;		Nothing
  7684 ;; This function is called by:
  7685 ;;		_main
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           
  7689                           	psect	text31
  7690   0067E0                     __ptext31:
  7691                           	callstack 0
  7692   0067E0                     _IOCC2_Init:
  7693                           	callstack 29
  7694   0067E0                     
  7695                           ;ACD_LCD_main.c: 215:     TRISCbits.TRISC2 = 1;
  7696   0067E0  84C4               	bsf	196,2,c	;volatile
  7697                           
  7698                           ;ACD_LCD_main.c: 216:     ANSELCbits.ANSELC2 = 0;
  7699   0067E2  013A               	movlb	58	; () banked
  7700   0067E4  9560               	bcf	96,2,b	;volatile
  7701                           
  7702                           ;ACD_LCD_main.c: 217:     WPUCbits.WPUC2 = 1;
  7703   0067E6  8561               	bsf	97,2,b	;volatile
  7704                           
  7705                           ;ACD_LCD_main.c: 219:     IOCCPbits.IOCCP2 = 0;
  7706   0067E8  9565               	bcf	101,2,b	;volatile
  7707                           
  7708                           ;ACD_LCD_main.c: 220:     IOCCNbits.IOCCN2 = 1;
  7709   0067EA  8566               	bsf	102,2,b	;volatile
  7710                           
  7711                           ;ACD_LCD_main.c: 221:     IOCCFbits.IOCCF2 = 0;
  7712   0067EC  9567               	bcf	103,2,b	;volatile
  7713                           
  7714                           ;ACD_LCD_main.c: 222:     PIR0bits.IOCIF = 0;
  7715   0067EE  0139               	movlb	57	; () banked
  7716   0067F0  9FA0               	bcf	160,7,b	;volatile
  7717                           
  7718                           ;ACD_LCD_main.c: 224:     PIE0bits.IOCIE = 1;
  7719   0067F2  8F90               	bsf	144,7,b	;volatile
  7720                           
  7721                           ;ACD_LCD_main.c: 225:     INTCON0bits.GIE = 1;
  7722   0067F4  8ED2               	bsf	210,7,c	;volatile
  7723                           
  7724                           ;ACD_LCD_main.c: 226:     INTCON0bits.IPEN = 0;
  7725   0067F6  9AD2               	bcf	210,5,c	;volatile
  7726                           
  7727                           ;ACD_LCD_main.c: 228:     IVTBASEU = 0x00;
  7728   0067F8  6AD7               	clrf	215,c	;volatile
  7729   0067FA                     
  7730                           ; BSR set to: 57
  7731                           ;ACD_LCD_main.c: 229:     IVTBASEH = 0x40;
  7732   0067FA  0E40               	movlw	64
  7733   0067FC  6ED6               	movwf	214,c	;volatile
  7734                           
  7735                           ;ACD_LCD_main.c: 230:     IVTBASEL = 0x08;
  7736   0067FE  0E08               	movlw	8
  7737   006800  6ED5               	movwf	213,c	;volatile
  7738   006802                     
  7739                           ; BSR set to: 57
  7740   006802  0012               	return		;funcret
  7741   006804                     __end_of_IOCC2_Init:
  7742                           	callstack 0
  7743                           
  7744 ;; *************** function _ADC_Init *****************
  7745 ;; Defined at:
  7746 ;;		line 305 in file "ACD_LCD_main.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;		None
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;		None
  7751 ;; Return value:  Size  Location     Type
  7752 ;;                  1    wreg      void 
  7753 ;; Registers used:
  7754 ;;		wreg, status,2
  7755 ;; Tracked objects:
  7756 ;;		On entry : 0/0
  7757 ;;		On exit  : 0/0
  7758 ;;		Unchanged: 0/0
  7759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7764 ;;Total ram usage:        0 bytes
  7765 ;; Hardware stack levels used: 1
  7766 ;; Hardware stack levels required when called: 1
  7767 ;; This function calls:
  7768 ;;		Nothing
  7769 ;; This function is called by:
  7770 ;;		_main
  7771 ;; This function uses a non-reentrant model
  7772 ;;
  7773                           
  7774                           	psect	text32
  7775   0067B8                     __ptext32:
  7776                           	callstack 0
  7777   0067B8                     _ADC_Init:
  7778                           	callstack 29
  7779   0067B8                     
  7780                           ;ACD_LCD_main.c: 308:     ADCON0bits.FM = 1;
  7781   0067B8  013E               	movlb	62	; () banked
  7782   0067BA  51F8               	movf	248,w,b	;volatile
  7783   0067BC  0BF3               	andlw	-13
  7784   0067BE  0904               	iorlw	4
  7785   0067C0  6FF8               	movwf	248,b	;volatile
  7786   0067C2                     
  7787                           ; BSR set to: 62
  7788                           ;ACD_LCD_main.c: 309:     ADCON0bits.CS = 1;
  7789   0067C2  89F8               	bsf	248,4,b	;volatile
  7790   0067C4                     
  7791                           ; BSR set to: 62
  7792                           ;ACD_LCD_main.c: 311:     TRISAbits.TRISA0 = 1;
  7793   0067C4  80C2               	bsf	194,0,c	;volatile
  7794   0067C6                     
  7795                           ; BSR set to: 62
  7796                           ;ACD_LCD_main.c: 312:     ANSELAbits.ANSELA0 = 1;
  7797   0067C6  013A               	movlb	58	; () banked
  7798   0067C8  8140               	bsf	64,0,b	;volatile
  7799   0067CA                     
  7800                           ; BSR set to: 58
  7801                           ;ACD_LCD_main.c: 314:     ADPCH = 0x00;
  7802   0067CA  013E               	movlb	62	; () banked
  7803   0067CC  6BF1               	clrf	241,b	;volatile
  7804   0067CE                     
  7805                           ; BSR set to: 62
  7806                           ;ACD_LCD_main.c: 315:     ADCLK = 0x00;
  7807   0067CE  6BFF               	clrf	255,b	;volatile
  7808   0067D0                     
  7809                           ; BSR set to: 62
  7810                           ;ACD_LCD_main.c: 317:     ADRESH = 0x00;
  7811   0067D0  6BF0               	clrf	240,b	;volatile
  7812   0067D2                     
  7813                           ; BSR set to: 62
  7814                           ;ACD_LCD_main.c: 318:     ADRESL = 0x00;
  7815   0067D2  6BEF               	clrf	239,b	;volatile
  7816   0067D4                     
  7817                           ; BSR set to: 62
  7818                           ;ACD_LCD_main.c: 320:     ADPREL = 0x00;
  7819   0067D4  6BF6               	clrf	246,b	;volatile
  7820   0067D6                     
  7821                           ; BSR set to: 62
  7822                           ;ACD_LCD_main.c: 321:     ADPREH = 0x00;
  7823   0067D6  6BF7               	clrf	247,b	;volatile
  7824   0067D8                     
  7825                           ; BSR set to: 62
  7826                           ;ACD_LCD_main.c: 323:     ADACQL = 0x00;
  7827   0067D8  6BF3               	clrf	243,b	;volatile
  7828   0067DA                     
  7829                           ; BSR set to: 62
  7830                           ;ACD_LCD_main.c: 324:     ADACQH = 0x00;
  7831   0067DA  6BF4               	clrf	244,b	;volatile
  7832   0067DC                     
  7833                           ; BSR set to: 62
  7834                           ;ACD_LCD_main.c: 326:     ADCON0bits.ON = 1;
  7835   0067DC  8FF8               	bsf	248,7,b	;volatile
  7836   0067DE                     
  7837                           ; BSR set to: 62
  7838   0067DE  0012               	return		;funcret
  7839   0067E0                     __end_of_ADC_Init:
  7840                           	callstack 0
  7841                           
  7842 ;; *************** function _IOC_ISR *****************
  7843 ;; Defined at:
  7844 ;;		line 137 in file "ACD_LCD_main.c"
  7845 ;; Parameters:    Size  Location     Type
  7846 ;;		None
  7847 ;; Auto vars:     Size  Location     Type
  7848 ;;  i               2    2[COMRAM] int 
  7849 ;; Return value:  Size  Location     Type
  7850 ;;                  1    wreg      void 
  7851 ;; Registers used:
  7852 ;;		wreg, status,2, status,0
  7853 ;; Tracked objects:
  7854 ;;		On entry : 0/0
  7855 ;;		On exit  : 0/0
  7856 ;;		Unchanged: 0/0
  7857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7859 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7860 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7861 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7862 ;;Total ram usage:        4 bytes
  7863 ;; Hardware stack levels used: 1
  7864 ;; This function calls:
  7865 ;;		Nothing
  7866 ;; This function is called by:
  7867 ;;		Interrupt level 2
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           	psect	text33
  7872   006378                     __ptext33:
  7873                           	callstack 0
  7874   006378                     _IOC_ISR:
  7875                           	callstack 22
  7876   006378                     
  7877                           ;ACD_LCD_main.c: 139:     if (IOCCFbits.IOCCF2)
  7878   006378  013A               	movlb	58	; () banked
  7879   00637A  A567               	btfss	103,2,b	;volatile
  7880   00637C  EFC2  F031         	goto	i2u181_41
  7881   006380  EFC4  F031         	goto	i2u181_40
  7882   006384                     i2u181_41:
  7883   006384  EFF4  F031         	goto	i2l92
  7884   006388                     i2u181_40:
  7885   006388                     
  7886                           ; BSR set to: 58
  7887                           ;ACD_LCD_main.c: 140:     {;ACD_LCD_main.c: 141:         for (int i = 0; i < 20; i++) {
  7888   006388  0E00               	movlw	0
  7889   00638A  6E04               	movwf	(IOC_ISR@i+1)^0,c
  7890   00638C  0E00               	movlw	0
  7891   00638E  6E03               	movwf	IOC_ISR@i^0,c
  7892   006390                     i2l90:
  7893                           
  7894                           ;ACD_LCD_main.c: 142:                 LATCbits.LATC3 = 1;
  7895   006390  86BC               	bsf	188,3,c	;volatile
  7896   006392                     
  7897                           ;ACD_LCD_main.c: 143:                 _delay((unsigned long)((250)*(4000000/4000.0)));
  7898   006392  0E02               	movlw	2
  7899   006394  6E02               	movwf	(??_IOC_ISR+1)^0,c
  7900   006396  0E45               	movlw	69
  7901   006398  6E01               	movwf	??_IOC_ISR^0,c
  7902   00639A  0EAA               	movlw	170
  7903   00639C                     i2u529_47:
  7904   00639C  2EE8               	decfsz	wreg,f,c
  7905   00639E  D7FE               	bra	i2u529_47
  7906   0063A0  2E01               	decfsz	??_IOC_ISR^0,f,c
  7907   0063A2  D7FC               	bra	i2u529_47
  7908   0063A4  2E02               	decfsz	(??_IOC_ISR+1)^0,f,c
  7909   0063A6  D7FA               	bra	i2u529_47
  7910   0063A8                     
  7911                           ;ACD_LCD_main.c: 144:                 LATCbits.LATC3 = 0;
  7912   0063A8  96BC               	bcf	188,3,c	;volatile
  7913                           
  7914                           ;ACD_LCD_main.c: 145:                 _delay((unsigned long)((250)*(4000000/4000.0)));
  7915   0063AA  0E02               	movlw	2
  7916   0063AC  6E02               	movwf	(??_IOC_ISR+1)^0,c
  7917   0063AE  0E45               	movlw	69
  7918   0063B0  6E01               	movwf	??_IOC_ISR^0,c
  7919   0063B2  0EAA               	movlw	170
  7920   0063B4                     i2u530_47:
  7921   0063B4  2EE8               	decfsz	wreg,f,c
  7922   0063B6  D7FE               	bra	i2u530_47
  7923   0063B8  2E01               	decfsz	??_IOC_ISR^0,f,c
  7924   0063BA  D7FC               	bra	i2u530_47
  7925   0063BC  2E02               	decfsz	(??_IOC_ISR+1)^0,f,c
  7926   0063BE  D7FA               	bra	i2u530_47
  7927   0063C0                     
  7928                           ;ACD_LCD_main.c: 146:             }
  7929   0063C0  4A03               	infsnz	IOC_ISR@i^0,f,c
  7930   0063C2  2A04               	incf	(IOC_ISR@i+1)^0,f,c
  7931   0063C4  BE04               	btfsc	(IOC_ISR@i+1)^0,7,c
  7932   0063C6  EFEE  F031         	goto	i2u182_41
  7933   0063CA  5004               	movf	(IOC_ISR@i+1)^0,w,c
  7934   0063CC  E109               	bnz	i2u182_40
  7935   0063CE  0E14               	movlw	20
  7936   0063D0  5C03               	subwf	IOC_ISR@i^0,w,c
  7937   0063D2  A0D8               	btfss	status,0,c
  7938   0063D4  EFEE  F031         	goto	i2u182_41
  7939   0063D8  EFF0  F031         	goto	i2u182_40
  7940   0063DC                     i2u182_41:
  7941   0063DC  EFC8  F031         	goto	i2l90
  7942   0063E0                     i2u182_40:
  7943   0063E0                     
  7944                           ;ACD_LCD_main.c: 147:         IOCCFbits.IOCCF2 = 0;
  7945   0063E0  013A               	movlb	58	; () banked
  7946   0063E2  9567               	bcf	103,2,b	;volatile
  7947                           
  7948                           ;ACD_LCD_main.c: 148:         PIR0bits.IOCIF = 0;
  7949   0063E4  0139               	movlb	57	; () banked
  7950   0063E6  9FA0               	bcf	160,7,b	;volatile
  7951   0063E8                     i2l92:
  7952   0063E8  0011               	retfie		f
  7953   0063EA                     __end_of_IOC_ISR:
  7954                           	callstack 0
  7955                           
  7956                           ;
  7957                           ; H/W Interrupt Vector Table @ 0x4008
  7958                           ;
  7959                           
  7960                           	psect	ivt0x4008
  7961   004008                     __pivt0x4008:
  7962                           	callstack 0
  7963   004008                     ivt0x4008_base:
  7964                           	callstack 0
  7965                           
  7966                           ; Vector 0 : SWINT
  7967   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
  7968                           
  7969                           ; Vector 1 : HLVD
  7970   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
  7971                           
  7972                           ; Vector 2 : OSF
  7973   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
  7974                           
  7975                           ; Vector 3 : CSW
  7976   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
  7977                           
  7978                           ; Vector 4 : NVM
  7979   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
  7980                           
  7981                           ; Vector 5 : SCAN
  7982   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
  7983                           
  7984                           ; Vector 6 : CRC
  7985   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
  7986                           
  7987                           ; Vector 7 : IOC
  7988   004016  18DE               	dw	_IOC_ISR shr (0+2)
  7989                           
  7990                           ; Vector 8 : INT0
  7991   004018  102B               	dw	ivt0x4008_undefint shr (0+2)
  7992                           
  7993                           ; Vector 9 : ZCD
  7994   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
  7995                           
  7996                           ; Vector 10 : AD
  7997   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
  7998                           
  7999                           ; Vector 11 : ADT
  8000   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8001                           
  8002                           ; Vector 12 : CMP1
  8003   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
  8004                           
  8005                           ; Vector 13 : SMT1
  8006   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
  8007                           
  8008                           ; Vector 14 : SMT1PRA
  8009   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
  8010                           
  8011                           ; Vector 15 : SMT1PRW
  8012   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
  8013                           
  8014                           ; Vector 16 : DMA1SCNT
  8015   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
  8016                           
  8017                           ; Vector 17 : DMA1DCNT
  8018   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8019                           
  8020                           ; Vector 18 : DMA1OR
  8021   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8022                           
  8023                           ; Vector 19 : DMA1A
  8024   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8025                           
  8026                           ; Vector 20 : SPI1RX
  8027   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  8028                           
  8029                           ; Vector 21 : SPI1TX
  8030   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  8031                           
  8032                           ; Vector 22 : SPI1
  8033   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  8034                           
  8035                           ; Vector 23 : I2C1RX
  8036   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  8037                           
  8038                           ; Vector 24 : I2C1TX
  8039   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  8040                           
  8041                           ; Vector 25 : I2C1
  8042   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8043                           
  8044                           ; Vector 26 : I2C1E
  8045   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8046                           
  8047                           ; Vector 27 : U1RX
  8048   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8049                           
  8050                           ; Vector 28 : U1TX
  8051   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  8052                           
  8053                           ; Vector 29 : U1E
  8054   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  8055                           
  8056                           ; Vector 30 : U1
  8057   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  8058                           
  8059                           ; Vector 31 : TMR0
  8060   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  8061                           
  8062                           ; Vector 32 : TMR1
  8063   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  8064                           
  8065                           ; Vector 33 : TMR1G
  8066   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8067                           
  8068                           ; Vector 34 : TMR2
  8069   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8070                           
  8071                           ; Vector 35 : CCP1
  8072   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8073                           
  8074                           ; Vector 36 : Undefined
  8075   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  8076                           
  8077                           ; Vector 37 : NCO1
  8078   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  8079                           
  8080                           ; Vector 38 : CWG1
  8081   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  8082                           
  8083                           ; Vector 39 : CLC1
  8084   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  8085                           
  8086                           ; Vector 40 : INT1
  8087   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  8088                           
  8089                           ; Vector 41 : CMP2
  8090   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8091                           
  8092                           ; Vector 42 : DMA2SCNT
  8093   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8094                           
  8095                           ; Vector 43 : DMA2DCNT
  8096   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8097                           
  8098                           ; Vector 44 : DMA2OR
  8099   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  8100                           
  8101                           ; Vector 45 : DMA2A
  8102   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  8103                           
  8104                           ; Vector 46 : I2C2RX
  8105   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  8106                           
  8107                           ; Vector 47 : I2C2TX
  8108   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  8109                           
  8110                           ; Vector 48 : I2C2
  8111   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  8112                           
  8113                           ; Vector 49 : I2C2E
  8114   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8115                           
  8116                           ; Vector 50 : U2RX
  8117   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8118                           
  8119                           ; Vector 51 : U2TX
  8120   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8121                           
  8122                           ; Vector 52 : U2E
  8123   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  8124                           
  8125                           ; Vector 53 : U2
  8126   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  8127                           
  8128                           ; Vector 54 : TMR3
  8129   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  8130                           
  8131                           ; Vector 55 : TMR3G
  8132   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  8133                           
  8134                           ; Vector 56 : TMR4
  8135   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  8136                           
  8137                           ; Vector 57 : CCP2
  8138   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8139                           
  8140                           ; Vector 58 : Undefined
  8141   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8142                           
  8143                           ; Vector 59 : CWG2
  8144   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8145                           
  8146                           ; Vector 60 : CLC2
  8147   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  8148                           
  8149                           ; Vector 61 : INT2
  8150   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  8151                           
  8152                           ; Vector 62 : Undefined
  8153   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  8154                           
  8155                           ; Vector 63 : Undefined
  8156   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  8157                           
  8158                           ; Vector 64 : Undefined
  8159   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  8160                           
  8161                           ; Vector 65 : Undefined
  8162   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8163                           
  8164                           ; Vector 66 : Undefined
  8165   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8166                           
  8167                           ; Vector 67 : Undefined
  8168   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8169                           
  8170                           ; Vector 68 : Undefined
  8171   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  8172                           
  8173                           ; Vector 69 : Undefined
  8174   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  8175                           
  8176                           ; Vector 70 : TMR5
  8177   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  8178                           
  8179                           ; Vector 71 : TMR5G
  8180   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  8181                           
  8182                           ; Vector 72 : TMR6
  8183   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  8184                           
  8185                           ; Vector 73 : CCP3
  8186   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8187                           
  8188                           ; Vector 74 : CWG3
  8189   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8190                           
  8191                           ; Vector 75 : CLC3
  8192   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8193                           
  8194                           ; Vector 76 : Undefined
  8195   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  8196                           
  8197                           ; Vector 77 : Undefined
  8198   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  8199                           
  8200                           ; Vector 78 : Undefined
  8201   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  8202                           
  8203                           ; Vector 79 : Undefined
  8204   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  8205                           
  8206                           ; Vector 80 : CCP4
  8207   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  8208                           
  8209                           ; Vector 81 : CLC4
  8210   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  8211   0040AC                     ivt0x4008_undefint:
  8212                           	callstack 0
  8213   0040AC  00FF               	reset	
  8214                           
  8215                           	psect	rparam
  8216   000001                     ___rparam_used  equ	1
  8217   000000                     ___param_bank   equ	0
  8218   000000                     __Lparam        equ	__Lrparam
  8219   000000                     __Hparam        equ	__Hrparam
  8220                           
  8221                           	psect	config
  8222                           
  8223                           ;Config register CONFIG1L @ 0x300000
  8224                           ;	External Oscillator Selection
  8225                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  8226                           ;	Reset Oscillator Selection
  8227                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  8228   300000                     	org	3145728
  8229   300000  F8                 	db	248
  8230                           
  8231                           ;Config register CONFIG1H @ 0x300001
  8232                           ;	Clock out Enable bit
  8233                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  8234                           ;	PRLOCKED One-Way Set Enable bit
  8235                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  8236                           ;	Clock Switch Enable bit
  8237                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8238                           ;	Fail-Safe Clock Monitor Enable bit
  8239                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  8240   300001                     	org	3145729
  8241   300001  FF                 	db	255
  8242                           
  8243                           ;Config register CONFIG2L @ 0x300002
  8244                           ;	MCLR Enable bit
  8245                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  8246                           ;	Power-up timer selection bits
  8247                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  8248                           ;	Multi-vector enable bit
  8249                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  8250                           ;	IVTLOCK bit One-way set enable bit
  8251                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  8252                           ;	Low Power BOR Enable bit
  8253                           ;	LPBOREN = OFF, ULPBOR disabled
  8254                           ;	Brown-out Reset Enable bits
  8255                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  8256   300002                     	org	3145730
  8257   300002  FF                 	db	255
  8258                           
  8259                           ;Config register CONFIG2H @ 0x300003
  8260                           ;	Brown-out Reset Voltage Selection bits
  8261                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  8262                           ;	ZCD Disable bit
  8263                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  8264                           ;	PPSLOCK bit One-Way Set Enable bit
  8265                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  8266                           ;	Stack Full/Underflow Reset Enable bit
  8267                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8268                           ;	Debugger Enable bit
  8269                           ;	DEBUG = OFF, Background debugger disabled
  8270                           ;	Extended Instruction Set Enable bit
  8271                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  8272   300003                     	org	3145731
  8273   300003  FF                 	db	255
  8274                           
  8275                           ;Config register CONFIG3L @ 0x300004
  8276                           ;	WDT Period selection bits
  8277                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8278                           ;	WDT operating mode
  8279                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  8280   300004                     	org	3145732
  8281   300004  9F                 	db	159
  8282                           
  8283                           ;Config register CONFIG3H @ 0x300005
  8284                           ;	WDT Window Select bits
  8285                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8286                           ;	WDT input clock selector
  8287                           ;	WDTCCS = SC, Software Control
  8288   300005                     	org	3145733
  8289   300005  FF                 	db	255
  8290                           
  8291                           ;Config register CONFIG4L @ 0x300006
  8292                           ;	Boot Block Size selection bits
  8293                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  8294                           ;	Boot Block enable bit
  8295                           ;	BBEN = OFF, Boot block disabled
  8296                           ;	Storage Area Flash enable bit
  8297                           ;	SAFEN = OFF, SAF disabled
  8298                           ;	Application Block write protection bit
  8299                           ;	WRTAPP = OFF, Application Block not write protected
  8300   300006                     	org	3145734
  8301   300006  FF                 	db	255
  8302                           
  8303                           ;Config register CONFIG4H @ 0x300007
  8304                           ;	Boot Block Write Protection bit
  8305                           ;	WRTB = OFF, Boot Block not write-protected
  8306                           ;	Configuration Register Write Protection bit
  8307                           ;	WRTC = OFF, Configuration registers not write-protected
  8308                           ;	Data EEPROM Write Protection bit
  8309                           ;	WRTD = OFF, Data EEPROM not write-protected
  8310                           ;	SAF Write protection bit
  8311                           ;	WRTSAF = OFF, SAF not Write Protected
  8312                           ;	Low Voltage Programming Enable bit
  8313                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  8314   300007                     	org	3145735
  8315   300007  FF                 	db	255
  8316                           
  8317                           ;Config register CONFIG5L @ 0x300008
  8318                           ;	PFM and Data EEPROM Code Protection bit
  8319                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  8320   300008                     	org	3145736
  8321   300008  FF                 	db	255
  8322                           
  8323                           ;Config register CONFIG5H @ 0x300009
  8324                           ;	unspecified, using default values
  8325   300009                     	org	3145737
  8326   300009  FF                 	db	255
  8327                           tosu	equ	0x3FFF
  8328                           tosh	equ	0x3FFE
  8329                           tosl	equ	0x3FFD
  8330                           stkptr	equ	0x3FFC
  8331                           pclatu	equ	0x3FFB
  8332                           pclath	equ	0x3FFA
  8333                           pcl	equ	0x3FF9
  8334                           tblptru	equ	0x3FF8
  8335                           tblptrh	equ	0x3FF7
  8336                           tblptrl	equ	0x3FF6
  8337                           tablat	equ	0x3FF5
  8338                           prodh	equ	0x3FF4
  8339                           prodl	equ	0x3FF3
  8340                           indf0	equ	0x3FEF
  8341                           postinc0	equ	0x3FEE
  8342                           postdec0	equ	0x3FED
  8343                           preinc0	equ	0x3FEC
  8344                           plusw0	equ	0x3FEB
  8345                           fsr0h	equ	0x3FEA
  8346                           fsr0l	equ	0x3FE9
  8347                           wreg	equ	0x3FE8
  8348                           indf1	equ	0x3FE7
  8349                           postinc1	equ	0x3FE6
  8350                           postdec1	equ	0x3FE5
  8351                           preinc1	equ	0x3FE4
  8352                           plusw1	equ	0x3FE3
  8353                           fsr1h	equ	0x3FE2
  8354                           fsr1l	equ	0x3FE1
  8355                           bsr	equ	0x3FE0
  8356                           indf2	equ	0x3FDF
  8357                           postinc2	equ	0x3FDE
  8358                           postdec2	equ	0x3FDD
  8359                           preinc2	equ	0x3FDC
  8360                           plusw2	equ	0x3FDB
  8361                           fsr2h	equ	0x3FDA
  8362                           fsr2l	equ	0x3FD9
  8363                           status	equ	0x3FD8

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         109
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      84
    BANK0           160     60     158
    BANK1           256     12      12
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> data(BANK0[10]), STR_1(CODE[9]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> data(BANK0[10]), STR_1(CODE[9]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1003$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    S1003$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    strcat@src	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[4]), STR_7(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _IOC_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _IOC_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _IOC_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IOC_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IOC_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _IOC_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _IOC_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _IOC_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _IOC_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _IOC_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _IOC_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _IOC_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _IOC_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _IOC_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _IOC_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _IOC_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _IOC_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _IOC_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _IOC_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _IOC_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _IOC_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _IOC_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _IOC_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _IOC_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _IOC_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _IOC_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _IOC_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _IOC_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _IOC_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _IOC_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _IOC_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _IOC_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _IOC_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   21458
                                             71 COMRAM     2     2      0
                           _ADC_Init
                         _IOCC2_Init
                           _LCD_Init
                      _LCD_String_xy
                            ___flmul
                           ___xxtofl
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     2      2     122
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    14      6   18105
                                             54 BANK0      6     0      6
                                              0 BANK1     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5   17781
                                             70 COMRAM     1     1      0
                                             49 BANK0      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     8      5   17554
                                             63 COMRAM     7     7      0
                                             44 BANK0      5     0      5
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   8     5      3     266
                                              4 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    46      7   16210
                                             55 COMRAM     8     1      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               4     2      2     115
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    1038
                                             19 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3     481
                                             13 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     335
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               7     3      4     217
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     102
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     495
                                             29 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     201
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     346
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3031
                                             43 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2954
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      68
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2235
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     290
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     142
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1713
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     337
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3     440
                                             13 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     170
                                             11 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     124
                                             10 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     219
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     124
                                             10 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2      95
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _IOCC2_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _IOC_ISR                                              4     4      0      30
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _IOCC2_Init
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
   _strcat

 _IOC_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh       1169      0       0      0.0%
BITBIGSFRlll       400      0       0      0.0%
BITBIGSFRh         263      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256     12      12      4.7%
BITBIGSFRllh       213      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     60     158     98.8%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     73      84     88.4%
STACK                0      0       0      0.0%
DATA                 0      0     249      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun May 04 18:01:39 2025

              ___fldiv@aexp 001D                ___fldiv@bexp 001C                ___fldiv@sign 0015  
              ?_LCD_Command 0001                          l98 6012                 ?_LCD_String 000C  
                       l106 6802                         l115 683E                         l140 67DE  
                       l124 6374                         l109 67B6                         l118 6820  
                       l137 65A4                         l129 66F0                         l402 6302  
                       l413 5EE8                         l408 5EA2                         l440 5DE4  
                       l417 6762                         l704 4ED6                         l801 5CDE  
                       l713 65EA                         l730 5514                         l812 5C76  
                       l805 5C1A                         l725 56EC                         l821 662E  
                       l727 5550                         l671 4C46                         l736 5596  
                       l680 4F12                         l672 4C34                         l912 6258  
                       l737 55B4                         l761 535C                         l673 4BFA  
                       l738 560C                         l922 57AC                         l739 55FA  
                       l764 51F2                         l852 6452                         l908 6250  
                       l932 5918                         l765 5210                         l757 4FD8  
                       l685 4DEE                         l774 531E                         l766 5268  
                       l767 5256                         l863 4A5C                         l688 4D60  
                       l848 6400                         l697 4E2E                         l698 4E1C  
                       l970 650A                         l866 442A                         l939 655A  
                       l956 5B2A                         l868 4270                         l949 5FE6  
                       l798 5B82                         l959 5A6E                         l976 6670  
                       l896 4870                         l988 619A                         l996 66B0  
                       l999 6840                         _pad 63EA                         wreg 3FE8  
              ___flmul@aexp 0020                ___flmul@bexp 0025                ___flmul@sign 001F  
              ___flmul@temp 002A                ___flmul@prod 0026                 LCD_Char@dat 000B  
           __end_of_IOC_ISR 63EA                ___fltol@exp1 000E                        l1014 672A  
                      l1008 64B4                        l3100 6810                        l3102 6812  
                      l3200 67CA                        l3104 6814                        l4000 40C6  
                      l3210 67D6                        l3202 67CE                        l4010 410E  
                      l4002 40D4                        l3212 67D8                        l3204 67D0  
                      l3220 679A                        l3300 5CAE                        l4100 449A  
                      l4012 411E                        l4020 4146                        l4004 40D8  
                      l3214 67DA                        l3206 67D2                        l3222 679C  
                      l3230 66B4                        l3302 5CBE                        l4110 44E0  
                      l4102 44AC                        l4030 4190                        l4022 416C  
                      l4014 412E                        l4006 40FC                        l3216 67DC  
                      l3208 67D4                        l3224 67E0                        l3240 66E4  
                      l3232 66C4                        l3304 5CCC                        l3400 4B5E  
                      l4200 49CE                        l4120 45F4                        l4112 4544  
                      l4104 44B4                        l4040 41EA                        l4032 419E  
                      l4024 417E                        l4016 413A                        l4008 4106  
                      l3226 67FA                        l3170 6830                        l3162 6824  
                      l3218 678E                        l3234 66CC                        l3306 5CCE  
                      l3410 4B72                        l3402 4B62                        l4210 4A26  
                      l4202 49D8                        l4130 46B2                        l4122 4628  
                      l4114 459C                        l4106 44BC                        l4042 41FC  
                      l4034 41A8                        l4026 4182                        l4018 4142  
                      l3172 6832                        l3164 682A                        l3180 633A  
                      l3236 66D6                        l3228 66B4                        l3500 4DC2  
                      l3420 4B86                        l3412 4B76                        l3404 4B66  
                      l3340 60EE                        l4212 4A3A                        l4204 49F0  
                      l4140 4786                        l4132 46C2                        l4124 465A  
                      l4116 45D0                        l4108 44CC                        l4044 4200  
                      l4028 4188                        l4220 61A4                        l4300 65F6  
                      l3260 6480                        l3166 682C                        l3094 6806  
                      l3174 6304                        l3238 66DE                        l3270 5B92  
                      l3510 4DFE                        l3502 4DCA                        l3422 4B8A  
                      l3414 4B7A                        l3406 4B6A                        l3430 4B9A  
                      l3342 6100                        l4214 4A42                        l4206 49FE  
                      l4150 47BA                        l4142 479A                        l4134 46F6  
                      l4126 4670                        l4118 45D6                        l4070 432A  
                      l4062 4280                        l4046 4206                        l4038 41C4  
                      l4222 61CC                        l4230 6224                        l4302 65FE  
                      l3262 6486                        l3254 6454                        l4310 5FE8  
                      l3192 67B8                        l3168 682E                        l3096 680C  
                      l3176 6308                        l3280 5BD0                        l3272 5BA8  
                      l3264 5B2E                        l3600 5458                        l3520 4E58  
                      l3512 4E14                        l3504 4DCE                        l3440 4C14  
                      l3432 4BC6                        l3424 4B8E                        l3416 4B7E  
                      l3408 4B6E                        l3360 4A8A                        l3352 4A5E  
                      l3344 610A                        l4208 4A16                        l4160 4882  
                      l4152 47C2                        l4136 474C                        l4144 479E  
                      l4128 46A2                        l4072 4368                        l4064 4286  
                      l4048 420E                        l4056 4220                        l4224 61D4  
                      l4240 5730                        l4232 56EE                        l4304 6606  
                      l3256 6460                        l4320 5FF8                        l4312 5FEC  
                      l3194 67C2                        l3098 680E                        l3178 6336  
                      l3290 5C58                        l3282 5C02                        l3266 5B3E  
                      l3530 4ED4                        l3522 4E92                        l3506 4DDE  
                      l3450 4C54                        l3442 4C18                        l3434 4BE2  
                      l3426 4B92                        l3418 4B82                        l3370 4AC2  
                      l3362 4A9A                        l3354 4A6A                        l3346 6128  
                      l3338 60DC                        l4170 48AE                        l4162 4890  
                      l4154 47CE                        l4146 47AE                        l4138 4752  
                      l4090 4456                        l4074 437C                        l4082 43F8  
                      l4066 42BA                        l4058 423A                        l4226 61FA  
                      l4218 619C                        l4250 579E                        l4242 5758  
                      l4234 5718                        l4306 6620                        l3258 6464  
                      l4330 60A2                        l4322 600E                        l4314 5FF0  
                      l3196 67C4                        l3292 5C66                        l3284 5C04  
                      l3276 5BBC                        l3268 5B4C                        l3620 54DA  
                      l3612 5490                        l3604 546C                        l3700 4F50  
                      l3540 4F00                        l3532 4EE4                        l3516 4E3E  
                      l3524 4E94                        l3508 4DE0                        l3460 4C96  
                      l3452 4C64                        l3444 4C26                        l3436 4BF2  
                      l3428 4B96                        l3380 4AF0                        l3372 4AC8  
                      l3364 4AAA                        l3356 4A78                        l3348 615E  
                      l4180 48DC                        l4172 48BA                        l4164 489C  
                      l4156 4846                        l4148 47B6                        l4092 445E  
                      l4084 4432                        l4076 43B0                        l4068 42F8  
                      l4228 621C                        l4260 57F6                        l4252 57A4  
                      l4244 5760                        l4236 5720                        l4332 60AE  
                      l4324 6020                        l4316 5FF4                        l3198 67C6  
                      l3294 5C84                        l3286 5C10                        l3278 5BC4  
                      l3630 551E                        l3622 54E0                        l3614 54AA  
                      l3606 547C                        l3710 4F82                        l3702 4F60  
                      l3542 4F02                        l3534 4EEA                        l3526 4EA4  
                      l3518 4E4A                        l3470 4CC4                        l3462 4CA4  
                      l3446 4C28                        l3438 4C08                        l3390 4B24  
                      l3382 4AF2                        l3374 4ADA                        l3366 4AAC  
                      l3358 4A7A                        l3550 6690                        l4190 4980  
                      l4182 48EA                        l4174 48BE                        l4166 48A0  
                      l4158 4866                        l4094 4462                        l4086 4442  
                      l4078 43B8                        l4270 588A                        l4262 582E  
                      l4246 5778                        l4238 572C                        l4334 60BE  
                      l4326 6038                        l4318 5FF6                        l3296 5C86  
                      l3288 5C4C                        l3640 5576                        l3632 553C  
                      l3624 54F0                        l3616 54BA                        l3608 547C  
                      l3560 537A                        l3800 5308                        l3720 4FC2  
                      l3712 4F90                        l3704 4F66                        l3536 4EEC  
                      l3528 4EB4                        l3480 4D30                        l3472 4CCE  
                      l3464 4CB0                        l3456 4C78                        l3448 4C32  
                      l3384 4B02                        l3392 4B2A                        l3376 4ADC  
                      l3368 4AB2                        l3552 6694                        l4192 4988  
                      l4184 48EE                        l4176 48C4                        l4168 48A6  
                      l4096 4474                        l4088 444E                        l4256 57B2  
                      l4248 5784                        l4328 6084                        l3298 5C8A  
                      l3650 55C4                        l3642 557C                        l3634 553E  
                      l3626 5504                        l3618 54CA                        l3562 538A  
                      l3570 53B2                        l3554 535E                        l3810 5342  
                      l3802 5318                        l3730 500C                        l3722 4FC8  
                      l3714 4F92                        l3706 4F76                        l3538 4EF2  
                      l3482 4D40                        l3466 4CB4                        l3458 4C88  
                      l3474 4CD4                        l3394 4B3A                        l3386 4B12  
                      l3378 4AE2                        l3546 6672                        l4186 48F4  
                      l4178 48CA                        l4194 498C                        l4098 4482  
                      l4266 5866                        l4258 57D0                        l4282 58EC  
                      l4290 6514                        l2852 6570                        l2844 655C  
                      l3660 5636                        l3652 55F2                        l3644 5586  
                      l3636 554E                        l3628 5512                        l3580 53DE  
                      l3572 53C2                        l3564 539A                        l3556 536A  
                      l3804 5322                        l3812 5348                        l3740 5068  
                      l3732 501C                        l3724 4FE8                        l3716 4FA2  
                      l3708 4F7C                        l3492 4D9A                        l3476 4CFA  
                      l3484 4D50                        l3468 4CC2                        l3396 4B4C  
                      l3388 4B22                        l3820 65B6                        l3548 667E  
                      l4196 49AA                        l4188 494C                        l4276 58C0  
                      l4268 587C                        l4292 652E                        l2854 6574  
                      l2846 6568                        l3670 56AE                        l3662 5660  
                      l3646 5594                        l3638 5560                        l3582 53EE  
                      l3590 5416                        l3574 53C8                        l3566 53AA  
                      l3558 5378                        l3830 62C6                        l3814 534C  
                      l3806 5332                        l3750 50AE                        l3742 5074  
                      l3734 5026                        l3726 4FF8                        l3718 4FB2  
                      l3494 4DA4                        l3486 4D76                        l3478 4D2E  
                      l3398 4B5A                        l3910 5DD4                        l3902 5D98  
                      l4198 49C6                        l4278 58DE                        l4294 6550  
                      ?_pad 0014                        l2856 658A                        l3680 56E0  
                      l3672 56C6                        l3656 561C                        l3664 5664  
                      l3648 55A6                        l3592 5426                        l3584 53FE  
                      l3576 53CE                        l3568 53AC                        l3832 62D6  
                      l3824 625A                        l3840 5DE6                        l3808 5340  
                      l3760 511C                        l3752 50BE                        l3744 5080  
                      l3736 5040                        l3496 4DB2                        l3488 4D86  
                      l3904 5DA4                        l3920 6420                        l4288 650C  
                      l2858 658E                        l3682 56E2                        l3674 56C8  
                      l3666 567E                        l3658 5628                        l3594 543C  
                      l3586 540E                        l3578 53DC                        l3834 62FA  
                      l3826 6288                        l3850 5E70                        l3842 5E14  
                      l3770 51BA                        l3762 512C                        l3754 50CE  
                      l3746 508E                        l3738 504C                        l3690 4F14  
                      l3498 4DB4                        l3818 65A6                        l3906 5DB4  
                      l3930 5F48                        l3922 6424                        l3914 63EA  
                      l4298 65EC                        l3676 56CC                        l3668 5694  
                      l3596 544C                        l3588 5410                        l3836 6300  
                      l3828 6298                        l3852 5E82                        l3844 5E24  
                      l3780 5220                        l3772 51D8                        l3764 514C  
                      l3756 50EC                        l3748 509E                        l3692 4F20  
                      l3908 5DC4                        l3940 5F9A                        l3932 5F70  
                      l3924 6442                        l3916 63F8                        l3678 56DA  
                      l3598 5454                        l3854 5E90                        l3846 5E52  
                      l3790 5292                        l3782 524E                        l3774 51E2  
                      l3766 5176                        l3758 50FC                        l3694 4F2E  
                      l3862 672C                        l3870 5CE0                        l3934 5F7C  
                      l3926 5EEA                        l3918 640C                        l3950 66F6  
                      l3856 5EE0                        l3848 5E62                        l3792 52BC  
                      l3776 51F0                        l3768 51AC                        l3696 4F30  
                      l3864 6742                        l3880 5D36                        l3872 5CF6  
                      l3944 5FDE                        l3928 5F0A                        l3960 591A  
                      l3952 64B6                        l3858 5EE6                        l3786 5278  
                      l3794 52C0                        l3778 5202                        l3698 4F40  
                      l3866 6752                        l3882 5D46                        l3938 5F88  
                      l3962 593A                        l3954 64C4                        l3796 52DA  
                      l3788 5284                        l3892 5D70                        l3884 5D4A  
                      l3876 5D0A                        l3980 5AE2                        l3972 5A22  
                      l3964 5990                        l3956 64D8                        l3948 66F2  
                      l3798 52EE                        l3894 5D7A                        l3886 5D58  
                      l3878 5D34                        l3982 5B0A                        l3974 5A5E  
                      l3966 59A4                        l3990 663C                        l3896 5D84  
                      l3984 5B1A                        l3968 59B2                        l3976 5A92  
                      l3992 6646                        l3978 5ACE                        l3994 6648  
                      l3996 6656                        l3988 6630                        l3998 40B2  
                      STR_1 2001                        STR_2 200A                        STR_3 2017  
                      STR_4 200F                        STR_7 2013                        _LATB 3FBB  
                      u4000 4E3E                        u4001 4E3A                        u4010 4E58  
                      u4011 4E54                        u4100 538A                        u4020 4E92  
                      u4101 5386                        u4021 4E8E                        u4110 539A  
                      u4030 4EA4                        u4111 5396                        u4031 4EA0  
                      u3080 658A                        u4200 5560                        u4120 53DC  
                      u4040 4EB4                        u5000 43F4                        u3081 6586  
                      u4201 555C                        u4121 53D8                        u4041 4EB0  
                      u5001 43F0                        u3090 65A4                        u4210 5576  
                      u4130 53EE                        u4050 4ED4                        u5010 442A  
                      u3091 65A0                        u4211 5572                        u4131 53EA  
                      u4051 4ED0                        u5011 4426                        u4300 56AE  
                      u4220 5594                        u4140 53FE                        u4060 4EE4  
                      u5100 474C                        u5020 4442                        u4301 56AA  
                      u4221 5590                        u4141 53FA                        u4061 4EE0  
                      u5101 4748                        u5021 443E                        u3510 66C4  
                      u4310 56DA                        u4230 55B4                        u4150 543C  
                      u4070 4F00                        u5110 479A                        u5030 4474  
                      u3511 66C0                        u4311 56D6                        u4231 55B0  
                      u4151 5438                        u4071 4EFC                        u5111 4796  
                      u5031 4470                        u3600 5C76                        u4240 55C4  
                      u4160 547C                        u4400 5196                        u4320 4F2E  
                      u4080 66B0                        u5200 4A26                        u5120 4846  
                      u5040 4482                        u3520 647C                        u3601 5C72  
                      u4241 55C0                        u4161 5478                        u4321 4F2A  
                      u4081 66AC                        u5201 4A22                        u5121 4842  
                      u5041 447E                        u3521 6478                        u3610 5C84  
                      u4250 55F2                        u4170 54F0                        u4090 5378  
                      u4410 51F0                        u4330 4F40                        u5130 4882  
                      u5050 44AC                        u5210 61CC                        u3530 64B4  
                      u3611 5C80                        u4251 55EE                        u4171 54EC  
                      u4091 5374                        u4411 51EC                        u4331 4F3C  
                      u5131 487E                        u5051 44A8                        u5211 61C8  
                      u3531 64B0                        u3620 5CBE                        u3540 5B3E  
                      u4260 5608                        u4180 5512                        u4500 5340  
                      u4420 5210                        u4340 4F50                        u3700 4A8A  
                      u5140 4890                        u5060 45F4                        u5220 6250  
                      u3621 5CBA                        u3541 5B3A                        u4261 5604  
                      u4181 550E                        u4501 533C                        u4421 520C  
                      u4405 518C                        u4341 4F4C                        u3701 4A86  
                      u5141 488C                        u5061 45F0                        u5221 624C  
                      u3470 6332                        u3630 5CCC                        u3550 5B4C  
                      u4270 561C                        u4190 553C                        u4510 6288  
                      u4430 5220                        u4350 4F90                        u3710 4A9A  
                      u5150 48DC                        u5070 465A                        u5230 5718  
                      u3631 5CC8                        u3551 5B48                        u4271 5618  
                      u4191 5538                        u4511 6284                        u4431 521C  
                      u4351 4F8C                        u3711 4A96                        u5151 48D8  
                      u5071 4656                        u5231 5714                        u3480 6364  
                      u3560 5BA8                        u4280 5636                        u4520 62C6  
                      u4440 524E                        u4360 4FA2                        u3800 4BE0  
                      u3720 4ADA                        u4600 5CF6                        u5160 49AA  
                      u5080 46A2                        u5240 5758                        u3561 5BA4  
                      u4281 5632                        u4521 62C2                        u4441 524A  
                      u4361 4F9E                        u3721 4AD6                        u4601 5CF2  
                      u5161 49A6                        u5081 469E                        u5241 5754  
                      u3490 6374                        u3570 5BFE                        u4290 567E  
                      u4530 62FA                        u4450 5264                        u4370 4FB2  
                      u3810 4C08                        u3730 4AF0                        u4610 5D2A  
                      u3650 60EE                        u5170 49C6                        u5090 46B2  
                      u5250 57F2                        u3491 6370                        u3571 5BFA  
                      u4291 567A                        u4531 62F6                        u4451 5260  
                      u4371 4FAE                        u3811 4C04                        u3731 4AEC  
                      u3651 60EA                        u5171 49C2                        u5091 46AE  
                      u5251 57EE                        u3580 5C48                        u4540 5E14  
                      u4460 5278                        u4380 4FE8                        u3900 4D40  
                      u3820 4C26                        u3740 4B02                        u4620 5D58  
                      u4700 5F48                        u3660 6100                        u5180 4A10  
                      u5260 6550                        u3477 6324                        u3581 5C44  
                      u4541 5E10                        u4461 5274                        u4381 4FE4  
                      u3901 4D3C                        u3821 4C22                        u3741 4AFE  
                      u4621 5D54                        u4701 5F44                        u3661 60FC  
                      u5181 4A0A                        u5261 654C                        u3590 5C66  
                      u4550 5E52                        u4470 5292                        u4390 4FF8  
                      u3910 4D76                        u3830 4C46                        u3750 4B12  
                      u4630 5D6C                        u4710 5F70                        u3670 6128  
                      u5190 4A12                        u5270 6020                        u3487 6356  
                      u3591 5C62                        u4551 5E4E                        u4471 528E  
                      u4391 4FF4                        u3911 4D72                        u3831 4C42  
                      u3751 4B0E                        u4631 5D68                        u4615 5D20  
                      u4711 5F6C                        u3671 6124                        u5271 601C  
                      u4560 5E70                        u4480 52DA                        u3920 4D86  
                      u3840 4C54                        u3760 4B4C                        u4640 5D94  
                      u4720 5F9A                        u4800 59B2                        u3680 615E  
                      u4561 5E6C                        u4481 52D6                        u3921 4D82  
                      u3841 4C50                        u3761 4B48                        u4641 5D90  
                      u4721 5F96                        u4801 59AE                        u3681 615A  
                      u4570 5E90                        u4490 5308                        u3930 4DB2  
                      u3850 4C64                        u3770 4B5A                        u3690 4A78  
                      u4650 5DB4                        u4571 5E8C                        u4491 5304  
                      u3931 4DAE                        u3851 4C60                        u3771 4B56  
                      u3691 4A74                        u4651 5DB0                        u4580 5EE0  
                      u3940 4DC2                        u3860 4C96                        u3780 4BC6  
                      u4660 5DC4                        u4740 5FD4                        u4820 5A1E  
                      u4900 411E                        u4581 5EDC                        u3941 4DBE  
                      u3861 4C92                        u3781 4BC2                        u4661 5DC0  
                      u4741 5FCE                        u4821 5A1A                        u4901 411A  
                      u4590 6742                        u3950 4DDE                        u3870 4CA4  
                      u3790 4BDE                        u4750 5FD6                        u4830 5A42  
                      u4670 63F8                        u4910 412E                        u4591 673E  
                      u3951 4DDA                        u3871 4CA0                        u3791 4BD8  
                      u4735 5FAC                        u4815 59C6                        u4671 63F4  
                      u4911 412A                        u5287 60C8                        u3960 4DEE  
                      u3880 4CC2                        u4840 5A5E                        u4816 59D0  
                      u4680 6442                        u4760 672A                        u4920 416C  
                      u3961 4DEA                        u3881 4CBE                        u4841 5A5A  
                      u4817 59E0                        u4681 643E                        u4761 6726  
                      u4921 4168                        u3970 4DFE                        u3890 4CFA  
                      u4690 5F2A                        u4850 5AB2                        u4770 64C4  
                      u4930 417E                        u3971 4DFA                        u3891 4CF6  
                      u4835 5A38                        u4771 64C0                        u4931 417A  
                      u3980 4E14                        u4860 5ACE                        u4780 5962  
                      u4940 41EA                        u3981 4E10                        u4861 5ACA  
                      u4941 41E6                        u3990 4E2A                        u4870 5B0A  
                      u4790 5990                        u4950 41FC                        u3991 4E26  
                      u4695 5F20                        u4871 5B06                        u4855 5AA8  
                      u4791 598C                        u4951 41F8                        u4880 6670  
                      u4960 426C                        u4785 5958                        u4881 666C  
                      u4961 4268                        i2l90 6390                        u4970 42F8  
                      u4890 40D4                        i2l91 63E0                        u4971 42F4  
                      u4891 40D0                        i2l92 63E8                        u4980 432A  
                      u4981 4326                        u4990 4368                        u4991 4364  
                      _data 00B8                        _dbuf 0068                        _labs 64B6  
                      _main 5FE8                        _prec 0066                        pad@i 001A  
                      pad@p 0017                        fsr1h 3FE2                        fsr2h 3FDA  
                      indf1 3FE7                        indf2 3FDF                        fsr1l 3FE1  
                      fsr2l 3FD9            __end_of_ADC_Init 67E0               ___fpclassifyf 5EEA  
                      prodh 3FF4                        prodl 3FF3                        start 40AE  
           __end_of_MSdelay 65A6             ___fldiv@new_exp 0016               _LCD_String_xy 66B2  
              ___param_bank 0000                       ??_pad 0019            __end_of_LCD_Char 6822  
          __end_of_LCD_Init 67B8               ___fltol@sign1 000D                       ?_labs 0005  
           __end_of___fladd 4F14                       ?_main 0001                       _ADCLK 3EFF  
                     _ADPCH 3EF1             __end_of___fldiv 56EE             __end_of___flneg 6764  
           __end_of___flmul 535E             __end_of___flsub 65EC             __end_of___fltol 5DE6  
                     _LATD0 1FDE8                       _LATD1 1FDE9                vfpfcnvrt@fmt 00F0  
                     _TRISB 3FC3                       _TRISD 3FC5                       _flags 0054  
       read_prec_or_width@c 000A         read_prec_or_width@n 000B                       _fputc 60DC  
                     _fputs 6672                       labs@a 0005                       pad@fp 0014  
                     _width 0064                       _putch 6840                       tablat 3FF5  
                     status 3FD8             __end_of_sprintf 6630              ?___fpclassifyf 0005  
            ?_LCD_String_xy 000E             __initialization 6764                __end_of_labs 650C  
              __end_of_main 60DC                      ??_labs 0009                      ??_main 0048  
             __activetblptr 0003                   ??_IOC_ISR 0001  __end_of_read_prec_or_width 625A  
                    _ADACQH 3EF4                      _ADACQL 3EF3                      ?_fputc 0005  
                    ?_fputs 000E                      _ADRESH 3EF0                      _ADRESL 3EEF  
                    _ADPREH 3EF7                      _ADPREL 3EF6                      ?_putch 0001  
          LCD_String_xy@msg 000F            LCD_String_xy@pos 000E            LCD_String_xy@row 0011  
                 ??_MSdelay 0007                      i2l2150 6392                      i2l2142 6378  
                    i2l2152 63A8                      i2l2144 6388                      i2l2154 63C0  
          __end_of___xxtofl 5CE0                vfprintf@cfmt 0047                      ___flge 5DE6  
                    ___fleq 625A                   ??___fladd 000D                   ??___fldiv 000D  
                 ??___flneg 0009                   ??___flmul 001B                   ??___flsub 0034  
                 ??___fltol 0009                      _efgtoa 40B2                      _floorf 591A  
                    _memcpy 6630        read_prec_or_width@ap 0006                      clear_0 676A  
                    clear_1 6776                      isa$std 0001                      pad@buf 0016  
                    _strcat 6454                      _strcpy 66F2                      fputc@c 0005  
                    fputs@c 0011                      fputs@i 0012                      fputs@s 000E  
           ___fpclassifyf@e 000D                   ?_ADC_Init 0001             ___fpclassifyf@u 000F  
           ___fpclassifyf@x 0005                __mediumconst 2000                      tblptrh 3FF7  
                    tblptrl 3FF6                      tblptru 3FF8                      putch@c 0001  
          __end_of_vfprintf 655C                   ??_sprintf 0048                  ___flge@ff1 002C  
                ___flge@ff2 0030             ??___fpclassifyf 0009                ??_IOCC2_Init 0005  
              ___xxtofl@arg 000F                ___xxtofl@exp 000E                ___xxtofl@val 0005  
                ___fleq@ff1 0005                  ___fleq@ff2 0009                   ?_LCD_Char 0001  
                __accesstop 0060     __end_of__initialization 6788                   ?_LCD_Init 0001  
           ??_LCD_String_xy 0011                  ___flneg@f1 0005               ___rparam_used 0001  
                ___fltol@f1 0005              __pcstackCOMRAM 0001               __end_of_fputc 619C  
             __end_of_fputs 66B2               __end_of_putch 6842                ??_LCD_String 000E  
        __end_of_IOCC2_Init 6804                  ??_ADC_Init 0005                     ??_fputc 0009  
                   ??_fputs 0011                     ??_putch 0005                  __pbssBANK0 0060  
                ??_LCD_Char 000B                  ??_LCD_Init 000C          __end_of_LCD_String 6376  
                   IVTBASEH 3FD6                     IVTBASEL 3FD5                     IVTBASEU 3FD7  
                   ?___flge 002C                     ?___fleq 0005                     ?_efgtoa 0038  
                   ?_floorf 001E                     ?_memcpy 0005                     ?_strcat 0005  
                   ?_strcpy 0005                     _IOC_ISR 6378                   ?___xxtofl 0005  
                   _MSdelay 655C               LCD_String@msg 000C                     __Hparam 0000  
                   __Lparam 0000                     ___fladd 4A5E                     ___fldiv 535E  
                   ___flneg 672C                     ___flmul 4F14                     ___flsub 65A6  
                   ___fltol 5CE0                   ?_vfprintf 00F3                __psmallconst 2000  
                   __pcinit 6764                     __ramtop 2000                     _digital 0052  
             ivt0x4008_base 4008                     __ptext0 5FE8                     __ptext1 6454  
                   __ptext2 65EC                     __ptext3 650C                     __ptext4 56EE  
                   __ptext5 619C                     __ptext6 40B2                     __ptext7 66F2  
                   __ptext8 63EA                     __ptext9 6672       read_prec_or_width@fmt 0005  
                ??___xxtofl 0009                   _IOCCFbits 3A67                     efgtoa@c 003E  
                   efgtoa@d 00CD                     efgtoa@e 00D1                     efgtoa@f 003A  
                   efgtoa@g 00E4                     efgtoa@h 00DB                     efgtoa@i 00D9  
                   efgtoa@l 00DF                     efgtoa@m 00CF                     efgtoa@n 00E8  
                   efgtoa@p 00C4                     efgtoa@t 00C6                     efgtoa@u 00EA  
                   efgtoa@w 00D3                   _IOCCNbits 3A66                   _IOCCPbits 3A65  
                   _sprintf 65EC                     _voltage 004E        end_of_initialization 6788  
                   floorf@e 002C                     floorf@m 0028                     floorf@u 002E  
                   floorf@x 001E                     memcpy@d 000A                     memcpy@n 0007  
                   memcpy@s 000B                     fputc@fp 0007              LCD_Command@cmd 000B  
                   fputs@fp 000F          _read_prec_or_width 619C           __end_of_vfpfcnvrt 591A  
                efgtoa@mode 00CB                  efgtoa@sign 00E3                     postdec2 3FDD  
       ?_read_prec_or_width 0005                     postinc0 3FEE                     postinc1 3FE6  
                   postinc2 3FDE            vfpfcnvrt@convarg 0041                  ??_vfprintf 0047  
                   strcat@i 0007                     strcpy@d 0008                 ___fladd@grs 0014  
             ___xxtofl@sign 000D                   _TRISAbits 3FC2                   _TRISCbits 3FC4  
      ??_read_prec_or_width 0008                 ___fldiv@grs 0018                 ___fldiv@rem 0011  
               ___flmul@grs 0021               ??_LCD_Command 000B              __end_of___flge 5EEA  
            __end_of___fleq 6304                 vfpfcnvrt@ap 00F1                 vfpfcnvrt@cp 0046  
               vfpfcnvrt@fp 00EE              __end_of_efgtoa 4A5E              __end_of_floorf 5B2C  
            __end_of_memcpy 6672                  floorf@F521 0060              __end_of_strcat 64B6  
            __end_of_strcpy 672C         start_initialization 6764                 __end_of_pad 6454  
     __end_of___fpclassifyf 5FE8       __end_of_LCD_String_xy 66F2                 vfprintf@fmt 00F5  
                  ??___flge 0034                    ??___fleq 000D                    ??_efgtoa 003F  
                  ??_floorf 0022                    ??_memcpy 0009                    ??_strcat 0007  
                  ??_strcpy 0007                   ___fladd@a 0009                   ___fladd@b 0005  
                 ___fldiv@a 0009                   ___fldiv@b 0005         __end_of_LCD_Command 6840  
                  ?_IOC_ISR 0001                   ___flmul@a 0017                   ___flmul@b 0013  
               __pbssCOMRAM 004A                   ___flsub@a 0030                   ___flsub@b 002C  
             __pcstackBANK0 00C2               __pcstackBANK1 0100                    IOC_ISR@i 0003  
                  ?_MSdelay 0005                 __pivt0x4008 4008                 _efgtoa$1128 00C8  
                  ?___fladd 0005                    ?___fldiv 0005                    ?___flneg 0005  
                  ?___flmul 0013                    ?___flsub 002C                    ?___fltol 0005  
               __smallconst 2000                    _ADC_Init 67B8       LCD_String_xy@location 0012  
                  ?_sprintf 00F8                    MSdelay@i 0007                    MSdelay@j 0009  
                  _LCD_Char 6804                    _LCD_Init 678E                    _LATCbits 3FBC  
                  _PIE0bits 3990                    _IVTBASEH 3FD6                    _IVTBASEL 3FD5  
                  _IVTBASEU 3FD7                    i2u181_40 6388                    i2u181_41 6384  
                  i2u182_40 63E0                    i2u182_41 63DC                    _PIR0bits 39A0  
                  i2u530_47 63B4                    i2u529_47 639C           ivt0x4008_undefint 40AC  
               _LCD_Command 6822                   _vfpfcnvrt 56EE                  _ADCON0bits 3EF8  
                  _WPUCbits 3A61                  vfpfcnvrt@c 0045                 _INTCON0bits 3FD2  
                  __Hrparam 0000                   memcpy@tmp 0009                  vfprintf@ap 00F6  
                  __Lrparam 0000                  vfprintf@fp 00F3                  ?_vfpfcnvrt 00EE  
                _ANSELAbits 3A40                  _ANSELCbits 3A60          ___fpclassifyf@F465 004A  
                sprintf@fmt 00F9                    ___xxtofl 5B2C                  strcat@dest 0005  
                  __ptext10 60DC                    __ptext11 6840                    __ptext20 4F14  
                  __ptext12 6630                    __ptext21 5DE6                    __ptext13 64B6  
                  __ptext30 655C                    __ptext22 625A                    __ptext14 591A  
                  __ptext31 67E0                    __ptext23 535E                    __ptext15 5EEA  
                  __ptext32 67B8                    __ptext24 5B2C                    __ptext16 5CE0  
                  __ptext33 6378                    __ptext25 66B2                    __ptext17 65A6  
                  __ptext26 6304                    __ptext18 4A5E                    __ptext27 6804  
                  __ptext19 672C                    __ptext28 678E                    __ptext29 6822  
                strcpy@dest 0005                  _IOCC2_Init 67E0                  MSdelay@val 0005  
                  efgtoa@fp 0038                    efgtoa@ne 00C2                    efgtoa@pp 00CA  
                  efgtoa@ou 00D5                    isa$xinst 0000                    _vfprintf 650C  
                _LCD_String 6304                    memcpy@d1 0005                    memcpy@s1 0006  
                  intlevel2 0000                   sprintf@ap 0100                   strcat@src 0006  
                 strcpy@src 0006                 efgtoa@nmode 00CC                 ??_vfpfcnvrt 0040  
                  sprintf@f 0101                    sprintf@s 00F8               ___fladd@signs 0011  
               ?_IOCC2_Init 0001                ___fladd@aexp 0012                ___fladd@bexp 0013  
