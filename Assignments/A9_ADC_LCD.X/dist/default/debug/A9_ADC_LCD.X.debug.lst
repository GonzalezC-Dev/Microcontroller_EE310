

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun May 04 16:51:39 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text33,global,reloc=4,class=CODE,space=0,delta=1
    45                           	psect	ivt0x4008,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49   000000                     
    50                           ; Generated 12/10/2023 GMT
    51                           ; 
    52                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F47K42 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   003FE0                     bsr             equ	16352
    85   003FE9                     fsr0            equ	16361
    86   003FEA                     fsr0h           equ	16362
    87   003FE9                     fsr0l           equ	16361
    88   003FE1                     fsr1            equ	16353
    89   003FE2                     fsr1h           equ	16354
    90   003FE1                     fsr1l           equ	16353
    91   003FD9                     fsr2            equ	16345
    92   003FDA                     fsr2h           equ	16346
    93   003FD9                     fsr2l           equ	16345
    94   003FEF                     indf0           equ	16367
    95   003FE7                     indf1           equ	16359
    96   003FDF                     indf2           equ	16351
    97   003FD2                     intcon          equ	16338
    98   0039E5                     nvmcon          equ	14821
    99   003FF9                     pcl             equ	16377
   100   003FFA                     pclath          equ	16378
   101   003FFB                     pclatu          equ	16379
   102   003FEB                     plusw0          equ	16363
   103   003FE3                     plusw1          equ	16355
   104   003FDB                     plusw2          equ	16347
   105   003FED                     postdec0        equ	16365
   106   003FE5                     postdec1        equ	16357
   107   003FDD                     postdec2        equ	16349
   108   003FEE                     postinc0        equ	16366
   109   003FE6                     postinc1        equ	16358
   110   003FDE                     postinc2        equ	16350
   111   003FEC                     preinc0         equ	16364
   112   003FE4                     preinc1         equ	16356
   113   003FDC                     preinc2         equ	16348
   114   003FF3                     prod            equ	16371
   115   003FF4                     prodh           equ	16372
   116   003FF3                     prodl           equ	16371
   117   003FD8                     status          equ	16344
   118   003FF5                     tablat          equ	16373
   119   003FF6                     tblptr          equ	16374
   120   003FF7                     tblptrh         equ	16375
   121   003FF6                     tblptrl         equ	16374
   122   003FF8                     tblptru         equ	16376
   123   003FFD                     tosl            equ	16381
   124   003FE8                     wreg            equ	16360
   125   003880                     STATUS_CSHAD    equ	14464	;# 
   126   003881                     WREG_CSHAD      equ	14465	;# 
   127   003882                     BSR_CSHAD       equ	14466	;# 
   128   003883                     SHADCON         equ	14467	;# 
   129   003884                     STATUS_SHAD     equ	14468	;# 
   130   003885                     WREG_SHAD       equ	14469	;# 
   131   003886                     BSR_SHAD        equ	14470	;# 
   132   003887                     PCLATH_SHAD     equ	14471	;# 
   133   003888                     PCLATU_SHAD     equ	14472	;# 
   134   003889                     FSR0SH          equ	14473	;# 
   135   003889                     FSR0L_SHAD      equ	14473	;# 
   136   00388A                     FSR0H_SHAD      equ	14474	;# 
   137   00388B                     FSR1SH          equ	14475	;# 
   138   00388B                     FSR1L_SHAD      equ	14475	;# 
   139   00388C                     FSR1H_SHAD      equ	14476	;# 
   140   00388D                     FSR2SH          equ	14477	;# 
   141   00388D                     FSR2L_SHAD      equ	14477	;# 
   142   00388E                     FSR2H_SHAD      equ	14478	;# 
   143   00388F                     PRODSH          equ	14479	;# 
   144   00388F                     PRODL_SHAD      equ	14479	;# 
   145   003890                     PRODH_SHAD      equ	14480	;# 
   146   00389D                     IVTADL          equ	14493	;# 
   147   00389E                     IVTADH          equ	14494	;# 
   148   00389F                     IVTADU          equ	14495	;# 
   149   00395B                     WDTCON0         equ	14683	;# 
   150   00395C                     WDTCON1         equ	14684	;# 
   151   00395D                     WDTPSL          equ	14685	;# 
   152   00395E                     WDTPSH          equ	14686	;# 
   153   00395F                     WDTTMR          equ	14687	;# 
   154   003960                     CRCDATA         equ	14688	;# 
   155   003960                     CRCDATL         equ	14688	;# 
   156   003961                     CRCDATH         equ	14689	;# 
   157   003962                     CRCACC          equ	14690	;# 
   158   003962                     CRCACCL         equ	14690	;# 
   159   003963                     CRCACCH         equ	14691	;# 
   160   003964                     CRCSHFT         equ	14692	;# 
   161   003964                     CRCSHIFTL       equ	14692	;# 
   162   003965                     CRCSHIFTH       equ	14693	;# 
   163   003966                     CRCXOR          equ	14694	;# 
   164   003966                     CRCXORL         equ	14694	;# 
   165   003967                     CRCXORH         equ	14695	;# 
   166   003968                     CRCCON0         equ	14696	;# 
   167   003969                     CRCCON1         equ	14697	;# 
   168   003976                     SCANLADR        equ	14710	;# 
   169   003976                     SCANLADRL       equ	14710	;# 
   170   003977                     SCANLADRH       equ	14711	;# 
   171   003978                     SCANLADRU       equ	14712	;# 
   172   003979                     SCANHADR        equ	14713	;# 
   173   003979                     SCANHADRL       equ	14713	;# 
   174   00397A                     SCANHADRH       equ	14714	;# 
   175   00397B                     SCANHADRU       equ	14715	;# 
   176   00397C                     SCANCON0        equ	14716	;# 
   177   00397D                     SCANTRIG        equ	14717	;# 
   178   003980                     IPR0            equ	14720	;# 
   179   003981                     IPR1            equ	14721	;# 
   180   003982                     IPR2            equ	14722	;# 
   181   003983                     IPR3            equ	14723	;# 
   182   003984                     IPR4            equ	14724	;# 
   183   003985                     IPR5            equ	14725	;# 
   184   003986                     IPR6            equ	14726	;# 
   185   003987                     IPR7            equ	14727	;# 
   186   003988                     IPR8            equ	14728	;# 
   187   003989                     IPR9            equ	14729	;# 
   188   00398A                     IPR10           equ	14730	;# 
   189   003990                     PIE0            equ	14736	;# 
   190   003991                     PIE1            equ	14737	;# 
   191   003992                     PIE2            equ	14738	;# 
   192   003993                     PIE3            equ	14739	;# 
   193   003994                     PIE4            equ	14740	;# 
   194   003995                     PIE5            equ	14741	;# 
   195   003996                     PIE6            equ	14742	;# 
   196   003997                     PIE7            equ	14743	;# 
   197   003998                     PIE8            equ	14744	;# 
   198   003999                     PIE9            equ	14745	;# 
   199   00399A                     PIE10           equ	14746	;# 
   200   0039A0                     PIR0            equ	14752	;# 
   201   0039A1                     PIR1            equ	14753	;# 
   202   0039A2                     PIR2            equ	14754	;# 
   203   0039A3                     PIR3            equ	14755	;# 
   204   0039A4                     PIR4            equ	14756	;# 
   205   0039A5                     PIR5            equ	14757	;# 
   206   0039A6                     PIR6            equ	14758	;# 
   207   0039A7                     PIR7            equ	14759	;# 
   208   0039A8                     PIR8            equ	14760	;# 
   209   0039A9                     PIR9            equ	14761	;# 
   210   0039AA                     PIR10           equ	14762	;# 
   211   0039C0                     PMD0            equ	14784	;# 
   212   0039C1                     PMD1            equ	14785	;# 
   213   0039C2                     PMD2            equ	14786	;# 
   214   0039C3                     PMD3            equ	14787	;# 
   215   0039C4                     PMD4            equ	14788	;# 
   216   0039C5                     PMD5            equ	14789	;# 
   217   0039C6                     PMD6            equ	14790	;# 
   218   0039C7                     PMD7            equ	14791	;# 
   219   0039D0                     BORCON          equ	14800	;# 
   220   0039D1                     VREGCON         equ	14801	;# 
   221   0039D8                     CPUDOZE         equ	14808	;# 
   222   0039D9                     OSCCON1         equ	14809	;# 
   223   0039DA                     OSCCON2         equ	14810	;# 
   224   0039DB                     OSCCON3         equ	14811	;# 
   225   0039DC                     OSCSTAT         equ	14812	;# 
   226   0039DC                     OSCSTAT1        equ	14812	;# 
   227   0039DD                     OSCEN           equ	14813	;# 
   228   0039DE                     OSCTUNE         equ	14814	;# 
   229   0039DF                     OSCFRQ          equ	14815	;# 
   230   0039E0                     NVMADRL         equ	14816	;# 
   231   0039E1                     NVMADRH         equ	14817	;# 
   232   0039E3                     NVMDAT          equ	14819	;# 
   233   0039E5                     NVMCON1         equ	14821	;# 
   234   0039E6                     NVMCON2         equ	14822	;# 
   235   0039EF                     PRLOCK          equ	14831	;# 
   236   0039F1                     ISRPR           equ	14833	;# 
   237   0039F2                     MAINPR          equ	14834	;# 
   238   0039F3                     DMA1PR          equ	14835	;# 
   239   0039F4                     DMA2PR          equ	14836	;# 
   240   0039F7                     SCANPR          equ	14839	;# 
   241   003A00                     RA0PPS          equ	14848	;# 
   242   003A01                     RA1PPS          equ	14849	;# 
   243   003A02                     RA2PPS          equ	14850	;# 
   244   003A03                     RA3PPS          equ	14851	;# 
   245   003A04                     RA4PPS          equ	14852	;# 
   246   003A05                     RA5PPS          equ	14853	;# 
   247   003A06                     RA6PPS          equ	14854	;# 
   248   003A07                     RA7PPS          equ	14855	;# 
   249   003A08                     RB0PPS          equ	14856	;# 
   250   003A09                     RB1PPS          equ	14857	;# 
   251   003A0A                     RB2PPS          equ	14858	;# 
   252   003A0B                     RB3PPS          equ	14859	;# 
   253   003A0C                     RB4PPS          equ	14860	;# 
   254   003A0D                     RB5PPS          equ	14861	;# 
   255   003A0E                     RB6PPS          equ	14862	;# 
   256   003A0F                     RB7PPS          equ	14863	;# 
   257   003A10                     RC0PPS          equ	14864	;# 
   258   003A11                     RC1PPS          equ	14865	;# 
   259   003A12                     RC2PPS          equ	14866	;# 
   260   003A13                     RC3PPS          equ	14867	;# 
   261   003A14                     RC4PPS          equ	14868	;# 
   262   003A15                     RC5PPS          equ	14869	;# 
   263   003A16                     RC6PPS          equ	14870	;# 
   264   003A17                     RC7PPS          equ	14871	;# 
   265   003A18                     RD0PPS          equ	14872	;# 
   266   003A19                     RD1PPS          equ	14873	;# 
   267   003A1A                     RD2PPS          equ	14874	;# 
   268   003A1B                     RD3PPS          equ	14875	;# 
   269   003A1C                     RD4PPS          equ	14876	;# 
   270   003A1D                     RD5PPS          equ	14877	;# 
   271   003A1E                     RD6PPS          equ	14878	;# 
   272   003A1F                     RD7PPS          equ	14879	;# 
   273   003A20                     RE0PPS          equ	14880	;# 
   274   003A21                     RE1PPS          equ	14881	;# 
   275   003A22                     RE2PPS          equ	14882	;# 
   276   003A40                     ANSELA          equ	14912	;# 
   277   003A41                     WPUA            equ	14913	;# 
   278   003A42                     ODCONA          equ	14914	;# 
   279   003A43                     SLRCONA         equ	14915	;# 
   280   003A44                     INLVLA          equ	14916	;# 
   281   003A45                     IOCAP           equ	14917	;# 
   282   003A46                     IOCAN           equ	14918	;# 
   283   003A47                     IOCAF           equ	14919	;# 
   284   003A50                     ANSELB          equ	14928	;# 
   285   003A51                     WPUB            equ	14929	;# 
   286   003A52                     ODCONB          equ	14930	;# 
   287   003A53                     SLRCONB         equ	14931	;# 
   288   003A54                     INLVLB          equ	14932	;# 
   289   003A55                     IOCBP           equ	14933	;# 
   290   003A56                     IOCBN           equ	14934	;# 
   291   003A57                     IOCBF           equ	14935	;# 
   292   003A5A                     RB1I2C          equ	14938	;# 
   293   003A5B                     RB2I2C          equ	14939	;# 
   294   003A60                     ANSELC          equ	14944	;# 
   295   003A61                     WPUC            equ	14945	;# 
   296   003A62                     ODCONC          equ	14946	;# 
   297   003A63                     SLRCONC         equ	14947	;# 
   298   003A64                     INLVLC          equ	14948	;# 
   299   003A65                     IOCCP           equ	14949	;# 
   300   003A66                     IOCCN           equ	14950	;# 
   301   003A67                     IOCCF           equ	14951	;# 
   302   003A6A                     RC3I2C          equ	14954	;# 
   303   003A6B                     RC4I2C          equ	14955	;# 
   304   003A70                     ANSELD          equ	14960	;# 
   305   003A71                     WPUD            equ	14961	;# 
   306   003A72                     ODCOND          equ	14962	;# 
   307   003A73                     SLRCOND         equ	14963	;# 
   308   003A74                     INLVLD          equ	14964	;# 
   309   003A7A                     RD0I2C          equ	14970	;# 
   310   003A7B                     RD1I2C          equ	14971	;# 
   311   003A80                     ANSELE          equ	14976	;# 
   312   003A81                     WPUE            equ	14977	;# 
   313   003A82                     ODCONE          equ	14978	;# 
   314   003A83                     SLRCONE         equ	14979	;# 
   315   003A84                     INLVLE          equ	14980	;# 
   316   003A85                     IOCEP           equ	14981	;# 
   317   003A86                     IOCEN           equ	14982	;# 
   318   003A87                     IOCEF           equ	14983	;# 
   319   003ABF                     PPSLOCK         equ	15039	;# 
   320   003AC0                     INT0PPS         equ	15040	;# 
   321   003AC1                     INT1PPS         equ	15041	;# 
   322   003AC2                     INT2PPS         equ	15042	;# 
   323   003AC3                     T0CKIPPS        equ	15043	;# 
   324   003AC4                     T1CKIPPS        equ	15044	;# 
   325   003AC5                     T1GPPS          equ	15045	;# 
   326   003AC6                     T3CKIPPS        equ	15046	;# 
   327   003AC7                     T3GPPS          equ	15047	;# 
   328   003AC8                     T5CKIPPS        equ	15048	;# 
   329   003AC9                     T5GPPS          equ	15049	;# 
   330   003ACA                     T2INPPS         equ	15050	;# 
   331   003ACB                     T4INPPS         equ	15051	;# 
   332   003ACC                     T6INPPS         equ	15052	;# 
   333   003ACD                     CCP1PPS         equ	15053	;# 
   334   003ACE                     CCP2PPS         equ	15054	;# 
   335   003ACF                     CCP3PPS         equ	15055	;# 
   336   003AD0                     CCP4PPS         equ	15056	;# 
   337   003AD1                     SMT1WINPPS      equ	15057	;# 
   338   003AD2                     SMT1SIGPPS      equ	15058	;# 
   339   003AD3                     CWG1INPPS       equ	15059	;# 
   340   003AD4                     CWG2INPPS       equ	15060	;# 
   341   003AD5                     CWG3INPPS       equ	15061	;# 
   342   003AD6                     MD1CARLPPS      equ	15062	;# 
   343   003AD7                     MD1CARHPPS      equ	15063	;# 
   344   003AD8                     MD1SRCPPS       equ	15064	;# 
   345   003AD9                     CLCIN0PPS       equ	15065	;# 
   346   003ADA                     CLCIN1PPS       equ	15066	;# 
   347   003ADB                     CLCIN2PPS       equ	15067	;# 
   348   003ADC                     CLCIN3PPS       equ	15068	;# 
   349   003ADD                     ADACTPPS        equ	15069	;# 
   350   003ADE                     SPI1SCKPPS      equ	15070	;# 
   351   003ADF                     SPI1SDIPPS      equ	15071	;# 
   352   003AE0                     SPI1SSPPS       equ	15072	;# 
   353   003AE1                     I2C1SCLPPS      equ	15073	;# 
   354   003AE2                     I2C1SDAPPS      equ	15074	;# 
   355   003AE3                     I2C2SCLPPS      equ	15075	;# 
   356   003AE4                     I2C2SDAPPS      equ	15076	;# 
   357   003AE5                     U1RXPPS         equ	15077	;# 
   358   003AE6                     U1CTSPPS        equ	15078	;# 
   359   003AE8                     U2RXPPS         equ	15080	;# 
   360   003AE9                     U2CTSPPS        equ	15081	;# 
   361   003BC9                     DMA2BUF         equ	15305	;# 
   362   003BCA                     DMA2DCNT        equ	15306	;# 
   363   003BCA                     DMA2DCNTL       equ	15306	;# 
   364   003BCB                     DMA2DCNTH       equ	15307	;# 
   365   003BCC                     DMA2DPTR        equ	15308	;# 
   366   003BCC                     DMA2DPTRL       equ	15308	;# 
   367   003BCD                     DMA2DPTRH       equ	15309	;# 
   368   003BCE                     DMA2DSZ         equ	15310	;# 
   369   003BCE                     DMA2DSZL        equ	15310	;# 
   370   003BCF                     DMA2DSZH        equ	15311	;# 
   371   003BD0                     DMA2DSA         equ	15312	;# 
   372   003BD0                     DMA2DSAL        equ	15312	;# 
   373   003BD1                     DMA2DSAH        equ	15313	;# 
   374   003BD2                     DMA2SCNT        equ	15314	;# 
   375   003BD2                     DMA2SCNTL       equ	15314	;# 
   376   003BD3                     DMA2SCNTH       equ	15315	;# 
   377   003BD4                     DMA2SPTR        equ	15316	;# 
   378   003BD4                     DMA2SPTRL       equ	15316	;# 
   379   003BD5                     DMA2SPTRH       equ	15317	;# 
   380   003BD6                     DMA2SPTRU       equ	15318	;# 
   381   003BD7                     DMA2SSZ         equ	15319	;# 
   382   003BD7                     DMA2SSZL        equ	15319	;# 
   383   003BD8                     DMA2SSZH        equ	15320	;# 
   384   003BD9                     DMA2SSA         equ	15321	;# 
   385   003BD9                     DMA2SSAL        equ	15321	;# 
   386   003BDA                     DMA2SSAH        equ	15322	;# 
   387   003BDB                     DMA2SSAU        equ	15323	;# 
   388   003BDC                     DMA2CON0        equ	15324	;# 
   389   003BDD                     DMA2CON1        equ	15325	;# 
   390   003BDE                     DMA2AIRQ        equ	15326	;# 
   391   003BDF                     DMA2SIRQ        equ	15327	;# 
   392   003BE9                     DMA1BUF         equ	15337	;# 
   393   003BEA                     DMA1DCNT        equ	15338	;# 
   394   003BEA                     DMA1DCNTL       equ	15338	;# 
   395   003BEB                     DMA1DCNTH       equ	15339	;# 
   396   003BEC                     DMA1DPTR        equ	15340	;# 
   397   003BEC                     DMA1DPTRL       equ	15340	;# 
   398   003BED                     DMA1DPTRH       equ	15341	;# 
   399   003BEE                     DMA1DSZ         equ	15342	;# 
   400   003BEE                     DMA1DSZL        equ	15342	;# 
   401   003BEF                     DMA1DSZH        equ	15343	;# 
   402   003BF0                     DMA1DSA         equ	15344	;# 
   403   003BF0                     DMA1DSAL        equ	15344	;# 
   404   003BF1                     DMA1DSAH        equ	15345	;# 
   405   003BF2                     DMA1SCNT        equ	15346	;# 
   406   003BF2                     DMA1SCNTL       equ	15346	;# 
   407   003BF3                     DMA1SCNTH       equ	15347	;# 
   408   003BF4                     DMA1SPTR        equ	15348	;# 
   409   003BF4                     DMA1SPTRL       equ	15348	;# 
   410   003BF5                     DMA1SPTRH       equ	15349	;# 
   411   003BF6                     DMA1SPTRU       equ	15350	;# 
   412   003BF7                     DMA1SSZ         equ	15351	;# 
   413   003BF7                     DMA1SSZL        equ	15351	;# 
   414   003BF8                     DMA1SSZH        equ	15352	;# 
   415   003BF9                     DMA1SSA         equ	15353	;# 
   416   003BF9                     DMA1SSAL        equ	15353	;# 
   417   003BFA                     DMA1SSAH        equ	15354	;# 
   418   003BFB                     DMA1SSAU        equ	15355	;# 
   419   003BFC                     DMA1CON0        equ	15356	;# 
   420   003BFD                     DMA1CON1        equ	15357	;# 
   421   003BFE                     DMA1AIRQ        equ	15358	;# 
   422   003BFF                     DMA1SIRQ        equ	15359	;# 
   423   003C56                     CLC4CON         equ	15446	;# 
   424   003C57                     CLC4POL         equ	15447	;# 
   425   003C58                     CLC4SEL0        equ	15448	;# 
   426   003C59                     CLC4SEL1        equ	15449	;# 
   427   003C5A                     CLC4SEL2        equ	15450	;# 
   428   003C5B                     CLC4SEL3        equ	15451	;# 
   429   003C5C                     CLC4GLS0        equ	15452	;# 
   430   003C5D                     CLC4GLS1        equ	15453	;# 
   431   003C5E                     CLC4GLS2        equ	15454	;# 
   432   003C5F                     CLC4GLS3        equ	15455	;# 
   433   003C60                     CLC3CON         equ	15456	;# 
   434   003C61                     CLC3POL         equ	15457	;# 
   435   003C62                     CLC3SEL0        equ	15458	;# 
   436   003C63                     CLC3SEL1        equ	15459	;# 
   437   003C64                     CLC3SEL2        equ	15460	;# 
   438   003C65                     CLC3SEL3        equ	15461	;# 
   439   003C66                     CLC3GLS0        equ	15462	;# 
   440   003C67                     CLC3GLS1        equ	15463	;# 
   441   003C68                     CLC3GLS2        equ	15464	;# 
   442   003C69                     CLC3GLS3        equ	15465	;# 
   443   003C6A                     CLC2CON         equ	15466	;# 
   444   003C6B                     CLC2POL         equ	15467	;# 
   445   003C6C                     CLC2SEL0        equ	15468	;# 
   446   003C6D                     CLC2SEL1        equ	15469	;# 
   447   003C6E                     CLC2SEL2        equ	15470	;# 
   448   003C6F                     CLC2SEL3        equ	15471	;# 
   449   003C70                     CLC2GLS0        equ	15472	;# 
   450   003C71                     CLC2GLS1        equ	15473	;# 
   451   003C72                     CLC2GLS2        equ	15474	;# 
   452   003C73                     CLC2GLS3        equ	15475	;# 
   453   003C74                     CLC1CON         equ	15476	;# 
   454   003C75                     CLC1POL         equ	15477	;# 
   455   003C76                     CLC1SEL0        equ	15478	;# 
   456   003C77                     CLC1SEL1        equ	15479	;# 
   457   003C78                     CLC1SEL2        equ	15480	;# 
   458   003C79                     CLC1SEL3        equ	15481	;# 
   459   003C7A                     CLC1GLS0        equ	15482	;# 
   460   003C7B                     CLC1GLS1        equ	15483	;# 
   461   003C7C                     CLC1GLS2        equ	15484	;# 
   462   003C7D                     CLC1GLS3        equ	15485	;# 
   463   003C7E                     CLCDATA0        equ	15486	;# 
   464   003CE5                     CLKRCON         equ	15589	;# 
   465   003CE6                     CLKRCLK         equ	15590	;# 
   466   003CFA                     MD1CON0         equ	15610	;# 
   467   003CFB                     MD1CON1         equ	15611	;# 
   468   003CFC                     MD1SRC          equ	15612	;# 
   469   003CFD                     MD1CARL         equ	15613	;# 
   470   003CFE                     MD1CARH         equ	15614	;# 
   471   003D10                     SPI1RXB         equ	15632	;# 
   472   003D11                     SPI1TXB         equ	15633	;# 
   473   003D12                     SPI1TCNT        equ	15634	;# 
   474   003D12                     SPI1TCNTL       equ	15634	;# 
   475   003D13                     SPI1TCNTH       equ	15635	;# 
   476   003D14                     SPI1CON0        equ	15636	;# 
   477   003D15                     SPI1CON1        equ	15637	;# 
   478   003D16                     SPI1CON2        equ	15638	;# 
   479   003D17                     SPI1STATUS      equ	15639	;# 
   480   003D18                     SPI1TWIDTH      equ	15640	;# 
   481   003D19                     SPI1BAUD        equ	15641	;# 
   482   003D1A                     SPI1INTF        equ	15642	;# 
   483   003D1B                     SPI1INTE        equ	15643	;# 
   484   003D1C                     SPI1CLK         equ	15644	;# 
   485   003D54                     I2C2RXB         equ	15700	;# 
   486   003D55                     I2C2TXB         equ	15701	;# 
   487   003D56                     I2C2CNT         equ	15702	;# 
   488   003D57                     I2C2ADB0        equ	15703	;# 
   489   003D58                     I2C2ADB1        equ	15704	;# 
   490   003D59                     I2C2ADR0        equ	15705	;# 
   491   003D5A                     I2C2ADR1        equ	15706	;# 
   492   003D5B                     I2C2ADR2        equ	15707	;# 
   493   003D5C                     I2C2ADR3        equ	15708	;# 
   494   003D5D                     I2C2CON0        equ	15709	;# 
   495   003D5E                     I2C2CON1        equ	15710	;# 
   496   003D5F                     I2C2CON2        equ	15711	;# 
   497   003D60                     I2C2ERR         equ	15712	;# 
   498   003D61                     I2C2STAT0       equ	15713	;# 
   499   003D62                     I2C2STAT1       equ	15714	;# 
   500   003D63                     I2C2PIR         equ	15715	;# 
   501   003D64                     I2C2PIE         equ	15716	;# 
   502   003D65                     I2C2CLK         equ	15717	;# 
   503   003D66                     I2C2BTO         equ	15718	;# 
   504   003D6A                     I2C1RXB         equ	15722	;# 
   505   003D6B                     I2C1TXB         equ	15723	;# 
   506   003D6C                     I2C1CNT         equ	15724	;# 
   507   003D6D                     I2C1ADB0        equ	15725	;# 
   508   003D6E                     I2C1ADB1        equ	15726	;# 
   509   003D6F                     I2C1ADR0        equ	15727	;# 
   510   003D70                     I2C1ADR1        equ	15728	;# 
   511   003D71                     I2C1ADR2        equ	15729	;# 
   512   003D72                     I2C1ADR3        equ	15730	;# 
   513   003D73                     I2C1CON0        equ	15731	;# 
   514   003D74                     I2C1CON1        equ	15732	;# 
   515   003D75                     I2C1CON2        equ	15733	;# 
   516   003D76                     I2C1ERR         equ	15734	;# 
   517   003D77                     I2C1STAT0       equ	15735	;# 
   518   003D78                     I2C1STAT1       equ	15736	;# 
   519   003D79                     I2C1PIR         equ	15737	;# 
   520   003D7A                     I2C1PIE         equ	15738	;# 
   521   003D7B                     I2C1CLK         equ	15739	;# 
   522   003D7C                     I2C1BTO         equ	15740	;# 
   523   003DD0                     U2RXB           equ	15824	;# 
   524   003DD0                     U2RXBL          equ	15824	;# 
   525   003DD2                     U2TXB           equ	15826	;# 
   526   003DD2                     U2TXBL          equ	15826	;# 
   527   003DD4                     U2P1            equ	15828	;# 
   528   003DD4                     U2P1L           equ	15828	;# 
   529   003DD6                     U2P2            equ	15830	;# 
   530   003DD6                     U2P2L           equ	15830	;# 
   531   003DD8                     U2P3            equ	15832	;# 
   532   003DD8                     U2P3L           equ	15832	;# 
   533   003DDA                     U2CON0          equ	15834	;# 
   534   003DDB                     U2CON1          equ	15835	;# 
   535   003DDC                     U2CON2          equ	15836	;# 
   536   003DDD                     U2BRG           equ	15837	;# 
   537   003DDD                     U2BRGL          equ	15837	;# 
   538   003DDE                     U2BRGH          equ	15838	;# 
   539   003DDF                     U2FIFO          equ	15839	;# 
   540   003DE0                     U2UIR           equ	15840	;# 
   541   003DE1                     U2ERRIR         equ	15841	;# 
   542   003DE2                     U2ERRIE         equ	15842	;# 
   543   003DE8                     U1RXB           equ	15848	;# 
   544   003DE8                     U1RXBL          equ	15848	;# 
   545   003DE9                     U1RXCHK         equ	15849	;# 
   546   003DEA                     U1TXB           equ	15850	;# 
   547   003DEA                     U1TXBL          equ	15850	;# 
   548   003DEB                     U1TXCHK         equ	15851	;# 
   549   003DEC                     U1P1            equ	15852	;# 
   550   003DEC                     U1P1L           equ	15852	;# 
   551   003DED                     U1P1H           equ	15853	;# 
   552   003DEE                     U1P2            equ	15854	;# 
   553   003DEE                     U1P2L           equ	15854	;# 
   554   003DEF                     U1P2H           equ	15855	;# 
   555   003DF0                     U1P3            equ	15856	;# 
   556   003DF0                     U1P3L           equ	15856	;# 
   557   003DF1                     U1P3H           equ	15857	;# 
   558   003DF2                     U1CON0          equ	15858	;# 
   559   003DF3                     U1CON1          equ	15859	;# 
   560   003DF4                     U1CON2          equ	15860	;# 
   561   003DF5                     U1BRG           equ	15861	;# 
   562   003DF5                     U1BRGL          equ	15861	;# 
   563   003DF6                     U1BRGH          equ	15862	;# 
   564   003DF7                     U1FIFO          equ	15863	;# 
   565   003DF8                     U1UIR           equ	15864	;# 
   566   003DF9                     U1ERRIR         equ	15865	;# 
   567   003DFA                     U1ERRIE         equ	15866	;# 
   568   003E9C                     DAC1CON1        equ	16028	;# 
   569   003E9E                     DAC1CON0        equ	16030	;# 
   570   003EB8                     CM2CON0         equ	16056	;# 
   571   003EB9                     CM2CON1         equ	16057	;# 
   572   003EBA                     CM2NCH          equ	16058	;# 
   573   003EBB                     CM2PCH          equ	16059	;# 
   574   003EBC                     CM1CON0         equ	16060	;# 
   575   003EBD                     CM1CON1         equ	16061	;# 
   576   003EBE                     CM1NCH          equ	16062	;# 
   577   003EBF                     CM1PCH          equ	16063	;# 
   578   003EC0                     CMOUT           equ	16064	;# 
   579   003EC1                     FVRCON          equ	16065	;# 
   580   003EC3                     ZCDCON          equ	16067	;# 
   581   003EC9                     HLVDCON0        equ	16073	;# 
   582   003ECA                     HLVDCON1        equ	16074	;# 
   583   003ED7                     ADCP            equ	16087	;# 
   584   003EDE                     ADLTH           equ	16094	;# 
   585   003EDE                     ADLTHL          equ	16094	;# 
   586   003EDF                     ADLTHH          equ	16095	;# 
   587   003EE0                     ADUTH           equ	16096	;# 
   588   003EE0                     ADUTHL          equ	16096	;# 
   589   003EE1                     ADUTHH          equ	16097	;# 
   590   003EE2                     ADERR           equ	16098	;# 
   591   003EE2                     ADERRL          equ	16098	;# 
   592   003EE3                     ADERRH          equ	16099	;# 
   593   003EE4                     ADSTPT          equ	16100	;# 
   594   003EE4                     ADSTPTL         equ	16100	;# 
   595   003EE5                     ADSTPTH         equ	16101	;# 
   596   003EE6                     ADFLTR          equ	16102	;# 
   597   003EE6                     ADFLTRL         equ	16102	;# 
   598   003EE7                     ADFLTRH         equ	16103	;# 
   599   003EE8                     ADACC           equ	16104	;# 
   600   003EE8                     ADACCL          equ	16104	;# 
   601   003EE9                     ADACCH          equ	16105	;# 
   602   003EEA                     ADACCU          equ	16106	;# 
   603   003EEB                     ADCNT           equ	16107	;# 
   604   003EEC                     ADRPT           equ	16108	;# 
   605   003EED                     ADPREV          equ	16109	;# 
   606   003EED                     ADPREVL         equ	16109	;# 
   607   003EEE                     ADPREVH         equ	16110	;# 
   608   003EEF                     ADRES           equ	16111	;# 
   609   003EEF                     ADRESL          equ	16111	;# 
   610   003EF0                     ADRESH          equ	16112	;# 
   611   003EF1                     ADPCH           equ	16113	;# 
   612   003EF3                     ADACQ           equ	16115	;# 
   613   003EF3                     ADACQL          equ	16115	;# 
   614   003EF4                     ADACQH          equ	16116	;# 
   615   003EF5                     ADCAP           equ	16117	;# 
   616   003EF6                     ADPRE           equ	16118	;# 
   617   003EF6                     ADPREL          equ	16118	;# 
   618   003EF7                     ADPREH          equ	16119	;# 
   619   003EF8                     ADCON0          equ	16120	;# 
   620   003EF9                     ADCON1          equ	16121	;# 
   621   003EFA                     ADCON2          equ	16122	;# 
   622   003EFB                     ADCON3          equ	16123	;# 
   623   003EFC                     ADSTAT          equ	16124	;# 
   624   003EFD                     ADREF           equ	16125	;# 
   625   003EFE                     ADACT           equ	16126	;# 
   626   003EFF                     ADCLK           equ	16127	;# 
   627   003F12                     SMT1TMR         equ	16146	;# 
   628   003F12                     SMT1TMRL        equ	16146	;# 
   629   003F13                     SMT1TMRH        equ	16147	;# 
   630   003F14                     SMT1TMRU        equ	16148	;# 
   631   003F15                     SMT1CPR         equ	16149	;# 
   632   003F15                     SMT1CPRL        equ	16149	;# 
   633   003F16                     SMT1CPRH        equ	16150	;# 
   634   003F17                     SMT1CPRU        equ	16151	;# 
   635   003F18                     SMT1CPW         equ	16152	;# 
   636   003F18                     SMT1CPWL        equ	16152	;# 
   637   003F19                     SMT1CPWH        equ	16153	;# 
   638   003F1A                     SMT1CPWU        equ	16154	;# 
   639   003F1B                     SMT1PR          equ	16155	;# 
   640   003F1B                     SMT1PRL         equ	16155	;# 
   641   003F1C                     SMT1PRH         equ	16156	;# 
   642   003F1D                     SMT1PRU         equ	16157	;# 
   643   003F1E                     SMT1CON0        equ	16158	;# 
   644   003F1F                     SMT1CON1        equ	16159	;# 
   645   003F20                     SMT1STAT        equ	16160	;# 
   646   003F21                     SMT1CLK         equ	16161	;# 
   647   003F22                     SMT1SIG         equ	16162	;# 
   648   003F23                     SMT1WIN         equ	16163	;# 
   649   003F38                     NCO1ACC         equ	16184	;# 
   650   003F38                     NCO1ACCL        equ	16184	;# 
   651   003F39                     NCO1ACCH        equ	16185	;# 
   652   003F3A                     NCO1ACCU        equ	16186	;# 
   653   003F3B                     NCO1INC         equ	16187	;# 
   654   003F3B                     NCO1INCL        equ	16187	;# 
   655   003F3C                     NCO1INCH        equ	16188	;# 
   656   003F3D                     NCO1INCU        equ	16189	;# 
   657   003F3E                     NCO1CON         equ	16190	;# 
   658   003F3F                     NCO1CLK         equ	16191	;# 
   659   003F40                     CWG3CLK         equ	16192	;# 
   660   003F40                     CWG3CLKCON      equ	16192	;# 
   661   003F41                     CWG3ISM         equ	16193	;# 
   662   003F41                     CWG3DAT         equ	16193	;# 
   663   003F42                     CWG3DBR         equ	16194	;# 
   664   003F43                     CWG3DBF         equ	16195	;# 
   665   003F44                     CWG3CON0        equ	16196	;# 
   666   003F45                     CWG3CON1        equ	16197	;# 
   667   003F46                     CWG3AS0         equ	16198	;# 
   668   003F47                     CWG3AS1         equ	16199	;# 
   669   003F48                     CWG3STR         equ	16200	;# 
   670   003F49                     CWG2CLK         equ	16201	;# 
   671   003F49                     CWG2CLKCON      equ	16201	;# 
   672   003F4A                     CWG2ISM         equ	16202	;# 
   673   003F4A                     CWG2DAT         equ	16202	;# 
   674   003F4B                     CWG2DBR         equ	16203	;# 
   675   003F4C                     CWG2DBF         equ	16204	;# 
   676   003F4D                     CWG2CON0        equ	16205	;# 
   677   003F4E                     CWG2CON1        equ	16206	;# 
   678   003F4F                     CWG2AS0         equ	16207	;# 
   679   003F50                     CWG2AS1         equ	16208	;# 
   680   003F51                     CWG2STR         equ	16209	;# 
   681   003F52                     CWG1CLK         equ	16210	;# 
   682   003F52                     CWG1CLKCON      equ	16210	;# 
   683   003F53                     CWG1ISM         equ	16211	;# 
   684   003F53                     CWG1DAT         equ	16211	;# 
   685   003F54                     CWG1DBR         equ	16212	;# 
   686   003F55                     CWG1DBF         equ	16213	;# 
   687   003F56                     CWG1CON0        equ	16214	;# 
   688   003F57                     CWG1CON1        equ	16215	;# 
   689   003F58                     CWG1AS0         equ	16216	;# 
   690   003F59                     CWG1AS1         equ	16217	;# 
   691   003F5A                     CWG1STR         equ	16218	;# 
   692   003F5E                     CCPTMRS0        equ	16222	;# 
   693   003F5F                     CCPTMRS1        equ	16223	;# 
   694   003F60                     PWM8DC          equ	16224	;# 
   695   003F60                     PWM8DCL         equ	16224	;# 
   696   003F61                     PWM8DCH         equ	16225	;# 
   697   003F62                     PWM8CON         equ	16226	;# 
   698   003F64                     PWM7DC          equ	16228	;# 
   699   003F64                     PWM7DCL         equ	16228	;# 
   700   003F65                     PWM7DCH         equ	16229	;# 
   701   003F66                     PWM7CON         equ	16230	;# 
   702   003F68                     PWM6DC          equ	16232	;# 
   703   003F68                     PWM6DCL         equ	16232	;# 
   704   003F69                     PWM6DCH         equ	16233	;# 
   705   003F6A                     PWM6CON         equ	16234	;# 
   706   003F6C                     PWM5DC          equ	16236	;# 
   707   003F6C                     PWM5DCL         equ	16236	;# 
   708   003F6D                     PWM5DCH         equ	16237	;# 
   709   003F6E                     PWM5CON         equ	16238	;# 
   710   003F70                     CCPR4           equ	16240	;# 
   711   003F70                     CCPR4L          equ	16240	;# 
   712   003F71                     CCPR4H          equ	16241	;# 
   713   003F72                     CCP4CON         equ	16242	;# 
   714   003F73                     CCP4CAP         equ	16243	;# 
   715   003F74                     CCPR3           equ	16244	;# 
   716   003F74                     CCPR3L          equ	16244	;# 
   717   003F75                     CCPR3H          equ	16245	;# 
   718   003F76                     CCP3CON         equ	16246	;# 
   719   003F77                     CCP3CAP         equ	16247	;# 
   720   003F78                     CCPR2           equ	16248	;# 
   721   003F78                     CCPR2L          equ	16248	;# 
   722   003F79                     CCPR2H          equ	16249	;# 
   723   003F7A                     CCP2CON         equ	16250	;# 
   724   003F7B                     CCP2CAP         equ	16251	;# 
   725   003F7C                     CCPR1           equ	16252	;# 
   726   003F7C                     CCPR1L          equ	16252	;# 
   727   003F7D                     CCPR1H          equ	16253	;# 
   728   003F7E                     CCP1CON         equ	16254	;# 
   729   003F7F                     CCP1CAP         equ	16255	;# 
   730   003F92                     T6TMR           equ	16274	;# 
   731   003F92                     TMR6            equ	16274	;# 
   732   003F93                     T6PR            equ	16275	;# 
   733   003F93                     PR6             equ	16275	;# 
   734   003F94                     T6CON           equ	16276	;# 
   735   003F95                     T6HLT           equ	16277	;# 
   736   003F96                     T6CLKCON        equ	16278	;# 
   737   003F96                     T6CLK           equ	16278	;# 
   738   003F97                     T6RST           equ	16279	;# 
   739   003F98                     TMR5            equ	16280	;# 
   740   003F98                     TMR5L           equ	16280	;# 
   741   003F99                     TMR5H           equ	16281	;# 
   742   003F9A                     T5CON           equ	16282	;# 
   743   003F9A                     TMR5CON         equ	16282	;# 
   744   003F9B                     T5GCON          equ	16283	;# 
   745   003F9B                     TMR5GCON        equ	16283	;# 
   746   003F9C                     T5GATE          equ	16284	;# 
   747   003F9C                     TMR5GATE        equ	16284	;# 
   748   003F9D                     T5CLK           equ	16285	;# 
   749   003F9D                     TMR5CLK         equ	16285	;# 
   750   003F9D                     PR5             equ	16285	;# 
   751   003F9E                     T4TMR           equ	16286	;# 
   752   003F9E                     TMR4            equ	16286	;# 
   753   003F9F                     T4PR            equ	16287	;# 
   754   003F9F                     PR4             equ	16287	;# 
   755   003FA0                     T4CON           equ	16288	;# 
   756   003FA1                     T4HLT           equ	16289	;# 
   757   003FA2                     T4CLKCON        equ	16290	;# 
   758   003FA2                     T4CLK           equ	16290	;# 
   759   003FA3                     T4RST           equ	16291	;# 
   760   003FA4                     TMR3            equ	16292	;# 
   761   003FA4                     TMR3L           equ	16292	;# 
   762   003FA5                     TMR3H           equ	16293	;# 
   763   003FA6                     T3CON           equ	16294	;# 
   764   003FA6                     TMR3CON         equ	16294	;# 
   765   003FA7                     T3GCON          equ	16295	;# 
   766   003FA7                     TMR3GCON        equ	16295	;# 
   767   003FA8                     T3GATE          equ	16296	;# 
   768   003FA8                     TMR3GATE        equ	16296	;# 
   769   003FA9                     T3CLK           equ	16297	;# 
   770   003FA9                     TMR3CLK         equ	16297	;# 
   771   003FA9                     PR3             equ	16297	;# 
   772   003FAA                     T2TMR           equ	16298	;# 
   773   003FAA                     TMR2            equ	16298	;# 
   774   003FAB                     T2PR            equ	16299	;# 
   775   003FAB                     PR2             equ	16299	;# 
   776   003FAC                     T2CON           equ	16300	;# 
   777   003FAD                     T2HLT           equ	16301	;# 
   778   003FAE                     T2CLKCON        equ	16302	;# 
   779   003FAE                     T2CLK           equ	16302	;# 
   780   003FAF                     T2RST           equ	16303	;# 
   781   003FB0                     TMR1            equ	16304	;# 
   782   003FB0                     TMR1L           equ	16304	;# 
   783   003FB1                     TMR1H           equ	16305	;# 
   784   003FB2                     T1CON           equ	16306	;# 
   785   003FB2                     TMR1CON         equ	16306	;# 
   786   003FB3                     T1GCON          equ	16307	;# 
   787   003FB3                     TMR1GCON        equ	16307	;# 
   788   003FB4                     T1GATE          equ	16308	;# 
   789   003FB4                     TMR1GATE        equ	16308	;# 
   790   003FB5                     T1CLK           equ	16309	;# 
   791   003FB5                     TMR1CLK         equ	16309	;# 
   792   003FB5                     PR1             equ	16309	;# 
   793   003FB6                     TMR0L           equ	16310	;# 
   794   003FB6                     TMR0            equ	16310	;# 
   795   003FB7                     TMR0H           equ	16311	;# 
   796   003FB7                     PR0             equ	16311	;# 
   797   003FB8                     T0CON0          equ	16312	;# 
   798   003FB9                     T0CON1          equ	16313	;# 
   799   003FBA                     LATA            equ	16314	;# 
   800   003FBB                     LATB            equ	16315	;# 
   801   003FBC                     LATC            equ	16316	;# 
   802   003FBD                     LATD            equ	16317	;# 
   803   003FBE                     LATE            equ	16318	;# 
   804   003FC2                     TRISA           equ	16322	;# 
   805   003FC3                     TRISB           equ	16323	;# 
   806   003FC4                     TRISC           equ	16324	;# 
   807   003FC5                     TRISD           equ	16325	;# 
   808   003FC6                     TRISE           equ	16326	;# 
   809   003FCA                     PORTA           equ	16330	;# 
   810   003FCB                     PORTB           equ	16331	;# 
   811   003FCC                     PORTC           equ	16332	;# 
   812   003FCD                     PORTD           equ	16333	;# 
   813   003FCE                     PORTE           equ	16334	;# 
   814   003FD2                     INTCON0         equ	16338	;# 
   815   003FD3                     INTCON1         equ	16339	;# 
   816   003FD4                     IVTLOCK         equ	16340	;# 
   817   003FD5                     IVTBASE         equ	16341	;# 
   818   003FD5                     IVTBASEL        equ	16341	;# 
   819   003FD6                     IVTBASEH        equ	16342	;# 
   820   003FD7                     IVTBASEU        equ	16343	;# 
   821   003FD8                     STATUS          equ	16344	;# 
   822   003FD9                     FSR2            equ	16345	;# 
   823   003FD9                     FSR2L           equ	16345	;# 
   824   003FDA                     FSR2H           equ	16346	;# 
   825   003FDB                     PLUSW2          equ	16347	;# 
   826   003FDC                     PREINC2         equ	16348	;# 
   827   003FDD                     POSTDEC2        equ	16349	;# 
   828   003FDE                     POSTINC2        equ	16350	;# 
   829   003FDF                     INDF2           equ	16351	;# 
   830   003FE0                     BSR             equ	16352	;# 
   831   003FE1                     FSR1            equ	16353	;# 
   832   003FE1                     FSR1L           equ	16353	;# 
   833   003FE2                     FSR1H           equ	16354	;# 
   834   003FE3                     PLUSW1          equ	16355	;# 
   835   003FE4                     PREINC1         equ	16356	;# 
   836   003FE5                     POSTDEC1        equ	16357	;# 
   837   003FE6                     POSTINC1        equ	16358	;# 
   838   003FE7                     INDF1           equ	16359	;# 
   839   003FE8                     WREG            equ	16360	;# 
   840   003FE9                     FSR0            equ	16361	;# 
   841   003FE9                     FSR0L           equ	16361	;# 
   842   003FEA                     FSR0H           equ	16362	;# 
   843   003FEB                     PLUSW0          equ	16363	;# 
   844   003FEC                     PREINC0         equ	16364	;# 
   845   003FED                     POSTDEC0        equ	16365	;# 
   846   003FEE                     POSTINC0        equ	16366	;# 
   847   003FEF                     INDF0           equ	16367	;# 
   848   003FF0                     PCON0           equ	16368	;# 
   849   003FF1                     PCON1           equ	16369	;# 
   850   003FF3                     PROD            equ	16371	;# 
   851   003FF3                     PRODL           equ	16371	;# 
   852   003FF4                     PRODH           equ	16372	;# 
   853   003FF5                     TABLAT          equ	16373	;# 
   854   003FF6                     TBLPTR          equ	16374	;# 
   855   003FF6                     TBLPTRL         equ	16374	;# 
   856   003FF7                     TBLPTRH         equ	16375	;# 
   857   003FF8                     TBLPTRU         equ	16376	;# 
   858   003FF9                     PCLAT           equ	16377	;# 
   859   003FF9                     PCL             equ	16377	;# 
   860   003FFA                     PCLATH          equ	16378	;# 
   861   003FFB                     PCLATU          equ	16379	;# 
   862   003FFC                     STKPTR          equ	16380	;# 
   863   003FFD                     TOS             equ	16381	;# 
   864   003FFD                     TOSL            equ	16381	;# 
   865   003FFE                     TOSH            equ	16382	;# 
   866   003FFF                     TOSU            equ	16383	;# 
   867   003990                     _PIE0bits       set	14736
   868   0039A0                     _PIR0bits       set	14752
   869   003A40                     _ANSELAbits     set	14912
   870   003A66                     _IOCCNbits      set	14950
   871   003A65                     _IOCCPbits      set	14949
   872   003A61                     _WPUCbits       set	14945
   873   003A60                     _ANSELCbits     set	14944
   874   003A67                     _IOCCFbits      set	14951
   875   003EF4                     _ADACQH         set	16116
   876   003EF3                     _ADACQL         set	16115
   877   003EF7                     _ADPREH         set	16119
   878   003EF6                     _ADPREL         set	16118
   879   003EFF                     _ADCLK          set	16127
   880   003EF1                     _ADPCH          set	16113
   881   003EEF                     _ADRESL         set	16111
   882   003EF0                     _ADRESH         set	16112
   883   003EF8                     _ADCON0bits     set	16120
   884   003FC2                     _TRISAbits      set	16322
   885   003FBB                     _LATB           set	16315
   886   003FC5                     _TRISD          set	16325
   887   003FC3                     _TRISB          set	16323
   888   003FD5                     _IVTBASEL       set	16341
   889   003FD6                     _IVTBASEH       set	16342
   890   003FD7                     _IVTBASEU       set	16343
   891   003FD2                     _INTCON0bits    set	16338
   892   003FBC                     _LATCbits       set	16316
   893   003FC4                     _TRISCbits      set	16324
   894   01FDE9                     _LATD1          set	130537
   895   01FDE8                     _LATD0          set	130536
   896                           
   897                           	psect	smallconst
   898   002000                     __psmallconst:
   899                           	callstack 0
   900   002000  00                 	db	0
   901   002001                     STR_1:
   902   002001  56                 	db	86	;'V'
   903   002002  6F                 	db	111	;'o'
   904   002003  6C                 	db	108	;'l'
   905   002004  74                 	db	116	;'t'
   906   002005  61                 	db	97	;'a'
   907   002006  67                 	db	103	;'g'
   908   002007  65                 	db	101	;'e'
   909   002008  3A                 	db	58	;':'
   910   002009  00                 	db	0
   911   00200A                     STR_2:
   912   00200A  25                 	db	37
   913   00200B  2E                 	db	46
   914   00200C  32                 	db	50	;'2'
   915   00200D  66                 	db	102	;'f'
   916   00200E  00                 	db	0
   917   00200F                     STR_4:
   918   00200F  69                 	db	105	;'i'
   919   002010  6E                 	db	110	;'n'
   920   002011  66                 	db	102	;'f'
   921   002012  00                 	db	0
   922   002013                     STR_7:
   923   002013  6E                 	db	110	;'n'
   924   002014  61                 	db	97	;'a'
   925   002015  6E                 	db	110	;'n'
   926   002016  00                 	db	0
   927   002017                     STR_3:
   928   002017  20                 	db	32
   929   002018  56                 	db	86	;'V'
   930   002019  00                 	db	0
   931   002013                     STR_8           equ	STR_7
   932   002013                     STR_9           equ	STR_7
   933   00200F                     STR_5           equ	STR_4
   934   00200F                     STR_6           equ	STR_4
   935   00201A  00                 	db	0	; dummy byte at the end
   936   002000                     __smallconst    set	__psmallconst
   937   002000                     __mediumconst   set	__psmallconst
   938   000003                     __activetblptr  equ	3
   939                           
   940                           ; #config settings
   941                           
   942                           	psect	cinit
   943   006728                     __pcinit:
   944                           	callstack 0
   945   006728                     start_initialization:
   946                           	callstack 0
   947   006728                     __initialization:
   948                           	callstack 0
   949                           
   950                           ; Clear objects allocated to BANK0 (106 bytes)
   951   006728  EE00  F060         	lfsr	0,__pbssBANK0
   952   00672C  0E6A               	movlw	106
   953   00672E                     clear_0:
   954   00672E  6AEE               	clrf	postinc0,c
   955   006730  06E8               	decf	wreg,f,c
   956   006732  E1FD               	bnz	clear_0
   957                           
   958                           ; Clear objects allocated to COMRAM (5 bytes)
   959   006734  6A5D               	clrf	(__pbssCOMRAM+4)& (0+255),c
   960   006736  6A5C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   961   006738  6A5B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   962   00673A  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   963   00673C  6A59               	clrf	__pbssCOMRAM& (0+255),c
   964                           
   965                           ;
   966                           ; Setup IVTBASE
   967                           ;
   968   003FD5                     IVTBASEL        equ	16341
   969   003FD6                     IVTBASEH        equ	16342
   970   003FD7                     IVTBASEU        equ	16343
   971   00673E  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   972   006740  6ED5               	movwf	213,c
   973   006742  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   974   006744  6ED6               	movwf	214,c
   975   006746  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   976   006748  6ED7               	movwf	215,c
   977   00674A                     end_of_initialization:
   978                           	callstack 0
   979   00674A                     __end_of__initialization:
   980                           	callstack 0
   981   00674A  0100               	movlb	0
   982   00674C  EF5E  F02E         	goto	_main	;jump to C main() function
   983                           
   984                           	psect	bssCOMRAM
   985   000059                     __pbssCOMRAM:
   986                           	callstack 0
   987   000059                     _halt:
   988                           	callstack 0
   989   000059                     	ds	2
   990   00005B                     _digital:
   991                           	callstack 0
   992   00005B                     	ds	2
   993   00005D                     _flags:
   994                           	callstack 0
   995   00005D                     	ds	1
   996                           
   997                           	psect	bssBANK0
   998   000060                     __pbssBANK0:
   999                           	callstack 0
  1000   000060                     floorf@F521:
  1001                           	callstack 0
  1002   000060                     	ds	4
  1003   000064                     ___fpclassifyf@F465:
  1004                           	callstack 0
  1005   000064                     	ds	4
  1006   000068                     _voltage:
  1007                           	callstack 0
  1008   000068                     	ds	4
  1009   00006C                     _width:
  1010                           	callstack 0
  1011   00006C                     	ds	2
  1012   00006E                     _prec:
  1013                           	callstack 0
  1014   00006E                     	ds	2
  1015   000070                     _dbuf:
  1016                           	callstack 0
  1017   000070                     	ds	80
  1018   0000C0                     _data:
  1019                           	callstack 0
  1020   0000C0                     	ds	10
  1021                           
  1022                           	psect	cstackBANK0
  1023   0000CA                     __pcstackBANK0:
  1024                           	callstack 0
  1025   0000CA                     efgtoa@ne:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x0
  1029   0000CA                     	ds	2
  1030   0000CC                     efgtoa@p:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x2
  1034   0000CC                     	ds	2
  1035   0000CE                     efgtoa@t:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x4
  1039   0000CE                     	ds	2
  1040   0000D0                     _efgtoa$1129:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x6
  1044   0000D0                     	ds	2
  1045   0000D2                     efgtoa@pp:
  1046                           	callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x8
  1049   0000D2                     	ds	1
  1050   0000D3                     efgtoa@mode:
  1051                           	callstack 0
  1052                           
  1053                           ; 1 bytes @ 0x9
  1054   0000D3                     	ds	1
  1055   0000D4                     efgtoa@nmode:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0xA
  1059   0000D4                     	ds	1
  1060   0000D5                     efgtoa@d:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0xB
  1064   0000D5                     	ds	2
  1065   0000D7                     efgtoa@m:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0xD
  1069   0000D7                     	ds	2
  1070   0000D9                     efgtoa@e:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0xF
  1074   0000D9                     	ds	2
  1075   0000DB                     efgtoa@w:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x11
  1079   0000DB                     	ds	2
  1080   0000DD                     efgtoa@ou:
  1081                           	callstack 0
  1082                           
  1083                           ; 4 bytes @ 0x13
  1084   0000DD                     	ds	4
  1085   0000E1                     efgtoa@i:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x17
  1089   0000E1                     	ds	2
  1090   0000E3                     efgtoa@h:
  1091                           	callstack 0
  1092                           
  1093                           ; 4 bytes @ 0x19
  1094   0000E3                     	ds	4
  1095   0000E7                     efgtoa@l:
  1096                           	callstack 0
  1097                           
  1098                           ; 4 bytes @ 0x1D
  1099   0000E7                     	ds	4
  1100   0000EB                     efgtoa@sign:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0x21
  1104   0000EB                     	ds	1
  1105   0000EC                     efgtoa@n:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x22
  1109   0000EC                     	ds	2
  1110   0000EE                     efgtoa@g:
  1111                           	callstack 0
  1112                           
  1113                           ; 4 bytes @ 0x24
  1114   0000EE                     	ds	4
  1115   0000F2                     efgtoa@u:
  1116                           	callstack 0
  1117                           
  1118                           ; 4 bytes @ 0x28
  1119   0000F2                     	ds	4
  1120   0000F6                     ?_sprintf:
  1121                           	callstack 0
  1122   0000F6                     sprintf@s:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x2C
  1126   0000F6                     	ds	1
  1127   0000F7                     sprintf@fmt:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x2D
  1131   0000F7                     	ds	5
  1132                           
  1133                           	psect	cstackCOMRAM
  1134   000001                     __pcstackCOMRAM:
  1135                           	callstack 0
  1136   000001                     ?___fpclassifyf:
  1137                           	callstack 0
  1138   000001                     ?_read_prec_or_width:
  1139                           	callstack 0
  1140   000001                     ?___fladd:
  1141                           	callstack 0
  1142   000001                     ?___fldiv:
  1143                           	callstack 0
  1144   000001                     ?_labs:
  1145                           	callstack 0
  1146   000001                     ?___flneg:
  1147                           	callstack 0
  1148   000001                     ?___fltol:
  1149                           	callstack 0
  1150   000001                     ?___xxtofl:
  1151                           	callstack 0
  1152   000001                     read_prec_or_width@fmt:
  1153                           	callstack 0
  1154   000001                     memcpy@d1:
  1155                           	callstack 0
  1156   000001                     strcat@dest:
  1157                           	callstack 0
  1158   000001                     strcpy@dest:
  1159                           	callstack 0
  1160   000001                     MSdelay@val:
  1161                           	callstack 0
  1162   000001                     fputc@c:
  1163                           	callstack 0
  1164   000001                     ___fleq@ff1:
  1165                           	callstack 0
  1166   000001                     ___flneg@f1:
  1167                           	callstack 0
  1168   000001                     ___fltol@f1:
  1169                           	callstack 0
  1170   000001                     ___fladd@b:
  1171                           	callstack 0
  1172   000001                     ___fldiv@b:
  1173                           	callstack 0
  1174   000001                     ___xxtofl@val:
  1175                           	callstack 0
  1176   000001                     ___fpclassifyf@x:
  1177                           	callstack 0
  1178   000001                     labs@a:
  1179                           	callstack 0
  1180   000001                     
  1181                           ; 1 bytes @ 0x0
  1182   000001                     	ds	1
  1183   000002                     read_prec_or_width@ap:
  1184                           	callstack 0
  1185   000002                     memcpy@s1:
  1186                           	callstack 0
  1187   000002                     strcat@src:
  1188                           	callstack 0
  1189   000002                     strcpy@src:
  1190                           	callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x1
  1193   000002                     	ds	1
  1194   000003                     fputc@fp:
  1195                           	callstack 0
  1196   000003                     MSdelay@i:
  1197                           	callstack 0
  1198   000003                     memcpy@n:
  1199                           	callstack 0
  1200   000003                     strcat@i:
  1201                           	callstack 0
  1202   000003                     ??_strcpy:
  1203   000003                     ??_read_prec_or_width:
  1204                           
  1205                           ; 1 bytes @ 0x2
  1206   000003                     	ds	1
  1207   000004                     strcpy@d:
  1208                           	callstack 0
  1209   000004                     ??_fputc:
  1210                           
  1211                           ; 1 bytes @ 0x3
  1212   000004                     	ds	1
  1213   000005                     read_prec_or_width@c:
  1214                           	callstack 0
  1215   000005                     memcpy@tmp:
  1216                           	callstack 0
  1217   000005                     MSdelay@j:
  1218                           	callstack 0
  1219   000005                     ___fleq@ff2:
  1220                           	callstack 0
  1221   000005                     ___fladd@a:
  1222                           	callstack 0
  1223   000005                     ___fldiv@a:
  1224                           	callstack 0
  1225   000005                     ??___fpclassifyf:
  1226   000005                     ??_labs:
  1227   000005                     ??___fltol:
  1228   000005                     ??___xxtofl:
  1229                           
  1230                           ; 1 bytes @ 0x4
  1231   000005                     	ds	1
  1232   000006                     memcpy@d:
  1233                           	callstack 0
  1234   000006                     read_prec_or_width@n:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x5
  1238   000006                     	ds	1
  1239   000007                     LCD_Command@cmd:
  1240                           	callstack 0
  1241   000007                     LCD_Char@dat:
  1242                           	callstack 0
  1243   000007                     memcpy@s:
  1244                           	callstack 0
  1245   000007                     
  1246                           ; 1 bytes @ 0x6
  1247   000007                     	ds	1
  1248   000008                     LCD_String@msg:
  1249                           	callstack 0
  1250   000008                     
  1251                           ; 1 bytes @ 0x7
  1252   000008                     	ds	1
  1253   000009                     ___fltol@sign1:
  1254                           	callstack 0
  1255   000009                     ___xxtofl@sign:
  1256                           	callstack 0
  1257   000009                     fputs@s:
  1258                           	callstack 0
  1259   000009                     ___fpclassifyf@e:
  1260                           	callstack 0
  1261   000009                     ??___fladd:
  1262   000009                     ??___fldiv:
  1263   000009                     ??___fleq:
  1264                           
  1265                           ; 1 bytes @ 0x8
  1266   000009                     	ds	1
  1267   00000A                     LCD_String_xy@pos:
  1268                           	callstack 0
  1269   00000A                     ___fltol@exp1:
  1270                           	callstack 0
  1271   00000A                     ___xxtofl@exp:
  1272                           	callstack 0
  1273   00000A                     fputs@fp:
  1274                           	callstack 0
  1275   00000A                     
  1276                           ; 1 bytes @ 0x9
  1277   00000A                     	ds	1
  1278   00000B                     fputs@c:
  1279                           	callstack 0
  1280   00000B                     LCD_String_xy@msg:
  1281                           	callstack 0
  1282   00000B                     ___xxtofl@arg:
  1283                           	callstack 0
  1284   00000B                     ___fpclassifyf@u:
  1285                           	callstack 0
  1286   00000B                     
  1287                           ; 1 bytes @ 0xA
  1288   00000B                     	ds	1
  1289   00000C                     fputs@i:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0xB
  1293   00000C                     	ds	1
  1294   00000D                     LCD_String_xy@row:
  1295                           	callstack 0
  1296   00000D                     ___fladd@signs:
  1297                           	callstack 0
  1298   00000D                     ___fldiv@rem:
  1299                           	callstack 0
  1300   00000D                     
  1301                           ; 1 bytes @ 0xC
  1302   00000D                     	ds	1
  1303   00000E                     LCD_String_xy@location:
  1304                           	callstack 0
  1305   00000E                     ___fladd@aexp:
  1306                           	callstack 0
  1307   00000E                     pad@fp:
  1308                           	callstack 0
  1309                           
  1310                           ; 1 bytes @ 0xD
  1311   00000E                     	ds	1
  1312   00000F                     ?___flmul:
  1313                           	callstack 0
  1314   00000F                     ___fladd@bexp:
  1315                           	callstack 0
  1316   00000F                     pad@buf:
  1317                           	callstack 0
  1318   00000F                     ___flmul@b:
  1319                           	callstack 0
  1320                           
  1321                           ; 4 bytes @ 0xE
  1322   00000F                     	ds	1
  1323   000010                     ___fladd@grs:
  1324                           	callstack 0
  1325   000010                     pad@p:
  1326                           	callstack 0
  1327                           
  1328                           ; 2 bytes @ 0xF
  1329   000010                     	ds	1
  1330   000011                     ___fldiv@sign:
  1331                           	callstack 0
  1332                           
  1333                           ; 1 bytes @ 0x10
  1334   000011                     	ds	1
  1335   000012                     ___fldiv@new_exp:
  1336                           	callstack 0
  1337   000012                     ??_pad:
  1338                           
  1339                           ; 1 bytes @ 0x11
  1340   000012                     	ds	1
  1341   000013                     pad@i:
  1342                           	callstack 0
  1343   000013                     ___flmul@a:
  1344                           	callstack 0
  1345                           
  1346                           ; 4 bytes @ 0x12
  1347   000013                     	ds	1
  1348   000014                     ___fldiv@grs:
  1349                           	callstack 0
  1350                           
  1351                           ; 4 bytes @ 0x13
  1352   000014                     	ds	3
  1353   000017                     ??___flmul:
  1354                           
  1355                           ; 1 bytes @ 0x16
  1356   000017                     	ds	1
  1357   000018                     ___fldiv@bexp:
  1358                           	callstack 0
  1359                           
  1360                           ; 1 bytes @ 0x17
  1361   000018                     	ds	1
  1362   000019                     ___fldiv@aexp:
  1363                           	callstack 0
  1364                           
  1365                           ; 1 bytes @ 0x18
  1366   000019                     	ds	1
  1367   00001A                     ?_floorf:
  1368                           	callstack 0
  1369   00001A                     floorf@x:
  1370                           	callstack 0
  1371                           
  1372                           ; 4 bytes @ 0x19
  1373   00001A                     	ds	1
  1374   00001B                     ___flmul@sign:
  1375                           	callstack 0
  1376                           
  1377                           ; 1 bytes @ 0x1A
  1378   00001B                     	ds	1
  1379   00001C                     ___flmul@grs:
  1380                           	callstack 0
  1381                           
  1382                           ; 4 bytes @ 0x1B
  1383   00001C                     	ds	2
  1384   00001E                     ??_floorf:
  1385                           
  1386                           ; 1 bytes @ 0x1D
  1387   00001E                     	ds	2
  1388   000020                     ___flmul@aexp:
  1389                           	callstack 0
  1390                           
  1391                           ; 1 bytes @ 0x1F
  1392   000020                     	ds	1
  1393   000021                     ___flmul@bexp:
  1394                           	callstack 0
  1395                           
  1396                           ; 1 bytes @ 0x20
  1397   000021                     	ds	1
  1398   000022                     ___flmul@prod:
  1399                           	callstack 0
  1400                           
  1401                           ; 4 bytes @ 0x21
  1402   000022                     	ds	2
  1403   000024                     floorf@m:
  1404                           	callstack 0
  1405                           
  1406                           ; 4 bytes @ 0x23
  1407   000024                     	ds	2
  1408   000026                     ___flmul@temp:
  1409                           	callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x25
  1412   000026                     	ds	2
  1413   000028                     ?___flsub:
  1414                           	callstack 0
  1415   000028                     floorf@e:
  1416                           	callstack 0
  1417   000028                     ___flge@ff1:
  1418                           	callstack 0
  1419   000028                     ___flsub@b:
  1420                           	callstack 0
  1421                           
  1422                           ; 4 bytes @ 0x27
  1423   000028                     	ds	2
  1424   00002A                     floorf@u:
  1425                           	callstack 0
  1426                           
  1427                           ; 4 bytes @ 0x29
  1428   00002A                     	ds	2
  1429   00002C                     ___flge@ff2:
  1430                           	callstack 0
  1431   00002C                     ___flsub@a:
  1432                           	callstack 0
  1433                           
  1434                           ; 4 bytes @ 0x2B
  1435   00002C                     	ds	4
  1436   000030                     ??___flge:
  1437                           
  1438                           ; 1 bytes @ 0x2F
  1439   000030                     	ds	4
  1440   000034                     efgtoa@fp:
  1441                           	callstack 0
  1442                           
  1443                           ; 1 bytes @ 0x33
  1444   000034                     	ds	1
  1445   000035                     efgtoa@f:
  1446                           	callstack 0
  1447                           
  1448                           ; 4 bytes @ 0x34
  1449   000035                     	ds	4
  1450   000039                     efgtoa@c:
  1451                           	callstack 0
  1452                           
  1453                           ; 1 bytes @ 0x38
  1454   000039                     	ds	1
  1455   00003A                     ??_efgtoa:
  1456                           
  1457                           ; 1 bytes @ 0x39
  1458   00003A                     	ds	1
  1459   00003B                     vfpfcnvrt@fp:
  1460                           	callstack 0
  1461                           
  1462                           ; 1 bytes @ 0x3A
  1463   00003B                     	ds	1
  1464   00003C                     vfpfcnvrt@fmt:
  1465                           	callstack 0
  1466                           
  1467                           ; 1 bytes @ 0x3B
  1468   00003C                     	ds	1
  1469   00003D                     vfpfcnvrt@ap:
  1470                           	callstack 0
  1471                           
  1472                           ; 1 bytes @ 0x3C
  1473   00003D                     	ds	1
  1474   00003E                     ??_vfpfcnvrt:
  1475                           
  1476                           ; 1 bytes @ 0x3D
  1477   00003E                     	ds	1
  1478   00003F                     vfpfcnvrt@convarg:
  1479                           	callstack 0
  1480                           
  1481                           ; 4 bytes @ 0x3E
  1482   00003F                     	ds	4
  1483   000043                     vfpfcnvrt@c:
  1484                           	callstack 0
  1485                           
  1486                           ; 1 bytes @ 0x42
  1487   000043                     	ds	1
  1488   000044                     vfpfcnvrt@cp:
  1489                           	callstack 0
  1490                           
  1491                           ; 1 bytes @ 0x43
  1492   000044                     	ds	1
  1493   000045                     ?_vfprintf:
  1494                           	callstack 0
  1495   000045                     vfprintf@fp:
  1496                           	callstack 0
  1497                           
  1498                           ; 1 bytes @ 0x44
  1499   000045                     	ds	1
  1500   000046                     vfprintf@fmt:
  1501                           	callstack 0
  1502                           
  1503                           ; 1 bytes @ 0x45
  1504   000046                     	ds	1
  1505   000047                     vfprintf@ap:
  1506                           	callstack 0
  1507                           
  1508                           ; 1 bytes @ 0x46
  1509   000047                     	ds	1
  1510   000048                     vfprintf@cfmt:
  1511                           	callstack 0
  1512   000048                     
  1513                           ; 1 bytes @ 0x47
  1514   000048                     	ds	1
  1515   000049                     sprintf@ap:
  1516                           	callstack 0
  1517   000049                     
  1518                           ; 1 bytes @ 0x48
  1519   000049                     	ds	1
  1520   00004A                     sprintf@f:
  1521                           	callstack 0
  1522                           
  1523                           ; 11 bytes @ 0x49
  1524   00004A                     	ds	11
  1525   000055                     ??_main:
  1526                           
  1527                           ; 1 bytes @ 0x54
  1528   000055                     	ds	2
  1529   000057                     main@i:
  1530                           	callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x56
  1533   000057                     	ds	2
  1534                           
  1535 ;;
  1536 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1537 ;;
  1538 ;; *************** function _main *****************
  1539 ;; Defined at:
  1540 ;;		line 110 in file "ACD_LCD_main.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  i               2   86[COMRAM] int 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1555 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1556 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1557 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1558 ;;Total ram usage:        4 bytes
  1559 ;; Hardware stack levels required when called: 9
  1560 ;; This function calls:
  1561 ;;		_ADC_Init
  1562 ;;		_IOCC2_Init
  1563 ;;		_LCD_Init
  1564 ;;		_LCD_String_xy
  1565 ;;		___flmul
  1566 ;;		___xxtofl
  1567 ;;		_sprintf
  1568 ;;		_strcat
  1569 ;; This function is called by:
  1570 ;;		Startup code after reset
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text0
  1575   005CBC                     __ptext0:
  1576                           	callstack 0
  1577   005CBC                     _main:
  1578                           	callstack 22
  1579   005CBC                     
  1580                           ;ACD_LCD_main.c: 112:     ADC_Init();
  1581   005CBC  ECA8  F033         	call	_ADC_Init	;wreg free
  1582   005CC0                     
  1583                           ;ACD_LCD_main.c: 113:     LCD_Init();
  1584   005CC0  EC7F  F033         	call	_LCD_Init	;wreg free
  1585   005CC4                     
  1586                           ;ACD_LCD_main.c: 114:     IOCC2_Init();
  1587   005CC4  ECBC  F033         	call	_IOCC2_Init	;wreg free
  1588   005CC8                     
  1589                           ;ACD_LCD_main.c: 116:     TRISCbits.TRISC3 = 0;
  1590   005CC8  96C4               	bcf	196,3,c	;volatile
  1591   005CCA                     
  1592                           ;ACD_LCD_main.c: 117:     LATCbits.LATC3 = 0;
  1593   005CCA  96BC               	bcf	188,3,c	;volatile
  1594   005CCC                     
  1595                           ;ACD_LCD_main.c: 142:     LCD_String_xy(1, 0, "Voltage:");
  1596   005CCC  0E00               	movlw	0
  1597   005CCE  6E0A               	movwf	LCD_String_xy@pos^0,c
  1598   005CD0  0E01               	movlw	low STR_1
  1599   005CD2  6E0B               	movwf	LCD_String_xy@msg^0,c
  1600   005CD4  500B               	movf	LCD_String_xy@msg^0,w,c
  1601   005CD6  A4D8               	btfss	status,2,c
  1602   005CD8  0E20               	movlw	high __smallconst
  1603   005CDA  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1604   005CDC  0E01               	movlw	1
  1605   005CDE  ECED  F032         	call	_LCD_String_xy
  1606   005CE2                     l3335:
  1607                           
  1608                           ;ACD_LCD_main.c: 145:     {;ACD_LCD_main.c: 146:         if (halt) {
  1609   005CE2  5059               	movf	_halt^0,w,c
  1610   005CE4  105A               	iorwf	(_halt+1)^0,w,c
  1611   005CE6  B4D8               	btfsc	status,2,c
  1612   005CE8  EF78  F02E         	goto	u3651
  1613   005CEC  EF7A  F02E         	goto	u3650
  1614   005CF0                     u3651:
  1615   005CF0  EFAA  F02E         	goto	l3351
  1616   005CF4                     u3650:
  1617   005CF4                     
  1618                           ;ACD_LCD_main.c: 148:             for (int i = 0; i < 20; i++) {
  1619   005CF4  0E00               	movlw	0
  1620   005CF6  6E58               	movwf	(main@i+1)^0,c
  1621   005CF8  0E00               	movlw	0
  1622   005CFA  6E57               	movwf	main@i^0,c
  1623   005CFC                     l99:
  1624                           
  1625                           ;ACD_LCD_main.c: 149:                 LATCbits.LATC3 = 1;
  1626   005CFC  86BC               	bsf	188,3,c	;volatile
  1627   005CFE                     
  1628                           ;ACD_LCD_main.c: 150:                 _delay((unsigned long)((250)*(4000000/4000.0)));
  1629   005CFE  0E02               	movlw	2
  1630   005D00  6E56               	movwf	(??_main+1)^0,c
  1631   005D02  0E45               	movlw	69
  1632   005D04  6E55               	movwf	??_main^0,c
  1633   005D06  0EAA               	movlw	170
  1634   005D08                     u3687:
  1635   005D08  2EE8               	decfsz	wreg,f,c
  1636   005D0A  D7FE               	bra	u3687
  1637   005D0C  2E55               	decfsz	??_main^0,f,c
  1638   005D0E  D7FC               	bra	u3687
  1639   005D10  2E56               	decfsz	(??_main+1)^0,f,c
  1640   005D12  D7FA               	bra	u3687
  1641   005D14                     
  1642                           ;ACD_LCD_main.c: 151:                 LATCbits.LATC3 = 0;
  1643   005D14  96BC               	bcf	188,3,c	;volatile
  1644                           
  1645                           ;ACD_LCD_main.c: 152:                 _delay((unsigned long)((250)*(4000000/4000.0)));
  1646   005D16  0E02               	movlw	2
  1647   005D18  6E56               	movwf	(??_main+1)^0,c
  1648   005D1A  0E45               	movlw	69
  1649   005D1C  6E55               	movwf	??_main^0,c
  1650   005D1E  0EAA               	movlw	170
  1651   005D20                     u3697:
  1652   005D20  2EE8               	decfsz	wreg,f,c
  1653   005D22  D7FE               	bra	u3697
  1654   005D24  2E55               	decfsz	??_main^0,f,c
  1655   005D26  D7FC               	bra	u3697
  1656   005D28  2E56               	decfsz	(??_main+1)^0,f,c
  1657   005D2A  D7FA               	bra	u3697
  1658   005D2C                     
  1659                           ;ACD_LCD_main.c: 153:             }
  1660   005D2C  4A57               	infsnz	main@i^0,f,c
  1661   005D2E  2A58               	incf	(main@i+1)^0,f,c
  1662   005D30  BE58               	btfsc	(main@i+1)^0,7,c
  1663   005D32  EFA4  F02E         	goto	u3661
  1664   005D36  5058               	movf	(main@i+1)^0,w,c
  1665   005D38  E109               	bnz	u3660
  1666   005D3A  0E14               	movlw	20
  1667   005D3C  5C57               	subwf	main@i^0,w,c
  1668   005D3E  A0D8               	btfss	status,0,c
  1669   005D40  EFA4  F02E         	goto	u3661
  1670   005D44  EFA6  F02E         	goto	u3660
  1671   005D48                     u3661:
  1672   005D48  EF7E  F02E         	goto	l99
  1673   005D4C                     u3660:
  1674   005D4C                     
  1675                           ;ACD_LCD_main.c: 154:             halt = 0;
  1676   005D4C  0E00               	movlw	0
  1677   005D4E  6E5A               	movwf	(_halt+1)^0,c
  1678   005D50  0E00               	movlw	0
  1679   005D52  6E59               	movwf	_halt^0,c
  1680   005D54                     l3351:
  1681                           
  1682                           ;ACD_LCD_main.c: 157:         ADCON0bits.GO = 1;
  1683   005D54  013E               	movlb	62	; () banked
  1684   005D56  81F8               	bsf	248,0,b	;volatile
  1685   005D58                     l101:
  1686                           
  1687                           ; BSR set to: 62
  1688   005D58  B1F8               	btfsc	248,0,b	;volatile
  1689   005D5A  EFB1  F02E         	goto	u3671
  1690   005D5E  EFB3  F02E         	goto	u3670
  1691   005D62                     u3671:
  1692   005D62  EFAC  F02E         	goto	l101
  1693   005D66                     u3670:
  1694   005D66                     
  1695                           ; BSR set to: 62
  1696                           ;ACD_LCD_main.c: 159:         digital = (ADRESH*256) | (ADRESL);
  1697   005D66  51EF               	movf	239,w,b	;volatile
  1698   005D68  006F FBC0  F055    	movff	16112,??_main	;volatile
  1699   005D6E  6A56               	clrf	(??_main+1)^0,c
  1700   005D70  C055  F056         	movff	??_main,??_main+1
  1701   005D74  6A55               	clrf	??_main^0,c
  1702   005D76  1055               	iorwf	??_main^0,w,c
  1703   005D78  6E5B               	movwf	_digital^0,c
  1704   005D7A  5056               	movf	(??_main+1)^0,w,c
  1705   005D7C  6E5C               	movwf	(_digital+1)^0,c
  1706   005D7E                     
  1707                           ; BSR set to: 62
  1708                           ;ACD_LCD_main.c: 160:         voltage= digital*((float)5.0/(float)(4096));
  1709   005D7E  C05B  F001         	movff	_digital,___xxtofl@val
  1710   005D82  C05C  F002         	movff	_digital+1,___xxtofl@val+1
  1711   005D86  0E00               	movlw	0
  1712   005D88  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1713   005D8A  0EFF               	movlw	-1
  1714   005D8C  6E03               	movwf	(___xxtofl@val+2)^0,c
  1715   005D8E  6E04               	movwf	(___xxtofl@val+3)^0,c
  1716   005D90  0E01               	movlw	1
  1717   005D92  EC84  F02D         	call	___xxtofl
  1718   005D96  C001  F00F         	movff	?___xxtofl,___flmul@b
  1719   005D9A  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1720   005D9E  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1721   005DA2  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1722   005DA6  0E00               	movlw	0
  1723   005DA8  6E13               	movwf	___flmul@a^0,c
  1724   005DAA  0E00               	movlw	0
  1725   005DAC  6E14               	movwf	(___flmul@a+1)^0,c
  1726   005DAE  0EA0               	movlw	160
  1727   005DB0  6E15               	movwf	(___flmul@a+2)^0,c
  1728   005DB2  0E3A               	movlw	58
  1729   005DB4  6E16               	movwf	(___flmul@a+3)^0,c
  1730   005DB6  EC86  F027         	call	___flmul	;wreg free
  1731   005DBA  C00F  F068         	movff	?___flmul,_voltage
  1732   005DBE  C010  F069         	movff	?___flmul+1,_voltage+1
  1733   005DC2  C011  F06A         	movff	?___flmul+2,_voltage+2
  1734   005DC6  C012  F06B         	movff	?___flmul+3,_voltage+3
  1735   005DCA                     
  1736                           ;ACD_LCD_main.c: 164:         sprintf(data,"%.2f",voltage);
  1737   005DCA  0EC0               	movlw	low _data
  1738   005DCC  0100               	movlb	0	; () banked
  1739   005DCE  6FF6               	movwf	sprintf@s& (0+255),b
  1740   005DD0  0E0A               	movlw	low STR_2
  1741   005DD2  6FF7               	movwf	sprintf@fmt& (0+255),b
  1742   005DD4  C068  F0F8         	movff	_voltage,?_sprintf+2
  1743   005DD8  C069  F0F9         	movff	_voltage+1,?_sprintf+3
  1744   005DDC  C06A  F0FA         	movff	_voltage+2,?_sprintf+4
  1745   005DE0  C06B  F0FB         	movff	_voltage+3,?_sprintf+5
  1746   005DE4  EC64  F033         	call	_sprintf	;wreg free
  1747   005DE8                     
  1748                           ;ACD_LCD_main.c: 166:         strcat(data," V");
  1749   005DE8  0EC0               	movlw	low _data
  1750   005DEA  6E01               	movwf	strcat@dest^0,c
  1751   005DEC  0E17               	movlw	low STR_3
  1752   005DEE  6E02               	movwf	strcat@src^0,c
  1753   005DF0  ECD5  F031         	call	_strcat	;wreg free
  1754   005DF4                     
  1755                           ;ACD_LCD_main.c: 167:         LCD_String_xy(2,4,data);
  1756   005DF4  0E04               	movlw	4
  1757   005DF6  6E0A               	movwf	LCD_String_xy@pos^0,c
  1758   005DF8  0EC0               	movlw	low _data
  1759   005DFA  6E0B               	movwf	LCD_String_xy@msg^0,c
  1760   005DFC  6A0C               	clrf	(LCD_String_xy@msg+1)^0,c
  1761   005DFE  0E02               	movlw	2
  1762   005E00  ECED  F032         	call	_LCD_String_xy
  1763   005E04                     
  1764                           ;ACD_LCD_main.c: 169:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1765   005E04  0E03               	movlw	3
  1766   005E06  6E56               	movwf	(??_main+1)^0,c
  1767   005E08  0E8A               	movlw	138
  1768   005E0A  6E55               	movwf	??_main^0,c
  1769   005E0C  0E56               	movlw	86
  1770   005E0E                     u3707:
  1771   005E0E  2EE8               	decfsz	wreg,f,c
  1772   005E10  D7FE               	bra	u3707
  1773   005E12  2E55               	decfsz	??_main^0,f,c
  1774   005E14  D7FC               	bra	u3707
  1775   005E16  2E56               	decfsz	(??_main+1)^0,f,c
  1776   005E18  D7FA               	bra	u3707
  1777   005E1A  EF71  F02E         	goto	l3335
  1778   005E1E  EF57  F020         	goto	start
  1779   005E22                     __end_of_main:
  1780                           	callstack 0
  1781                           
  1782 ;; *************** function _strcat *****************
  1783 ;; Defined at:
  1784 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcat.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  dest            1    0[COMRAM] PTR unsigned char 
  1787 ;;		 -> data(10), 
  1788 ;;  src             1    1[COMRAM] PTR const unsigned char 
  1789 ;;		 -> STR_3(3), 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  i               2    2[COMRAM] unsigned int 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    0[COMRAM] PTR unsigned char 
  1794 ;; Registers used:
  1795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1804 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1805 ;;Total ram usage:        4 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; Hardware stack levels required when called: 1
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_main
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text1
  1816   0063AA                     __ptext1:
  1817                           	callstack 0
  1818   0063AA                     _strcat:
  1819                           	callstack 29
  1820   0063AA  0E00               	movlw	0
  1821   0063AC  6E04               	movwf	(strcat@i+1)^0,c
  1822   0063AE  0E00               	movlw	0
  1823   0063B0  6E03               	movwf	strcat@i^0,c
  1824   0063B2  EFDD  F031         	goto	l3271
  1825   0063B6                     l3269:
  1826   0063B6  4A03               	infsnz	strcat@i^0,f,c
  1827   0063B8  2A04               	incf	(strcat@i+1)^0,f,c
  1828   0063BA                     l3271:
  1829   0063BA  5001               	movf	strcat@dest^0,w,c
  1830   0063BC  2403               	addwf	strcat@i^0,w,c
  1831   0063BE  6ED9               	movwf	fsr2l,c
  1832   0063C0  6ADA               	clrf	fsr2h,c
  1833   0063C2  50DF               	movf	indf2,w,c
  1834   0063C4  A4D8               	btfss	status,2,c
  1835   0063C6  EFE7  F031         	goto	u3531
  1836   0063CA  EFE9  F031         	goto	u3530
  1837   0063CE                     u3531:
  1838   0063CE  EFDB  F031         	goto	l3269
  1839   0063D2                     u3530:
  1840   0063D2  EFEE  F031         	goto	l3275
  1841   0063D6                     l3273:
  1842   0063D6  4A03               	infsnz	strcat@i^0,f,c
  1843   0063D8  2A04               	incf	(strcat@i+1)^0,f,c
  1844   0063DA  2A02               	incf	strcat@src^0,f,c
  1845   0063DC                     l3275:
  1846   0063DC  0060  F00B  FFF6   	movff	strcat@src,tblptrl
  1847   0063E2                     	if	1	;There is more than 1 active tblptr byte
  1848   0063E2  0E20               	movlw	high __smallconst
  1849   0063E4  6EF7               	movwf	tblptrh,c
  1850   0063E6                     	endif
  1851   0063E6                     	if	0	;tblptru may be non-zero
  1852   0063E6                     	endif
  1853   0063E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1854   0063E6  0E00               	movlw	low (__smallconst shr (0+16))
  1855   0063E8  6EF8               	movwf	tblptru,c
  1856   0063EA                     	endif
  1857   0063EA  5001               	movf	strcat@dest^0,w,c
  1858   0063EC  2403               	addwf	strcat@i^0,w,c
  1859   0063EE  6ED9               	movwf	fsr2l,c
  1860   0063F0  6ADA               	clrf	fsr2h,c
  1861   0063F2  0008               	tblrd		*
  1862   0063F4  006F FFD7 FFDF     	movff	tablat,indf2
  1863   0063FA  50DF               	movf	indf2,w,c
  1864   0063FC  A4D8               	btfss	status,2,c
  1865   0063FE  EF03  F032         	goto	u3541
  1866   006402  EF05  F032         	goto	u3540
  1867   006406                     u3541:
  1868   006406  EFEB  F031         	goto	l3273
  1869   00640A                     u3540:
  1870   00640A  0012               	return		;funcret
  1871   00640C                     __end_of_strcat:
  1872                           	callstack 0
  1873                           
  1874 ;; *************** function _sprintf *****************
  1875 ;; Defined at:
  1876 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  s               1   44[BANK0 ] PTR unsigned char 
  1879 ;;		 -> data(10), 
  1880 ;;  fmt             1   45[BANK0 ] PTR const unsigned char 
  1881 ;;		 -> STR_2(5), 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  f              11   73[COMRAM] struct _IO_FILE
  1884 ;;  ret             2    0        int 
  1885 ;;  ap              1   72[COMRAM] PTR void [1]
  1886 ;;		 -> ?_sprintf(2), 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  2   44[BANK0 ] int 
  1889 ;; Registers used:
  1890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1896 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1897 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1899 ;;      Totals:        12       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1900 ;;Total ram usage:       18 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 8
  1903 ;; This function calls:
  1904 ;;		_vfprintf
  1905 ;; This function is called by:
  1906 ;;		_main
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text2
  1911   0066C8                     __ptext2:
  1912                           	callstack 0
  1913   0066C8                     _sprintf:
  1914                           	callstack 22
  1915   0066C8  0EF8               	movlw	low (?_sprintf+2)
  1916   0066CA  6E49               	movwf	sprintf@ap^0,c
  1917   0066CC  C0F6  F04A         	movff	sprintf@s,sprintf@f
  1918   0066D0  0E00               	movlw	0
  1919   0066D2  6E4D               	movwf	(sprintf@f+3)^0,c
  1920   0066D4  0E00               	movlw	0
  1921   0066D6  6E4C               	movwf	(sprintf@f+2)^0,c
  1922   0066D8  0E00               	movlw	0
  1923   0066DA  6E54               	movwf	(sprintf@f+10)^0,c
  1924   0066DC  0E00               	movlw	0
  1925   0066DE  6E53               	movwf	(sprintf@f+9)^0,c
  1926   0066E0  0E4A               	movlw	low sprintf@f
  1927   0066E2  6E45               	movwf	vfprintf@fp^0,c
  1928   0066E4  C0F7  F046         	movff	sprintf@fmt,vfprintf@fmt
  1929   0066E8  0E49               	movlw	low sprintf@ap
  1930   0066EA  6E47               	movwf	vfprintf@ap^0,c
  1931   0066EC  ECAA  F032         	call	_vfprintf	;wreg free
  1932   0066F0  0100               	movlb	0	; () banked
  1933   0066F2  51F6               	movf	sprintf@s& (0+255),w,b
  1934   0066F4  244C               	addwf	(sprintf@f+2)^0,w,c
  1935   0066F6  6ED9               	movwf	fsr2l,c
  1936   0066F8  6ADA               	clrf	fsr2h,c
  1937   0066FA  6ADF               	clrf	indf2,c
  1938   0066FC                     
  1939                           ; BSR set to: 0
  1940   0066FC  0012               	return		;funcret
  1941   0066FE                     __end_of_sprintf:
  1942                           	callstack 0
  1943                           
  1944 ;; *************** function _vfprintf *****************
  1945 ;; Defined at:
  1946 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;  fp              1   68[COMRAM] PTR struct _IO_FILE
  1949 ;;		 -> sprintf@f(11), 
  1950 ;;  fmt             1   69[COMRAM] PTR const unsigned char 
  1951 ;;		 -> STR_2(5), 
  1952 ;;  ap              1   70[COMRAM] PTR PTR void 
  1953 ;;		 -> sprintf@ap(1), 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  cfmt            1   71[COMRAM] PTR unsigned char 
  1956 ;;		 -> STR_2(5), 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  2   68[COMRAM] int 
  1959 ;; Registers used:
  1960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1966 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1969 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1970 ;;Total ram usage:        4 bytes
  1971 ;; Hardware stack levels used: 1
  1972 ;; Hardware stack levels required when called: 7
  1973 ;; This function calls:
  1974 ;;		_vfpfcnvrt
  1975 ;; This function is called by:
  1976 ;;		_sprintf
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	text3
  1981   006554                     __ptext3:
  1982                           	callstack 0
  1983   006554                     _vfprintf:
  1984                           	callstack 22
  1985   006554                     
  1986                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1987   006554  C046  F048         	movff	vfprintf@fmt,vfprintf@cfmt
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1990   006558  EFB6  F032         	goto	l3199
  1991   00655C                     l3197:
  1992                           
  1993                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1994   00655C  C045  F03B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1995   006560  0E48               	movlw	low vfprintf@cfmt
  1996   006562  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  1997   006564  C047  F03D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1998   006568  EC7C  F02C         	call	_vfpfcnvrt	;wreg free
  1999   00656C                     l3199:
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2002   00656C  0060  F123  FFF6   	movff	vfprintf@cfmt,tblptrl
  2003   006572                     	if	1	;There is more than 1 active tblptr byte
  2004   006572  0E20               	movlw	high __smallconst
  2005   006574  6EF7               	movwf	tblptrh,c
  2006   006576                     	endif
  2007   006576                     	if	0	;tblptru may be non-zero
  2008   006576                     	endif
  2009   006576                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2010   006576  0E00               	movlw	low (__smallconst shr (0+16))
  2011   006578  6EF8               	movwf	tblptru,c
  2012   00657A                     	endif
  2013   00657A  0008               	tblrd		*
  2014   00657C  50F5               	movf	tablat,w,c
  2015   00657E  0900               	iorlw	0
  2016   006580  A4D8               	btfss	status,2,c
  2017   006582  EFC5  F032         	goto	u3511
  2018   006586  EFC7  F032         	goto	u3510
  2019   00658A                     u3511:
  2020   00658A  EFAE  F032         	goto	l3197
  2021   00658E                     u3510:
  2022   00658E                     
  2023                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2024   00658E  0E00               	movlw	0
  2025   006590  6E46               	movwf	(?_vfprintf+1)^0,c
  2026   006592  0E00               	movlw	0
  2027   006594  6E45               	movwf	?_vfprintf^0,c
  2028   006596  0012               	return		;funcret
  2029   006598                     __end_of_vfprintf:
  2030                           	callstack 0
  2031                           
  2032 ;; *************** function _vfpfcnvrt *****************
  2033 ;; Defined at:
  2034 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  fp              1   58[COMRAM] PTR struct _IO_FILE
  2037 ;;		 -> sprintf@f(11), 
  2038 ;;  fmt             1   59[COMRAM] PTR PTR unsigned char 
  2039 ;;		 -> vfprintf@cfmt(1), 
  2040 ;;  ap              1   60[COMRAM] PTR PTR void 
  2041 ;;		 -> sprintf@ap(1), 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  convarg         4   62[COMRAM] struct .
  2044 ;;  cp              1   67[COMRAM] PTR unsigned char 
  2045 ;;		 -> STR_2(5), 
  2046 ;;  c               1   66[COMRAM] unsigned char 
  2047 ;;  done            1    0        _Bool 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2057 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2058 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2059 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2060 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2061 ;;Total ram usage:       10 bytes
  2062 ;; Hardware stack levels used: 1
  2063 ;; Hardware stack levels required when called: 6
  2064 ;; This function calls:
  2065 ;;		_efgtoa
  2066 ;;		_fputc
  2067 ;;		_read_prec_or_width
  2068 ;; This function is called by:
  2069 ;;		_vfprintf
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text4
  2074   0058F8                     __ptext4:
  2075                           	callstack 0
  2076   0058F8                     _vfpfcnvrt:
  2077                           	callstack 22
  2078   0058F8                     
  2079                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2080   0058F8  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2081   0058FA  6ED9               	movwf	fsr2l,c
  2082   0058FC  6ADA               	clrf	fsr2h,c
  2083   0058FE  006F FF7F FFF6     	movff	indf2,tblptrl
  2084   005904                     	if	1	;There is more than 1 active tblptr byte
  2085   005904  0E20               	movlw	high __smallconst
  2086   005906  6EF7               	movwf	tblptrh,c
  2087   005908                     	endif
  2088   005908                     	if	0	;tblptru may be non-zero
  2089   005908                     	endif
  2090   005908                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2091   005908  0E00               	movlw	low (__smallconst shr (0+16))
  2092   00590A  6EF8               	movwf	tblptru,c
  2093   00590C                     	endif
  2094   00590C  0008               	tblrd		*
  2095   00590E  50F5               	movf	tablat,w,c
  2096   005910  0A25               	xorlw	37
  2097   005912  A4D8               	btfss	status,2,c
  2098   005914  EF8E  F02C         	goto	u3451
  2099   005918  EF90  F02C         	goto	u3450
  2100   00591C                     u3451:
  2101   00591C  EF6F  F02D         	goto	l3169
  2102   005920                     u3450:
  2103   005920                     
  2104                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2105   005920  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2106   005922  6ED9               	movwf	fsr2l,c
  2107   005924  6ADA               	clrf	fsr2h,c
  2108   005926  2ADF               	incf	indf2,f,c
  2109   005928                     
  2110                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2111   005928  0E00               	movlw	0
  2112   00592A  0100               	movlb	0	; () banked
  2113   00592C  6F6D               	movwf	(_width+1)& (0+255),b
  2114   00592E  0E00               	movlw	0
  2115   005930  6F6C               	movwf	_width& (0+255),b
  2116   005932  C06C  F05D         	movff	_width,_flags
  2117   005936                     
  2118                           ; BSR set to: 0
  2119                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2120   005936  696E               	setf	_prec& (0+255),b
  2121   005938  696F               	setf	(_prec+1)& (0+255),b
  2122   00593A                     
  2123                           ; BSR set to: 0
  2124                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2125   00593A  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2126   00593C  6ED9               	movwf	fsr2l,c
  2127   00593E  6ADA               	clrf	fsr2h,c
  2128   005940  006F FF7F FFF6     	movff	indf2,tblptrl
  2129   005946                     	if	1	;There is more than 1 active tblptr byte
  2130   005946  0E20               	movlw	high __smallconst
  2131   005948  6EF7               	movwf	tblptrh,c
  2132   00594A                     	endif
  2133   00594A                     	if	0	;tblptru may be non-zero
  2134   00594A                     	endif
  2135   00594A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2136   00594A  0E00               	movlw	low (__smallconst shr (0+16))
  2137   00594C  6EF8               	movwf	tblptru,c
  2138   00594E                     	endif
  2139   00594E  0008               	tblrd		*
  2140   005950  50F5               	movf	tablat,w,c
  2141   005952  0A2E               	xorlw	46
  2142   005954  A4D8               	btfss	status,2,c
  2143   005956  EFAF  F02C         	goto	u3461
  2144   00595A  EFB1  F02C         	goto	u3460
  2145   00595E                     u3461:
  2146   00595E  EFBF  F02C         	goto	l3133
  2147   005962                     u3460:
  2148   005962                     
  2149                           ; BSR set to: 0
  2150                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2151   005962  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2152   005964  6ED9               	movwf	fsr2l,c
  2153   005966  6ADA               	clrf	fsr2h,c
  2154   005968  2ADF               	incf	indf2,f,c
  2155   00596A                     
  2156                           ; BSR set to: 0
  2157                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2158   00596A  C03C  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2159   00596E  C03D  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2160   005972  EC95  F030         	call	_read_prec_or_width	;wreg free
  2161   005976  C001  F06E         	movff	?_read_prec_or_width,_prec
  2162   00597A  C002  F06F         	movff	?_read_prec_or_width+1,_prec+1
  2163   00597E                     l3133:
  2164                           
  2165                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2166   00597E  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2167   005980  6ED9               	movwf	fsr2l,c
  2168   005982  6ADA               	clrf	fsr2h,c
  2169   005984  50DF               	movf	indf2,w,c
  2170   005986  6E44               	movwf	vfpfcnvrt@cp^0,c
  2171   005988                     
  2172                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2173   005988  0060  F113  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2174   00598E                     	if	1	;There is more than 1 active tblptr byte
  2175   00598E  0E20               	movlw	high __smallconst
  2176   005990  6EF7               	movwf	tblptrh,c
  2177   005992                     	endif
  2178   005992                     	if	0	;tblptru may be non-zero
  2179   005992                     	endif
  2180   005992                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2181   005992  0E00               	movlw	low (__smallconst shr (0+16))
  2182   005994  6EF8               	movwf	tblptru,c
  2183   005996                     	endif
  2184   005996  0008               	tblrd		*
  2185   005998  006F FFD4  F043    	movff	tablat,vfpfcnvrt@c
  2186                           
  2187                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2188   00599E  EFDB  F02C         	goto	l3143
  2189   0059A2                     l3137:
  2190                           
  2191                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2192   0059A2  2A44               	incf	vfpfcnvrt@cp^0,f,c
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  2195   0059A4  EFEA  F02C         	goto	l3145
  2196   0059A8                     l3139:
  2197                           
  2198                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2199   0059A8  0E6C               	movlw	108
  2200   0059AA  6E43               	movwf	vfpfcnvrt@c^0,c
  2201                           
  2202                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  2203   0059AC  EFEA  F02C         	goto	l3145
  2204   0059B0                     l925:
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2207   0059B0  6A43               	clrf	vfpfcnvrt@c^0,c
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  2210   0059B2  EFEA  F02C         	goto	l3145
  2211   0059B6                     l3143:
  2212   0059B6  5043               	movf	vfpfcnvrt@c^0,w,c
  2213                           
  2214                           ; Switch size 1, requested type "simple"
  2215                           ; Number of cases is 3, Range of values is 76 to 108
  2216                           ; switch strategies available:
  2217                           ; Name         Instructions Cycles
  2218                           ; simple_byte           10     6 (average)
  2219                           ;	Chosen strategy is simple_byte
  2220   0059B8  0A4C               	xorlw	76	; case 76
  2221   0059BA  B4D8               	btfsc	status,2,c
  2222   0059BC  EFD1  F02C         	goto	l3137
  2223   0059C0  0A2A               	xorlw	42	; case 102
  2224   0059C2  B4D8               	btfsc	status,2,c
  2225   0059C4  EFD4  F02C         	goto	l3139
  2226   0059C8  0A0A               	xorlw	10	; case 108
  2227   0059CA  B4D8               	btfsc	status,2,c
  2228   0059CC  EFD1  F02C         	goto	l3137
  2229   0059D0  EFD8  F02C         	goto	l925
  2230   0059D4                     l3145:
  2231   0059D4  0060  F113  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2232   0059DA                     	if	1	;There is more than 1 active tblptr byte
  2233   0059DA  0E20               	movlw	high __smallconst
  2234   0059DC  6EF7               	movwf	tblptrh,c
  2235   0059DE                     	endif
  2236   0059DE                     	if	0	;tblptru may be non-zero
  2237   0059DE                     	endif
  2238   0059DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2239   0059DE  0E00               	movlw	low (__smallconst shr (0+16))
  2240   0059E0  6EF8               	movwf	tblptru,c
  2241   0059E2                     	endif
  2242   0059E2  0008               	tblrd		*
  2243   0059E4  50F5               	movf	tablat,w,c
  2244   0059E6  0A66               	xorlw	102
  2245   0059E8  A4D8               	btfss	status,2,c
  2246   0059EA  EFF9  F02C         	goto	u3471
  2247   0059EE  EFFB  F02C         	goto	u3470
  2248   0059F2                     u3471:
  2249   0059F2  EF69  F02D         	goto	l3165
  2250   0059F6                     u3470:
  2251   0059F6  EF2F  F02D         	goto	l3153
  2252   0059FA                     l3147:
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2255   0059FA  503D               	movf	vfpfcnvrt@ap^0,w,c
  2256   0059FC  6ED9               	movwf	fsr2l,c
  2257   0059FE  6ADA               	clrf	fsr2h,c
  2258   005A00  006F FF7C  F03E    	movff	indf2,??_vfpfcnvrt
  2259   005A06  0E04               	movlw	4
  2260   005A08  26DF               	addwf	indf2,f,c
  2261   005A0A  503E               	movf	??_vfpfcnvrt^0,w,c
  2262   005A0C  6ED9               	movwf	fsr2l,c
  2263   005A0E  6ADA               	clrf	fsr2h,c
  2264   005A10  006F FF78  F03F    	movff	postinc2,vfpfcnvrt@convarg
  2265   005A16  006F FF78  F040    	movff	postinc2,vfpfcnvrt@convarg+1
  2266   005A1C  006F FF78  F041    	movff	postinc2,vfpfcnvrt@convarg+2
  2267   005A22  006F FF78  F042    	movff	postinc2,vfpfcnvrt@convarg+3
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  2270   005A28  EF3A  F02D         	goto	l3155
  2271   005A2C                     l3149:
  2272                           
  2273                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2274   005A2C  503D               	movf	vfpfcnvrt@ap^0,w,c
  2275   005A2E  6ED9               	movwf	fsr2l,c
  2276   005A30  6ADA               	clrf	fsr2h,c
  2277   005A32  006F FF7C  F03E    	movff	indf2,??_vfpfcnvrt
  2278   005A38  0E04               	movlw	4
  2279   005A3A  26DF               	addwf	indf2,f,c
  2280   005A3C  503E               	movf	??_vfpfcnvrt^0,w,c
  2281   005A3E  6ED9               	movwf	fsr2l,c
  2282   005A40  6ADA               	clrf	fsr2h,c
  2283   005A42  006F FF78  F03F    	movff	postinc2,vfpfcnvrt@convarg
  2284   005A48  006F FF78  F040    	movff	postinc2,vfpfcnvrt@convarg+1
  2285   005A4E  006F FF78  F041    	movff	postinc2,vfpfcnvrt@convarg+2
  2286   005A54  006F FF78  F042    	movff	postinc2,vfpfcnvrt@convarg+3
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  2289   005A5A  EF3A  F02D         	goto	l3155
  2290   005A5E                     l3153:
  2291   005A5E  5043               	movf	vfpfcnvrt@c^0,w,c
  2292                           
  2293                           ; Switch size 1, requested type "simple"
  2294                           ; Number of cases is 2, Range of values is 76 to 108
  2295                           ; switch strategies available:
  2296                           ; Name         Instructions Cycles
  2297                           ; simple_byte            7     4 (average)
  2298                           ;	Chosen strategy is simple_byte
  2299   005A60  0A4C               	xorlw	76	; case 76
  2300   005A62  B4D8               	btfsc	status,2,c
  2301   005A64  EF16  F02D         	goto	l3149
  2302   005A68  0A20               	xorlw	32	; case 108
  2303   005A6A  B4D8               	btfsc	status,2,c
  2304   005A6C  EFFD  F02C         	goto	l3147
  2305   005A70  EF3A  F02D         	goto	l3155
  2306   005A74                     l3155:
  2307                           
  2308                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2309   005A74  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2310   005A76  6ED9               	movwf	fsr2l,c
  2311   005A78  6ADA               	clrf	fsr2h,c
  2312   005A7A  2844               	incf	vfpfcnvrt@cp^0,w,c
  2313   005A7C  6EDF               	movwf	indf2,c
  2314                           
  2315                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2316   005A7E  EF5A  F02D         	goto	l3163
  2317   005A82                     l3157:
  2318                           
  2319                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2320   005A82  C03B  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  2321   005A86  C03F  F035         	movff	vfpfcnvrt@convarg,efgtoa@f
  2322   005A8A  C040  F036         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2323   005A8E  C041  F037         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2324   005A92  C042  F038         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2325   005A96  0060  F113  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2326   005A9C                     	if	1	;There is more than 1 active tblptr byte
  2327   005A9C  0E20               	movlw	high __smallconst
  2328   005A9E  6EF7               	movwf	tblptrh,c
  2329   005AA0                     	endif
  2330   005AA0                     	if	0	;tblptru may be non-zero
  2331   005AA0                     	endif
  2332   005AA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2333   005AA0  0E00               	movlw	low (__smallconst shr (0+16))
  2334   005AA2  6EF8               	movwf	tblptru,c
  2335   005AA4                     	endif
  2336   005AA4  0008               	tblrd		*
  2337   005AA6  006F FFD4  F039    	movff	tablat,efgtoa@c
  2338   005AAC  EC59  F020         	call	_efgtoa	;wreg free
  2339   005AB0  EF83  F02D         	goto	l935
  2340   005AB4                     l3163:
  2341   005AB4  0060  F113  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2342   005ABA                     	if	1	;There is more than 1 active tblptr byte
  2343   005ABA  0E20               	movlw	high __smallconst
  2344   005ABC  6EF7               	movwf	tblptrh,c
  2345   005ABE                     	endif
  2346   005ABE                     	if	0	;tblptru may be non-zero
  2347   005ABE                     	endif
  2348   005ABE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2349   005ABE  0E00               	movlw	low (__smallconst shr (0+16))
  2350   005AC0  6EF8               	movwf	tblptru,c
  2351   005AC2                     	endif
  2352   005AC2  0008               	tblrd		*
  2353   005AC4  50F5               	movf	tablat,w,c
  2354                           
  2355                           ; Switch size 1, requested type "simple"
  2356                           ; Number of cases is 1, Range of values is 102 to 102
  2357                           ; switch strategies available:
  2358                           ; Name         Instructions Cycles
  2359                           ; simple_byte            4     3 (average)
  2360                           ;	Chosen strategy is simple_byte
  2361   005AC6  0A66               	xorlw	102	; case 102
  2362   005AC8  B4D8               	btfsc	status,2,c
  2363   005ACA  EF41  F02D         	goto	l3157
  2364   005ACE  EF69  F02D         	goto	l3165
  2365   005AD2                     l3165:
  2366                           
  2367                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2368   005AD2  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2369   005AD4  6ED9               	movwf	fsr2l,c
  2370   005AD6  6ADA               	clrf	fsr2h,c
  2371   005AD8  2ADF               	incf	indf2,f,c
  2372   005ADA  EF83  F02D         	goto	l935
  2373   005ADE                     l3169:
  2374                           
  2375                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2376   005ADE  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2377   005AE0  6ED9               	movwf	fsr2l,c
  2378   005AE2  6ADA               	clrf	fsr2h,c
  2379   005AE4  006F FF7F FFF6     	movff	indf2,tblptrl
  2380   005AEA                     	if	1	;There is more than 1 active tblptr byte
  2381   005AEA  0E20               	movlw	high __smallconst
  2382   005AEC  6EF7               	movwf	tblptrh,c
  2383   005AEE                     	endif
  2384   005AEE                     	if	0	;tblptru may be non-zero
  2385   005AEE                     	endif
  2386   005AEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2387   005AEE  0E00               	movlw	low (__smallconst shr (0+16))
  2388   005AF0  6EF8               	movwf	tblptru,c
  2389   005AF2                     	endif
  2390   005AF2  0008               	tblrd		*
  2391   005AF4  50F5               	movf	tablat,w,c
  2392   005AF6  6E01               	movwf	fputc@c^0,c
  2393   005AF8  6A02               	clrf	(fputc@c+1)^0,c
  2394   005AFA  C03B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2395   005AFE  ECF1  F030         	call	_fputc	;wreg free
  2396   005B02  EF69  F02D         	goto	l3165
  2397   005B06                     l935:
  2398   005B06  0012               	return		;funcret
  2399   005B08                     __end_of_vfpfcnvrt:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _read_prec_or_width *****************
  2403 ;; Defined at:
  2404 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
  2407 ;;		 -> vfprintf@cfmt(1), 
  2408 ;;  ap              1    1[COMRAM] PTR PTR void [1]
  2409 ;;		 -> sprintf@ap(1), 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  c               1    4[COMRAM] unsigned char 
  2412 ;;  n               2    5[COMRAM] int 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  2    0[COMRAM] int 
  2415 ;; Registers used:
  2416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2422 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2423 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2424 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2425 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2426 ;;Total ram usage:        7 bytes
  2427 ;; Hardware stack levels used: 1
  2428 ;; Hardware stack levels required when called: 1
  2429 ;; This function calls:
  2430 ;;		Nothing
  2431 ;; This function is called by:
  2432 ;;		_vfpfcnvrt
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text5
  2437   00612A                     __ptext5:
  2438                           	callstack 0
  2439   00612A                     _read_prec_or_width:
  2440                           	callstack 26
  2441   00612A                     
  2442                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2443   00612A  0E00               	movlw	0
  2444   00612C  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  2445   00612E  0E00               	movlw	0
  2446   006130  6E06               	movwf	read_prec_or_width@n^0,c
  2447   006132                     
  2448                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2449   006132  5001               	movf	read_prec_or_width@fmt^0,w,c
  2450   006134  6ED9               	movwf	fsr2l,c
  2451   006136  6ADA               	clrf	fsr2h,c
  2452   006138  006F FF7F FFF6     	movff	indf2,tblptrl
  2453   00613E                     	if	1	;There is more than 1 active tblptr byte
  2454   00613E  0E20               	movlw	high __smallconst
  2455   006140  6EF7               	movwf	tblptrh,c
  2456   006142                     	endif
  2457   006142                     	if	0	;tblptru may be non-zero
  2458   006142                     	endif
  2459   006142                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2460   006142  0E00               	movlw	low (__smallconst shr (0+16))
  2461   006144  6EF8               	movwf	tblptru,c
  2462   006146                     	endif
  2463   006146  0008               	tblrd		*
  2464   006148  50F5               	movf	tablat,w,c
  2465   00614A  0A2A               	xorlw	42
  2466   00614C  A4D8               	btfss	status,2,c
  2467   00614E  EFAB  F030         	goto	u3431
  2468   006152  EFAD  F030         	goto	u3430
  2469   006156                     u3431:
  2470   006156  EFD6  F030         	goto	l3105
  2471   00615A                     u3430:
  2472   00615A                     
  2473                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2474   00615A  5001               	movf	read_prec_or_width@fmt^0,w,c
  2475   00615C  6ED9               	movwf	fsr2l,c
  2476   00615E  6ADA               	clrf	fsr2h,c
  2477   006160  2ADF               	incf	indf2,f,c
  2478   006162                     
  2479                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2480   006162  5002               	movf	read_prec_or_width@ap^0,w,c
  2481   006164  6ED9               	movwf	fsr2l,c
  2482   006166  6ADA               	clrf	fsr2h,c
  2483   006168  0E02               	movlw	2
  2484   00616A  26DF               	addwf	indf2,f,c
  2485   00616C  5CDF               	subwf	indf2,w,c
  2486   00616E  6ED9               	movwf	fsr2l,c
  2487   006170  6ADA               	clrf	fsr2h,c
  2488   006172  006F FF78  F006    	movff	postinc2,read_prec_or_width@n
  2489   006178  006F FF78  F007    	movff	postinc2,read_prec_or_width@n+1
  2490                           
  2491                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2492   00617E  EFEC  F030         	goto	l911
  2493   006182                     l3101:
  2494                           
  2495                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2496   006182  0E0A               	movlw	10
  2497   006184  0206               	mulwf	read_prec_or_width@n^0,c
  2498   006186  006F FFCC  F003    	movff	prodl,??_read_prec_or_width
  2499   00618C  006F FFD0  F004    	movff	prodh,??_read_prec_or_width+1
  2500   006192  0207               	mulwf	(read_prec_or_width@n+1)^0,c
  2501   006194  50F3               	movf	prodl,w,c
  2502   006196  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
  2503   006198  5005               	movf	read_prec_or_width@c^0,w,c
  2504   00619A  2403               	addwf	??_read_prec_or_width^0,w,c
  2505   00619C  6E06               	movwf	read_prec_or_width@n^0,c
  2506   00619E  0E00               	movlw	0
  2507   0061A0  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
  2508   0061A2  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  2509   0061A4                     
  2510                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2511   0061A4  5001               	movf	read_prec_or_width@fmt^0,w,c
  2512   0061A6  6ED9               	movwf	fsr2l,c
  2513   0061A8  6ADA               	clrf	fsr2h,c
  2514   0061AA  2ADF               	incf	indf2,f,c
  2515   0061AC                     l3105:
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2518   0061AC  5001               	movf	read_prec_or_width@fmt^0,w,c
  2519   0061AE  6ED9               	movwf	fsr2l,c
  2520   0061B0  6ADA               	clrf	fsr2h,c
  2521   0061B2  006F FF7F FFF6     	movff	indf2,tblptrl
  2522   0061B8                     	if	1	;There is more than 1 active tblptr byte
  2523   0061B8  0E20               	movlw	high __smallconst
  2524   0061BA  6EF7               	movwf	tblptrh,c
  2525   0061BC                     	endif
  2526   0061BC                     	if	0	;tblptru may be non-zero
  2527   0061BC                     	endif
  2528   0061BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2529   0061BC  0E00               	movlw	low (__smallconst shr (0+16))
  2530   0061BE  6EF8               	movwf	tblptru,c
  2531   0061C0                     	endif
  2532   0061C0  0008               	tblrd		*
  2533   0061C2  50F5               	movf	tablat,w,c
  2534   0061C4  0FD0               	addlw	208
  2535   0061C6  6E05               	movwf	read_prec_or_width@c^0,c
  2536   0061C8  0E09               	movlw	9
  2537   0061CA  6405               	cpfsgt	read_prec_or_width@c^0,c
  2538   0061CC  EFEA  F030         	goto	u3441
  2539   0061D0  EFEC  F030         	goto	u3440
  2540   0061D4                     u3441:
  2541   0061D4  EFC1  F030         	goto	l3101
  2542   0061D8                     u3440:
  2543   0061D8                     l911:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2546   0061D8  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
  2547   0061DC  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2548   0061E0  0012               	return		;funcret
  2549   0061E2                     __end_of_read_prec_or_width:
  2550                           	callstack 0
  2551                           
  2552 ;; *************** function _efgtoa *****************
  2553 ;; Defined at:
  2554 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  fp              1   51[COMRAM] PTR struct _IO_FILE
  2557 ;;		 -> sprintf@f(11), 
  2558 ;;  f               4   52[COMRAM] PTR struct _IO_FILE
  2559 ;;  c               1   56[COMRAM] unsigned char 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  u               4   40[BANK0 ] struct flui
  2562 ;;  g               4   36[BANK0 ] struct flui
  2563 ;;  l               4   29[BANK0 ] struct flui
  2564 ;;  h               4   25[BANK0 ] struct flui
  2565 ;;  ou              4   19[BANK0 ] struct flui
  2566 ;;  n               2   34[BANK0 ] int 
  2567 ;;  i               2   23[BANK0 ] int 
  2568 ;;  w               2   17[BANK0 ] int 
  2569 ;;  e               2   15[BANK0 ] int 
  2570 ;;  m               2   13[BANK0 ] int 
  2571 ;;  d               2   11[BANK0 ] int 
  2572 ;;  t               2    4[BANK0 ] int 
  2573 ;;  p               2    2[BANK0 ] int 
  2574 ;;  ne              2    0[BANK0 ] int 
  2575 ;;  sign            1   33[BANK0 ] unsigned char 
  2576 ;;  nmode           1   10[BANK0 ] unsigned char 
  2577 ;;  mode            1    9[BANK0 ] unsigned char 
  2578 ;;  pp              1    8[BANK0 ] unsigned char 
  2579 ;;  esign           1    0        unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2589 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2590 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2591 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2592 ;;      Totals:         7      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2593 ;;Total ram usage:       51 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 5
  2596 ;; This function calls:
  2597 ;;		___fladd
  2598 ;;		___fldiv
  2599 ;;		___fleq
  2600 ;;		___flge
  2601 ;;		___flmul
  2602 ;;		___flneg
  2603 ;;		___flsub
  2604 ;;		___fltol
  2605 ;;		___fpclassifyf
  2606 ;;		_floorf
  2607 ;;		_labs
  2608 ;;		_memcpy
  2609 ;;		_pad
  2610 ;;		_strcpy
  2611 ;; This function is called by:
  2612 ;;		_vfpfcnvrt
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text6
  2617   0040B2                     __ptext6:
  2618                           	callstack 0
  2619   0040B2                     _efgtoa:
  2620                           	callstack 22
  2621   0040B2                     
  2622                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2623   0040B2  0100               	movlb	0	; () banked
  2624   0040B4  6BEB               	clrf	efgtoa@sign& (0+255),b
  2625                           
  2626                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2627   0040B6  C035  F0EE         	movff	efgtoa@f,efgtoa@g
  2628   0040BA  C036  F0EF         	movff	efgtoa@f+1,efgtoa@g+1
  2629   0040BE  C037  F0F0         	movff	efgtoa@f+2,efgtoa@g+2
  2630   0040C2  C038  F0F1         	movff	efgtoa@f+3,efgtoa@g+3
  2631   0040C6                     
  2632                           ; BSR set to: 0
  2633                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2634   0040C6  BFF1               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2635   0040C8  EF6A  F020         	goto	u3110
  2636   0040CC  EF68  F020         	goto	u3111
  2637   0040D0                     u3111:
  2638   0040D0  EF7E  F020         	goto	l2881
  2639   0040D4                     u3110:
  2640   0040D4                     
  2641                           ; BSR set to: 0
  2642                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2643   0040D4  0E01               	movlw	1
  2644   0040D6  6FEB               	movwf	efgtoa@sign& (0+255),b
  2645   0040D8                     
  2646                           ; BSR set to: 0
  2647                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2648   0040D8  C0EE  F001         	movff	efgtoa@g,___flneg@f1
  2649   0040DC  C0EF  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2650   0040E0  C0F0  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2651   0040E4  C0F1  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2652   0040E8  EC48  F033         	call	___flneg	;wreg free
  2653   0040EC  C001  F0EE         	movff	?___flneg,efgtoa@g
  2654   0040F0  C002  F0EF         	movff	?___flneg+1,efgtoa@g+1
  2655   0040F4  C003  F0F0         	movff	?___flneg+2,efgtoa@g+2
  2656   0040F8  C004  F0F1         	movff	?___flneg+3,efgtoa@g+3
  2657   0040FC                     l2881:
  2658                           
  2659                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2660   0040FC  0E00               	movlw	0
  2661   0040FE  0100               	movlb	0	; () banked
  2662   004100  6FED               	movwf	(efgtoa@n+1)& (0+255),b
  2663   004102  0E00               	movlw	0
  2664   004104  6FEC               	movwf	efgtoa@n& (0+255),b
  2665   004106                     
  2666                           ; BSR set to: 0
  2667                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2668   004106  C06C  F0DB         	movff	_width,efgtoa@w
  2669   00410A  C06D  F0DC         	movff	_width+1,efgtoa@w+1
  2670   00410E                     
  2671                           ; BSR set to: 0
  2672                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2673   00410E  51EB               	movf	efgtoa@sign& (0+255),w,b
  2674   004110  B4D8               	btfsc	status,2,c
  2675   004112  EF8D  F020         	goto	u3121
  2676   004116  EF8F  F020         	goto	u3120
  2677   00411A                     u3121:
  2678   00411A  EFA3  F020         	goto	l2895
  2679   00411E                     u3120:
  2680   00411E                     
  2681                           ; BSR set to: 0
  2682                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2683   00411E  51EB               	movf	efgtoa@sign& (0+255),w,b
  2684   004120  A4D8               	btfss	status,2,c
  2685   004122  EF95  F020         	goto	u3131
  2686   004126  EF97  F020         	goto	u3130
  2687   00412A                     u3131:
  2688   00412A  EF9D  F020         	goto	l2891
  2689   00412E                     u3130:
  2690   00412E                     
  2691                           ; BSR set to: 0
  2692   00412E  0E00               	movlw	0
  2693   004130  6FD1               	movwf	(_efgtoa$1129+1)& (0+255),b
  2694   004132  0E2B               	movlw	43
  2695   004134  6FD0               	movwf	_efgtoa$1129& (0+255),b
  2696   004136  EFA1  F020         	goto	l2893
  2697   00413A                     l2891:
  2698                           
  2699                           ; BSR set to: 0
  2700   00413A  0E00               	movlw	0
  2701   00413C  6FD1               	movwf	(_efgtoa$1129+1)& (0+255),b
  2702   00413E  0E2D               	movlw	45
  2703   004140  6FD0               	movwf	_efgtoa$1129& (0+255),b
  2704   004142                     l2893:
  2705                           
  2706                           ; BSR set to: 0
  2707   004142  C0D0  F0EB         	movff	_efgtoa$1129,efgtoa@sign
  2708   004146                     l2895:
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2712   004146  C0EE  F001         	movff	efgtoa@g,___fpclassifyf@x
  2713   00414A  C0EF  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2714   00414E  C0F0  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2715   004152  C0F1  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2716   004156  EC16  F030         	call	___fpclassifyf	;wreg free
  2717   00415A  0401               	decf	?___fpclassifyf^0,w,c
  2718   00415C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2719   00415E  A4D8               	btfss	status,2,c
  2720   004160  EFB4  F020         	goto	u3141
  2721   004164  EFB6  F020         	goto	u3140
  2722   004168                     u3141:
  2723   004168  EFE0  F020         	goto	l2913
  2724   00416C                     u3140:
  2725   00416C                     
  2726                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2727   00416C  0100               	movlb	0	; () banked
  2728   00416E  51EB               	movf	efgtoa@sign& (0+255),w,b
  2729   004170  B4D8               	btfsc	status,2,c
  2730   004172  EFBD  F020         	goto	u3151
  2731   004176  EFBF  F020         	goto	u3150
  2732   00417A                     u3151:
  2733   00417A  EFC8  F020         	goto	l2905
  2734   00417E                     u3150:
  2735   00417E                     
  2736                           ; BSR set to: 0
  2737                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2738   00417E  C0EB  F070         	movff	efgtoa@sign,_dbuf
  2739   004182                     
  2740                           ; BSR set to: 0
  2741                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  2742   004182  07DB               	decf	efgtoa@w& (0+255),f,b
  2743   004184  A0D8               	btfss	status,0,c
  2744   004186  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  2745   004188                     
  2746                           ; BSR set to: 0
  2747                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2748   004188  0E00               	movlw	0
  2749   00418A  6FED               	movwf	(efgtoa@n+1)& (0+255),b
  2750   00418C  0E01               	movlw	1
  2751   00418E  6FEC               	movwf	efgtoa@n& (0+255),b
  2752   004190                     l2905:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2756   004190  51EC               	movf	efgtoa@n& (0+255),w,b
  2757   004192  0F70               	addlw	low _dbuf
  2758   004194  6E01               	movwf	strcpy@dest^0,c
  2759   004196  0E0F               	movlw	low STR_4
  2760   004198  6E02               	movwf	strcpy@src^0,c
  2761   00419A  EC2B  F033         	call	_strcpy	;wreg free
  2762   00419E                     l2907:
  2763                           
  2764                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2765   00419E  0100               	movlb	0	; () banked
  2766   0041A0  0EFD               	movlw	253
  2767   0041A2  27DB               	addwf	efgtoa@w& (0+255),f,b
  2768   0041A4  0EFF               	movlw	255
  2769   0041A6  23DC               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2770   0041A8                     
  2771                           ; BSR set to: 0
  2772                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2773   0041A8  C034  F00E         	movff	efgtoa@fp,pad@fp
  2774   0041AC  0E70               	movlw	low _dbuf
  2775   0041AE  6E0F               	movwf	pad@buf^0,c
  2776   0041B0  C0DB  F010         	movff	efgtoa@w,pad@p
  2777   0041B4  C0DC  F011         	movff	efgtoa@w+1,pad@p+1
  2778   0041B8  EC06  F032         	call	_pad	;wreg free
  2779   0041BC  EF2A  F025         	goto	l866
  2780   0041C0                     l2913:
  2781                           
  2782                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2783   0041C0  C0EE  F001         	movff	efgtoa@g,___fpclassifyf@x
  2784   0041C4  C0EF  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2785   0041C8  C0F0  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2786   0041CC  C0F1  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2787   0041D0  EC16  F030         	call	___fpclassifyf	;wreg free
  2788   0041D4  5001               	movf	?___fpclassifyf^0,w,c
  2789   0041D6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2790   0041D8  A4D8               	btfss	status,2,c
  2791   0041DA  EFF1  F020         	goto	u3161
  2792   0041DE  EFF3  F020         	goto	u3160
  2793   0041E2                     u3161:
  2794   0041E2  EF0E  F021         	goto	l2931
  2795   0041E6                     u3160:
  2796   0041E6                     
  2797                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2798   0041E6  0100               	movlb	0	; () banked
  2799   0041E8  51EB               	movf	efgtoa@sign& (0+255),w,b
  2800   0041EA  B4D8               	btfsc	status,2,c
  2801   0041EC  EFFA  F020         	goto	u3171
  2802   0041F0  EFFC  F020         	goto	u3170
  2803   0041F4                     u3171:
  2804   0041F4  EF05  F021         	goto	l2923
  2805   0041F8                     u3170:
  2806   0041F8                     
  2807                           ; BSR set to: 0
  2808                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2809   0041F8  C0EB  F070         	movff	efgtoa@sign,_dbuf
  2810   0041FC                     
  2811                           ; BSR set to: 0
  2812                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  2813   0041FC  07DB               	decf	efgtoa@w& (0+255),f,b
  2814   0041FE  A0D8               	btfss	status,0,c
  2815   004200  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  2816   004202                     
  2817                           ; BSR set to: 0
  2818                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2819   004202  0E00               	movlw	0
  2820   004204  6FED               	movwf	(efgtoa@n+1)& (0+255),b
  2821   004206  0E01               	movlw	1
  2822   004208  6FEC               	movwf	efgtoa@n& (0+255),b
  2823   00420A                     l2923:
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2827   00420A  51EC               	movf	efgtoa@n& (0+255),w,b
  2828   00420C  0F70               	addlw	low _dbuf
  2829   00420E  6E01               	movwf	strcpy@dest^0,c
  2830   004210  0E13               	movlw	low STR_7
  2831   004212  6E02               	movwf	strcpy@src^0,c
  2832   004214  EC2B  F033         	call	_strcpy	;wreg free
  2833   004218  EFCF  F020         	goto	l2907
  2834   00421C                     l2931:
  2835                           
  2836                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2837   00421C  0E00               	movlw	0
  2838   00421E  0100               	movlb	0	; () banked
  2839   004220  6FF2               	movwf	efgtoa@u& (0+255),b
  2840   004222  0E00               	movlw	0
  2841   004224  6FF3               	movwf	(efgtoa@u+1)& (0+255),b
  2842   004226  0E80               	movlw	128
  2843   004228  6FF4               	movwf	(efgtoa@u+2)& (0+255),b
  2844   00422A  0E3F               	movlw	63
  2845   00422C  6FF5               	movwf	(efgtoa@u+3)& (0+255),b
  2846                           
  2847                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2848   00422E  0E00               	movlw	0
  2849   004230  6FDA               	movwf	(efgtoa@e+1)& (0+255),b
  2850   004232  0E00               	movlw	0
  2851   004234  6FD9               	movwf	efgtoa@e& (0+255),b
  2852   004236                     
  2853                           ; BSR set to: 0
  2854                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2855   004236  C0EE  F001         	movff	efgtoa@g,___fleq@ff1
  2856   00423A  C0EF  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2857   00423E  C0F0  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2858   004242  C0F1  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2859   004246  0E00               	movlw	0
  2860   004248  6E05               	movwf	___fleq@ff2^0,c
  2861   00424A  0E00               	movlw	0
  2862   00424C  6E06               	movwf	(___fleq@ff2+1)^0,c
  2863   00424E  0E00               	movlw	0
  2864   004250  6E07               	movwf	(___fleq@ff2+2)^0,c
  2865   004252  0E00               	movlw	0
  2866   004254  6E08               	movwf	(___fleq@ff2+3)^0,c
  2867   004256  EC47  F031         	call	___fleq	;wreg free
  2868   00425A  B0D8               	btfsc	status,0,c
  2869   00425C  EF32  F021         	goto	u3181
  2870   004260  EF34  F021         	goto	u3180
  2871   004264                     u3181:
  2872   004264  EF13  F022         	goto	l869
  2873   004268                     u3180:
  2874   004268  EF41  F021         	goto	l2939
  2875   00426C                     l871:
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2878   00426C  C0DD  F0F2         	movff	efgtoa@ou,efgtoa@u
  2879   004270  C0DE  F0F3         	movff	efgtoa@ou+1,efgtoa@u+1
  2880   004274  C0DF  F0F4         	movff	efgtoa@ou+2,efgtoa@u+2
  2881   004278  C0E0  F0F5         	movff	efgtoa@ou+3,efgtoa@u+3
  2882   00427C                     
  2883                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2884   00427C  0100               	movlb	0	; () banked
  2885   00427E  4BD9               	infsnz	efgtoa@e& (0+255),f,b
  2886   004280  2BDA               	incf	(efgtoa@e+1)& (0+255),f,b
  2887   004282                     l2939:
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2890   004282  C0F2  F00F         	movff	efgtoa@u,___flmul@b
  2891   004286  C0F3  F010         	movff	efgtoa@u+1,___flmul@b+1
  2892   00428A  C0F4  F011         	movff	efgtoa@u+2,___flmul@b+2
  2893   00428E  C0F5  F012         	movff	efgtoa@u+3,___flmul@b+3
  2894   004292  0E00               	movlw	0
  2895   004294  6E13               	movwf	___flmul@a^0,c
  2896   004296  0E00               	movlw	0
  2897   004298  6E14               	movwf	(___flmul@a+1)^0,c
  2898   00429A  0E20               	movlw	32
  2899   00429C  6E15               	movwf	(___flmul@a+2)^0,c
  2900   00429E  0E41               	movlw	65
  2901   0042A0  6E16               	movwf	(___flmul@a+3)^0,c
  2902   0042A2  EC86  F027         	call	___flmul	;wreg free
  2903   0042A6  C00F  F0DD         	movff	?___flmul,efgtoa@ou
  2904   0042AA  C010  F0DE         	movff	?___flmul+1,efgtoa@ou+1
  2905   0042AE  C011  F0DF         	movff	?___flmul+2,efgtoa@ou+2
  2906   0042B2  C012  F0E0         	movff	?___flmul+3,efgtoa@ou+3
  2907   0042B6  0100               	movlb	0	; () banked
  2908   0042B8  51DD               	movf	efgtoa@ou& (0+255),w,b
  2909   0042BA  5DEE               	subwf	efgtoa@g& (0+255),w,b
  2910   0042BC  6E01               	movwf	labs@a^0,c
  2911   0042BE  51DE               	movf	(efgtoa@ou+1)& (0+255),w,b
  2912   0042C0  59EF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2913   0042C2  6E02               	movwf	(labs@a+1)^0,c
  2914   0042C4  51DF               	movf	(efgtoa@ou+2)& (0+255),w,b
  2915   0042C6  59F0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2916   0042C8  6E03               	movwf	(labs@a+2)^0,c
  2917   0042CA  51E0               	movf	(efgtoa@ou+3)& (0+255),w,b
  2918   0042CC  59F1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2919   0042CE  6E04               	movwf	(labs@a+3)^0,c
  2920   0042D0  EC37  F032         	call	_labs	;wreg free
  2921   0042D4  BE04               	btfsc	(?_labs+3)^0,7,c
  2922   0042D6  EF78  F021         	goto	u3191
  2923   0042DA  5004               	movf	(?_labs+3)^0,w,c
  2924   0042DC  1003               	iorwf	(?_labs+2)^0,w,c
  2925   0042DE  1002               	iorwf	(?_labs+1)^0,w,c
  2926   0042E0  E109               	bnz	u3190
  2927   0042E2  0E02               	movlw	2
  2928   0042E4  5C01               	subwf	?_labs^0,w,c
  2929   0042E6  A0D8               	btfss	status,0,c
  2930   0042E8  EF78  F021         	goto	u3191
  2931   0042EC  EF7A  F021         	goto	u3190
  2932   0042F0                     u3191:
  2933   0042F0  EF36  F021         	goto	l871
  2934   0042F4                     u3190:
  2935   0042F4  C0DD  F028         	movff	efgtoa@ou,___flge@ff1
  2936   0042F8  C0DE  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2937   0042FC  C0DF  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2938   004300  C0E0  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2939   004304  C0EE  F02C         	movff	efgtoa@g,___flge@ff2
  2940   004308  C0EF  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2941   00430C  C0F0  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2942   004310  C0F1  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2943   004314  EC94  F02F         	call	___flge	;wreg free
  2944   004318  A0D8               	btfss	status,0,c
  2945   00431A  EF91  F021         	goto	u3201
  2946   00431E  EF93  F021         	goto	u3200
  2947   004322                     u3201:
  2948   004322  EF36  F021         	goto	l871
  2949   004326                     u3200:
  2950   004326                     
  2951                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2952   004326  0100               	movlb	0	; () banked
  2953   004328  51F2               	movf	efgtoa@u& (0+255),w,b
  2954   00432A  5DEE               	subwf	efgtoa@g& (0+255),w,b
  2955   00432C  6E01               	movwf	labs@a^0,c
  2956   00432E  51F3               	movf	(efgtoa@u+1)& (0+255),w,b
  2957   004330  59EF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2958   004332  6E02               	movwf	(labs@a+1)^0,c
  2959   004334  51F4               	movf	(efgtoa@u+2)& (0+255),w,b
  2960   004336  59F0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2961   004338  6E03               	movwf	(labs@a+2)^0,c
  2962   00433A  51F5               	movf	(efgtoa@u+3)& (0+255),w,b
  2963   00433C  59F1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2964   00433E  6E04               	movwf	(labs@a+3)^0,c
  2965   004340  EC37  F032         	call	_labs	;wreg free
  2966   004344  BE04               	btfsc	(?_labs+3)^0,7,c
  2967   004346  EFB2  F021         	goto	u3210
  2968   00434A  5004               	movf	(?_labs+3)^0,w,c
  2969   00434C  1003               	iorwf	(?_labs+2)^0,w,c
  2970   00434E  1002               	iorwf	(?_labs+1)^0,w,c
  2971   004350  E107               	bnz	u3211
  2972   004352  0E02               	movlw	2
  2973   004354  5C01               	subwf	?_labs^0,w,c
  2974   004356  B0D8               	btfsc	status,0,c
  2975   004358  EFB0  F021         	goto	u3211
  2976   00435C  EFB2  F021         	goto	u3210
  2977   004360                     u3211:
  2978   004360  EFFA  F021         	goto	l2957
  2979   004364                     u3210:
  2980   004364                     l2947:
  2981                           
  2982                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  2983   004364  C0F2  F0EE         	movff	efgtoa@u,efgtoa@g
  2984   004368  C0F3  F0EF         	movff	efgtoa@u+1,efgtoa@g+1
  2985   00436C  C0F4  F0F0         	movff	efgtoa@u+2,efgtoa@g+2
  2986   004370  C0F5  F0F1         	movff	efgtoa@u+3,efgtoa@g+3
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  2989   004374  EF13  F022         	goto	l869
  2990   004378                     l2949:
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  2993   004378  C0F2  F001         	movff	efgtoa@u,___fldiv@b
  2994   00437C  C0F3  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2995   004380  C0F4  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2996   004384  C0F5  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2997   004388  0E00               	movlw	0
  2998   00438A  6E05               	movwf	___fldiv@a^0,c
  2999   00438C  0E00               	movlw	0
  3000   00438E  6E06               	movwf	(___fldiv@a+1)^0,c
  3001   004390  0E20               	movlw	32
  3002   004392  6E07               	movwf	(___fldiv@a+2)^0,c
  3003   004394  0E41               	movlw	65
  3004   004396  6E08               	movwf	(___fldiv@a+3)^0,c
  3005   004398  ECAB  F029         	call	___fldiv	;wreg free
  3006   00439C  C001  F0F2         	movff	?___fldiv,efgtoa@u
  3007   0043A0  C002  F0F3         	movff	?___fldiv+1,efgtoa@u+1
  3008   0043A4  C003  F0F4         	movff	?___fldiv+2,efgtoa@u+2
  3009   0043A8  C004  F0F5         	movff	?___fldiv+3,efgtoa@u+3
  3010   0043AC                     
  3011                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  3012   0043AC  0100               	movlb	0	; () banked
  3013   0043AE  07D9               	decf	efgtoa@e& (0+255),f,b
  3014   0043B0  A0D8               	btfss	status,0,c
  3015   0043B2  07DA               	decf	(efgtoa@e+1)& (0+255),f,b
  3016   0043B4                     
  3017                           ; BSR set to: 0
  3018                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3019   0043B4  51F2               	movf	efgtoa@u& (0+255),w,b
  3020   0043B6  5DEE               	subwf	efgtoa@g& (0+255),w,b
  3021   0043B8  6E01               	movwf	labs@a^0,c
  3022   0043BA  51F3               	movf	(efgtoa@u+1)& (0+255),w,b
  3023   0043BC  59EF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3024   0043BE  6E02               	movwf	(labs@a+1)^0,c
  3025   0043C0  51F4               	movf	(efgtoa@u+2)& (0+255),w,b
  3026   0043C2  59F0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3027   0043C4  6E03               	movwf	(labs@a+2)^0,c
  3028   0043C6  51F5               	movf	(efgtoa@u+3)& (0+255),w,b
  3029   0043C8  59F1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3030   0043CA  6E04               	movwf	(labs@a+3)^0,c
  3031   0043CC  EC37  F032         	call	_labs	;wreg free
  3032   0043D0  BE04               	btfsc	(?_labs+3)^0,7,c
  3033   0043D2  EFF8  F021         	goto	u3220
  3034   0043D6  5004               	movf	(?_labs+3)^0,w,c
  3035   0043D8  1003               	iorwf	(?_labs+2)^0,w,c
  3036   0043DA  1002               	iorwf	(?_labs+1)^0,w,c
  3037   0043DC  E107               	bnz	u3221
  3038   0043DE  0E02               	movlw	2
  3039   0043E0  5C01               	subwf	?_labs^0,w,c
  3040   0043E2  B0D8               	btfsc	status,0,c
  3041   0043E4  EFF6  F021         	goto	u3221
  3042   0043E8  EFF8  F021         	goto	u3220
  3043   0043EC                     u3221:
  3044   0043EC  EFFA  F021         	goto	l2957
  3045   0043F0                     u3220:
  3046   0043F0  EFB2  F021         	goto	l2947
  3047   0043F4                     l2957:
  3048                           
  3049                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3050   0043F4  C0EE  F028         	movff	efgtoa@g,___flge@ff1
  3051   0043F8  C0EF  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3052   0043FC  C0F0  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3053   004400  C0F1  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3054   004404  C0F2  F02C         	movff	efgtoa@u,___flge@ff2
  3055   004408  C0F3  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3056   00440C  C0F4  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3057   004410  C0F5  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3058   004414  EC94  F02F         	call	___flge	;wreg free
  3059   004418  A0D8               	btfss	status,0,c
  3060   00441A  EF11  F022         	goto	u3231
  3061   00441E  EF13  F022         	goto	u3230
  3062   004422                     u3231:
  3063   004422  EFBC  F021         	goto	l2949
  3064   004426                     u3230:
  3065   004426                     l869:
  3066                           
  3067                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3068   004426  C039  F0D3         	movff	efgtoa@c,efgtoa@mode
  3069                           
  3070                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3071   00442A  C0D3  F0D4         	movff	efgtoa@mode,efgtoa@nmode
  3072   00442E                     
  3073                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3074   00442E  0100               	movlb	0	; () banked
  3075   004430  BF6F               	btfsc	(_prec+1)& (0+255),7,b
  3076   004432  EF1D  F022         	goto	u3241
  3077   004436  EF1F  F022         	goto	u3240
  3078   00443A                     u3241:
  3079   00443A  EF25  F022         	goto	l2963
  3080   00443E                     u3240:
  3081   00443E                     
  3082                           ; BSR set to: 0
  3083   00443E  C06E  F0CC         	movff	_prec,efgtoa@p
  3084   004442  C06F  F0CD         	movff	_prec+1,efgtoa@p+1
  3085   004446  EF29  F022         	goto	l2965
  3086   00444A                     l2963:
  3087                           
  3088                           ; BSR set to: 0
  3089   00444A  0E00               	movlw	0
  3090   00444C  6FCD               	movwf	(efgtoa@p+1)& (0+255),b
  3091   00444E  0E06               	movlw	6
  3092   004450  6FCC               	movwf	efgtoa@p& (0+255),b
  3093   004452                     l2965:
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3097   004452  C0CC  F0D7         	movff	efgtoa@p,efgtoa@m
  3098   004456  C0CD  F0D8         	movff	efgtoa@p+1,efgtoa@m+1
  3099   00445A                     
  3100                           ; BSR set to: 0
  3101                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3102   00445A  4BD7               	infsnz	efgtoa@m& (0+255),f,b
  3103   00445C  2BD8               	incf	(efgtoa@m+1)& (0+255),f,b
  3104   00445E                     
  3105                           ; BSR set to: 0
  3106                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3107   00445E  0E66               	movlw	102
  3108   004460  19D4               	xorwf	efgtoa@nmode& (0+255),w,b
  3109   004462  A4D8               	btfss	status,2,c
  3110   004464  EF36  F022         	goto	u3251
  3111   004468  EF38  F022         	goto	u3250
  3112   00446C                     u3251:
  3113   00446C  EF58  F022         	goto	l2979
  3114   004470                     u3250:
  3115   004470                     
  3116                           ; BSR set to: 0
  3117                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3118   004470  BFDA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3119   004472  EF3F  F022         	goto	u3260
  3120   004476  EF3D  F022         	goto	u3261
  3121   00447A                     u3261:
  3122   00447A  EF4B  F022         	goto	l2975
  3123   00447E                     u3260:
  3124   00447E                     
  3125                           ; BSR set to: 0
  3126                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3127   00447E  0E00               	movlw	0
  3128   004480  6FF2               	movwf	efgtoa@u& (0+255),b
  3129   004482  0E00               	movlw	0
  3130   004484  6FF3               	movwf	(efgtoa@u+1)& (0+255),b
  3131   004486  0E80               	movlw	128
  3132   004488  6FF4               	movwf	(efgtoa@u+2)& (0+255),b
  3133   00448A  0E3F               	movlw	63
  3134   00448C  6FF5               	movwf	(efgtoa@u+3)& (0+255),b
  3135                           
  3136                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3137   00448E  0E00               	movlw	0
  3138   004490  6FDA               	movwf	(efgtoa@e+1)& (0+255),b
  3139   004492  0E00               	movlw	0
  3140   004494  6FD9               	movwf	efgtoa@e& (0+255),b
  3141   004496                     l2975:
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3145   004496  0E67               	movlw	103
  3146   004498  19D3               	xorwf	efgtoa@mode& (0+255),w,b
  3147   00449A  B4D8               	btfsc	status,2,c
  3148   00449C  EF52  F022         	goto	u3271
  3149   0044A0  EF54  F022         	goto	u3270
  3150   0044A4                     u3271:
  3151   0044A4  EF58  F022         	goto	l2979
  3152   0044A8                     u3270:
  3153   0044A8                     
  3154                           ; BSR set to: 0
  3155                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3156   0044A8  51D9               	movf	efgtoa@e& (0+255),w,b
  3157   0044AA  27D7               	addwf	efgtoa@m& (0+255),f,b
  3158   0044AC  51DA               	movf	(efgtoa@e+1)& (0+255),w,b
  3159   0044AE  23D8               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3160   0044B0                     l2979:
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3164   0044B0  0E00               	movlw	0
  3165   0044B2  6FE2               	movwf	(efgtoa@i+1)& (0+255),b
  3166   0044B4  0E00               	movlw	0
  3167   0044B6  6FE1               	movwf	efgtoa@i& (0+255),b
  3168   0044B8                     
  3169                           ; BSR set to: 0
  3170                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3171   0044B8  C0EE  F0E3         	movff	efgtoa@g,efgtoa@h
  3172   0044BC  C0EF  F0E4         	movff	efgtoa@g+1,efgtoa@h+1
  3173   0044C0  C0F0  F0E5         	movff	efgtoa@g+2,efgtoa@h+2
  3174   0044C4  C0F1  F0E6         	movff	efgtoa@g+3,efgtoa@h+3
  3175   0044C8                     
  3176                           ; BSR set to: 0
  3177                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3178   0044C8  C0F2  F0DD         	movff	efgtoa@u,efgtoa@ou
  3179   0044CC  C0F3  F0DE         	movff	efgtoa@u+1,efgtoa@ou+1
  3180   0044D0  C0F4  F0DF         	movff	efgtoa@u+2,efgtoa@ou+2
  3181   0044D4  C0F5  F0E0         	movff	efgtoa@u+3,efgtoa@ou+3
  3182                           
  3183                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3184   0044D8  EFE9  F022         	goto	l2993
  3185   0044DC                     l2985:
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3189   0044DC  C0E3  F001         	movff	efgtoa@h,___fldiv@b
  3190   0044E0  C0E4  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3191   0044E4  C0E5  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3192   0044E8  C0E6  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3193   0044EC  C0F2  F005         	movff	efgtoa@u,___fldiv@a
  3194   0044F0  C0F3  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3195   0044F4  C0F4  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3196   0044F8  C0F5  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3197   0044FC  ECAB  F029         	call	___fldiv	;wreg free
  3198   004500  C001  F01A         	movff	?___fldiv,floorf@x
  3199   004504  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3200   004508  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3201   00450C  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3202   004510  EC73  F02B         	call	_floorf	;wreg free
  3203   004514  C01A  F0E7         	movff	?_floorf,efgtoa@l
  3204   004518  C01B  F0E8         	movff	?_floorf+1,efgtoa@l+1
  3205   00451C  C01C  F0E9         	movff	?_floorf+2,efgtoa@l+2
  3206   004520  C01D  F0EA         	movff	?_floorf+3,efgtoa@l+3
  3207                           
  3208                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3209   004524  C0E7  F001         	movff	efgtoa@l,___fltol@f1
  3210   004528  C0E8  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3211   00452C  C0E9  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3212   004530  C0EA  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3213   004534  EC11  F02F         	call	___fltol	;wreg free
  3214   004538  C001  F0D5         	movff	?___fltol,efgtoa@d
  3215   00453C  C002  F0D6         	movff	?___fltol+1,efgtoa@d+1
  3216   004540                     
  3217                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3218   004540  C0E3  F028         	movff	efgtoa@h,___flsub@b
  3219   004544  C0E4  F029         	movff	efgtoa@h+1,___flsub@b+1
  3220   004548  C0E5  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3221   00454C  C0E6  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3222   004550  C0E7  F013         	movff	efgtoa@l,___flmul@a
  3223   004554  C0E8  F014         	movff	efgtoa@l+1,___flmul@a+1
  3224   004558  C0E9  F015         	movff	efgtoa@l+2,___flmul@a+2
  3225   00455C  C0EA  F016         	movff	efgtoa@l+3,___flmul@a+3
  3226   004560  C0F2  F00F         	movff	efgtoa@u,___flmul@b
  3227   004564  C0F3  F010         	movff	efgtoa@u+1,___flmul@b+1
  3228   004568  C0F4  F011         	movff	efgtoa@u+2,___flmul@b+2
  3229   00456C  C0F5  F012         	movff	efgtoa@u+3,___flmul@b+3
  3230   004570  EC86  F027         	call	___flmul	;wreg free
  3231   004574  C00F  F02C         	movff	?___flmul,___flsub@a
  3232   004578  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3233   00457C  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3234   004580  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3235   004584  EC87  F032         	call	___flsub	;wreg free
  3236   004588  C028  F0E3         	movff	?___flsub,efgtoa@h
  3237   00458C  C029  F0E4         	movff	?___flsub+1,efgtoa@h+1
  3238   004590  C02A  F0E5         	movff	?___flsub+2,efgtoa@h+2
  3239   004594  C02B  F0E6         	movff	?___flsub+3,efgtoa@h+3
  3240   004598                     
  3241                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3242   004598  C0F2  F001         	movff	efgtoa@u,___fldiv@b
  3243   00459C  C0F3  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3244   0045A0  C0F4  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3245   0045A4  C0F5  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3246   0045A8  0E00               	movlw	0
  3247   0045AA  6E05               	movwf	___fldiv@a^0,c
  3248   0045AC  0E00               	movlw	0
  3249   0045AE  6E06               	movwf	(___fldiv@a+1)^0,c
  3250   0045B0  0E20               	movlw	32
  3251   0045B2  6E07               	movwf	(___fldiv@a+2)^0,c
  3252   0045B4  0E41               	movlw	65
  3253   0045B6  6E08               	movwf	(___fldiv@a+3)^0,c
  3254   0045B8  ECAB  F029         	call	___fldiv	;wreg free
  3255   0045BC  C001  F0F2         	movff	?___fldiv,efgtoa@u
  3256   0045C0  C002  F0F3         	movff	?___fldiv+1,efgtoa@u+1
  3257   0045C4  C003  F0F4         	movff	?___fldiv+2,efgtoa@u+2
  3258   0045C8  C004  F0F5         	movff	?___fldiv+3,efgtoa@u+3
  3259   0045CC                     
  3260                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3261   0045CC  0100               	movlb	0	; () banked
  3262   0045CE  4BE1               	infsnz	efgtoa@i& (0+255),f,b
  3263   0045D0  2BE2               	incf	(efgtoa@i+1)& (0+255),f,b
  3264   0045D2                     l2993:
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3268   0045D2  51D7               	movf	efgtoa@m& (0+255),w,b
  3269   0045D4  5DE1               	subwf	efgtoa@i& (0+255),w,b
  3270   0045D6  51E2               	movf	(efgtoa@i+1)& (0+255),w,b
  3271   0045D8  0A80               	xorlw	128
  3272   0045DA  6E3A               	movwf	??_efgtoa^0,c
  3273   0045DC  51D8               	movf	(efgtoa@m+1)& (0+255),w,b
  3274   0045DE  0A80               	xorlw	128
  3275   0045E0  583A               	subwfb	??_efgtoa^0,w,c
  3276   0045E2  A0D8               	btfss	status,0,c
  3277   0045E4  EFF6  F022         	goto	u3281
  3278   0045E8  EFF8  F022         	goto	u3280
  3279   0045EC                     u3281:
  3280   0045EC  EF6E  F022         	goto	l2985
  3281   0045F0                     u3280:
  3282   0045F0                     
  3283                           ; BSR set to: 0
  3284                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3285   0045F0  C0F2  F00F         	movff	efgtoa@u,___flmul@b
  3286   0045F4  C0F3  F010         	movff	efgtoa@u+1,___flmul@b+1
  3287   0045F8  C0F4  F011         	movff	efgtoa@u+2,___flmul@b+2
  3288   0045FC  C0F5  F012         	movff	efgtoa@u+3,___flmul@b+3
  3289   004600  0E00               	movlw	0
  3290   004602  6E13               	movwf	___flmul@a^0,c
  3291   004604  0E00               	movlw	0
  3292   004606  6E14               	movwf	(___flmul@a+1)^0,c
  3293   004608  0EA0               	movlw	160
  3294   00460A  6E15               	movwf	(___flmul@a+2)^0,c
  3295   00460C  0E40               	movlw	64
  3296   00460E  6E16               	movwf	(___flmul@a+3)^0,c
  3297   004610  EC86  F027         	call	___flmul	;wreg free
  3298   004614  C00F  F0E7         	movff	?___flmul,efgtoa@l
  3299   004618  C010  F0E8         	movff	?___flmul+1,efgtoa@l+1
  3300   00461C  C011  F0E9         	movff	?___flmul+2,efgtoa@l+2
  3301   004620  C012  F0EA         	movff	?___flmul+3,efgtoa@l+3
  3302   004624                     
  3303                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3304   004624  C0E3  F028         	movff	efgtoa@h,___flge@ff1
  3305   004628  C0E4  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3306   00462C  C0E5  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3307   004630  C0E6  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3308   004634  C0E7  F02C         	movff	efgtoa@l,___flge@ff2
  3309   004638  C0E8  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3310   00463C  C0E9  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3311   004640  C0EA  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3312   004644  EC94  F02F         	call	___flge	;wreg free
  3313   004648  B0D8               	btfsc	status,0,c
  3314   00464A  EF29  F023         	goto	u3291
  3315   00464E  EF2B  F023         	goto	u3290
  3316   004652                     u3291:
  3317   004652  EF36  F023         	goto	l3001
  3318   004656                     u3290:
  3319   004656                     
  3320                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3321   004656  0E00               	movlw	0
  3322   004658  0100               	movlb	0	; () banked
  3323   00465A  6FE7               	movwf	efgtoa@l& (0+255),b
  3324   00465C  0E00               	movlw	0
  3325   00465E  6FE8               	movwf	(efgtoa@l+1)& (0+255),b
  3326   004660  0E00               	movlw	0
  3327   004662  6FE9               	movwf	(efgtoa@l+2)& (0+255),b
  3328   004664  0E00               	movlw	0
  3329   004666  6FEA               	movwf	(efgtoa@l+3)& (0+255),b
  3330                           
  3331                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
  3332   004668  EF5F  F023         	goto	l3007
  3333   00466C                     l3001:
  3334                           
  3335                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3336   00466C  C0E3  F001         	movff	efgtoa@h,___fleq@ff1
  3337   004670  C0E4  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3338   004674  C0E5  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3339   004678  C0E6  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3340   00467C  C0E7  F005         	movff	efgtoa@l,___fleq@ff2
  3341   004680  C0E8  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3342   004684  C0E9  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3343   004688  C0EA  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3344   00468C  EC47  F031         	call	___fleq	;wreg free
  3345   004690  A0D8               	btfss	status,0,c
  3346   004692  EF4D  F023         	goto	u3301
  3347   004696  EF4F  F023         	goto	u3300
  3348   00469A                     u3301:
  3349   00469A  EF5F  F023         	goto	l3007
  3350   00469E                     u3300:
  3351   00469E  0100               	movlb	0	; () banked
  3352   0046A0  B1D5               	btfsc	efgtoa@d& (0+255),0,b
  3353   0046A2  EF55  F023         	goto	u3311
  3354   0046A6  EF57  F023         	goto	u3310
  3355   0046AA                     u3311:
  3356   0046AA  EF5F  F023         	goto	l3007
  3357   0046AE                     u3310:
  3358   0046AE                     
  3359                           ; BSR set to: 0
  3360                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3361   0046AE  0E00               	movlw	0
  3362   0046B0  6FE7               	movwf	efgtoa@l& (0+255),b
  3363   0046B2  0E00               	movlw	0
  3364   0046B4  6FE8               	movwf	(efgtoa@l+1)& (0+255),b
  3365   0046B6  0E00               	movlw	0
  3366   0046B8  6FE9               	movwf	(efgtoa@l+2)& (0+255),b
  3367   0046BA  0E00               	movlw	0
  3368   0046BC  6FEA               	movwf	(efgtoa@l+3)& (0+255),b
  3369   0046BE                     l3007:
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3372   0046BE  C0EE  F001         	movff	efgtoa@g,___fladd@b
  3373   0046C2  C0EF  F002         	movff	efgtoa@g+1,___fladd@b+1
  3374   0046C6  C0F0  F003         	movff	efgtoa@g+2,___fladd@b+2
  3375   0046CA  C0F1  F004         	movff	efgtoa@g+3,___fladd@b+3
  3376   0046CE  C0E7  F005         	movff	efgtoa@l,___fladd@a
  3377   0046D2  C0E8  F006         	movff	efgtoa@l+1,___fladd@a+1
  3378   0046D6  C0E9  F007         	movff	efgtoa@l+2,___fladd@a+2
  3379   0046DA  C0EA  F008         	movff	efgtoa@l+3,___fladd@a+3
  3380   0046DE  EC2B  F025         	call	___fladd	;wreg free
  3381   0046E2  C001  F0E3         	movff	?___fladd,efgtoa@h
  3382   0046E6  C002  F0E4         	movff	?___fladd+1,efgtoa@h+1
  3383   0046EA  C003  F0E5         	movff	?___fladd+2,efgtoa@h+2
  3384   0046EE  C004  F0E6         	movff	?___fladd+3,efgtoa@h+3
  3385   0046F2                     
  3386                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3387   0046F2  C0E3  F028         	movff	efgtoa@h,___flge@ff1
  3388   0046F6  C0E4  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3389   0046FA  C0E5  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3390   0046FE  C0E6  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3391   004702  0E00               	movlw	0
  3392   004704  6E13               	movwf	___flmul@a^0,c
  3393   004706  0E00               	movlw	0
  3394   004708  6E14               	movwf	(___flmul@a+1)^0,c
  3395   00470A  0E20               	movlw	32
  3396   00470C  6E15               	movwf	(___flmul@a+2)^0,c
  3397   00470E  0E41               	movlw	65
  3398   004710  6E16               	movwf	(___flmul@a+3)^0,c
  3399   004712  C0DD  F00F         	movff	efgtoa@ou,___flmul@b
  3400   004716  C0DE  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3401   00471A  C0DF  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3402   00471E  C0E0  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3403   004722  EC86  F027         	call	___flmul	;wreg free
  3404   004726  C00F  F02C         	movff	?___flmul,___flge@ff2
  3405   00472A  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3406   00472E  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3407   004732  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3408   004736  EC94  F02F         	call	___flge	;wreg free
  3409   00473A  A0D8               	btfss	status,0,c
  3410   00473C  EFA2  F023         	goto	u3321
  3411   004740  EFA4  F023         	goto	u3320
  3412   004744                     u3321:
  3413   004744  EFCD  F023         	goto	l3019
  3414   004748                     u3320:
  3415   004748                     
  3416                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
  3417   004748  0100               	movlb	0	; () banked
  3418   00474A  4BD9               	infsnz	efgtoa@e& (0+255),f,b
  3419   00474C  2BDA               	incf	(efgtoa@e+1)& (0+255),f,b
  3420   00474E                     
  3421                           ; BSR set to: 0
  3422                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3423   00474E  C0DD  F00F         	movff	efgtoa@ou,___flmul@b
  3424   004752  C0DE  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3425   004756  C0DF  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3426   00475A  C0E0  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3427   00475E  0E00               	movlw	0
  3428   004760  6E13               	movwf	___flmul@a^0,c
  3429   004762  0E00               	movlw	0
  3430   004764  6E14               	movwf	(___flmul@a+1)^0,c
  3431   004766  0E20               	movlw	32
  3432   004768  6E15               	movwf	(___flmul@a+2)^0,c
  3433   00476A  0E41               	movlw	65
  3434   00476C  6E16               	movwf	(___flmul@a+3)^0,c
  3435   00476E  EC86  F027         	call	___flmul	;wreg free
  3436   004772  C00F  F0DD         	movff	?___flmul,efgtoa@ou
  3437   004776  C010  F0DE         	movff	?___flmul+1,efgtoa@ou+1
  3438   00477A  C011  F0DF         	movff	?___flmul+2,efgtoa@ou+2
  3439   00477E  C012  F0E0         	movff	?___flmul+3,efgtoa@ou+3
  3440   004782                     
  3441                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3442   004782  0E66               	movlw	102
  3443   004784  0100               	movlb	0	; () banked
  3444   004786  19D4               	xorwf	efgtoa@nmode& (0+255),w,b
  3445   004788  A4D8               	btfss	status,2,c
  3446   00478A  EFC9  F023         	goto	u3331
  3447   00478E  EFCB  F023         	goto	u3330
  3448   004792                     u3331:
  3449   004792  EFCD  F023         	goto	l3019
  3450   004796                     u3330:
  3451   004796                     
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
  3454   004796  4BD7               	infsnz	efgtoa@m& (0+255),f,b
  3455   004798  2BD8               	incf	(efgtoa@m+1)& (0+255),f,b
  3456   00479A                     l3019:
  3457                           
  3458                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3459   00479A  C0DD  F0F2         	movff	efgtoa@ou,efgtoa@u
  3460   00479E  C0DE  F0F3         	movff	efgtoa@ou+1,efgtoa@u+1
  3461   0047A2  C0DF  F0F4         	movff	efgtoa@ou+2,efgtoa@u+2
  3462   0047A6  C0E0  F0F5         	movff	efgtoa@ou+3,efgtoa@u+3
  3463   0047AA                     
  3464                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3465   0047AA  C0D9  F0CA         	movff	efgtoa@e,efgtoa@ne
  3466   0047AE  C0DA  F0CB         	movff	efgtoa@e+1,efgtoa@ne+1
  3467   0047B2                     
  3468                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3469   0047B2  0100               	movlb	0	; () banked
  3470   0047B4  6BD2               	clrf	efgtoa@pp& (0+255),b
  3471   0047B6                     
  3472                           ; BSR set to: 0
  3473                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3474   0047B6  0E00               	movlw	0
  3475   0047B8  6FCF               	movwf	(efgtoa@t+1)& (0+255),b
  3476   0047BA  0E00               	movlw	0
  3477   0047BC  6FCE               	movwf	efgtoa@t& (0+255),b
  3478   0047BE                     
  3479                           ; BSR set to: 0
  3480                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3481   0047BE  0E00               	movlw	0
  3482   0047C0  6FE2               	movwf	(efgtoa@i+1)& (0+255),b
  3483   0047C2  0E00               	movlw	0
  3484   0047C4  6FE1               	movwf	efgtoa@i& (0+255),b
  3485                           
  3486                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3487   0047C6  EFC4  F024         	goto	l3069
  3488   0047CA                     l3029:
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3492   0047CA  C0E3  F001         	movff	efgtoa@h,___fldiv@b
  3493   0047CE  C0E4  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3494   0047D2  C0E5  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3495   0047D6  C0E6  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3496   0047DA  C0F2  F005         	movff	efgtoa@u,___fldiv@a
  3497   0047DE  C0F3  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3498   0047E2  C0F4  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3499   0047E6  C0F5  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3500   0047EA  ECAB  F029         	call	___fldiv	;wreg free
  3501   0047EE  C001  F01A         	movff	?___fldiv,floorf@x
  3502   0047F2  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3503   0047F6  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3504   0047FA  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3505   0047FE  EC73  F02B         	call	_floorf	;wreg free
  3506   004802  C01A  F0E7         	movff	?_floorf,efgtoa@l
  3507   004806  C01B  F0E8         	movff	?_floorf+1,efgtoa@l+1
  3508   00480A  C01C  F0E9         	movff	?_floorf+2,efgtoa@l+2
  3509   00480E  C01D  F0EA         	movff	?_floorf+3,efgtoa@l+3
  3510                           
  3511                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3512   004812  C0E7  F001         	movff	efgtoa@l,___fltol@f1
  3513   004816  C0E8  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3514   00481A  C0E9  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3515   00481E  C0EA  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3516   004822  EC11  F02F         	call	___fltol	;wreg free
  3517   004826  BE02               	btfsc	(?___fltol+1)^0,7,c
  3518   004828  EF21  F024         	goto	u3340
  3519   00482C  5002               	movf	(?___fltol+1)^0,w,c
  3520   00482E  E107               	bnz	u3341
  3521   004830  0E0A               	movlw	10
  3522   004832  5C01               	subwf	?___fltol^0,w,c
  3523   004834  B0D8               	btfsc	status,0,c
  3524   004836  EF1F  F024         	goto	u3341
  3525   00483A  EF21  F024         	goto	u3340
  3526   00483E                     u3341:
  3527   00483E  EF31  F024         	goto	l3033
  3528   004842                     u3340:
  3529   004842  C0E7  F001         	movff	efgtoa@l,___fltol@f1
  3530   004846  C0E8  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3531   00484A  C0E9  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3532   00484E  C0EA  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3533   004852  EC11  F02F         	call	___fltol	;wreg free
  3534   004856  C001  F0D5         	movff	?___fltol,efgtoa@d
  3535   00485A  C002  F0D6         	movff	?___fltol+1,efgtoa@d+1
  3536   00485E  EF36  F024         	goto	l899
  3537   004862                     l3033:
  3538   004862  0E00               	movlw	0
  3539   004864  0100               	movlb	0	; () banked
  3540   004866  6FD6               	movwf	(efgtoa@d+1)& (0+255),b
  3541   004868  0E09               	movlw	9
  3542   00486A  6FD5               	movwf	efgtoa@d& (0+255),b
  3543   00486C                     l899:
  3544                           
  3545                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3546   00486C  0100               	movlb	0	; () banked
  3547   00486E  51D2               	movf	efgtoa@pp& (0+255),w,b
  3548   004870  A4D8               	btfss	status,2,c
  3549   004872  EF3D  F024         	goto	u3351
  3550   004876  EF3F  F024         	goto	u3350
  3551   00487A                     u3351:
  3552   00487A  EF63  F024         	goto	l3053
  3553   00487E                     u3350:
  3554   00487E                     
  3555                           ; BSR set to: 0
  3556   00487E  BFCB               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3557   004880  EF46  F024         	goto	u3360
  3558   004884  EF44  F024         	goto	u3361
  3559   004888                     u3361:
  3560   004888  EF63  F024         	goto	l3053
  3561   00488C                     u3360:
  3562   00488C                     
  3563                           ; BSR set to: 0
  3564                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3565   00488C  51EC               	movf	efgtoa@n& (0+255),w,b
  3566   00488E  0F70               	addlw	low _dbuf
  3567   004890  6ED9               	movwf	fsr2l,c
  3568   004892  6ADA               	clrf	fsr2h,c
  3569   004894  0E2E               	movlw	46
  3570   004896  6EDF               	movwf	indf2,c
  3571   004898                     
  3572                           ; BSR set to: 0
  3573   004898  4BEC               	infsnz	efgtoa@n& (0+255),f,b
  3574   00489A  2BED               	incf	(efgtoa@n+1)& (0+255),f,b
  3575   00489C                     
  3576                           ; BSR set to: 0
  3577                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3578   00489C  07DB               	decf	efgtoa@w& (0+255),f,b
  3579   00489E  A0D8               	btfss	status,0,c
  3580   0048A0  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  3581   0048A2                     
  3582                           ; BSR set to: 0
  3583                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3584   0048A2  0E01               	movlw	1
  3585   0048A4  6FD2               	movwf	efgtoa@pp& (0+255),b
  3586   0048A6  EF63  F024         	goto	l3053
  3587   0048AA                     l3045:
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3591   0048AA  51EC               	movf	efgtoa@n& (0+255),w,b
  3592   0048AC  0F70               	addlw	low _dbuf
  3593   0048AE  6ED9               	movwf	fsr2l,c
  3594   0048B0  6ADA               	clrf	fsr2h,c
  3595   0048B2  0E30               	movlw	48
  3596   0048B4  6EDF               	movwf	indf2,c
  3597   0048B6                     
  3598                           ; BSR set to: 0
  3599   0048B6  4BEC               	infsnz	efgtoa@n& (0+255),f,b
  3600   0048B8  2BED               	incf	(efgtoa@n+1)& (0+255),f,b
  3601   0048BA                     
  3602                           ; BSR set to: 0
  3603                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3604   0048BA  07DB               	decf	efgtoa@w& (0+255),f,b
  3605   0048BC  A0D8               	btfss	status,0,c
  3606   0048BE  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  3607   0048C0                     
  3608                           ; BSR set to: 0
  3609                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3610   0048C0  07CE               	decf	efgtoa@t& (0+255),f,b
  3611   0048C2  A0D8               	btfss	status,0,c
  3612   0048C4  07CF               	decf	(efgtoa@t+1)& (0+255),f,b
  3613   0048C6                     l3053:
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3617   0048C6  51CE               	movf	efgtoa@t& (0+255),w,b
  3618   0048C8  11CF               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3619   0048CA  A4D8               	btfss	status,2,c
  3620   0048CC  EF6A  F024         	goto	u3371
  3621   0048D0  EF6C  F024         	goto	u3370
  3622   0048D4                     u3371:
  3623   0048D4  EF55  F024         	goto	l3045
  3624   0048D8                     u3370:
  3625   0048D8                     
  3626                           ; BSR set to: 0
  3627                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3628   0048D8  51EC               	movf	efgtoa@n& (0+255),w,b
  3629   0048DA  0F70               	addlw	low _dbuf
  3630   0048DC  6ED9               	movwf	fsr2l,c
  3631   0048DE  6ADA               	clrf	fsr2h,c
  3632   0048E0  51D5               	movf	efgtoa@d& (0+255),w,b
  3633   0048E2  0F30               	addlw	48
  3634   0048E4  6EDF               	movwf	indf2,c
  3635   0048E6                     
  3636                           ; BSR set to: 0
  3637   0048E6  4BEC               	infsnz	efgtoa@n& (0+255),f,b
  3638   0048E8  2BED               	incf	(efgtoa@n+1)& (0+255),f,b
  3639   0048EA                     
  3640                           ; BSR set to: 0
  3641                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3642   0048EA  07DB               	decf	efgtoa@w& (0+255),f,b
  3643   0048EC  A0D8               	btfss	status,0,c
  3644   0048EE  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  3645   0048F0                     
  3646                           ; BSR set to: 0
  3647                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3648   0048F0  C0E3  F028         	movff	efgtoa@h,___flsub@b
  3649   0048F4  C0E4  F029         	movff	efgtoa@h+1,___flsub@b+1
  3650   0048F8  C0E5  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3651   0048FC  C0E6  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3652   004900  C0E7  F013         	movff	efgtoa@l,___flmul@a
  3653   004904  C0E8  F014         	movff	efgtoa@l+1,___flmul@a+1
  3654   004908  C0E9  F015         	movff	efgtoa@l+2,___flmul@a+2
  3655   00490C  C0EA  F016         	movff	efgtoa@l+3,___flmul@a+3
  3656   004910  C0F2  F00F         	movff	efgtoa@u,___flmul@b
  3657   004914  C0F3  F010         	movff	efgtoa@u+1,___flmul@b+1
  3658   004918  C0F4  F011         	movff	efgtoa@u+2,___flmul@b+2
  3659   00491C  C0F5  F012         	movff	efgtoa@u+3,___flmul@b+3
  3660   004920  EC86  F027         	call	___flmul	;wreg free
  3661   004924  C00F  F02C         	movff	?___flmul,___flsub@a
  3662   004928  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3663   00492C  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3664   004930  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3665   004934  EC87  F032         	call	___flsub	;wreg free
  3666   004938  C028  F0E3         	movff	?___flsub,efgtoa@h
  3667   00493C  C029  F0E4         	movff	?___flsub+1,efgtoa@h+1
  3668   004940  C02A  F0E5         	movff	?___flsub+2,efgtoa@h+2
  3669   004944  C02B  F0E6         	movff	?___flsub+3,efgtoa@h+3
  3670   004948                     
  3671                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3672   004948  C0F2  F001         	movff	efgtoa@u,___fldiv@b
  3673   00494C  C0F3  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3674   004950  C0F4  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3675   004954  C0F5  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3676   004958  0E00               	movlw	0
  3677   00495A  6E05               	movwf	___fldiv@a^0,c
  3678   00495C  0E00               	movlw	0
  3679   00495E  6E06               	movwf	(___fldiv@a+1)^0,c
  3680   004960  0E20               	movlw	32
  3681   004962  6E07               	movwf	(___fldiv@a+2)^0,c
  3682   004964  0E41               	movlw	65
  3683   004966  6E08               	movwf	(___fldiv@a+3)^0,c
  3684   004968  ECAB  F029         	call	___fldiv	;wreg free
  3685   00496C  C001  F0F2         	movff	?___fldiv,efgtoa@u
  3686   004970  C002  F0F3         	movff	?___fldiv+1,efgtoa@u+1
  3687   004974  C003  F0F4         	movff	?___fldiv+2,efgtoa@u+2
  3688   004978  C004  F0F5         	movff	?___fldiv+3,efgtoa@u+3
  3689   00497C                     
  3690                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3691   00497C  0100               	movlb	0	; () banked
  3692   00497E  07CA               	decf	efgtoa@ne& (0+255),f,b
  3693   004980  A0D8               	btfss	status,0,c
  3694   004982  07CB               	decf	(efgtoa@ne+1)& (0+255),f,b
  3695   004984                     
  3696                           ; BSR set to: 0
  3697                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3698   004984  4BE1               	infsnz	efgtoa@i& (0+255),f,b
  3699   004986  2BE2               	incf	(efgtoa@i+1)& (0+255),f,b
  3700   004988                     l3069:
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3704   004988  51D7               	movf	efgtoa@m& (0+255),w,b
  3705   00498A  5DE1               	subwf	efgtoa@i& (0+255),w,b
  3706   00498C  51E2               	movf	(efgtoa@i+1)& (0+255),w,b
  3707   00498E  0A80               	xorlw	128
  3708   004990  6E3A               	movwf	??_efgtoa^0,c
  3709   004992  51D8               	movf	(efgtoa@m+1)& (0+255),w,b
  3710   004994  0A80               	xorlw	128
  3711   004996  583A               	subwfb	??_efgtoa^0,w,c
  3712   004998  B0D8               	btfsc	status,0,c
  3713   00499A  EFD1  F024         	goto	u3381
  3714   00499E  EFD3  F024         	goto	u3380
  3715   0049A2                     u3381:
  3716   0049A2  EFE1  F024         	goto	l3073
  3717   0049A6                     u3380:
  3718   0049A6                     
  3719                           ; BSR set to: 0
  3720   0049A6  BFED               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3721   0049A8  EFDF  F024         	goto	u3391
  3722   0049AC  51ED               	movf	(efgtoa@n+1)& (0+255),w,b
  3723   0049AE  E109               	bnz	u3390
  3724   0049B0  0E4B               	movlw	75
  3725   0049B2  5DEC               	subwf	efgtoa@n& (0+255),w,b
  3726   0049B4  A0D8               	btfss	status,0,c
  3727   0049B6  EFDF  F024         	goto	u3391
  3728   0049BA  EFE1  F024         	goto	u3390
  3729   0049BE                     u3391:
  3730   0049BE  EFE5  F023         	goto	l3029
  3731   0049C2                     u3390:
  3732   0049C2                     l3073:
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3736   0049C2  0E00               	movlw	0
  3737   0049C4  6FE2               	movwf	(efgtoa@i+1)& (0+255),b
  3738   0049C6  0E4F               	movlw	79
  3739   0049C8  6FE1               	movwf	efgtoa@i& (0+255),b
  3740   0049CA                     
  3741                           ; BSR set to: 0
  3742                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3743   0049CA  51E1               	movf	efgtoa@i& (0+255),w,b
  3744   0049CC  0F70               	addlw	low _dbuf
  3745   0049CE  6ED9               	movwf	fsr2l,c
  3746   0049D0  6ADA               	clrf	fsr2h,c
  3747   0049D2  6ADF               	clrf	indf2,c
  3748   0049D4                     
  3749                           ; BSR set to: 0
  3750                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3751   0049D4  51EC               	movf	efgtoa@n& (0+255),w,b
  3752   0049D6  0870               	sublw	low _dbuf
  3753   0049D8  25E1               	addwf	efgtoa@i& (0+255),w,b
  3754   0049DA  6E01               	movwf	memcpy@d1^0,c
  3755   0049DC  0E70               	movlw	low _dbuf
  3756   0049DE  6E02               	movwf	memcpy@s1^0,c
  3757   0049E0  C0EC  F003         	movff	efgtoa@n,memcpy@n
  3758   0049E4  C0ED  F004         	movff	efgtoa@n+1,memcpy@n+1
  3759   0049E8  ECCC  F032         	call	_memcpy	;wreg free
  3760   0049EC                     
  3761                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3762   0049EC  0100               	movlb	0	; () banked
  3763   0049EE  51EC               	movf	efgtoa@n& (0+255),w,b
  3764   0049F0  5DE1               	subwf	efgtoa@i& (0+255),w,b
  3765   0049F2  6FEC               	movwf	efgtoa@n& (0+255),b
  3766   0049F4  51ED               	movf	(efgtoa@n+1)& (0+255),w,b
  3767   0049F6  59E2               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3768   0049F8  6FED               	movwf	(efgtoa@n+1)& (0+255),b
  3769   0049FA                     
  3770                           ; BSR set to: 0
  3771                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3772   0049FA  51EB               	movf	efgtoa@sign& (0+255),w,b
  3773   0049FC  A4D8               	btfss	status,2,c
  3774   0049FE  EF03  F025         	goto	u3401
  3775   004A02  EF06  F025         	goto	u3400
  3776   004A06                     u3401:
  3777   004A06  0E01               	movlw	1
  3778   004A08  EF07  F025         	goto	u3410
  3779   004A0C                     u3400:
  3780   004A0C  0E00               	movlw	0
  3781   004A0E                     u3410:
  3782   004A0E  6FE1               	movwf	efgtoa@i& (0+255),b
  3783   004A10  6BE2               	clrf	(efgtoa@i+1)& (0+255),b
  3784   004A12                     
  3785                           ; BSR set to: 0
  3786                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3787   004A12  51EB               	movf	efgtoa@sign& (0+255),w,b
  3788   004A14  B4D8               	btfsc	status,2,c
  3789   004A16  EF0F  F025         	goto	u3421
  3790   004A1A  EF11  F025         	goto	u3420
  3791   004A1E                     u3421:
  3792   004A1E  EF1B  F025         	goto	l3087
  3793   004A22                     u3420:
  3794   004A22                     
  3795                           ; BSR set to: 0
  3796                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3797   004A22  07EC               	decf	efgtoa@n& (0+255),f,b
  3798   004A24  A0D8               	btfss	status,0,c
  3799   004A26  07ED               	decf	(efgtoa@n+1)& (0+255),f,b
  3800   004A28  51EC               	movf	efgtoa@n& (0+255),w,b
  3801   004A2A  0F70               	addlw	low _dbuf
  3802   004A2C  6ED9               	movwf	fsr2l,c
  3803   004A2E  6ADA               	clrf	fsr2h,c
  3804   004A30  0060  F3AF  FFDF   	movff	efgtoa@sign,indf2
  3805   004A36                     l3087:
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3809   004A36  51E1               	movf	efgtoa@i& (0+255),w,b
  3810   004A38  5FDB               	subwf	efgtoa@w& (0+255),f,b
  3811   004A3A  51E2               	movf	(efgtoa@i+1)& (0+255),w,b
  3812   004A3C  5BDC               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3813   004A3E                     
  3814                           ; BSR set to: 0
  3815                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3816   004A3E  C034  F00E         	movff	efgtoa@fp,pad@fp
  3817   004A42  51EC               	movf	efgtoa@n& (0+255),w,b
  3818   004A44  0F70               	addlw	low _dbuf
  3819   004A46  6E0F               	movwf	pad@buf^0,c
  3820   004A48  C0DB  F010         	movff	efgtoa@w,pad@p
  3821   004A4C  C0DC  F011         	movff	efgtoa@w+1,pad@p+1
  3822   004A50  EC06  F032         	call	_pad	;wreg free
  3823   004A54                     l866:
  3824   004A54  0012               	return		;funcret
  3825   004A56                     __end_of_efgtoa:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function _strcpy *****************
  3829 ;; Defined at:
  3830 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  dest            1    0[COMRAM] PTR unsigned char 
  3833 ;;		 -> dbuf(80), 
  3834 ;;  src             1    1[COMRAM] PTR const unsigned char 
  3835 ;;		 -> STR_7(4), STR_4(4), 
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;  d               1    3[COMRAM] PTR unsigned char 
  3838 ;;		 -> dbuf(80), 
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  1    0[COMRAM] PTR unsigned char 
  3841 ;; Registers used:
  3842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3851 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3852 ;;Total ram usage:        4 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; Hardware stack levels required when called: 1
  3855 ;; This function calls:
  3856 ;;		Nothing
  3857 ;; This function is called by:
  3858 ;;		_efgtoa
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           	psect	text7
  3863   006656                     __ptext7:
  3864                           	callstack 0
  3865   006656                     _strcpy:
  3866                           	callstack 25
  3867   006656  C001  F004         	movff	strcpy@dest,strcpy@d
  3868   00665A                     l2809:
  3869   00665A  2A02               	incf	strcpy@src^0,f,c
  3870   00665C  0402               	decf	strcpy@src^0,w,c
  3871   00665E  6E03               	movwf	??_strcpy^0,c
  3872   006660  0060  F00F  FFF6   	movff	??_strcpy,tblptrl
  3873   006666                     	if	1	;There is more than 1 active tblptr byte
  3874   006666  0E20               	movlw	high __smallconst
  3875   006668  6EF7               	movwf	tblptrh,c
  3876   00666A                     	endif
  3877   00666A                     	if	0	;tblptru may be non-zero
  3878   00666A                     	endif
  3879   00666A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3880   00666A  0E00               	movlw	low (__smallconst shr (0+16))
  3881   00666C  6EF8               	movwf	tblptru,c
  3882   00666E                     	endif
  3883   00666E  2A04               	incf	strcpy@d^0,f,c
  3884   006670  0404               	decf	strcpy@d^0,w,c
  3885   006672  6ED9               	movwf	fsr2l,c
  3886   006674  6ADA               	clrf	fsr2h,c
  3887   006676  0008               	tblrd		*
  3888   006678  006F FFD7 FFDF     	movff	tablat,indf2
  3889   00667E  50DF               	movf	indf2,w,c
  3890   006680  A4D8               	btfss	status,2,c
  3891   006682  EF45  F033         	goto	u2961
  3892   006686  EF47  F033         	goto	u2960
  3893   00668A                     u2961:
  3894   00668A  EF2D  F033         	goto	l2809
  3895   00668E                     u2960:
  3896   00668E  0012               	return		;funcret
  3897   006690                     __end_of_strcpy:
  3898                           	callstack 0
  3899                           
  3900 ;; *************** function _pad *****************
  3901 ;; Defined at:
  3902 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  3905 ;;		 -> sprintf@f(11), 
  3906 ;;  buf             1   14[COMRAM] PTR unsigned char 
  3907 ;;		 -> dbuf(80), 
  3908 ;;  p               2   15[COMRAM] int 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;  i               2   18[COMRAM] int 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3921 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3923 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3924 ;;Total ram usage:        7 bytes
  3925 ;; Hardware stack levels used: 1
  3926 ;; Hardware stack levels required when called: 4
  3927 ;; This function calls:
  3928 ;;		_fputc
  3929 ;;		_fputs
  3930 ;; This function is called by:
  3931 ;;		_efgtoa
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text8
  3936   00640C                     __ptext8:
  3937                           	callstack 0
  3938   00640C                     _pad:
  3939                           	callstack 22
  3940   00640C                     
  3941                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  3942   00640C  BE11               	btfsc	(pad@p+1)^0,7,c
  3943   00640E  EF0D  F032         	goto	u2870
  3944   006412  EF0B  F032         	goto	u2871
  3945   006416                     u2871:
  3946   006416  EF11  F032         	goto	l851
  3947   00641A                     u2870:
  3948   00641A                     
  3949                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3950   00641A  0E00               	movlw	0
  3951   00641C  6E11               	movwf	(pad@p+1)^0,c
  3952   00641E  0E00               	movlw	0
  3953   006420  6E10               	movwf	pad@p^0,c
  3954   006422                     l851:
  3955                           
  3956                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3957   006422  0E00               	movlw	0
  3958   006424  6E14               	movwf	(pad@i+1)^0,c
  3959   006426  0E00               	movlw	0
  3960   006428  6E13               	movwf	pad@i^0,c
  3961                           
  3962                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3963   00642A  EF21  F032         	goto	l2781
  3964   00642E                     l2777:
  3965                           
  3966                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3967   00642E  0E00               	movlw	0
  3968   006430  6E02               	movwf	(fputc@c+1)^0,c
  3969   006432  0E20               	movlw	32
  3970   006434  6E01               	movwf	fputc@c^0,c
  3971   006436  C00E  F003         	movff	pad@fp,fputc@fp
  3972   00643A  ECF1  F030         	call	_fputc	;wreg free
  3973   00643E                     
  3974                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3975   00643E  4A13               	infsnz	pad@i^0,f,c
  3976   006440  2A14               	incf	(pad@i+1)^0,f,c
  3977   006442                     l2781:
  3978                           
  3979                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3980   006442  5010               	movf	pad@p^0,w,c
  3981   006444  5C13               	subwf	pad@i^0,w,c
  3982   006446  5014               	movf	(pad@i+1)^0,w,c
  3983   006448  0A80               	xorlw	128
  3984   00644A  6E12               	movwf	??_pad^0,c
  3985   00644C  5011               	movf	(pad@p+1)^0,w,c
  3986   00644E  0A80               	xorlw	128
  3987   006450  5812               	subwfb	??_pad^0,w,c
  3988   006452  A0D8               	btfss	status,0,c
  3989   006454  EF2E  F032         	goto	u2881
  3990   006458  EF30  F032         	goto	u2880
  3991   00645C                     u2881:
  3992   00645C  EF17  F032         	goto	l2777
  3993   006460                     u2880:
  3994   006460                     
  3995                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3996   006460  C00F  F009         	movff	pad@buf,fputs@s
  3997   006464  C00E  F00A         	movff	pad@fp,fputs@fp
  3998   006468  EC0D  F033         	call	_fputs	;wreg free
  3999   00646C  0012               	return		;funcret
  4000   00646E                     __end_of_pad:
  4001                           	callstack 0
  4002                           
  4003 ;; *************** function _fputs *****************
  4004 ;; Defined at:
  4005 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;  s               1    8[COMRAM] PTR const unsigned char 
  4008 ;;		 -> dbuf(80), 
  4009 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  4010 ;;		 -> sprintf@f(11), 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  i               2   11[COMRAM] int 
  4013 ;;  c               1   10[COMRAM] unsigned char 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  2    8[COMRAM] int 
  4016 ;; Registers used:
  4017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4024 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4026 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4027 ;;Total ram usage:        5 bytes
  4028 ;; Hardware stack levels used: 1
  4029 ;; Hardware stack levels required when called: 3
  4030 ;; This function calls:
  4031 ;;		_fputc
  4032 ;; This function is called by:
  4033 ;;		_pad
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text9
  4038   00661A                     __ptext9:
  4039                           	callstack 0
  4040   00661A                     _fputs:
  4041                           	callstack 22
  4042   00661A  0E00               	movlw	0
  4043   00661C  6E0D               	movwf	(fputs@i+1)^0,c
  4044   00661E  0E00               	movlw	0
  4045   006620  6E0C               	movwf	fputs@i^0,c
  4046   006622  EF1C  F033         	goto	l2411
  4047   006626                     l2407:
  4048   006626  C00B  F001         	movff	fputs@c,fputc@c
  4049   00662A  6A02               	clrf	(fputc@c+1)^0,c
  4050   00662C  C00A  F003         	movff	fputs@fp,fputc@fp
  4051   006630  ECF1  F030         	call	_fputc	;wreg free
  4052   006634  4A0C               	infsnz	fputs@i^0,f,c
  4053   006636  2A0D               	incf	(fputs@i+1)^0,f,c
  4054   006638                     l2411:
  4055   006638  5009               	movf	fputs@s^0,w,c
  4056   00663A  240C               	addwf	fputs@i^0,w,c
  4057   00663C  6ED9               	movwf	fsr2l,c
  4058   00663E  6ADA               	clrf	fsr2h,c
  4059   006640  50DF               	movf	indf2,w,c
  4060   006642  6E0B               	movwf	fputs@c^0,c
  4061   006644  500B               	movf	fputs@c^0,w,c
  4062   006646  A4D8               	btfss	status,2,c
  4063   006648  EF28  F033         	goto	u2281
  4064   00664C  EF2A  F033         	goto	u2280
  4065   006650                     u2281:
  4066   006650  EF13  F033         	goto	l2407
  4067   006654                     u2280:
  4068   006654  0012               	return		;funcret
  4069   006656                     __end_of_fputs:
  4070                           	callstack 0
  4071                           
  4072 ;; *************** function _fputc *****************
  4073 ;; Defined at:
  4074 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  c               2    0[COMRAM] int 
  4077 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  4078 ;;		 -> sprintf@f(11), 
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  2    0[COMRAM] int 
  4083 ;; Registers used:
  4084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4090 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4092 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4093 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4094 ;;Total ram usage:        8 bytes
  4095 ;; Hardware stack levels used: 1
  4096 ;; Hardware stack levels required when called: 2
  4097 ;; This function calls:
  4098 ;;		_putch
  4099 ;; This function is called by:
  4100 ;;		_pad
  4101 ;;		_vfpfcnvrt
  4102 ;;		_fputs
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           	psect	text10
  4107   0061E2                     __ptext10:
  4108                           	callstack 0
  4109   0061E2                     _fputc:
  4110                           	callstack 25
  4111   0061E2  5003               	movf	fputc@fp^0,w,c
  4112   0061E4  B4D8               	btfsc	status,2,c
  4113   0061E6  EFF7  F030         	goto	u1851
  4114   0061EA  EFF9  F030         	goto	u1850
  4115   0061EE                     u1851:
  4116   0061EE  EF01  F031         	goto	l2201
  4117   0061F2                     u1850:
  4118   0061F2  5003               	movf	fputc@fp^0,w,c
  4119   0061F4  A4D8               	btfss	status,2,c
  4120   0061F6  EFFF  F030         	goto	u1861
  4121   0061FA  EF01  F031         	goto	u1860
  4122   0061FE                     u1861:
  4123   0061FE  EF06  F031         	goto	l2203
  4124   006202                     u1860:
  4125   006202                     l2201:
  4126   006202  5001               	movf	fputc@c^0,w,c
  4127   006204  ECFC  F033         	call	_putch
  4128   006208  EF46  F031         	goto	l991
  4129   00620C                     l2203:
  4130   00620C  5003               	movf	fputc@fp^0,w,c
  4131   00620E  6ED9               	movwf	fsr2l,c
  4132   006210  6ADA               	clrf	fsr2h,c
  4133   006212  0E09               	movlw	9
  4134   006214  26D9               	addwf	fsr2l,f,c
  4135   006216  50DE               	movf	postinc2,w,c
  4136   006218  10DE               	iorwf	postinc2,w,c
  4137   00621A  B4D8               	btfsc	status,2,c
  4138   00621C  EF12  F031         	goto	u1871
  4139   006220  EF14  F031         	goto	u1870
  4140   006224                     u1871:
  4141   006224  EF2D  F031         	goto	l2207
  4142   006228                     u1870:
  4143   006228  5003               	movf	fputc@fp^0,w,c
  4144   00622A  6ED9               	movwf	fsr2l,c
  4145   00622C  6ADA               	clrf	fsr2h,c
  4146   00622E  0E09               	movlw	9
  4147   006230  26D9               	addwf	fsr2l,f,c
  4148   006232  5003               	movf	fputc@fp^0,w,c
  4149   006234  6EE1               	movwf	fsr1l,c
  4150   006236  6AE2               	clrf	fsr1h,c
  4151   006238  0E02               	movlw	2
  4152   00623A  26E1               	addwf	fsr1l,f,c
  4153   00623C  50DE               	movf	postinc2,w,c
  4154   00623E  5CE6               	subwf	postinc1,w,c
  4155   006240  50E6               	movf	postinc1,w,c
  4156   006242  0A80               	xorlw	128
  4157   006244  6E08               	movwf	(??_fputc+4)^0,c
  4158   006246  50DE               	movf	postinc2,w,c
  4159   006248  0A80               	xorlw	128
  4160   00624A  5808               	subwfb	(??_fputc+4)^0,w,c
  4161   00624C  B0D8               	btfsc	status,0,c
  4162   00624E  EF2B  F031         	goto	u1881
  4163   006252  EF2D  F031         	goto	u1880
  4164   006256                     u1881:
  4165   006256  EF46  F031         	goto	l991
  4166   00625A                     u1880:
  4167   00625A                     l2207:
  4168   00625A  5003               	movf	fputc@fp^0,w,c
  4169   00625C  6ED9               	movwf	fsr2l,c
  4170   00625E  6ADA               	clrf	fsr2h,c
  4171   006260  0E02               	movlw	2
  4172   006262  26D9               	addwf	fsr2l,f,c
  4173   006264  50DF               	movf	indf2,w,c
  4174   006266  6E04               	movwf	??_fputc^0,c
  4175   006268  5003               	movf	fputc@fp^0,w,c
  4176   00626A  6ED9               	movwf	fsr2l,c
  4177   00626C  6ADA               	clrf	fsr2h,c
  4178   00626E  50DF               	movf	indf2,w,c
  4179   006270  2404               	addwf	??_fputc^0,w,c
  4180   006272  6ED9               	movwf	fsr2l,c
  4181   006274  6ADA               	clrf	fsr2h,c
  4182   006276  0060  F007  FFDF   	movff	fputc@c,indf2
  4183   00627C  5003               	movf	fputc@fp^0,w,c
  4184   00627E  6ED9               	movwf	fsr2l,c
  4185   006280  6ADA               	clrf	fsr2h,c
  4186   006282  0E02               	movlw	2
  4187   006284  26D9               	addwf	fsr2l,f,c
  4188   006286  2ADE               	incf	postinc2,f,c
  4189   006288  0E00               	movlw	0
  4190   00628A  22DD               	addwfc	postdec2,f,c
  4191   00628C                     l991:
  4192   00628C  0012               	return		;funcret
  4193   00628E                     __end_of_fputc:
  4194                           	callstack 0
  4195                           
  4196 ;; *************** function _putch *****************
  4197 ;; Defined at:
  4198 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  c               1    wreg     unsigned char 
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;  c               1    0[COMRAM] unsigned char 
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  1    wreg      void 
  4205 ;; Registers used:
  4206 ;;		wreg
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4216 ;;Total ram usage:        0 bytes
  4217 ;; Hardware stack levels used: 1
  4218 ;; Hardware stack levels required when called: 1
  4219 ;; This function calls:
  4220 ;;		Nothing
  4221 ;; This function is called by:
  4222 ;;		_fputc
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           	psect	text11
  4227   0067F8                     __ptext11:
  4228                           	callstack 0
  4229   0067F8                     _putch:
  4230                           	callstack 25
  4231   0067F8  0012               	return		;funcret
  4232   0067FA                     __end_of_putch:
  4233                           	callstack 0
  4234                           
  4235 ;; *************** function _memcpy *****************
  4236 ;; Defined at:
  4237 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  d1              1    0[COMRAM] PTR void 
  4240 ;;		 -> dbuf(80), 
  4241 ;;  s1              1    1[COMRAM] PTR const void 
  4242 ;;		 -> dbuf(80), 
  4243 ;;  n               2    2[COMRAM] unsigned int 
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;  s               1    6[COMRAM] PTR const unsigned char 
  4246 ;;		 -> dbuf(80), 
  4247 ;;  d               1    5[COMRAM] PTR unsigned char 
  4248 ;;		 -> dbuf(80), 
  4249 ;;  tmp             1    4[COMRAM] unsigned char 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    0[COMRAM] PTR void 
  4252 ;; Registers used:
  4253 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4259 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4260 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4262 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4263 ;;Total ram usage:        7 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; Hardware stack levels required when called: 1
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_efgtoa
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text12
  4274   006598                     __ptext12:
  4275                           	callstack 0
  4276   006598                     _memcpy:
  4277                           	callstack 25
  4278   006598  C002  F007         	movff	memcpy@s1,memcpy@s
  4279   00659C  C001  F006         	movff	memcpy@d1,memcpy@d
  4280   0065A0  EFDF  F032         	goto	l2855
  4281   0065A4                     l2849:
  4282   0065A4  5007               	movf	memcpy@s^0,w,c
  4283   0065A6  6ED9               	movwf	fsr2l,c
  4284   0065A8  6ADA               	clrf	fsr2h,c
  4285   0065AA  50DF               	movf	indf2,w,c
  4286   0065AC  6E05               	movwf	memcpy@tmp^0,c
  4287   0065AE  2A07               	incf	memcpy@s^0,f,c
  4288   0065B0  5006               	movf	memcpy@d^0,w,c
  4289   0065B2  6ED9               	movwf	fsr2l,c
  4290   0065B4  6ADA               	clrf	fsr2h,c
  4291   0065B6  0060  F017  FFDF   	movff	memcpy@tmp,indf2
  4292   0065BC  2A06               	incf	memcpy@d^0,f,c
  4293   0065BE                     l2855:
  4294   0065BE  0603               	decf	memcpy@n^0,f,c
  4295   0065C0  A0D8               	btfss	status,0,c
  4296   0065C2  0604               	decf	(memcpy@n+1)^0,f,c
  4297   0065C4  2803               	incf	memcpy@n^0,w,c
  4298   0065C6  E106               	bnz	u3081
  4299   0065C8  2804               	incf	(memcpy@n+1)^0,w,c
  4300   0065CA  A4D8               	btfss	status,2,c
  4301   0065CC  EFEA  F032         	goto	u3081
  4302   0065D0  EFEC  F032         	goto	u3080
  4303   0065D4                     u3081:
  4304   0065D4  EFD2  F032         	goto	l2849
  4305   0065D8                     u3080:
  4306   0065D8  0012               	return		;funcret
  4307   0065DA                     __end_of_memcpy:
  4308                           	callstack 0
  4309                           
  4310 ;; *************** function _labs *****************
  4311 ;; Defined at:
  4312 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;  a               4    0[COMRAM] long 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;		None
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  4    0[COMRAM] long 
  4319 ;; Registers used:
  4320 ;;		wreg, status,2, status,0
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4326 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4328 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4329 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4330 ;;Total ram usage:        8 bytes
  4331 ;; Hardware stack levels used: 1
  4332 ;; Hardware stack levels required when called: 1
  4333 ;; This function calls:
  4334 ;;		Nothing
  4335 ;; This function is called by:
  4336 ;;		_efgtoa
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text13
  4341   00646E                     __ptext13:
  4342                           	callstack 0
  4343   00646E                     _labs:
  4344                           	callstack 25
  4345   00646E  BE04               	btfsc	(labs@a+3)^0,7,c
  4346   006470  EF3C  F032         	goto	u2971
  4347   006474  EF3E  F032         	goto	u2970
  4348   006478                     u2971:
  4349   006478  EF48  F032         	goto	l2815
  4350   00647C                     u2970:
  4351   00647C  C001  F001         	movff	labs@a,?_labs
  4352   006480  C002  F002         	movff	labs@a+1,?_labs+1
  4353   006484  C003  F003         	movff	labs@a+2,?_labs+2
  4354   006488  C004  F004         	movff	labs@a+3,?_labs+3
  4355   00648C  EF61  F032         	goto	l973
  4356   006490                     l2815:
  4357   006490  C001  F005         	movff	labs@a,??_labs
  4358   006494  C002  F006         	movff	labs@a+1,??_labs+1
  4359   006498  C003  F007         	movff	labs@a+2,??_labs+2
  4360   00649C  C004  F008         	movff	labs@a+3,??_labs+3
  4361   0064A0  1E05               	comf	??_labs^0,f,c
  4362   0064A2  1E06               	comf	(??_labs+1)^0,f,c
  4363   0064A4  1E07               	comf	(??_labs+2)^0,f,c
  4364   0064A6  1E08               	comf	(??_labs+3)^0,f,c
  4365   0064A8  2A05               	incf	??_labs^0,f,c
  4366   0064AA  0E00               	movlw	0
  4367   0064AC  2206               	addwfc	(??_labs+1)^0,f,c
  4368   0064AE  2207               	addwfc	(??_labs+2)^0,f,c
  4369   0064B0  2208               	addwfc	(??_labs+3)^0,f,c
  4370   0064B2  C005  F001         	movff	??_labs,?_labs
  4371   0064B6  C006  F002         	movff	??_labs+1,?_labs+1
  4372   0064BA  C007  F003         	movff	??_labs+2,?_labs+2
  4373   0064BE  C008  F004         	movff	??_labs+3,?_labs+3
  4374   0064C2                     l973:
  4375   0064C2  0012               	return		;funcret
  4376   0064C4                     __end_of_labs:
  4377                           	callstack 0
  4378                           
  4379 ;; *************** function _floorf *****************
  4380 ;; Defined at:
  4381 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  x               4   25[COMRAM] float 
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;  u               4   41[COMRAM] struct .
  4386 ;;  m               4   35[COMRAM] unsigned long 
  4387 ;;  e               2   39[COMRAM] int 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  4   25[COMRAM] float 
  4390 ;; Registers used:
  4391 ;;		wreg, status,2, status,0
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4398 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4399 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4400 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4401 ;;Total ram usage:       20 bytes
  4402 ;; Hardware stack levels used: 1
  4403 ;; Hardware stack levels required when called: 1
  4404 ;; This function calls:
  4405 ;;		Nothing
  4406 ;; This function is called by:
  4407 ;;		_efgtoa
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text14
  4412   0056E6                     __ptext14:
  4413                           	callstack 0
  4414   0056E6                     _floorf:
  4415                           	callstack 25
  4416   0056E6  C060  F02A         	movff	floorf@F521,floorf@u
  4417   0056EA  C061  F02B         	movff	floorf@F521+1,floorf@u+1
  4418   0056EE  C062  F02C         	movff	floorf@F521+2,floorf@u+2
  4419   0056F2  C063  F02D         	movff	floorf@F521+3,floorf@u+3
  4420   0056F6  C01A  F02A         	movff	floorf@x,floorf@u
  4421   0056FA  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4422   0056FE  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4423   005702  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4424   005706  0E81               	movlw	129
  4425   005708  6E1E               	movwf	??_floorf^0,c
  4426   00570A  0EFF               	movlw	255
  4427   00570C  6E1F               	movwf	(??_floorf+1)^0,c
  4428   00570E  C02A  F020         	movff	floorf@u,??_floorf+2
  4429   005712  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4430   005716  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4431   00571A  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4432   00571E  0E18               	movlw	24
  4433   005720  EF97  F02B         	goto	u2980
  4434   005724                     u2985:
  4435   005724  90D8               	bcf	status,0,c
  4436   005726  3223               	rrcf	(??_floorf+5)^0,f,c
  4437   005728  3222               	rrcf	(??_floorf+4)^0,f,c
  4438   00572A  3221               	rrcf	(??_floorf+3)^0,f,c
  4439   00572C  3220               	rrcf	(??_floorf+2)^0,f,c
  4440   00572E                     u2980:
  4441   00572E  2EE8               	decfsz	wreg,f,c
  4442   005730  EF92  F02B         	goto	u2985
  4443   005734  5020               	movf	(??_floorf+2)^0,w,c
  4444   005736  241E               	addwf	??_floorf^0,w,c
  4445   005738  6E28               	movwf	floorf@e^0,c
  4446   00573A  0E00               	movlw	0
  4447   00573C  201F               	addwfc	(??_floorf+1)^0,w,c
  4448   00573E  6E29               	movwf	(floorf@e+1)^0,c
  4449   005740  BE29               	btfsc	(floorf@e+1)^0,7,c
  4450   005742  EFAC  F02B         	goto	u2991
  4451   005746  5029               	movf	(floorf@e+1)^0,w,c
  4452   005748  E109               	bnz	u2990
  4453   00574A  0E17               	movlw	23
  4454   00574C  5C28               	subwf	floorf@e^0,w,c
  4455   00574E  A0D8               	btfss	status,0,c
  4456   005750  EFAC  F02B         	goto	u2991
  4457   005754  EFAE  F02B         	goto	u2990
  4458   005758                     u2991:
  4459   005758  EFB8  F02B         	goto	l2825
  4460   00575C                     u2990:
  4461   00575C                     l2823:
  4462   00575C  C01A  F01A         	movff	floorf@x,?_floorf
  4463   005760  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4464   005764  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4465   005768  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4466   00576C  EF7B  F02C         	goto	l959
  4467   005770                     l2825:
  4468   005770  BE29               	btfsc	(floorf@e+1)^0,7,c
  4469   005772  EFBD  F02B         	goto	u3001
  4470   005776  EFBF  F02B         	goto	u3000
  4471   00577A                     u3001:
  4472   00577A  EF2F  F02C         	goto	l2835
  4473   00577E                     u3000:
  4474   00577E  C028  F01E         	movff	floorf@e,??_floorf
  4475   005782  0EFF               	movlw	255
  4476   005784  6E1F               	movwf	(??_floorf+1)^0,c
  4477   005786  0EFF               	movlw	255
  4478   005788  6E20               	movwf	(??_floorf+2)^0,c
  4479   00578A  0E7F               	movlw	127
  4480   00578C  6E21               	movwf	(??_floorf+3)^0,c
  4481   00578E  0E00               	movlw	0
  4482   005790  6E22               	movwf	(??_floorf+4)^0,c
  4483   005792                     u3015:
  4484   005792  661E               	tstfsz	??_floorf^0,c
  4485   005794  EFCE  F02B         	goto	u3016
  4486   005798  EFD6  F02B         	goto	u3017
  4487   00579C                     u3016:
  4488   00579C  3422               	rlcf	(??_floorf+4)^0,w,c
  4489   00579E  3222               	rrcf	(??_floorf+4)^0,f,c
  4490   0057A0  3221               	rrcf	(??_floorf+3)^0,f,c
  4491   0057A2  3220               	rrcf	(??_floorf+2)^0,f,c
  4492   0057A4  321F               	rrcf	(??_floorf+1)^0,f,c
  4493   0057A6  2E1E               	decfsz	??_floorf^0,f,c
  4494   0057A8  EFC9  F02B         	goto	u3015
  4495   0057AC                     u3017:
  4496   0057AC  C01F  F024         	movff	??_floorf+1,floorf@m
  4497   0057B0  C020  F025         	movff	??_floorf+2,floorf@m+1
  4498   0057B4  C021  F026         	movff	??_floorf+3,floorf@m+2
  4499   0057B8  C022  F027         	movff	??_floorf+4,floorf@m+3
  4500   0057BC  5024               	movf	floorf@m^0,w,c
  4501   0057BE  142A               	andwf	floorf@u^0,w,c
  4502   0057C0  6E1E               	movwf	??_floorf^0,c
  4503   0057C2  5025               	movf	(floorf@m+1)^0,w,c
  4504   0057C4  142B               	andwf	(floorf@u+1)^0,w,c
  4505   0057C6  6E1F               	movwf	(??_floorf+1)^0,c
  4506   0057C8  5026               	movf	(floorf@m+2)^0,w,c
  4507   0057CA  142C               	andwf	(floorf@u+2)^0,w,c
  4508   0057CC  6E20               	movwf	(??_floorf+2)^0,c
  4509   0057CE  5027               	movf	(floorf@m+3)^0,w,c
  4510   0057D0  142D               	andwf	(floorf@u+3)^0,w,c
  4511   0057D2  6E21               	movwf	(??_floorf+3)^0,c
  4512   0057D4  501E               	movf	??_floorf^0,w,c
  4513   0057D6  101F               	iorwf	(??_floorf+1)^0,w,c
  4514   0057D8  1020               	iorwf	(??_floorf+2)^0,w,c
  4515   0057DA  1021               	iorwf	(??_floorf+3)^0,w,c
  4516   0057DC  A4D8               	btfss	status,2,c
  4517   0057DE  EFF3  F02B         	goto	u3021
  4518   0057E2  EFF5  F02B         	goto	u3020
  4519   0057E6                     u3021:
  4520   0057E6  EFF7  F02B         	goto	l2831
  4521   0057EA                     u3020:
  4522   0057EA  EFAE  F02B         	goto	l2823
  4523   0057EE                     l2831:
  4524   0057EE  C02A  F01E         	movff	floorf@u,??_floorf
  4525   0057F2  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4526   0057F6  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4527   0057FA  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4528   0057FE  0E20               	movlw	32
  4529   005800  EF07  F02C         	goto	u3030
  4530   005804                     u3035:
  4531   005804  90D8               	bcf	status,0,c
  4532   005806  3221               	rrcf	(??_floorf+3)^0,f,c
  4533   005808  3220               	rrcf	(??_floorf+2)^0,f,c
  4534   00580A  321F               	rrcf	(??_floorf+1)^0,f,c
  4535   00580C  321E               	rrcf	??_floorf^0,f,c
  4536   00580E                     u3030:
  4537   00580E  2EE8               	decfsz	wreg,f,c
  4538   005810  EF02  F02C         	goto	u3035
  4539   005814  501E               	movf	??_floorf^0,w,c
  4540   005816  101F               	iorwf	(??_floorf+1)^0,w,c
  4541   005818  1020               	iorwf	(??_floorf+2)^0,w,c
  4542   00581A  1021               	iorwf	(??_floorf+3)^0,w,c
  4543   00581C  B4D8               	btfsc	status,2,c
  4544   00581E  EF13  F02C         	goto	u3041
  4545   005822  EF15  F02C         	goto	u3040
  4546   005826                     u3041:
  4547   005826  EF1D  F02C         	goto	l962
  4548   00582A                     u3040:
  4549   00582A  5024               	movf	floorf@m^0,w,c
  4550   00582C  262A               	addwf	floorf@u^0,f,c
  4551   00582E  5025               	movf	(floorf@m+1)^0,w,c
  4552   005830  222B               	addwfc	(floorf@u+1)^0,f,c
  4553   005832  5026               	movf	(floorf@m+2)^0,w,c
  4554   005834  222C               	addwfc	(floorf@u+2)^0,f,c
  4555   005836  5027               	movf	(floorf@m+3)^0,w,c
  4556   005838  222D               	addwfc	(floorf@u+3)^0,f,c
  4557   00583A                     l962:
  4558   00583A  1C24               	comf	floorf@m^0,w,c
  4559   00583C  6E1E               	movwf	??_floorf^0,c
  4560   00583E  1C25               	comf	(floorf@m+1)^0,w,c
  4561   005840  6E1F               	movwf	(??_floorf+1)^0,c
  4562   005842  1C26               	comf	(floorf@m+2)^0,w,c
  4563   005844  6E20               	movwf	(??_floorf+2)^0,c
  4564   005846  1C27               	comf	(floorf@m+3)^0,w,c
  4565   005848  6E21               	movwf	(??_floorf+3)^0,c
  4566   00584A  501E               	movf	??_floorf^0,w,c
  4567   00584C  162A               	andwf	floorf@u^0,f,c
  4568   00584E  501F               	movf	(??_floorf+1)^0,w,c
  4569   005850  162B               	andwf	(floorf@u+1)^0,f,c
  4570   005852  5020               	movf	(??_floorf+2)^0,w,c
  4571   005854  162C               	andwf	(floorf@u+2)^0,f,c
  4572   005856  5021               	movf	(??_floorf+3)^0,w,c
  4573   005858  162D               	andwf	(floorf@u+3)^0,f,c
  4574   00585A  EF73  F02C         	goto	l2843
  4575   00585E                     l2835:
  4576   00585E  C02A  F01E         	movff	floorf@u,??_floorf
  4577   005862  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4578   005866  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4579   00586A  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4580   00586E  0E20               	movlw	32
  4581   005870  EF3F  F02C         	goto	u3050
  4582   005874                     u3055:
  4583   005874  90D8               	bcf	status,0,c
  4584   005876  3221               	rrcf	(??_floorf+3)^0,f,c
  4585   005878  3220               	rrcf	(??_floorf+2)^0,f,c
  4586   00587A  321F               	rrcf	(??_floorf+1)^0,f,c
  4587   00587C  321E               	rrcf	??_floorf^0,f,c
  4588   00587E                     u3050:
  4589   00587E  2EE8               	decfsz	wreg,f,c
  4590   005880  EF3A  F02C         	goto	u3055
  4591   005884  501E               	movf	??_floorf^0,w,c
  4592   005886  101F               	iorwf	(??_floorf+1)^0,w,c
  4593   005888  1020               	iorwf	(??_floorf+2)^0,w,c
  4594   00588A  1021               	iorwf	(??_floorf+3)^0,w,c
  4595   00588C  A4D8               	btfss	status,2,c
  4596   00588E  EF4B  F02C         	goto	u3061
  4597   005892  EF4D  F02C         	goto	u3060
  4598   005896                     u3061:
  4599   005896  EF57  F02C         	goto	l2839
  4600   00589A                     u3060:
  4601   00589A  0E00               	movlw	0
  4602   00589C  6E2A               	movwf	floorf@u^0,c
  4603   00589E  0E00               	movlw	0
  4604   0058A0  6E2B               	movwf	(floorf@u+1)^0,c
  4605   0058A2  0E00               	movlw	0
  4606   0058A4  6E2C               	movwf	(floorf@u+2)^0,c
  4607   0058A6  0E00               	movlw	0
  4608   0058A8  6E2D               	movwf	(floorf@u+3)^0,c
  4609   0058AA  EF73  F02C         	goto	l2843
  4610   0058AE                     l2839:
  4611   0058AE  90D8               	bcf	status,0,c
  4612   0058B0  342A               	rlcf	floorf@u^0,w,c
  4613   0058B2  6E1E               	movwf	??_floorf^0,c
  4614   0058B4  342B               	rlcf	(floorf@u+1)^0,w,c
  4615   0058B6  6E1F               	movwf	(??_floorf+1)^0,c
  4616   0058B8  342C               	rlcf	(floorf@u+2)^0,w,c
  4617   0058BA  6E20               	movwf	(??_floorf+2)^0,c
  4618   0058BC  342D               	rlcf	(floorf@u+3)^0,w,c
  4619   0058BE  6E21               	movwf	(??_floorf+3)^0,c
  4620   0058C0  501E               	movf	??_floorf^0,w,c
  4621   0058C2  101F               	iorwf	(??_floorf+1)^0,w,c
  4622   0058C4  1020               	iorwf	(??_floorf+2)^0,w,c
  4623   0058C6  1021               	iorwf	(??_floorf+3)^0,w,c
  4624   0058C8  B4D8               	btfsc	status,2,c
  4625   0058CA  EF69  F02C         	goto	u3071
  4626   0058CE  EF6B  F02C         	goto	u3070
  4627   0058D2                     u3071:
  4628   0058D2  EF73  F02C         	goto	l2843
  4629   0058D6                     u3070:
  4630   0058D6  0E00               	movlw	0
  4631   0058D8  6E2A               	movwf	floorf@u^0,c
  4632   0058DA  0E00               	movlw	0
  4633   0058DC  6E2B               	movwf	(floorf@u+1)^0,c
  4634   0058DE  0E80               	movlw	128
  4635   0058E0  6E2C               	movwf	(floorf@u+2)^0,c
  4636   0058E2  0EBF               	movlw	191
  4637   0058E4  6E2D               	movwf	(floorf@u+3)^0,c
  4638   0058E6                     l2843:
  4639   0058E6  C02A  F01A         	movff	floorf@u,?_floorf
  4640   0058EA  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4641   0058EE  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4642   0058F2  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4643   0058F6                     l959:
  4644   0058F6  0012               	return		;funcret
  4645   0058F8                     __end_of_floorf:
  4646                           	callstack 0
  4647                           
  4648 ;; *************** function ___fpclassifyf *****************
  4649 ;; Defined at:
  4650 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  x               4    0[COMRAM] float 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  u               4   10[COMRAM] struct .
  4655 ;;  e               2    8[COMRAM] int 
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  2    0[COMRAM] int 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2, status,0
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4665 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4666 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4667 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4668 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4669 ;;Total ram usage:       14 bytes
  4670 ;; Hardware stack levels used: 1
  4671 ;; Hardware stack levels required when called: 1
  4672 ;; This function calls:
  4673 ;;		Nothing
  4674 ;; This function is called by:
  4675 ;;		_efgtoa
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text15
  4680   00602C                     __ptext15:
  4681                           	callstack 0
  4682   00602C                     ___fpclassifyf:
  4683                           	callstack 25
  4684   00602C  C064  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4685   006030  C065  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4686   006034  C066  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4687   006038  C067  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4688   00603C  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4689   006040  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4690   006044  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4691   006048  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4692   00604C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4693   006050  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4694   006054  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4695   006058  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4696   00605C  0E18               	movlw	24
  4697   00605E  EF36  F030         	goto	u2890
  4698   006062                     u2895:
  4699   006062  90D8               	bcf	status,0,c
  4700   006064  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4701   006066  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4702   006068  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4703   00606A  3205               	rrcf	??___fpclassifyf^0,f,c
  4704   00606C                     u2890:
  4705   00606C  2EE8               	decfsz	wreg,f,c
  4706   00606E  EF31  F030         	goto	u2895
  4707   006072  5005               	movf	??___fpclassifyf^0,w,c
  4708   006074  6E09               	movwf	___fpclassifyf@e^0,c
  4709   006076  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4710   006078  5009               	movf	___fpclassifyf@e^0,w,c
  4711   00607A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4712   00607C  A4D8               	btfss	status,2,c
  4713   00607E  EF43  F030         	goto	u2901
  4714   006082  EF45  F030         	goto	u2900
  4715   006086                     u2901:
  4716   006086  EF65  F030         	goto	l2797
  4717   00608A                     u2900:
  4718   00608A  90D8               	bcf	status,0,c
  4719   00608C  340B               	rlcf	___fpclassifyf@u^0,w,c
  4720   00608E  6E05               	movwf	??___fpclassifyf^0,c
  4721   006090  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4722   006092  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4723   006094  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4724   006096  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4725   006098  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4726   00609A  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4727   00609C  5005               	movf	??___fpclassifyf^0,w,c
  4728   00609E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4729   0060A0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4730   0060A2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4731   0060A4  A4D8               	btfss	status,2,c
  4732   0060A6  EF57  F030         	goto	u2911
  4733   0060AA  EF59  F030         	goto	u2910
  4734   0060AE                     u2911:
  4735   0060AE  EF5F  F030         	goto	l2793
  4736   0060B2                     u2910:
  4737   0060B2  0E00               	movlw	0
  4738   0060B4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4739   0060B6  0E02               	movlw	2
  4740   0060B8  6E01               	movwf	?___fpclassifyf^0,c
  4741   0060BA  EF94  F030         	goto	l952
  4742   0060BE                     l2793:
  4743   0060BE  0E00               	movlw	0
  4744   0060C0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4745   0060C2  0E03               	movlw	3
  4746   0060C4  6E01               	movwf	?___fpclassifyf^0,c
  4747   0060C6  EF94  F030         	goto	l952
  4748   0060CA                     l2797:
  4749   0060CA  2809               	incf	___fpclassifyf@e^0,w,c
  4750   0060CC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4751   0060CE  A4D8               	btfss	status,2,c
  4752   0060D0  EF6C  F030         	goto	u2921
  4753   0060D4  EF6E  F030         	goto	u2920
  4754   0060D8                     u2921:
  4755   0060D8  EF90  F030         	goto	l2803
  4756   0060DC                     u2920:
  4757   0060DC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4758   0060E0  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4759   0060E4  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4760   0060E8  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4761   0060EC  0E09               	movlw	9
  4762   0060EE                     u2935:
  4763   0060EE  90D8               	bcf	status,0,c
  4764   0060F0  3605               	rlcf	??___fpclassifyf^0,f,c
  4765   0060F2  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4766   0060F4  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4767   0060F6  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4768   0060F8  2EE8               	decfsz	wreg,f,c
  4769   0060FA  EF77  F030         	goto	u2935
  4770   0060FE  5005               	movf	??___fpclassifyf^0,w,c
  4771   006100  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4772   006102  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4773   006104  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4774   006106  B4D8               	btfsc	status,2,c
  4775   006108  EF88  F030         	goto	u2941
  4776   00610C  EF8B  F030         	goto	u2940
  4777   006110                     u2941:
  4778   006110  0E01               	movlw	1
  4779   006112  EF8C  F030         	goto	u2950
  4780   006116                     u2940:
  4781   006116  0E00               	movlw	0
  4782   006118                     u2950:
  4783   006118  6E01               	movwf	?___fpclassifyf^0,c
  4784   00611A  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4785   00611C  EF94  F030         	goto	l952
  4786   006120                     l2803:
  4787   006120  0E00               	movlw	0
  4788   006122  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4789   006124  0E04               	movlw	4
  4790   006126  6E01               	movwf	?___fpclassifyf^0,c
  4791   006128                     l952:
  4792   006128  0012               	return		;funcret
  4793   00612A                     __end_of___fpclassifyf:
  4794                           	callstack 0
  4795                           
  4796 ;; *************** function ___fltol *****************
  4797 ;; Defined at:
  4798 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;  f1              4    0[COMRAM] int 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;  exp1            1    9[COMRAM] unsigned char 
  4803 ;;  sign1           1    8[COMRAM] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  4    0[COMRAM] long 
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4814 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4815 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4816 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4817 ;;Total ram usage:       10 bytes
  4818 ;; Hardware stack levels used: 1
  4819 ;; Hardware stack levels required when called: 1
  4820 ;; This function calls:
  4821 ;;		Nothing
  4822 ;; This function is called by:
  4823 ;;		_efgtoa
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text16
  4828   005E22                     __ptext16:
  4829                           	callstack 0
  4830   005E22                     ___fltol:
  4831                           	callstack 25
  4832   005E22  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4833   005E24  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4834   005E26  6E0A               	movwf	___fltol@exp1^0,c
  4835   005E28  500A               	movf	___fltol@exp1^0,w,c
  4836   005E2A  A4D8               	btfss	status,2,c
  4837   005E2C  EF1A  F02F         	goto	u2801
  4838   005E30  EF1C  F02F         	goto	u2800
  4839   005E34                     u2801:
  4840   005E34  EF26  F02F         	goto	l2735
  4841   005E38                     u2800:
  4842   005E38                     l2731:
  4843   005E38  0E00               	movlw	0
  4844   005E3A  6E01               	movwf	?___fltol^0,c
  4845   005E3C  0E00               	movlw	0
  4846   005E3E  6E02               	movwf	(?___fltol+1)^0,c
  4847   005E40  0E00               	movlw	0
  4848   005E42  6E03               	movwf	(?___fltol+2)^0,c
  4849   005E44  0E00               	movlw	0
  4850   005E46  6E04               	movwf	(?___fltol+3)^0,c
  4851   005E48  EF93  F02F         	goto	l443
  4852   005E4C                     l2735:
  4853   005E4C  C001  F005         	movff	___fltol@f1,??___fltol
  4854   005E50  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4855   005E54  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4856   005E58  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4857   005E5C  0E20               	movlw	32
  4858   005E5E  EF36  F02F         	goto	u2810
  4859   005E62                     u2815:
  4860   005E62  90D8               	bcf	status,0,c
  4861   005E64  3208               	rrcf	(??___fltol+3)^0,f,c
  4862   005E66  3207               	rrcf	(??___fltol+2)^0,f,c
  4863   005E68  3206               	rrcf	(??___fltol+1)^0,f,c
  4864   005E6A  3205               	rrcf	??___fltol^0,f,c
  4865   005E6C                     u2810:
  4866   005E6C  2EE8               	decfsz	wreg,f,c
  4867   005E6E  EF31  F02F         	goto	u2815
  4868   005E72  5005               	movf	??___fltol^0,w,c
  4869   005E74  6E09               	movwf	___fltol@sign1^0,c
  4870   005E76  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4871   005E78  0EFF               	movlw	255
  4872   005E7A  1601               	andwf	___fltol@f1^0,f,c
  4873   005E7C  0EFF               	movlw	255
  4874   005E7E  1602               	andwf	(___fltol@f1+1)^0,f,c
  4875   005E80  0EFF               	movlw	255
  4876   005E82  1603               	andwf	(___fltol@f1+2)^0,f,c
  4877   005E84  0E00               	movlw	0
  4878   005E86  1604               	andwf	(___fltol@f1+3)^0,f,c
  4879   005E88  0E96               	movlw	150
  4880   005E8A  5E0A               	subwf	___fltol@exp1^0,f,c
  4881   005E8C  BE0A               	btfsc	___fltol@exp1^0,7,c
  4882   005E8E  EF4D  F02F         	goto	u2820
  4883   005E92  EF4B  F02F         	goto	u2821
  4884   005E96                     u2821:
  4885   005E96  EF63  F02F         	goto	l2755
  4886   005E9A                     u2820:
  4887   005E9A  500A               	movf	___fltol@exp1^0,w,c
  4888   005E9C  0A80               	xorlw	128
  4889   005E9E  0F97               	addlw	151
  4890   005EA0  B0D8               	btfsc	status,0,c
  4891   005EA2  EF55  F02F         	goto	u2831
  4892   005EA6  EF57  F02F         	goto	u2830
  4893   005EAA                     u2831:
  4894   005EAA  EF59  F02F         	goto	l2751
  4895   005EAE                     u2830:
  4896   005EAE  EF1C  F02F         	goto	l2731
  4897   005EB2                     l2751:
  4898   005EB2  90D8               	bcf	status,0,c
  4899   005EB4  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4900   005EB6  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4901   005EB8  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4902   005EBA  3201               	rrcf	___fltol@f1^0,f,c
  4903   005EBC  3E0A               	incfsz	___fltol@exp1^0,f,c
  4904   005EBE  EF59  F02F         	goto	l2751
  4905   005EC2  EF7B  F02F         	goto	l2765
  4906   005EC6                     l2755:
  4907   005EC6  0E1F               	movlw	31
  4908   005EC8  640A               	cpfsgt	___fltol@exp1^0,c
  4909   005ECA  EF69  F02F         	goto	u2841
  4910   005ECE  EF6B  F02F         	goto	u2840
  4911   005ED2                     u2841:
  4912   005ED2  EF73  F02F         	goto	l2763
  4913   005ED6                     u2840:
  4914   005ED6  EF1C  F02F         	goto	l2731
  4915   005EDA                     l2761:
  4916   005EDA  90D8               	bcf	status,0,c
  4917   005EDC  3601               	rlcf	___fltol@f1^0,f,c
  4918   005EDE  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4919   005EE0  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4920   005EE2  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4921   005EE4  060A               	decf	___fltol@exp1^0,f,c
  4922   005EE6                     l2763:
  4923   005EE6  500A               	movf	___fltol@exp1^0,w,c
  4924   005EE8  A4D8               	btfss	status,2,c
  4925   005EEA  EF79  F02F         	goto	u2851
  4926   005EEE  EF7B  F02F         	goto	u2850
  4927   005EF2                     u2851:
  4928   005EF2  EF6D  F02F         	goto	l2761
  4929   005EF6                     u2850:
  4930   005EF6                     l2765:
  4931   005EF6  5009               	movf	___fltol@sign1^0,w,c
  4932   005EF8  B4D8               	btfsc	status,2,c
  4933   005EFA  EF81  F02F         	goto	u2861
  4934   005EFE  EF83  F02F         	goto	u2860
  4935   005F02                     u2861:
  4936   005F02  EF8B  F02F         	goto	l2769
  4937   005F06                     u2860:
  4938   005F06  1E04               	comf	(___fltol@f1+3)^0,f,c
  4939   005F08  1E03               	comf	(___fltol@f1+2)^0,f,c
  4940   005F0A  1E02               	comf	(___fltol@f1+1)^0,f,c
  4941   005F0C  6C01               	negf	___fltol@f1^0,c
  4942   005F0E  0E00               	movlw	0
  4943   005F10  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4944   005F12  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4945   005F14  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4946   005F16                     l2769:
  4947   005F16  C001  F001         	movff	___fltol@f1,?___fltol
  4948   005F1A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4949   005F1E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4950   005F22  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4951   005F26                     l443:
  4952   005F26  0012               	return		;funcret
  4953   005F28                     __end_of___fltol:
  4954                           	callstack 0
  4955                           
  4956 ;; *************** function ___flsub *****************
  4957 ;; Defined at:
  4958 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;  b               4   39[COMRAM] long 
  4961 ;;  a               4   43[COMRAM] long 
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;		None
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  4   39[COMRAM] long 
  4966 ;; Registers used:
  4967 ;;		wreg, status,2, status,0, cstack
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4973 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4976 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4977 ;;Total ram usage:        8 bytes
  4978 ;; Hardware stack levels used: 1
  4979 ;; Hardware stack levels required when called: 2
  4980 ;; This function calls:
  4981 ;;		___fladd
  4982 ;; This function is called by:
  4983 ;;		_efgtoa
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           	psect	text17
  4988   00650E                     __ptext17:
  4989                           	callstack 0
  4990   00650E                     ___flsub:
  4991                           	callstack 24
  4992   00650E  0E00               	movlw	0
  4993   006510  1A2C               	xorwf	___flsub@a^0,f,c
  4994   006512  0E00               	movlw	0
  4995   006514  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4996   006516  0E00               	movlw	0
  4997   006518  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4998   00651A  0E80               	movlw	128
  4999   00651C  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  5000   00651E  C028  F001         	movff	___flsub@b,___fladd@b
  5001   006522  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5002   006526  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5003   00652A  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5004   00652E  C02C  F005         	movff	___flsub@a,___fladd@a
  5005   006532  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5006   006536  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5007   00653A  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5008   00653E  EC2B  F025         	call	___fladd	;wreg free
  5009   006542  C001  F028         	movff	?___fladd,?___flsub
  5010   006546  C002  F029         	movff	?___fladd+1,?___flsub+1
  5011   00654A  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5012   00654E  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5013   006552  0012               	return		;funcret
  5014   006554                     __end_of___flsub:
  5015                           	callstack 0
  5016                           
  5017 ;; *************** function ___fladd *****************
  5018 ;; Defined at:
  5019 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  b               4    0[COMRAM] long 
  5022 ;;  a               4    4[COMRAM] long 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  grs             1   15[COMRAM] unsigned char 
  5025 ;;  bexp            1   14[COMRAM] unsigned char 
  5026 ;;  aexp            1   13[COMRAM] unsigned char 
  5027 ;;  signs           1   12[COMRAM] unsigned char 
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  4    0[COMRAM] unsigned char 
  5030 ;; Registers used:
  5031 ;;		wreg, status,2, status,0
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5037 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5038 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5039 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5040 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5041 ;;Total ram usage:       16 bytes
  5042 ;; Hardware stack levels used: 1
  5043 ;; Hardware stack levels required when called: 1
  5044 ;; This function calls:
  5045 ;;		Nothing
  5046 ;; This function is called by:
  5047 ;;		___flsub
  5048 ;;		_efgtoa
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           	psect	text18
  5053   004A56                     __ptext18:
  5054                           	callstack 0
  5055   004A56                     ___fladd:
  5056                           	callstack 24
  5057   004A56  5004               	movf	(___fladd@b+3)^0,w,c
  5058   004A58  0B80               	andlw	128
  5059   004A5A  6E0D               	movwf	___fladd@signs^0,c
  5060   004A5C  5004               	movf	(___fladd@b+3)^0,w,c
  5061   004A5E  2404               	addwf	(___fladd@b+3)^0,w,c
  5062   004A60  6E0F               	movwf	___fladd@bexp^0,c
  5063   004A62  AE03               	btfss	(___fladd@b+2)^0,7,c
  5064   004A64  EF36  F025         	goto	u1891
  5065   004A68  EF38  F025         	goto	u1890
  5066   004A6C                     u1891:
  5067   004A6C  EF39  F025         	goto	l2217
  5068   004A70                     u1890:
  5069   004A70  800F               	bsf	___fladd@bexp^0,0,c
  5070   004A72                     l2217:
  5071   004A72  500F               	movf	___fladd@bexp^0,w,c
  5072   004A74  B4D8               	btfsc	status,2,c
  5073   004A76  EF3F  F025         	goto	u1901
  5074   004A7A  EF41  F025         	goto	u1900
  5075   004A7E                     u1901:
  5076   004A7E  EF55  F025         	goto	l2227
  5077   004A82                     u1900:
  5078   004A82  280F               	incf	___fladd@bexp^0,w,c
  5079   004A84  A4D8               	btfss	status,2,c
  5080   004A86  EF47  F025         	goto	u1911
  5081   004A8A  EF49  F025         	goto	u1910
  5082   004A8E                     u1911:
  5083   004A8E  EF51  F025         	goto	l2223
  5084   004A92                     u1910:
  5085   004A92  0E00               	movlw	0
  5086   004A94  6E01               	movwf	___fladd@b^0,c
  5087   004A96  0E00               	movlw	0
  5088   004A98  6E02               	movwf	(___fladd@b+1)^0,c
  5089   004A9A  0E00               	movlw	0
  5090   004A9C  6E03               	movwf	(___fladd@b+2)^0,c
  5091   004A9E  0E00               	movlw	0
  5092   004AA0  6E04               	movwf	(___fladd@b+3)^0,c
  5093   004AA2                     l2223:
  5094   004AA2  8E03               	bsf	(___fladd@b+2)^0,7,c
  5095   004AA4  6A04               	clrf	(___fladd@b+3)^0,c
  5096   004AA6  EF5D  F025         	goto	l2229
  5097   004AAA                     l2227:
  5098   004AAA  0E00               	movlw	0
  5099   004AAC  6E01               	movwf	___fladd@b^0,c
  5100   004AAE  0E00               	movlw	0
  5101   004AB0  6E02               	movwf	(___fladd@b+1)^0,c
  5102   004AB2  0E00               	movlw	0
  5103   004AB4  6E03               	movwf	(___fladd@b+2)^0,c
  5104   004AB6  0E00               	movlw	0
  5105   004AB8  6E04               	movwf	(___fladd@b+3)^0,c
  5106   004ABA                     l2229:
  5107   004ABA  5008               	movf	(___fladd@a+3)^0,w,c
  5108   004ABC  0B80               	andlw	128
  5109   004ABE  6E0E               	movwf	___fladd@aexp^0,c
  5110   004AC0  500D               	movf	___fladd@signs^0,w,c
  5111   004AC2  180E               	xorwf	___fladd@aexp^0,w,c
  5112   004AC4  B4D8               	btfsc	status,2,c
  5113   004AC6  EF67  F025         	goto	u1921
  5114   004ACA  EF69  F025         	goto	u1920
  5115   004ACE                     u1921:
  5116   004ACE  EF6A  F025         	goto	l2235
  5117   004AD2                     u1920:
  5118   004AD2  8C0D               	bsf	___fladd@signs^0,6,c
  5119   004AD4                     l2235:
  5120   004AD4  5008               	movf	(___fladd@a+3)^0,w,c
  5121   004AD6  2408               	addwf	(___fladd@a+3)^0,w,c
  5122   004AD8  6E0E               	movwf	___fladd@aexp^0,c
  5123   004ADA  AE07               	btfss	(___fladd@a+2)^0,7,c
  5124   004ADC  EF72  F025         	goto	u1931
  5125   004AE0  EF74  F025         	goto	u1930
  5126   004AE4                     u1931:
  5127   004AE4  EF75  F025         	goto	l2241
  5128   004AE8                     u1930:
  5129   004AE8  800E               	bsf	___fladd@aexp^0,0,c
  5130   004AEA                     l2241:
  5131   004AEA  500E               	movf	___fladd@aexp^0,w,c
  5132   004AEC  B4D8               	btfsc	status,2,c
  5133   004AEE  EF7B  F025         	goto	u1941
  5134   004AF2  EF7D  F025         	goto	u1940
  5135   004AF6                     u1941:
  5136   004AF6  EF91  F025         	goto	l2251
  5137   004AFA                     u1940:
  5138   004AFA  280E               	incf	___fladd@aexp^0,w,c
  5139   004AFC  A4D8               	btfss	status,2,c
  5140   004AFE  EF83  F025         	goto	u1951
  5141   004B02  EF85  F025         	goto	u1950
  5142   004B06                     u1951:
  5143   004B06  EF8D  F025         	goto	l2247
  5144   004B0A                     u1950:
  5145   004B0A  0E00               	movlw	0
  5146   004B0C  6E05               	movwf	___fladd@a^0,c
  5147   004B0E  0E00               	movlw	0
  5148   004B10  6E06               	movwf	(___fladd@a+1)^0,c
  5149   004B12  0E00               	movlw	0
  5150   004B14  6E07               	movwf	(___fladd@a+2)^0,c
  5151   004B16  0E00               	movlw	0
  5152   004B18  6E08               	movwf	(___fladd@a+3)^0,c
  5153   004B1A                     l2247:
  5154   004B1A  8E07               	bsf	(___fladd@a+2)^0,7,c
  5155   004B1C  6A08               	clrf	(___fladd@a+3)^0,c
  5156   004B1E  EF99  F025         	goto	l2253
  5157   004B22                     l2251:
  5158   004B22  0E00               	movlw	0
  5159   004B24  6E05               	movwf	___fladd@a^0,c
  5160   004B26  0E00               	movlw	0
  5161   004B28  6E06               	movwf	(___fladd@a+1)^0,c
  5162   004B2A  0E00               	movlw	0
  5163   004B2C  6E07               	movwf	(___fladd@a+2)^0,c
  5164   004B2E  0E00               	movlw	0
  5165   004B30  6E08               	movwf	(___fladd@a+3)^0,c
  5166   004B32                     l2253:
  5167   004B32  500F               	movf	___fladd@bexp^0,w,c
  5168   004B34  5C0E               	subwf	___fladd@aexp^0,w,c
  5169   004B36  B0D8               	btfsc	status,0,c
  5170   004B38  EFA0  F025         	goto	u1961
  5171   004B3C  EFA2  F025         	goto	u1960
  5172   004B40                     u1961:
  5173   004B40  EFC9  F025         	goto	l2289
  5174   004B44                     u1960:
  5175   004B44  AC0D               	btfss	___fladd@signs^0,6,c
  5176   004B46  EFA7  F025         	goto	u1971
  5177   004B4A  EFA9  F025         	goto	u1970
  5178   004B4E                     u1971:
  5179   004B4E  EFAB  F025         	goto	l2259
  5180   004B52                     u1970:
  5181   004B52  0E80               	movlw	128
  5182   004B54  1A0D               	xorwf	___fladd@signs^0,f,c
  5183   004B56                     l2259:
  5184   004B56  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5185   004B5A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5186   004B5E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5187   004B62  C001  F010         	movff	___fladd@b,___fladd@grs
  5188   004B66  C005  F001         	movff	___fladd@a,___fladd@b
  5189   004B6A  C010  F005         	movff	___fladd@grs,___fladd@a
  5190   004B6E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5191   004B72  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5192   004B76  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5193   004B7A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5194   004B7E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5195   004B82  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5196   004B86  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5197   004B8A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5198   004B8E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5199   004B92                     l2289:
  5200   004B92  6A10               	clrf	___fladd@grs^0,c
  5201   004B94  500F               	movf	___fladd@bexp^0,w,c
  5202   004B96  C00E  F009         	movff	___fladd@aexp,??___fladd
  5203   004B9A  6A0A               	clrf	(??___fladd+1)^0,c
  5204   004B9C  5E09               	subwf	??___fladd^0,f,c
  5205   004B9E  0E00               	movlw	0
  5206   004BA0  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5207   004BA2  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5208   004BA4  EFDD  F025         	goto	u1981
  5209   004BA8  500A               	movf	(??___fladd+1)^0,w,c
  5210   004BAA  E109               	bnz	u1980
  5211   004BAC  0E1A               	movlw	26
  5212   004BAE  5C09               	subwf	??___fladd^0,w,c
  5213   004BB0  A0D8               	btfss	status,0,c
  5214   004BB2  EFDD  F025         	goto	u1981
  5215   004BB6  EFDF  F025         	goto	u1980
  5216   004BBA                     u1981:
  5217   004BBA  EF16  F026         	goto	l675
  5218   004BBE                     u1980:
  5219   004BBE  5001               	movf	___fladd@b^0,w,c
  5220   004BC0  1002               	iorwf	(___fladd@b+1)^0,w,c
  5221   004BC2  1003               	iorwf	(___fladd@b+2)^0,w,c
  5222   004BC4  1004               	iorwf	(___fladd@b+3)^0,w,c
  5223   004BC6  A4D8               	btfss	status,2,c
  5224   004BC8  EFE8  F025         	goto	u1991
  5225   004BCC  EFEB  F025         	goto	u1990
  5226   004BD0                     u1991:
  5227   004BD0  0E01               	movlw	1
  5228   004BD2  EFEC  F025         	goto	u2000
  5229   004BD6                     u1990:
  5230   004BD6  0E00               	movlw	0
  5231   004BD8                     u2000:
  5232   004BD8  6E10               	movwf	___fladd@grs^0,c
  5233   004BDA  0E00               	movlw	0
  5234   004BDC  6E01               	movwf	___fladd@b^0,c
  5235   004BDE  0E00               	movlw	0
  5236   004BE0  6E02               	movwf	(___fladd@b+1)^0,c
  5237   004BE2  0E00               	movlw	0
  5238   004BE4  6E03               	movwf	(___fladd@b+2)^0,c
  5239   004BE6  0E00               	movlw	0
  5240   004BE8  6E04               	movwf	(___fladd@b+3)^0,c
  5241   004BEA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5242   004BEE  EF1F  F026         	goto	l674
  5243   004BF2                     l676:
  5244   004BF2  A010               	btfss	___fladd@grs^0,0,c
  5245   004BF4  EFFE  F025         	goto	u2011
  5246   004BF8  EF00  F026         	goto	u2010
  5247   004BFC                     u2011:
  5248   004BFC  EF06  F026         	goto	l2299
  5249   004C00                     u2010:
  5250   004C00  90D8               	bcf	status,0,c
  5251   004C02  3010               	rrcf	___fladd@grs^0,w,c
  5252   004C04  0901               	iorlw	1
  5253   004C06  6E10               	movwf	___fladd@grs^0,c
  5254   004C08  EF08  F026         	goto	l2301
  5255   004C0C                     l2299:
  5256   004C0C  90D8               	bcf	status,0,c
  5257   004C0E  3210               	rrcf	___fladd@grs^0,f,c
  5258   004C10                     l2301:
  5259   004C10  A001               	btfss	___fladd@b^0,0,c
  5260   004C12  EF0D  F026         	goto	u2021
  5261   004C16  EF0F  F026         	goto	u2020
  5262   004C1A                     u2021:
  5263   004C1A  EF10  F026         	goto	l2305
  5264   004C1E                     u2020:
  5265   004C1E  8E10               	bsf	___fladd@grs^0,7,c
  5266   004C20                     l2305:
  5267   004C20  3404               	rlcf	(___fladd@b+3)^0,w,c
  5268   004C22  3204               	rrcf	(___fladd@b+3)^0,f,c
  5269   004C24  3203               	rrcf	(___fladd@b+2)^0,f,c
  5270   004C26  3202               	rrcf	(___fladd@b+1)^0,f,c
  5271   004C28  3201               	rrcf	___fladd@b^0,f,c
  5272   004C2A  2A0F               	incf	___fladd@bexp^0,f,c
  5273   004C2C                     l675:
  5274   004C2C  500E               	movf	___fladd@aexp^0,w,c
  5275   004C2E  5C0F               	subwf	___fladd@bexp^0,w,c
  5276   004C30  A0D8               	btfss	status,0,c
  5277   004C32  EF1D  F026         	goto	u2031
  5278   004C36  EF1F  F026         	goto	u2030
  5279   004C3A                     u2031:
  5280   004C3A  EFF9  F025         	goto	l676
  5281   004C3E                     u2030:
  5282   004C3E                     l674:
  5283   004C3E  BC0D               	btfsc	___fladd@signs^0,6,c
  5284   004C40  EF24  F026         	goto	u2041
  5285   004C44  EF26  F026         	goto	u2040
  5286   004C48                     u2041:
  5287   004C48  EF66  F026         	goto	l2333
  5288   004C4C                     u2040:
  5289   004C4C  500F               	movf	___fladd@bexp^0,w,c
  5290   004C4E  A4D8               	btfss	status,2,c
  5291   004C50  EF2C  F026         	goto	u2051
  5292   004C54  EF2E  F026         	goto	u2050
  5293   004C58                     u2051:
  5294   004C58  EF38  F026         	goto	l2315
  5295   004C5C                     u2050:
  5296   004C5C  0E00               	movlw	0
  5297   004C5E  6E01               	movwf	?___fladd^0,c
  5298   004C60  0E00               	movlw	0
  5299   004C62  6E02               	movwf	(?___fladd+1)^0,c
  5300   004C64  0E00               	movlw	0
  5301   004C66  6E03               	movwf	(?___fladd+2)^0,c
  5302   004C68  0E00               	movlw	0
  5303   004C6A  6E04               	movwf	(?___fladd+3)^0,c
  5304   004C6C  EF85  F027         	goto	l683
  5305   004C70                     l2315:
  5306   004C70  5005               	movf	___fladd@a^0,w,c
  5307   004C72  2601               	addwf	___fladd@b^0,f,c
  5308   004C74  5006               	movf	(___fladd@a+1)^0,w,c
  5309   004C76  2202               	addwfc	(___fladd@b+1)^0,f,c
  5310   004C78  5007               	movf	(___fladd@a+2)^0,w,c
  5311   004C7A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5312   004C7C  5008               	movf	(___fladd@a+3)^0,w,c
  5313   004C7E  2204               	addwfc	(___fladd@b+3)^0,f,c
  5314   004C80  A004               	btfss	(___fladd@b+3)^0,0,c
  5315   004C82  EF45  F026         	goto	u2061
  5316   004C86  EF47  F026         	goto	u2060
  5317   004C8A                     u2061:
  5318   004C8A  EFF3  F026         	goto	l688
  5319   004C8E                     u2060:
  5320   004C8E  A010               	btfss	___fladd@grs^0,0,c
  5321   004C90  EF4C  F026         	goto	u2071
  5322   004C94  EF4E  F026         	goto	u2070
  5323   004C98                     u2071:
  5324   004C98  EF54  F026         	goto	l2323
  5325   004C9C                     u2070:
  5326   004C9C  90D8               	bcf	status,0,c
  5327   004C9E  3010               	rrcf	___fladd@grs^0,w,c
  5328   004CA0  0901               	iorlw	1
  5329   004CA2  6E10               	movwf	___fladd@grs^0,c
  5330   004CA4  EF56  F026         	goto	l2325
  5331   004CA8                     l2323:
  5332   004CA8  90D8               	bcf	status,0,c
  5333   004CAA  3210               	rrcf	___fladd@grs^0,f,c
  5334   004CAC                     l2325:
  5335   004CAC  A001               	btfss	___fladd@b^0,0,c
  5336   004CAE  EF5B  F026         	goto	u2081
  5337   004CB2  EF5D  F026         	goto	u2080
  5338   004CB6                     u2081:
  5339   004CB6  EF5E  F026         	goto	l2329
  5340   004CBA                     u2080:
  5341   004CBA  8E10               	bsf	___fladd@grs^0,7,c
  5342   004CBC                     l2329:
  5343   004CBC  3404               	rlcf	(___fladd@b+3)^0,w,c
  5344   004CBE  3204               	rrcf	(___fladd@b+3)^0,f,c
  5345   004CC0  3203               	rrcf	(___fladd@b+2)^0,f,c
  5346   004CC2  3202               	rrcf	(___fladd@b+1)^0,f,c
  5347   004CC4  3201               	rrcf	___fladd@b^0,f,c
  5348   004CC6  2A0F               	incf	___fladd@bexp^0,f,c
  5349   004CC8  EFF3  F026         	goto	l688
  5350   004CCC                     l2333:
  5351   004CCC  5005               	movf	___fladd@a^0,w,c
  5352   004CCE  5C01               	subwf	___fladd@b^0,w,c
  5353   004CD0  5006               	movf	(___fladd@a+1)^0,w,c
  5354   004CD2  5802               	subwfb	(___fladd@b+1)^0,w,c
  5355   004CD4  5007               	movf	(___fladd@a+2)^0,w,c
  5356   004CD6  5803               	subwfb	(___fladd@b+2)^0,w,c
  5357   004CD8  5004               	movf	(___fladd@b+3)^0,w,c
  5358   004CDA  0A80               	xorlw	128
  5359   004CDC  6E09               	movwf	??___fladd^0,c
  5360   004CDE  5008               	movf	(___fladd@a+3)^0,w,c
  5361   004CE0  0A80               	xorlw	128
  5362   004CE2  5809               	subwfb	??___fladd^0,w,c
  5363   004CE4  B0D8               	btfsc	status,0,c
  5364   004CE6  EF77  F026         	goto	u2091
  5365   004CEA  EF79  F026         	goto	u2090
  5366   004CEE                     u2091:
  5367   004CEE  EFA4  F026         	goto	l2343
  5368   004CF2                     u2090:
  5369   004CF2  5001               	movf	___fladd@b^0,w,c
  5370   004CF4  5C05               	subwf	___fladd@a^0,w,c
  5371   004CF6  6E09               	movwf	??___fladd^0,c
  5372   004CF8  5002               	movf	(___fladd@b+1)^0,w,c
  5373   004CFA  5806               	subwfb	(___fladd@a+1)^0,w,c
  5374   004CFC  6E0A               	movwf	(??___fladd+1)^0,c
  5375   004CFE  5003               	movf	(___fladd@b+2)^0,w,c
  5376   004D00  5807               	subwfb	(___fladd@a+2)^0,w,c
  5377   004D02  6E0B               	movwf	(??___fladd+2)^0,c
  5378   004D04  5004               	movf	(___fladd@b+3)^0,w,c
  5379   004D06  5808               	subwfb	(___fladd@a+3)^0,w,c
  5380   004D08  6E0C               	movwf	(??___fladd+3)^0,c
  5381   004D0A  0EFF               	movlw	255
  5382   004D0C  2409               	addwf	??___fladd^0,w,c
  5383   004D0E  6E01               	movwf	___fladd@b^0,c
  5384   004D10  0EFF               	movlw	255
  5385   004D12  200A               	addwfc	(??___fladd+1)^0,w,c
  5386   004D14  6E02               	movwf	(___fladd@b+1)^0,c
  5387   004D16  0EFF               	movlw	255
  5388   004D18  200B               	addwfc	(??___fladd+2)^0,w,c
  5389   004D1A  6E03               	movwf	(___fladd@b+2)^0,c
  5390   004D1C  0EFF               	movlw	255
  5391   004D1E  200C               	addwfc	(??___fladd+3)^0,w,c
  5392   004D20  6E04               	movwf	(___fladd@b+3)^0,c
  5393   004D22  0E80               	movlw	128
  5394   004D24  1A0D               	xorwf	___fladd@signs^0,f,c
  5395   004D26  6C10               	negf	___fladd@grs^0,c
  5396   004D28  5010               	movf	___fladd@grs^0,w,c
  5397   004D2A  A4D8               	btfss	status,2,c
  5398   004D2C  EF9A  F026         	goto	u2101
  5399   004D30  EF9C  F026         	goto	u2100
  5400   004D34                     u2101:
  5401   004D34  EFAC  F026         	goto	l691
  5402   004D38                     u2100:
  5403   004D38  0E01               	movlw	1
  5404   004D3A  2601               	addwf	___fladd@b^0,f,c
  5405   004D3C  0E00               	movlw	0
  5406   004D3E  2202               	addwfc	(___fladd@b+1)^0,f,c
  5407   004D40  2203               	addwfc	(___fladd@b+2)^0,f,c
  5408   004D42  2204               	addwfc	(___fladd@b+3)^0,f,c
  5409   004D44  EFAC  F026         	goto	l691
  5410   004D48                     l2343:
  5411   004D48  5005               	movf	___fladd@a^0,w,c
  5412   004D4A  5E01               	subwf	___fladd@b^0,f,c
  5413   004D4C  5006               	movf	(___fladd@a+1)^0,w,c
  5414   004D4E  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5415   004D50  5007               	movf	(___fladd@a+2)^0,w,c
  5416   004D52  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5417   004D54  5008               	movf	(___fladd@a+3)^0,w,c
  5418   004D56  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5419   004D58                     l691:
  5420   004D58  5001               	movf	___fladd@b^0,w,c
  5421   004D5A  1002               	iorwf	(___fladd@b+1)^0,w,c
  5422   004D5C  1003               	iorwf	(___fladd@b+2)^0,w,c
  5423   004D5E  1004               	iorwf	(___fladd@b+3)^0,w,c
  5424   004D60  A4D8               	btfss	status,2,c
  5425   004D62  EFB5  F026         	goto	u2111
  5426   004D66  EFB7  F026         	goto	u2110
  5427   004D6A                     u2111:
  5428   004D6A  EFEC  F026         	goto	l2367
  5429   004D6E                     u2110:
  5430   004D6E  5010               	movf	___fladd@grs^0,w,c
  5431   004D70  A4D8               	btfss	status,2,c
  5432   004D72  EFBD  F026         	goto	u2121
  5433   004D76  EFBF  F026         	goto	u2120
  5434   004D7A                     u2121:
  5435   004D7A  EFEC  F026         	goto	l2367
  5436   004D7E                     u2120:
  5437   004D7E  0E00               	movlw	0
  5438   004D80  6E01               	movwf	?___fladd^0,c
  5439   004D82  0E00               	movlw	0
  5440   004D84  6E02               	movwf	(?___fladd+1)^0,c
  5441   004D86  0E00               	movlw	0
  5442   004D88  6E03               	movwf	(?___fladd+2)^0,c
  5443   004D8A  0E00               	movlw	0
  5444   004D8C  6E04               	movwf	(?___fladd+3)^0,c
  5445   004D8E  EF85  F027         	goto	l683
  5446   004D92                     l2351:
  5447   004D92  90D8               	bcf	status,0,c
  5448   004D94  3601               	rlcf	___fladd@b^0,f,c
  5449   004D96  3602               	rlcf	(___fladd@b+1)^0,f,c
  5450   004D98  3603               	rlcf	(___fladd@b+2)^0,f,c
  5451   004D9A  3604               	rlcf	(___fladd@b+3)^0,f,c
  5452   004D9C  AE10               	btfss	___fladd@grs^0,7,c
  5453   004D9E  EFD3  F026         	goto	u2131
  5454   004DA2  EFD5  F026         	goto	u2130
  5455   004DA6                     u2131:
  5456   004DA6  EFD6  F026         	goto	l2357
  5457   004DAA                     u2130:
  5458   004DAA  8001               	bsf	___fladd@b^0,0,c
  5459   004DAC                     l2357:
  5460   004DAC  A010               	btfss	___fladd@grs^0,0,c
  5461   004DAE  EFDB  F026         	goto	u2141
  5462   004DB2  EFDD  F026         	goto	u2140
  5463   004DB6                     u2141:
  5464   004DB6  EFE1  F026         	goto	l2361
  5465   004DBA                     u2140:
  5466   004DBA  80D8               	bsf	status,0,c
  5467   004DBC  3610               	rlcf	___fladd@grs^0,f,c
  5468   004DBE  EFE3  F026         	goto	l2363
  5469   004DC2                     l2361:
  5470   004DC2  90D8               	bcf	status,0,c
  5471   004DC4  3610               	rlcf	___fladd@grs^0,f,c
  5472   004DC6                     l2363:
  5473   004DC6  500F               	movf	___fladd@bexp^0,w,c
  5474   004DC8  B4D8               	btfsc	status,2,c
  5475   004DCA  EFE9  F026         	goto	u2151
  5476   004DCE  EFEB  F026         	goto	u2150
  5477   004DD2                     u2151:
  5478   004DD2  EFEC  F026         	goto	l2367
  5479   004DD6                     u2150:
  5480   004DD6  060F               	decf	___fladd@bexp^0,f,c
  5481   004DD8                     l2367:
  5482   004DD8  AE03               	btfss	(___fladd@b+2)^0,7,c
  5483   004DDA  EFF1  F026         	goto	u2161
  5484   004DDE  EFF3  F026         	goto	u2160
  5485   004DE2                     u2161:
  5486   004DE2  EFC9  F026         	goto	l2351
  5487   004DE6                     u2160:
  5488   004DE6                     l688:
  5489   004DE6  6A0E               	clrf	___fladd@aexp^0,c
  5490   004DE8  AE10               	btfss	___fladd@grs^0,7,c
  5491   004DEA  EFF9  F026         	goto	u2171
  5492   004DEE  EFFB  F026         	goto	u2170
  5493   004DF2                     u2171:
  5494   004DF2  EF13  F027         	goto	l700
  5495   004DF6                     u2170:
  5496   004DF6  C010  F009         	movff	___fladd@grs,??___fladd
  5497   004DFA  0E7F               	movlw	127
  5498   004DFC  1609               	andwf	??___fladd^0,f,c
  5499   004DFE  B4D8               	btfsc	status,2,c
  5500   004E00  EF04  F027         	goto	u2181
  5501   004E04  EF06  F027         	goto	u2180
  5502   004E08                     u2181:
  5503   004E08  EF0A  F027         	goto	l701
  5504   004E0C                     u2180:
  5505   004E0C                     l2371:
  5506   004E0C  0E01               	movlw	1
  5507   004E0E  6E0E               	movwf	___fladd@aexp^0,c
  5508   004E10  EF13  F027         	goto	l700
  5509   004E14                     l701:
  5510   004E14  A001               	btfss	___fladd@b^0,0,c
  5511   004E16  EF0F  F027         	goto	u2191
  5512   004E1A  EF11  F027         	goto	u2190
  5513   004E1E                     u2191:
  5514   004E1E  EF13  F027         	goto	l700
  5515   004E22                     u2190:
  5516   004E22  EF06  F027         	goto	l2371
  5517   004E26                     l700:
  5518   004E26  500E               	movf	___fladd@aexp^0,w,c
  5519   004E28  B4D8               	btfsc	status,2,c
  5520   004E2A  EF19  F027         	goto	u2201
  5521   004E2E  EF1B  F027         	goto	u2200
  5522   004E32                     u2201:
  5523   004E32  EF46  F027         	goto	l2383
  5524   004E36                     u2200:
  5525   004E36  0E01               	movlw	1
  5526   004E38  2601               	addwf	___fladd@b^0,f,c
  5527   004E3A  0E00               	movlw	0
  5528   004E3C  2202               	addwfc	(___fladd@b+1)^0,f,c
  5529   004E3E  2203               	addwfc	(___fladd@b+2)^0,f,c
  5530   004E40  2204               	addwfc	(___fladd@b+3)^0,f,c
  5531   004E42  A004               	btfss	(___fladd@b+3)^0,0,c
  5532   004E44  EF26  F027         	goto	u2211
  5533   004E48  EF28  F027         	goto	u2210
  5534   004E4C                     u2211:
  5535   004E4C  EF46  F027         	goto	l2383
  5536   004E50                     u2210:
  5537   004E50  C001  F009         	movff	___fladd@b,??___fladd
  5538   004E54  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5539   004E58  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5540   004E5C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5541   004E60  340C               	rlcf	(??___fladd+3)^0,w,c
  5542   004E62  320C               	rrcf	(??___fladd+3)^0,f,c
  5543   004E64  320B               	rrcf	(??___fladd+2)^0,f,c
  5544   004E66  320A               	rrcf	(??___fladd+1)^0,f,c
  5545   004E68  3209               	rrcf	??___fladd^0,f,c
  5546   004E6A  C009  F001         	movff	??___fladd,___fladd@b
  5547   004E6E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5548   004E72  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5549   004E76  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5550   004E7A  280F               	incf	___fladd@bexp^0,w,c
  5551   004E7C  B4D8               	btfsc	status,2,c
  5552   004E7E  EF43  F027         	goto	u2221
  5553   004E82  EF45  F027         	goto	u2220
  5554   004E86                     u2221:
  5555   004E86  EF46  F027         	goto	l2383
  5556   004E8A                     u2220:
  5557   004E8A  2A0F               	incf	___fladd@bexp^0,f,c
  5558   004E8C                     l2383:
  5559   004E8C  280F               	incf	___fladd@bexp^0,w,c
  5560   004E8E  B4D8               	btfsc	status,2,c
  5561   004E90  EF4C  F027         	goto	u2231
  5562   004E94  EF4E  F027         	goto	u2230
  5563   004E98                     u2231:
  5564   004E98  EF56  F027         	goto	l2387
  5565   004E9C                     u2230:
  5566   004E9C  500F               	movf	___fladd@bexp^0,w,c
  5567   004E9E  A4D8               	btfss	status,2,c
  5568   004EA0  EF54  F027         	goto	u2241
  5569   004EA4  EF56  F027         	goto	u2240
  5570   004EA8                     u2241:
  5571   004EA8  EF67  F027         	goto	l707
  5572   004EAC                     u2240:
  5573   004EAC                     l2387:
  5574   004EAC  0E00               	movlw	0
  5575   004EAE  6E01               	movwf	___fladd@b^0,c
  5576   004EB0  0E00               	movlw	0
  5577   004EB2  6E02               	movwf	(___fladd@b+1)^0,c
  5578   004EB4  0E00               	movlw	0
  5579   004EB6  6E03               	movwf	(___fladd@b+2)^0,c
  5580   004EB8  0E00               	movlw	0
  5581   004EBA  6E04               	movwf	(___fladd@b+3)^0,c
  5582   004EBC  500F               	movf	___fladd@bexp^0,w,c
  5583   004EBE  A4D8               	btfss	status,2,c
  5584   004EC0  EF64  F027         	goto	u2251
  5585   004EC4  EF66  F027         	goto	u2250
  5586   004EC8                     u2251:
  5587   004EC8  EF67  F027         	goto	l707
  5588   004ECC                     u2250:
  5589   004ECC  6A0D               	clrf	___fladd@signs^0,c
  5590   004ECE                     l707:
  5591   004ECE  A00F               	btfss	___fladd@bexp^0,0,c
  5592   004ED0  EF6C  F027         	goto	u2261
  5593   004ED4  EF6E  F027         	goto	u2260
  5594   004ED8                     u2261:
  5595   004ED8  EF71  F027         	goto	l2393
  5596   004EDC                     u2260:
  5597   004EDC  8E03               	bsf	(___fladd@b+2)^0,7,c
  5598   004EDE  EF72  F027         	goto	l2395
  5599   004EE2                     l2393:
  5600   004EE2  9E03               	bcf	(___fladd@b+2)^0,7,c
  5601   004EE4                     l2395:
  5602   004EE4  90D8               	bcf	status,0,c
  5603   004EE6  300F               	rrcf	___fladd@bexp^0,w,c
  5604   004EE8  6E04               	movwf	(___fladd@b+3)^0,c
  5605   004EEA  AE0D               	btfss	___fladd@signs^0,7,c
  5606   004EEC  EF7A  F027         	goto	u2271
  5607   004EF0  EF7C  F027         	goto	u2270
  5608   004EF4                     u2271:
  5609   004EF4  EF7D  F027         	goto	l2401
  5610   004EF8                     u2270:
  5611   004EF8  8E04               	bsf	(___fladd@b+3)^0,7,c
  5612   004EFA                     l2401:
  5613   004EFA  C001  F001         	movff	___fladd@b,?___fladd
  5614   004EFE  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5615   004F02  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5616   004F06  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5617   004F0A                     l683:
  5618   004F0A  0012               	return		;funcret
  5619   004F0C                     __end_of___fladd:
  5620                           	callstack 0
  5621                           
  5622 ;; *************** function ___flneg *****************
  5623 ;; Defined at:
  5624 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;  f1              4    0[COMRAM] unsigned char 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;		None
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  4    0[COMRAM] unsigned char 
  5631 ;; Registers used:
  5632 ;;		wreg, status,2, status,0
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5638 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5641 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5642 ;;Total ram usage:        4 bytes
  5643 ;; Hardware stack levels used: 1
  5644 ;; Hardware stack levels required when called: 1
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_efgtoa
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text19
  5653   006690                     __ptext19:
  5654                           	callstack 0
  5655   006690                     ___flneg:
  5656                           	callstack 25
  5657   006690  5001               	movf	___flneg@f1^0,w,c
  5658   006692  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5659   006694  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5660   006696  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5661   006698  B4D8               	btfsc	status,2,c
  5662   00669A  EF51  F033         	goto	u2791
  5663   00669E  EF53  F033         	goto	u2790
  5664   0066A2                     u2791:
  5665   0066A2  EF5B  F033         	goto	l2725
  5666   0066A6                     u2790:
  5667   0066A6  0E00               	movlw	0
  5668   0066A8  1A01               	xorwf	___flneg@f1^0,f,c
  5669   0066AA  0E00               	movlw	0
  5670   0066AC  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5671   0066AE  0E00               	movlw	0
  5672   0066B0  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5673   0066B2  0E80               	movlw	128
  5674   0066B4  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5675   0066B6                     l2725:
  5676   0066B6  C001  F001         	movff	___flneg@f1,?___flneg
  5677   0066BA  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5678   0066BE  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5679   0066C2  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5680   0066C6  0012               	return		;funcret
  5681   0066C8                     __end_of___flneg:
  5682                           	callstack 0
  5683                           
  5684 ;; *************** function ___flmul *****************
  5685 ;; Defined at:
  5686 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  b               4   14[COMRAM] unsigned char 
  5689 ;;  a               4   18[COMRAM] unsigned char 
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;  prod            4   33[COMRAM] struct .
  5692 ;;  grs             4   27[COMRAM] unsigned long 
  5693 ;;  temp            2   37[COMRAM] struct .
  5694 ;;  bexp            1   32[COMRAM] unsigned char 
  5695 ;;  aexp            1   31[COMRAM] unsigned char 
  5696 ;;  sign            1   26[COMRAM] unsigned char 
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  4   14[COMRAM] unsigned char 
  5699 ;; Registers used:
  5700 ;;		wreg, status,2, status,0, prodl, prodh
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5706 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5707 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5708 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5709 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5710 ;;Total ram usage:       25 bytes
  5711 ;; Hardware stack levels used: 1
  5712 ;; Hardware stack levels required when called: 1
  5713 ;; This function calls:
  5714 ;;		Nothing
  5715 ;; This function is called by:
  5716 ;;		_main
  5717 ;;		_efgtoa
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text20
  5722   004F0C                     __ptext20:
  5723                           	callstack 0
  5724   004F0C                     ___flmul:
  5725                           	callstack 25
  5726   004F0C  5012               	movf	(___flmul@b+3)^0,w,c
  5727   004F0E  0B80               	andlw	128
  5728   004F10  6E1B               	movwf	___flmul@sign^0,c
  5729   004F12  5012               	movf	(___flmul@b+3)^0,w,c
  5730   004F14  2412               	addwf	(___flmul@b+3)^0,w,c
  5731   004F16  6E21               	movwf	___flmul@bexp^0,c
  5732   004F18  AE11               	btfss	(___flmul@b+2)^0,7,c
  5733   004F1A  EF91  F027         	goto	u2521
  5734   004F1E  EF93  F027         	goto	u2520
  5735   004F22                     u2521:
  5736   004F22  EF94  F027         	goto	l2555
  5737   004F26                     u2520:
  5738   004F26  8021               	bsf	___flmul@bexp^0,0,c
  5739   004F28                     l2555:
  5740   004F28  5021               	movf	___flmul@bexp^0,w,c
  5741   004F2A  B4D8               	btfsc	status,2,c
  5742   004F2C  EF9A  F027         	goto	u2531
  5743   004F30  EF9C  F027         	goto	u2530
  5744   004F34                     u2531:
  5745   004F34  EFAF  F027         	goto	l2563
  5746   004F38                     u2530:
  5747   004F38  2821               	incf	___flmul@bexp^0,w,c
  5748   004F3A  A4D8               	btfss	status,2,c
  5749   004F3C  EFA2  F027         	goto	u2541
  5750   004F40  EFA4  F027         	goto	u2540
  5751   004F44                     u2541:
  5752   004F44  EFAC  F027         	goto	l2561
  5753   004F48                     u2540:
  5754   004F48  0E00               	movlw	0
  5755   004F4A  6E0F               	movwf	___flmul@b^0,c
  5756   004F4C  0E00               	movlw	0
  5757   004F4E  6E10               	movwf	(___flmul@b+1)^0,c
  5758   004F50  0E00               	movlw	0
  5759   004F52  6E11               	movwf	(___flmul@b+2)^0,c
  5760   004F54  0E00               	movlw	0
  5761   004F56  6E12               	movwf	(___flmul@b+3)^0,c
  5762   004F58                     l2561:
  5763   004F58  8E11               	bsf	(___flmul@b+2)^0,7,c
  5764   004F5A  EFB7  F027         	goto	l2565
  5765   004F5E                     l2563:
  5766   004F5E  0E00               	movlw	0
  5767   004F60  6E0F               	movwf	___flmul@b^0,c
  5768   004F62  0E00               	movlw	0
  5769   004F64  6E10               	movwf	(___flmul@b+1)^0,c
  5770   004F66  0E00               	movlw	0
  5771   004F68  6E11               	movwf	(___flmul@b+2)^0,c
  5772   004F6A  0E00               	movlw	0
  5773   004F6C  6E12               	movwf	(___flmul@b+3)^0,c
  5774   004F6E                     l2565:
  5775   004F6E  5016               	movf	(___flmul@a+3)^0,w,c
  5776   004F70  0B80               	andlw	128
  5777   004F72  1A1B               	xorwf	___flmul@sign^0,f,c
  5778   004F74  5016               	movf	(___flmul@a+3)^0,w,c
  5779   004F76  2416               	addwf	(___flmul@a+3)^0,w,c
  5780   004F78  6E20               	movwf	___flmul@aexp^0,c
  5781   004F7A  AE15               	btfss	(___flmul@a+2)^0,7,c
  5782   004F7C  EFC2  F027         	goto	u2551
  5783   004F80  EFC4  F027         	goto	u2550
  5784   004F84                     u2551:
  5785   004F84  EFC5  F027         	goto	l2573
  5786   004F88                     u2550:
  5787   004F88  8020               	bsf	___flmul@aexp^0,0,c
  5788   004F8A                     l2573:
  5789   004F8A  5020               	movf	___flmul@aexp^0,w,c
  5790   004F8C  B4D8               	btfsc	status,2,c
  5791   004F8E  EFCB  F027         	goto	u2561
  5792   004F92  EFCD  F027         	goto	u2560
  5793   004F96                     u2561:
  5794   004F96  EFE0  F027         	goto	l2581
  5795   004F9A                     u2560:
  5796   004F9A  2820               	incf	___flmul@aexp^0,w,c
  5797   004F9C  A4D8               	btfss	status,2,c
  5798   004F9E  EFD3  F027         	goto	u2571
  5799   004FA2  EFD5  F027         	goto	u2570
  5800   004FA6                     u2571:
  5801   004FA6  EFDD  F027         	goto	l2579
  5802   004FAA                     u2570:
  5803   004FAA  0E00               	movlw	0
  5804   004FAC  6E13               	movwf	___flmul@a^0,c
  5805   004FAE  0E00               	movlw	0
  5806   004FB0  6E14               	movwf	(___flmul@a+1)^0,c
  5807   004FB2  0E00               	movlw	0
  5808   004FB4  6E15               	movwf	(___flmul@a+2)^0,c
  5809   004FB6  0E00               	movlw	0
  5810   004FB8  6E16               	movwf	(___flmul@a+3)^0,c
  5811   004FBA                     l2579:
  5812   004FBA  8E15               	bsf	(___flmul@a+2)^0,7,c
  5813   004FBC  EFE8  F027         	goto	l760
  5814   004FC0                     l2581:
  5815   004FC0  0E00               	movlw	0
  5816   004FC2  6E13               	movwf	___flmul@a^0,c
  5817   004FC4  0E00               	movlw	0
  5818   004FC6  6E14               	movwf	(___flmul@a+1)^0,c
  5819   004FC8  0E00               	movlw	0
  5820   004FCA  6E15               	movwf	(___flmul@a+2)^0,c
  5821   004FCC  0E00               	movlw	0
  5822   004FCE  6E16               	movwf	(___flmul@a+3)^0,c
  5823   004FD0                     l760:
  5824   004FD0  5020               	movf	___flmul@aexp^0,w,c
  5825   004FD2  B4D8               	btfsc	status,2,c
  5826   004FD4  EFEE  F027         	goto	u2581
  5827   004FD8  EFF0  F027         	goto	u2580
  5828   004FDC                     u2581:
  5829   004FDC  EFF8  F027         	goto	l2585
  5830   004FE0                     u2580:
  5831   004FE0  5021               	movf	___flmul@bexp^0,w,c
  5832   004FE2  A4D8               	btfss	status,2,c
  5833   004FE4  EFF6  F027         	goto	u2591
  5834   004FE8  EFF8  F027         	goto	u2590
  5835   004FEC                     u2591:
  5836   004FEC  EF02  F028         	goto	l2589
  5837   004FF0                     u2590:
  5838   004FF0                     l2585:
  5839   004FF0  0E00               	movlw	0
  5840   004FF2  6E0F               	movwf	?___flmul^0,c
  5841   004FF4  0E00               	movlw	0
  5842   004FF6  6E10               	movwf	(?___flmul+1)^0,c
  5843   004FF8  0E00               	movlw	0
  5844   004FFA  6E11               	movwf	(?___flmul+2)^0,c
  5845   004FFC  0E00               	movlw	0
  5846   004FFE  6E12               	movwf	(?___flmul+3)^0,c
  5847   005000  EFAA  F029         	goto	l764
  5848   005004                     l2589:
  5849   005004  5015               	movf	(___flmul@a+2)^0,w,c
  5850   005006  020F               	mulwf	___flmul@b^0,c
  5851   005008  006F FFCC  F026    	movff	prodl,___flmul@temp
  5852   00500E  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5853   005014  5026               	movf	___flmul@temp^0,w,c
  5854   005016  6E1C               	movwf	___flmul@grs^0,c
  5855   005018  6A1D               	clrf	(___flmul@grs+1)^0,c
  5856   00501A  6A1E               	clrf	(___flmul@grs+2)^0,c
  5857   00501C  6A1F               	clrf	(___flmul@grs+3)^0,c
  5858   00501E  5027               	movf	(___flmul@temp+1)^0,w,c
  5859   005020  6E22               	movwf	___flmul@prod^0,c
  5860   005022  6A23               	clrf	(___flmul@prod+1)^0,c
  5861   005024  6A24               	clrf	(___flmul@prod+2)^0,c
  5862   005026  6A25               	clrf	(___flmul@prod+3)^0,c
  5863   005028  5014               	movf	(___flmul@a+1)^0,w,c
  5864   00502A  0210               	mulwf	(___flmul@b+1)^0,c
  5865   00502C  006F FFCC  F026    	movff	prodl,___flmul@temp
  5866   005032  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5867   005038  5026               	movf	___flmul@temp^0,w,c
  5868   00503A  261C               	addwf	___flmul@grs^0,f,c
  5869   00503C  0E00               	movlw	0
  5870   00503E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5871   005040  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5872   005042  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5873   005044  5027               	movf	(___flmul@temp+1)^0,w,c
  5874   005046  2622               	addwf	___flmul@prod^0,f,c
  5875   005048  0E00               	movlw	0
  5876   00504A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5877   00504C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5878   00504E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5879   005050  5013               	movf	___flmul@a^0,w,c
  5880   005052  0211               	mulwf	(___flmul@b+2)^0,c
  5881   005054  006F FFCC  F026    	movff	prodl,___flmul@temp
  5882   00505A  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5883   005060  5026               	movf	___flmul@temp^0,w,c
  5884   005062  261C               	addwf	___flmul@grs^0,f,c
  5885   005064  0E00               	movlw	0
  5886   005066  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5887   005068  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5888   00506A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5889   00506C  5027               	movf	(___flmul@temp+1)^0,w,c
  5890   00506E  2622               	addwf	___flmul@prod^0,f,c
  5891   005070  0E00               	movlw	0
  5892   005072  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5893   005074  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5894   005076  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5895   005078  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5896   00507C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5897   005080  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5898   005084  6A1C               	clrf	___flmul@grs^0,c
  5899   005086  5013               	movf	___flmul@a^0,w,c
  5900   005088  0210               	mulwf	(___flmul@b+1)^0,c
  5901   00508A  006F FFCC  F026    	movff	prodl,___flmul@temp
  5902   005090  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5903   005096  5026               	movf	___flmul@temp^0,w,c
  5904   005098  261C               	addwf	___flmul@grs^0,f,c
  5905   00509A  5027               	movf	(___flmul@temp+1)^0,w,c
  5906   00509C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5907   00509E  0E00               	movlw	0
  5908   0050A0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5909   0050A2  0E00               	movlw	0
  5910   0050A4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5911   0050A6  5014               	movf	(___flmul@a+1)^0,w,c
  5912   0050A8  020F               	mulwf	___flmul@b^0,c
  5913   0050AA  006F FFCC  F026    	movff	prodl,___flmul@temp
  5914   0050B0  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5915   0050B6  5026               	movf	___flmul@temp^0,w,c
  5916   0050B8  261C               	addwf	___flmul@grs^0,f,c
  5917   0050BA  5027               	movf	(___flmul@temp+1)^0,w,c
  5918   0050BC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5919   0050BE  0E00               	movlw	0
  5920   0050C0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5921   0050C2  0E00               	movlw	0
  5922   0050C4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5923   0050C6  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5924   0050CA  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5925   0050CE  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5926   0050D2  6A1C               	clrf	___flmul@grs^0,c
  5927   0050D4  5013               	movf	___flmul@a^0,w,c
  5928   0050D6  020F               	mulwf	___flmul@b^0,c
  5929   0050D8  006F FFCC  F026    	movff	prodl,___flmul@temp
  5930   0050DE  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5931   0050E4  5026               	movf	___flmul@temp^0,w,c
  5932   0050E6  261C               	addwf	___flmul@grs^0,f,c
  5933   0050E8  5027               	movf	(___flmul@temp+1)^0,w,c
  5934   0050EA  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5935   0050EC  0E00               	movlw	0
  5936   0050EE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5937   0050F0  0E00               	movlw	0
  5938   0050F2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5939   0050F4  5015               	movf	(___flmul@a+2)^0,w,c
  5940   0050F6  0210               	mulwf	(___flmul@b+1)^0,c
  5941   0050F8  006F FFCC  F026    	movff	prodl,___flmul@temp
  5942   0050FE  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5943   005104  5026               	movf	___flmul@temp^0,w,c
  5944   005106  2622               	addwf	___flmul@prod^0,f,c
  5945   005108  5027               	movf	(___flmul@temp+1)^0,w,c
  5946   00510A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5947   00510C  0E00               	movlw	0
  5948   00510E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5949   005110  0E00               	movlw	0
  5950   005112  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5951   005114  5014               	movf	(___flmul@a+1)^0,w,c
  5952   005116  0211               	mulwf	(___flmul@b+2)^0,c
  5953   005118  006F FFCC  F026    	movff	prodl,___flmul@temp
  5954   00511E  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5955   005124  5026               	movf	___flmul@temp^0,w,c
  5956   005126  2622               	addwf	___flmul@prod^0,f,c
  5957   005128  5027               	movf	(___flmul@temp+1)^0,w,c
  5958   00512A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5959   00512C  0E00               	movlw	0
  5960   00512E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5961   005130  0E00               	movlw	0
  5962   005132  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5963   005134  5015               	movf	(___flmul@a+2)^0,w,c
  5964   005136  0211               	mulwf	(___flmul@b+2)^0,c
  5965   005138  006F FFCC  F026    	movff	prodl,___flmul@temp
  5966   00513E  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5967   005144  5026               	movf	___flmul@temp^0,w,c
  5968   005146  6E17               	movwf	??___flmul^0,c
  5969   005148  5027               	movf	(___flmul@temp+1)^0,w,c
  5970   00514A  6E18               	movwf	(??___flmul+1)^0,c
  5971   00514C  6A19               	clrf	(??___flmul+2)^0,c
  5972   00514E  6A1A               	clrf	(??___flmul+3)^0,c
  5973   005150  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5974   005154  C018  F019         	movff	??___flmul+1,??___flmul+2
  5975   005158  C017  F018         	movff	??___flmul,??___flmul+1
  5976   00515C  6A17               	clrf	??___flmul^0,c
  5977   00515E  5017               	movf	??___flmul^0,w,c
  5978   005160  2622               	addwf	___flmul@prod^0,f,c
  5979   005162  5018               	movf	(??___flmul+1)^0,w,c
  5980   005164  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5981   005166  5019               	movf	(??___flmul+2)^0,w,c
  5982   005168  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5983   00516A  501A               	movf	(??___flmul+3)^0,w,c
  5984   00516C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5985   00516E  C01C  F017         	movff	___flmul@grs,??___flmul
  5986   005172  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5987   005176  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5988   00517A  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5989   00517E  0E19               	movlw	25
  5990   005180  EFC7  F028         	goto	u2600
  5991   005184                     u2605:
  5992   005184  90D8               	bcf	status,0,c
  5993   005186  321A               	rrcf	(??___flmul+3)^0,f,c
  5994   005188  3219               	rrcf	(??___flmul+2)^0,f,c
  5995   00518A  3218               	rrcf	(??___flmul+1)^0,f,c
  5996   00518C  3217               	rrcf	??___flmul^0,f,c
  5997   00518E                     u2600:
  5998   00518E  2EE8               	decfsz	wreg,f,c
  5999   005190  EFC2  F028         	goto	u2605
  6000   005194  5017               	movf	??___flmul^0,w,c
  6001   005196  2622               	addwf	___flmul@prod^0,f,c
  6002   005198  5018               	movf	(??___flmul+1)^0,w,c
  6003   00519A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6004   00519C  5019               	movf	(??___flmul+2)^0,w,c
  6005   00519E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6006   0051A0  501A               	movf	(??___flmul+3)^0,w,c
  6007   0051A2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6008   0051A4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6009   0051A8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6010   0051AC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6011   0051B0  6A1C               	clrf	___flmul@grs^0,c
  6012   0051B2  5020               	movf	___flmul@aexp^0,w,c
  6013   0051B4  C021  F017         	movff	___flmul@bexp,??___flmul
  6014   0051B8  6A18               	clrf	(??___flmul+1)^0,c
  6015   0051BA  2617               	addwf	??___flmul^0,f,c
  6016   0051BC  0E00               	movlw	0
  6017   0051BE  2218               	addwfc	(??___flmul+1)^0,f,c
  6018   0051C0  0E82               	movlw	130
  6019   0051C2  2417               	addwf	??___flmul^0,w,c
  6020   0051C4  6E26               	movwf	___flmul@temp^0,c
  6021   0051C6  0EFF               	movlw	255
  6022   0051C8  2018               	addwfc	(??___flmul+1)^0,w,c
  6023   0051CA  6E27               	movwf	(___flmul@temp+1)^0,c
  6024   0051CC  EFFD  F028         	goto	l2637
  6025   0051D0                     l2631:
  6026   0051D0  90D8               	bcf	status,0,c
  6027   0051D2  3622               	rlcf	___flmul@prod^0,f,c
  6028   0051D4  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6029   0051D6  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6030   0051D8  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6031   0051DA  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6032   0051DC  EFF2  F028         	goto	u2611
  6033   0051E0  EFF4  F028         	goto	u2610
  6034   0051E4                     u2611:
  6035   0051E4  EFF5  F028         	goto	l767
  6036   0051E8                     u2610:
  6037   0051E8  8022               	bsf	___flmul@prod^0,0,c
  6038   0051EA                     l767:
  6039   0051EA  90D8               	bcf	status,0,c
  6040   0051EC  361C               	rlcf	___flmul@grs^0,f,c
  6041   0051EE  361D               	rlcf	(___flmul@grs+1)^0,f,c
  6042   0051F0  361E               	rlcf	(___flmul@grs+2)^0,f,c
  6043   0051F2  361F               	rlcf	(___flmul@grs+3)^0,f,c
  6044   0051F4  0626               	decf	___flmul@temp^0,f,c
  6045   0051F6  A0D8               	btfss	status,0,c
  6046   0051F8  0627               	decf	(___flmul@temp+1)^0,f,c
  6047   0051FA                     l2637:
  6048   0051FA  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6049   0051FC  EF02  F029         	goto	u2621
  6050   005200  EF04  F029         	goto	u2620
  6051   005204                     u2621:
  6052   005204  EFE8  F028         	goto	l2631
  6053   005208                     u2620:
  6054   005208  6A20               	clrf	___flmul@aexp^0,c
  6055   00520A  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6056   00520C  EF0A  F029         	goto	u2631
  6057   005210  EF0C  F029         	goto	u2630
  6058   005214                     u2631:
  6059   005214  EF30  F029         	goto	l769
  6060   005218                     u2630:
  6061   005218  0EFF               	movlw	255
  6062   00521A  141C               	andwf	___flmul@grs^0,w,c
  6063   00521C  6E17               	movwf	??___flmul^0,c
  6064   00521E  0EFF               	movlw	255
  6065   005220  141D               	andwf	(___flmul@grs+1)^0,w,c
  6066   005222  6E18               	movwf	(??___flmul+1)^0,c
  6067   005224  0EFF               	movlw	255
  6068   005226  141E               	andwf	(___flmul@grs+2)^0,w,c
  6069   005228  6E19               	movwf	(??___flmul+2)^0,c
  6070   00522A  0E7F               	movlw	127
  6071   00522C  141F               	andwf	(___flmul@grs+3)^0,w,c
  6072   00522E  6E1A               	movwf	(??___flmul+3)^0,c
  6073   005230  5017               	movf	??___flmul^0,w,c
  6074   005232  1018               	iorwf	(??___flmul+1)^0,w,c
  6075   005234  1019               	iorwf	(??___flmul+2)^0,w,c
  6076   005236  101A               	iorwf	(??___flmul+3)^0,w,c
  6077   005238  B4D8               	btfsc	status,2,c
  6078   00523A  EF21  F029         	goto	u2641
  6079   00523E  EF23  F029         	goto	u2640
  6080   005242                     u2641:
  6081   005242  EF27  F029         	goto	l770
  6082   005246                     u2640:
  6083   005246                     l2641:
  6084   005246  0E01               	movlw	1
  6085   005248  6E20               	movwf	___flmul@aexp^0,c
  6086   00524A  EF30  F029         	goto	l769
  6087   00524E                     l770:
  6088   00524E  A022               	btfss	___flmul@prod^0,0,c
  6089   005250  EF2C  F029         	goto	u2651
  6090   005254  EF2E  F029         	goto	u2650
  6091   005258                     u2651:
  6092   005258  EF30  F029         	goto	l769
  6093   00525C                     u2650:
  6094   00525C  EF23  F029         	goto	l2641
  6095   005260                     l769:
  6096   005260  5020               	movf	___flmul@aexp^0,w,c
  6097   005262  B4D8               	btfsc	status,2,c
  6098   005264  EF36  F029         	goto	u2661
  6099   005268  EF38  F029         	goto	u2660
  6100   00526C                     u2661:
  6101   00526C  EF5C  F029         	goto	l2653
  6102   005270                     u2660:
  6103   005270  0E01               	movlw	1
  6104   005272  2622               	addwf	___flmul@prod^0,f,c
  6105   005274  0E00               	movlw	0
  6106   005276  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6107   005278  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6108   00527A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6109   00527C  A025               	btfss	(___flmul@prod+3)^0,0,c
  6110   00527E  EF43  F029         	goto	u2671
  6111   005282  EF45  F029         	goto	u2670
  6112   005286                     u2671:
  6113   005286  EF5C  F029         	goto	l2653
  6114   00528A                     u2670:
  6115   00528A  C022  F017         	movff	___flmul@prod,??___flmul
  6116   00528E  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6117   005292  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6118   005296  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6119   00529A  341A               	rlcf	(??___flmul+3)^0,w,c
  6120   00529C  321A               	rrcf	(??___flmul+3)^0,f,c
  6121   00529E  3219               	rrcf	(??___flmul+2)^0,f,c
  6122   0052A0  3218               	rrcf	(??___flmul+1)^0,f,c
  6123   0052A2  3217               	rrcf	??___flmul^0,f,c
  6124   0052A4  C017  F022         	movff	??___flmul,___flmul@prod
  6125   0052A8  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6126   0052AC  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6127   0052B0  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6128   0052B4  4A26               	infsnz	___flmul@temp^0,f,c
  6129   0052B6  2A27               	incf	(___flmul@temp+1)^0,f,c
  6130   0052B8                     l2653:
  6131   0052B8  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6132   0052BA  EF67  F029         	goto	u2681
  6133   0052BE  5027               	movf	(___flmul@temp+1)^0,w,c
  6134   0052C0  E108               	bnz	u2680
  6135   0052C2  2826               	incf	___flmul@temp^0,w,c
  6136   0052C4  A0D8               	btfss	status,0,c
  6137   0052C6  EF67  F029         	goto	u2681
  6138   0052CA  EF69  F029         	goto	u2680
  6139   0052CE                     u2681:
  6140   0052CE  EF73  F029         	goto	l2657
  6141   0052D2                     u2680:
  6142   0052D2  0E00               	movlw	0
  6143   0052D4  6E22               	movwf	___flmul@prod^0,c
  6144   0052D6  0E00               	movlw	0
  6145   0052D8  6E23               	movwf	(___flmul@prod+1)^0,c
  6146   0052DA  0E80               	movlw	128
  6147   0052DC  6E24               	movwf	(___flmul@prod+2)^0,c
  6148   0052DE  0E7F               	movlw	127
  6149   0052E0  6E25               	movwf	(___flmul@prod+3)^0,c
  6150   0052E2  EFA0  F029         	goto	l2671
  6151   0052E6                     l2657:
  6152   0052E6  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6153   0052E8  EF80  F029         	goto	u2690
  6154   0052EC  5027               	movf	(___flmul@temp+1)^0,w,c
  6155   0052EE  E106               	bnz	u2691
  6156   0052F0  0426               	decf	___flmul@temp^0,w,c
  6157   0052F2  B0D8               	btfsc	status,0,c
  6158   0052F4  EF7E  F029         	goto	u2691
  6159   0052F8  EF80  F029         	goto	u2690
  6160   0052FC                     u2691:
  6161   0052FC  EF8B  F029         	goto	l777
  6162   005300                     u2690:
  6163   005300  0E00               	movlw	0
  6164   005302  6E22               	movwf	___flmul@prod^0,c
  6165   005304  0E00               	movlw	0
  6166   005306  6E23               	movwf	(___flmul@prod+1)^0,c
  6167   005308  0E00               	movlw	0
  6168   00530A  6E24               	movwf	(___flmul@prod+2)^0,c
  6169   00530C  0E00               	movlw	0
  6170   00530E  6E25               	movwf	(___flmul@prod+3)^0,c
  6171   005310  6A1B               	clrf	___flmul@sign^0,c
  6172   005312  EFA0  F029         	goto	l2671
  6173   005316                     l777:
  6174   005316  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6175   00531A  0EFF               	movlw	255
  6176   00531C  1622               	andwf	___flmul@prod^0,f,c
  6177   00531E  0EFF               	movlw	255
  6178   005320  1623               	andwf	(___flmul@prod+1)^0,f,c
  6179   005322  0E7F               	movlw	127
  6180   005324  1624               	andwf	(___flmul@prod+2)^0,f,c
  6181   005326  0E00               	movlw	0
  6182   005328  1625               	andwf	(___flmul@prod+3)^0,f,c
  6183   00532A  A021               	btfss	___flmul@bexp^0,0,c
  6184   00532C  EF9A  F029         	goto	u2701
  6185   005330  EF9C  F029         	goto	u2700
  6186   005334                     u2701:
  6187   005334  EF9D  F029         	goto	l2669
  6188   005338                     u2700:
  6189   005338  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6190   00533A                     l2669:
  6191   00533A  90D8               	bcf	status,0,c
  6192   00533C  3021               	rrcf	___flmul@bexp^0,w,c
  6193   00533E  6E25               	movwf	(___flmul@prod+3)^0,c
  6194   005340                     l2671:
  6195   005340  501B               	movf	___flmul@sign^0,w,c
  6196   005342  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6197   005344  C022  F00F         	movff	___flmul@prod,?___flmul
  6198   005348  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6199   00534C  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6200   005350  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6201   005354                     l764:
  6202   005354  0012               	return		;funcret
  6203   005356                     __end_of___flmul:
  6204                           	callstack 0
  6205                           
  6206 ;; *************** function ___flge *****************
  6207 ;; Defined at:
  6208 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  6209 ;; Parameters:    Size  Location     Type
  6210 ;;  ff1             4   39[COMRAM] unsigned char 
  6211 ;;  ff2             4   43[COMRAM] unsigned char 
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;		None
  6214 ;; Return value:  Size  Location     Type
  6215 ;;		None               void
  6216 ;; Registers used:
  6217 ;;		wreg, status,2, status,0
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6223 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6225 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6226 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6227 ;;Total ram usage:       12 bytes
  6228 ;; Hardware stack levels used: 1
  6229 ;; Hardware stack levels required when called: 1
  6230 ;; This function calls:
  6231 ;;		Nothing
  6232 ;; This function is called by:
  6233 ;;		_efgtoa
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           	psect	text21
  6238   005F28                     __ptext21:
  6239                           	callstack 0
  6240   005F28                     ___flge:
  6241                           	callstack 25
  6242   005F28  0E00               	movlw	0
  6243   005F2A  1428               	andwf	___flge@ff1^0,w,c
  6244   005F2C  6E30               	movwf	??___flge^0,c
  6245   005F2E  0E00               	movlw	0
  6246   005F30  1429               	andwf	(___flge@ff1+1)^0,w,c
  6247   005F32  6E31               	movwf	(??___flge+1)^0,c
  6248   005F34  0E80               	movlw	128
  6249   005F36  142A               	andwf	(___flge@ff1+2)^0,w,c
  6250   005F38  6E32               	movwf	(??___flge+2)^0,c
  6251   005F3A  0E7F               	movlw	127
  6252   005F3C  142B               	andwf	(___flge@ff1+3)^0,w,c
  6253   005F3E  6E33               	movwf	(??___flge+3)^0,c
  6254   005F40  5030               	movf	??___flge^0,w,c
  6255   005F42  1031               	iorwf	(??___flge+1)^0,w,c
  6256   005F44  1032               	iorwf	(??___flge+2)^0,w,c
  6257   005F46  1033               	iorwf	(??___flge+3)^0,w,c
  6258   005F48  A4D8               	btfss	status,2,c
  6259   005F4A  EFA9  F02F         	goto	u2741
  6260   005F4E  EFAB  F02F         	goto	u2740
  6261   005F52                     u2741:
  6262   005F52  EFB3  F02F         	goto	l2703
  6263   005F56                     u2740:
  6264   005F56  0E00               	movlw	0
  6265   005F58  6E28               	movwf	___flge@ff1^0,c
  6266   005F5A  0E00               	movlw	0
  6267   005F5C  6E29               	movwf	(___flge@ff1+1)^0,c
  6268   005F5E  0E00               	movlw	0
  6269   005F60  6E2A               	movwf	(___flge@ff1+2)^0,c
  6270   005F62  0E00               	movlw	0
  6271   005F64  6E2B               	movwf	(___flge@ff1+3)^0,c
  6272   005F66                     l2703:
  6273   005F66  0E00               	movlw	0
  6274   005F68  142C               	andwf	___flge@ff2^0,w,c
  6275   005F6A  6E30               	movwf	??___flge^0,c
  6276   005F6C  0E00               	movlw	0
  6277   005F6E  142D               	andwf	(___flge@ff2+1)^0,w,c
  6278   005F70  6E31               	movwf	(??___flge+1)^0,c
  6279   005F72  0E80               	movlw	128
  6280   005F74  142E               	andwf	(___flge@ff2+2)^0,w,c
  6281   005F76  6E32               	movwf	(??___flge+2)^0,c
  6282   005F78  0E7F               	movlw	127
  6283   005F7A  142F               	andwf	(___flge@ff2+3)^0,w,c
  6284   005F7C  6E33               	movwf	(??___flge+3)^0,c
  6285   005F7E  5030               	movf	??___flge^0,w,c
  6286   005F80  1031               	iorwf	(??___flge+1)^0,w,c
  6287   005F82  1032               	iorwf	(??___flge+2)^0,w,c
  6288   005F84  1033               	iorwf	(??___flge+3)^0,w,c
  6289   005F86  A4D8               	btfss	status,2,c
  6290   005F88  EFC8  F02F         	goto	u2751
  6291   005F8C  EFCA  F02F         	goto	u2750
  6292   005F90                     u2751:
  6293   005F90  EFD2  F02F         	goto	l2707
  6294   005F94                     u2750:
  6295   005F94  0E00               	movlw	0
  6296   005F96  6E2C               	movwf	___flge@ff2^0,c
  6297   005F98  0E00               	movlw	0
  6298   005F9A  6E2D               	movwf	(___flge@ff2+1)^0,c
  6299   005F9C  0E00               	movlw	0
  6300   005F9E  6E2E               	movwf	(___flge@ff2+2)^0,c
  6301   005FA0  0E00               	movlw	0
  6302   005FA2  6E2F               	movwf	(___flge@ff2+3)^0,c
  6303   005FA4                     l2707:
  6304   005FA4  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6305   005FA6  EFD7  F02F         	goto	u2761
  6306   005FAA  EFD9  F02F         	goto	u2760
  6307   005FAE                     u2761:
  6308   005FAE  EFE2  F02F         	goto	l2711
  6309   005FB2                     u2760:
  6310   005FB2  6C28               	negf	___flge@ff1^0,c
  6311   005FB4  1E29               	comf	(___flge@ff1+1)^0,f,c
  6312   005FB6  B0D8               	btfsc	status,0,c
  6313   005FB8  2A29               	incf	(___flge@ff1+1)^0,f,c
  6314   005FBA  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6315   005FBC  B0D8               	btfsc	status,0,c
  6316   005FBE  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6317   005FC0  0E80               	movlw	128
  6318   005FC2  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6319   005FC4                     l2711:
  6320   005FC4  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6321   005FC6  EFE7  F02F         	goto	u2771
  6322   005FCA  EFE9  F02F         	goto	u2770
  6323   005FCE                     u2771:
  6324   005FCE  EFF2  F02F         	goto	l411
  6325   005FD2                     u2770:
  6326   005FD2  6C2C               	negf	___flge@ff2^0,c
  6327   005FD4  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6328   005FD6  B0D8               	btfsc	status,0,c
  6329   005FD8  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6330   005FDA  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6331   005FDC  B0D8               	btfsc	status,0,c
  6332   005FDE  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6333   005FE0  0E80               	movlw	128
  6334   005FE2  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6335   005FE4                     l411:
  6336   005FE4  0E00               	movlw	0
  6337   005FE6  1A28               	xorwf	___flge@ff1^0,f,c
  6338   005FE8  0E00               	movlw	0
  6339   005FEA  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6340   005FEC  0E00               	movlw	0
  6341   005FEE  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6342   005FF0  0E80               	movlw	128
  6343   005FF2  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6344   005FF4  0E00               	movlw	0
  6345   005FF6  1A2C               	xorwf	___flge@ff2^0,f,c
  6346   005FF8  0E00               	movlw	0
  6347   005FFA  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6348   005FFC  0E00               	movlw	0
  6349   005FFE  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6350   006000  0E80               	movlw	128
  6351   006002  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6352   006004  502C               	movf	___flge@ff2^0,w,c
  6353   006006  5C28               	subwf	___flge@ff1^0,w,c
  6354   006008  502D               	movf	(___flge@ff2+1)^0,w,c
  6355   00600A  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6356   00600C  502E               	movf	(___flge@ff2+2)^0,w,c
  6357   00600E  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6358   006010  502F               	movf	(___flge@ff2+3)^0,w,c
  6359   006012  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6360   006014  B0D8               	btfsc	status,0,c
  6361   006016  EF0F  F030         	goto	u2781
  6362   00601A  EF11  F030         	goto	u2780
  6363   00601E                     u2781:
  6364   00601E  EF14  F030         	goto	l2717
  6365   006022                     u2780:
  6366   006022  90D8               	bcf	status,0,c
  6367   006024  EF15  F030         	goto	l416
  6368   006028                     l2717:
  6369   006028  80D8               	bsf	status,0,c
  6370   00602A                     l416:
  6371   00602A  0012               	return		;funcret
  6372   00602C                     __end_of___flge:
  6373                           	callstack 0
  6374                           
  6375 ;; *************** function ___fleq *****************
  6376 ;; Defined at:
  6377 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  ff1             4    0[COMRAM] unsigned char 
  6380 ;;  ff2             4    4[COMRAM] unsigned char 
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;		None
  6383 ;; Return value:  Size  Location     Type
  6384 ;;		None               void
  6385 ;; Registers used:
  6386 ;;		wreg, status,2, status,0
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6392 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6394 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6395 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6396 ;;Total ram usage:       12 bytes
  6397 ;; Hardware stack levels used: 1
  6398 ;; Hardware stack levels required when called: 1
  6399 ;; This function calls:
  6400 ;;		Nothing
  6401 ;; This function is called by:
  6402 ;;		_efgtoa
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           	psect	text22
  6407   00628E                     __ptext22:
  6408                           	callstack 0
  6409   00628E                     ___fleq:
  6410                           	callstack 25
  6411   00628E  0E00               	movlw	0
  6412   006290  1401               	andwf	___fleq@ff1^0,w,c
  6413   006292  6E09               	movwf	??___fleq^0,c
  6414   006294  0E00               	movlw	0
  6415   006296  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6416   006298  6E0A               	movwf	(??___fleq+1)^0,c
  6417   00629A  0E80               	movlw	128
  6418   00629C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6419   00629E  6E0B               	movwf	(??___fleq+2)^0,c
  6420   0062A0  0E7F               	movlw	127
  6421   0062A2  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6422   0062A4  6E0C               	movwf	(??___fleq+3)^0,c
  6423   0062A6  5009               	movf	??___fleq^0,w,c
  6424   0062A8  100A               	iorwf	(??___fleq+1)^0,w,c
  6425   0062AA  100B               	iorwf	(??___fleq+2)^0,w,c
  6426   0062AC  100C               	iorwf	(??___fleq+3)^0,w,c
  6427   0062AE  A4D8               	btfss	status,2,c
  6428   0062B0  EF5C  F031         	goto	u2711
  6429   0062B4  EF5E  F031         	goto	u2710
  6430   0062B8                     u2711:
  6431   0062B8  EF66  F031         	goto	l2687
  6432   0062BC                     u2710:
  6433   0062BC  0E00               	movlw	0
  6434   0062BE  6E01               	movwf	___fleq@ff1^0,c
  6435   0062C0  0E00               	movlw	0
  6436   0062C2  6E02               	movwf	(___fleq@ff1+1)^0,c
  6437   0062C4  0E00               	movlw	0
  6438   0062C6  6E03               	movwf	(___fleq@ff1+2)^0,c
  6439   0062C8  0E00               	movlw	0
  6440   0062CA  6E04               	movwf	(___fleq@ff1+3)^0,c
  6441   0062CC                     l2687:
  6442   0062CC  0E00               	movlw	0
  6443   0062CE  1405               	andwf	___fleq@ff2^0,w,c
  6444   0062D0  6E09               	movwf	??___fleq^0,c
  6445   0062D2  0E00               	movlw	0
  6446   0062D4  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6447   0062D6  6E0A               	movwf	(??___fleq+1)^0,c
  6448   0062D8  0E80               	movlw	128
  6449   0062DA  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6450   0062DC  6E0B               	movwf	(??___fleq+2)^0,c
  6451   0062DE  0E7F               	movlw	127
  6452   0062E0  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6453   0062E2  6E0C               	movwf	(??___fleq+3)^0,c
  6454   0062E4  5009               	movf	??___fleq^0,w,c
  6455   0062E6  100A               	iorwf	(??___fleq+1)^0,w,c
  6456   0062E8  100B               	iorwf	(??___fleq+2)^0,w,c
  6457   0062EA  100C               	iorwf	(??___fleq+3)^0,w,c
  6458   0062EC  A4D8               	btfss	status,2,c
  6459   0062EE  EF7B  F031         	goto	u2721
  6460   0062F2  EF7D  F031         	goto	u2720
  6461   0062F6                     u2721:
  6462   0062F6  EF85  F031         	goto	l2691
  6463   0062FA                     u2720:
  6464   0062FA  0E00               	movlw	0
  6465   0062FC  6E05               	movwf	___fleq@ff2^0,c
  6466   0062FE  0E00               	movlw	0
  6467   006300  6E06               	movwf	(___fleq@ff2+1)^0,c
  6468   006302  0E00               	movlw	0
  6469   006304  6E07               	movwf	(___fleq@ff2+2)^0,c
  6470   006306  0E00               	movlw	0
  6471   006308  6E08               	movwf	(___fleq@ff2+3)^0,c
  6472   00630A                     l2691:
  6473   00630A  5005               	movf	___fleq@ff2^0,w,c
  6474   00630C  1801               	xorwf	___fleq@ff1^0,w,c
  6475   00630E  E10F               	bnz	u2730
  6476   006310  5006               	movf	(___fleq@ff2+1)^0,w,c
  6477   006312  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6478   006314  E10C               	bnz	u2730
  6479   006316  5007               	movf	(___fleq@ff2+2)^0,w,c
  6480   006318  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6481   00631A  E109               	bnz	u2730
  6482   00631C  5008               	movf	(___fleq@ff2+3)^0,w,c
  6483   00631E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6484   006320  B4D8               	btfsc	status,2,c
  6485   006322  EF95  F031         	goto	u2731
  6486   006326  EF97  F031         	goto	u2730
  6487   00632A                     u2731:
  6488   00632A  EF9A  F031         	goto	l2695
  6489   00632E                     u2730:
  6490   00632E  90D8               	bcf	status,0,c
  6491   006330  EF9B  F031         	goto	l405
  6492   006334                     l2695:
  6493   006334  80D8               	bsf	status,0,c
  6494   006336                     l405:
  6495   006336  0012               	return		;funcret
  6496   006338                     __end_of___fleq:
  6497                           	callstack 0
  6498                           
  6499 ;; *************** function ___fldiv *****************
  6500 ;; Defined at:
  6501 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;  b               4    0[COMRAM] unsigned char 
  6504 ;;  a               4    4[COMRAM] unsigned char 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  grs             4   19[COMRAM] unsigned long 
  6507 ;;  rem             4   12[COMRAM] unsigned long 
  6508 ;;  new_exp         2   17[COMRAM] short 
  6509 ;;  aexp            1   24[COMRAM] unsigned char 
  6510 ;;  bexp            1   23[COMRAM] unsigned char 
  6511 ;;  sign            1   16[COMRAM] unsigned char 
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  4    0[COMRAM] unsigned char 
  6514 ;; Registers used:
  6515 ;;		wreg, status,2, status,0
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6521 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6522 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6523 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6524 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6525 ;;Total ram usage:       25 bytes
  6526 ;; Hardware stack levels used: 1
  6527 ;; Hardware stack levels required when called: 1
  6528 ;; This function calls:
  6529 ;;		Nothing
  6530 ;; This function is called by:
  6531 ;;		_efgtoa
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           	psect	text23
  6536   005356                     __ptext23:
  6537                           	callstack 0
  6538   005356                     ___fldiv:
  6539                           	callstack 25
  6540   005356  5004               	movf	(___fldiv@b+3)^0,w,c
  6541   005358  0B80               	andlw	128
  6542   00535A  6E11               	movwf	___fldiv@sign^0,c
  6543   00535C  5004               	movf	(___fldiv@b+3)^0,w,c
  6544   00535E  2404               	addwf	(___fldiv@b+3)^0,w,c
  6545   005360  6E18               	movwf	___fldiv@bexp^0,c
  6546   005362  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6547   005364  EFB6  F029         	goto	u2291
  6548   005368  EFB8  F029         	goto	u2290
  6549   00536C                     u2291:
  6550   00536C  EFB9  F029         	goto	l2419
  6551   005370                     u2290:
  6552   005370  8018               	bsf	___fldiv@bexp^0,0,c
  6553   005372                     l2419:
  6554   005372  5018               	movf	___fldiv@bexp^0,w,c
  6555   005374  B4D8               	btfsc	status,2,c
  6556   005376  EFBF  F029         	goto	u2301
  6557   00537A  EFC1  F029         	goto	u2300
  6558   00537E                     u2301:
  6559   00537E  EFD5  F029         	goto	l2429
  6560   005382                     u2300:
  6561   005382  2818               	incf	___fldiv@bexp^0,w,c
  6562   005384  A4D8               	btfss	status,2,c
  6563   005386  EFC7  F029         	goto	u2311
  6564   00538A  EFC9  F029         	goto	u2310
  6565   00538E                     u2311:
  6566   00538E  EFD1  F029         	goto	l2425
  6567   005392                     u2310:
  6568   005392  0E00               	movlw	0
  6569   005394  6E01               	movwf	___fldiv@b^0,c
  6570   005396  0E00               	movlw	0
  6571   005398  6E02               	movwf	(___fldiv@b+1)^0,c
  6572   00539A  0E00               	movlw	0
  6573   00539C  6E03               	movwf	(___fldiv@b+2)^0,c
  6574   00539E  0E00               	movlw	0
  6575   0053A0  6E04               	movwf	(___fldiv@b+3)^0,c
  6576   0053A2                     l2425:
  6577   0053A2  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6578   0053A4  6A04               	clrf	(___fldiv@b+3)^0,c
  6579   0053A6  EFDD  F029         	goto	l2431
  6580   0053AA                     l2429:
  6581   0053AA  0E00               	movlw	0
  6582   0053AC  6E01               	movwf	___fldiv@b^0,c
  6583   0053AE  0E00               	movlw	0
  6584   0053B0  6E02               	movwf	(___fldiv@b+1)^0,c
  6585   0053B2  0E00               	movlw	0
  6586   0053B4  6E03               	movwf	(___fldiv@b+2)^0,c
  6587   0053B6  0E00               	movlw	0
  6588   0053B8  6E04               	movwf	(___fldiv@b+3)^0,c
  6589   0053BA                     l2431:
  6590   0053BA  5008               	movf	(___fldiv@a+3)^0,w,c
  6591   0053BC  0B80               	andlw	128
  6592   0053BE  1A11               	xorwf	___fldiv@sign^0,f,c
  6593   0053C0  5008               	movf	(___fldiv@a+3)^0,w,c
  6594   0053C2  2408               	addwf	(___fldiv@a+3)^0,w,c
  6595   0053C4  6E19               	movwf	___fldiv@aexp^0,c
  6596   0053C6  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6597   0053C8  EFE8  F029         	goto	u2321
  6598   0053CC  EFEA  F029         	goto	u2320
  6599   0053D0                     u2321:
  6600   0053D0  EFEB  F029         	goto	l2439
  6601   0053D4                     u2320:
  6602   0053D4  8019               	bsf	___fldiv@aexp^0,0,c
  6603   0053D6                     l2439:
  6604   0053D6  5019               	movf	___fldiv@aexp^0,w,c
  6605   0053D8  B4D8               	btfsc	status,2,c
  6606   0053DA  EFF1  F029         	goto	u2331
  6607   0053DE  EFF3  F029         	goto	u2330
  6608   0053E2                     u2331:
  6609   0053E2  EF07  F02A         	goto	l2449
  6610   0053E6                     u2330:
  6611   0053E6  2819               	incf	___fldiv@aexp^0,w,c
  6612   0053E8  A4D8               	btfss	status,2,c
  6613   0053EA  EFF9  F029         	goto	u2341
  6614   0053EE  EFFB  F029         	goto	u2340
  6615   0053F2                     u2341:
  6616   0053F2  EF03  F02A         	goto	l2445
  6617   0053F6                     u2340:
  6618   0053F6  0E00               	movlw	0
  6619   0053F8  6E05               	movwf	___fldiv@a^0,c
  6620   0053FA  0E00               	movlw	0
  6621   0053FC  6E06               	movwf	(___fldiv@a+1)^0,c
  6622   0053FE  0E00               	movlw	0
  6623   005400  6E07               	movwf	(___fldiv@a+2)^0,c
  6624   005402  0E00               	movlw	0
  6625   005404  6E08               	movwf	(___fldiv@a+3)^0,c
  6626   005406                     l2445:
  6627   005406  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6628   005408  6A08               	clrf	(___fldiv@a+3)^0,c
  6629   00540A  EF0F  F02A         	goto	l2451
  6630   00540E                     l2449:
  6631   00540E  0E00               	movlw	0
  6632   005410  6E05               	movwf	___fldiv@a^0,c
  6633   005412  0E00               	movlw	0
  6634   005414  6E06               	movwf	(___fldiv@a+1)^0,c
  6635   005416  0E00               	movlw	0
  6636   005418  6E07               	movwf	(___fldiv@a+2)^0,c
  6637   00541A  0E00               	movlw	0
  6638   00541C  6E08               	movwf	(___fldiv@a+3)^0,c
  6639   00541E                     l2451:
  6640   00541E  5005               	movf	___fldiv@a^0,w,c
  6641   005420  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6642   005422  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6643   005424  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6644   005426  A4D8               	btfss	status,2,c
  6645   005428  EF18  F02A         	goto	u2351
  6646   00542C  EF1A  F02A         	goto	u2350
  6647   005430                     u2351:
  6648   005430  EF32  F02A         	goto	l2463
  6649   005434                     u2350:
  6650   005434  0E00               	movlw	0
  6651   005436  6E01               	movwf	___fldiv@b^0,c
  6652   005438  0E00               	movlw	0
  6653   00543A  6E02               	movwf	(___fldiv@b+1)^0,c
  6654   00543C  0E00               	movlw	0
  6655   00543E  6E03               	movwf	(___fldiv@b+2)^0,c
  6656   005440  0E00               	movlw	0
  6657   005442  6E04               	movwf	(___fldiv@b+3)^0,c
  6658   005444  0E80               	movlw	128
  6659   005446  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6660   005448  0E7F               	movlw	127
  6661   00544A  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6662   00544C                     l2457:
  6663   00544C  5011               	movf	___fldiv@sign^0,w,c
  6664   00544E  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6665   005450  C001  F001         	movff	___fldiv@b,?___fldiv
  6666   005454  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6667   005458  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6668   00545C  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6669   005460  EF72  F02B         	goto	l728
  6670   005464                     l2463:
  6671   005464  5018               	movf	___fldiv@bexp^0,w,c
  6672   005466  A4D8               	btfss	status,2,c
  6673   005468  EF38  F02A         	goto	u2361
  6674   00546C  EF3A  F02A         	goto	u2360
  6675   005470                     u2361:
  6676   005470  EF44  F02A         	goto	l2471
  6677   005474                     u2360:
  6678   005474  0E00               	movlw	0
  6679   005476  6E01               	movwf	?___fldiv^0,c
  6680   005478  0E00               	movlw	0
  6681   00547A  6E02               	movwf	(?___fldiv+1)^0,c
  6682   00547C  0E00               	movlw	0
  6683   00547E  6E03               	movwf	(?___fldiv+2)^0,c
  6684   005480  0E00               	movlw	0
  6685   005482  6E04               	movwf	(?___fldiv+3)^0,c
  6686   005484  EF72  F02B         	goto	l728
  6687   005488                     l2471:
  6688   005488  5019               	movf	___fldiv@aexp^0,w,c
  6689   00548A  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6690   00548E  6A0A               	clrf	(??___fldiv+1)^0,c
  6691   005490  5E09               	subwf	??___fldiv^0,f,c
  6692   005492  0E00               	movlw	0
  6693   005494  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6694   005496  0E7F               	movlw	127
  6695   005498  2409               	addwf	??___fldiv^0,w,c
  6696   00549A  6E12               	movwf	___fldiv@new_exp^0,c
  6697   00549C  0E00               	movlw	0
  6698   00549E  200A               	addwfc	(??___fldiv+1)^0,w,c
  6699   0054A0  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6700   0054A2  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6701   0054A6  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6702   0054AA  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6703   0054AE  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6704   0054B2  0E00               	movlw	0
  6705   0054B4  6E01               	movwf	___fldiv@b^0,c
  6706   0054B6  0E00               	movlw	0
  6707   0054B8  6E02               	movwf	(___fldiv@b+1)^0,c
  6708   0054BA  0E00               	movlw	0
  6709   0054BC  6E03               	movwf	(___fldiv@b+2)^0,c
  6710   0054BE  0E00               	movlw	0
  6711   0054C0  6E04               	movwf	(___fldiv@b+3)^0,c
  6712   0054C2  0E00               	movlw	0
  6713   0054C4  6E14               	movwf	___fldiv@grs^0,c
  6714   0054C6  0E00               	movlw	0
  6715   0054C8  6E15               	movwf	(___fldiv@grs+1)^0,c
  6716   0054CA  0E00               	movlw	0
  6717   0054CC  6E16               	movwf	(___fldiv@grs+2)^0,c
  6718   0054CE  0E00               	movlw	0
  6719   0054D0  6E17               	movwf	(___fldiv@grs+3)^0,c
  6720   0054D2  6A19               	clrf	___fldiv@aexp^0,c
  6721   0054D4  EFA4  F02A         	goto	l730
  6722   0054D8                     l2481:
  6723   0054D8  5019               	movf	___fldiv@aexp^0,w,c
  6724   0054DA  B4D8               	btfsc	status,2,c
  6725   0054DC  EF72  F02A         	goto	u2371
  6726   0054E0  EF74  F02A         	goto	u2370
  6727   0054E4                     u2371:
  6728   0054E4  EF8B  F02A         	goto	l2489
  6729   0054E8                     u2370:
  6730   0054E8  90D8               	bcf	status,0,c
  6731   0054EA  360D               	rlcf	___fldiv@rem^0,f,c
  6732   0054EC  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6733   0054EE  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6734   0054F0  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6735   0054F2  90D8               	bcf	status,0,c
  6736   0054F4  3601               	rlcf	___fldiv@b^0,f,c
  6737   0054F6  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6738   0054F8  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6739   0054FA  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6740   0054FC  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6741   0054FE  EF83  F02A         	goto	u2381
  6742   005502  EF85  F02A         	goto	u2380
  6743   005506                     u2381:
  6744   005506  EF86  F02A         	goto	l733
  6745   00550A                     u2380:
  6746   00550A  8001               	bsf	___fldiv@b^0,0,c
  6747   00550C                     l733:
  6748   00550C  90D8               	bcf	status,0,c
  6749   00550E  3614               	rlcf	___fldiv@grs^0,f,c
  6750   005510  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6751   005512  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6752   005514  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6753   005516                     l2489:
  6754   005516  5005               	movf	___fldiv@a^0,w,c
  6755   005518  5C0D               	subwf	___fldiv@rem^0,w,c
  6756   00551A  5006               	movf	(___fldiv@a+1)^0,w,c
  6757   00551C  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6758   00551E  5007               	movf	(___fldiv@a+2)^0,w,c
  6759   005520  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6760   005522  5008               	movf	(___fldiv@a+3)^0,w,c
  6761   005524  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6762   005526  A0D8               	btfss	status,0,c
  6763   005528  EF98  F02A         	goto	u2391
  6764   00552C  EF9A  F02A         	goto	u2390
  6765   005530                     u2391:
  6766   005530  EFA3  F02A         	goto	l2495
  6767   005534                     u2390:
  6768   005534  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6769   005536  5005               	movf	___fldiv@a^0,w,c
  6770   005538  5E0D               	subwf	___fldiv@rem^0,f,c
  6771   00553A  5006               	movf	(___fldiv@a+1)^0,w,c
  6772   00553C  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6773   00553E  5007               	movf	(___fldiv@a+2)^0,w,c
  6774   005540  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6775   005542  5008               	movf	(___fldiv@a+3)^0,w,c
  6776   005544  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6777   005546                     l2495:
  6778   005546  2A19               	incf	___fldiv@aexp^0,f,c
  6779   005548                     l730:
  6780   005548  0E19               	movlw	25
  6781   00554A  6419               	cpfsgt	___fldiv@aexp^0,c
  6782   00554C  EFAA  F02A         	goto	u2401
  6783   005550  EFAC  F02A         	goto	u2400
  6784   005554                     u2401:
  6785   005554  EF6C  F02A         	goto	l2481
  6786   005558                     u2400:
  6787   005558  500D               	movf	___fldiv@rem^0,w,c
  6788   00555A  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6789   00555C  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6790   00555E  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6791   005560  B4D8               	btfsc	status,2,c
  6792   005562  EFB5  F02A         	goto	u2411
  6793   005566  EFB7  F02A         	goto	u2410
  6794   00556A                     u2411:
  6795   00556A  EFCF  F02A         	goto	l2507
  6796   00556E                     u2410:
  6797   00556E  8014               	bsf	___fldiv@grs^0,0,c
  6798   005570  EFCF  F02A         	goto	l2507
  6799   005574                     l2501:
  6800   005574  90D8               	bcf	status,0,c
  6801   005576  3601               	rlcf	___fldiv@b^0,f,c
  6802   005578  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6803   00557A  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6804   00557C  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6805   00557E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6806   005580  EFC4  F02A         	goto	u2421
  6807   005584  EFC6  F02A         	goto	u2420
  6808   005588                     u2421:
  6809   005588  EFC7  F02A         	goto	l739
  6810   00558C                     u2420:
  6811   00558C  8001               	bsf	___fldiv@b^0,0,c
  6812   00558E                     l739:
  6813   00558E  90D8               	bcf	status,0,c
  6814   005590  3614               	rlcf	___fldiv@grs^0,f,c
  6815   005592  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6816   005594  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6817   005596  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6818   005598  0612               	decf	___fldiv@new_exp^0,f,c
  6819   00559A  A0D8               	btfss	status,0,c
  6820   00559C  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6821   00559E                     l2507:
  6822   00559E  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6823   0055A0  EFD4  F02A         	goto	u2431
  6824   0055A4  EFD6  F02A         	goto	u2430
  6825   0055A8                     u2431:
  6826   0055A8  EFBA  F02A         	goto	l2501
  6827   0055AC                     u2430:
  6828   0055AC  6A19               	clrf	___fldiv@aexp^0,c
  6829   0055AE  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6830   0055B0  EFDC  F02A         	goto	u2441
  6831   0055B4  EFDE  F02A         	goto	u2440
  6832   0055B8                     u2441:
  6833   0055B8  EF02  F02B         	goto	l741
  6834   0055BC                     u2440:
  6835   0055BC  0EFF               	movlw	255
  6836   0055BE  1414               	andwf	___fldiv@grs^0,w,c
  6837   0055C0  6E09               	movwf	??___fldiv^0,c
  6838   0055C2  0EFF               	movlw	255
  6839   0055C4  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6840   0055C6  6E0A               	movwf	(??___fldiv+1)^0,c
  6841   0055C8  0EFF               	movlw	255
  6842   0055CA  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6843   0055CC  6E0B               	movwf	(??___fldiv+2)^0,c
  6844   0055CE  0E7F               	movlw	127
  6845   0055D0  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6846   0055D2  6E0C               	movwf	(??___fldiv+3)^0,c
  6847   0055D4  5009               	movf	??___fldiv^0,w,c
  6848   0055D6  100A               	iorwf	(??___fldiv+1)^0,w,c
  6849   0055D8  100B               	iorwf	(??___fldiv+2)^0,w,c
  6850   0055DA  100C               	iorwf	(??___fldiv+3)^0,w,c
  6851   0055DC  B4D8               	btfsc	status,2,c
  6852   0055DE  EFF3  F02A         	goto	u2451
  6853   0055E2  EFF5  F02A         	goto	u2450
  6854   0055E6                     u2451:
  6855   0055E6  EFF9  F02A         	goto	l742
  6856   0055EA                     u2450:
  6857   0055EA                     l2511:
  6858   0055EA  0E01               	movlw	1
  6859   0055EC  6E19               	movwf	___fldiv@aexp^0,c
  6860   0055EE  EF02  F02B         	goto	l741
  6861   0055F2                     l742:
  6862   0055F2  A001               	btfss	___fldiv@b^0,0,c
  6863   0055F4  EFFE  F02A         	goto	u2461
  6864   0055F8  EF00  F02B         	goto	u2460
  6865   0055FC                     u2461:
  6866   0055FC  EF02  F02B         	goto	l741
  6867   005600                     u2460:
  6868   005600  EFF5  F02A         	goto	l2511
  6869   005604                     l741:
  6870   005604  5019               	movf	___fldiv@aexp^0,w,c
  6871   005606  B4D8               	btfsc	status,2,c
  6872   005608  EF08  F02B         	goto	u2471
  6873   00560C  EF0A  F02B         	goto	u2470
  6874   005610                     u2471:
  6875   005610  EF2E  F02B         	goto	l2523
  6876   005614                     u2470:
  6877   005614  0E01               	movlw	1
  6878   005616  2601               	addwf	___fldiv@b^0,f,c
  6879   005618  0E00               	movlw	0
  6880   00561A  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6881   00561C  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6882   00561E  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6883   005620  A004               	btfss	(___fldiv@b+3)^0,0,c
  6884   005622  EF15  F02B         	goto	u2481
  6885   005626  EF17  F02B         	goto	u2480
  6886   00562A                     u2481:
  6887   00562A  EF2E  F02B         	goto	l2523
  6888   00562E                     u2480:
  6889   00562E  C001  F009         	movff	___fldiv@b,??___fldiv
  6890   005632  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6891   005636  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6892   00563A  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6893   00563E  340C               	rlcf	(??___fldiv+3)^0,w,c
  6894   005640  320C               	rrcf	(??___fldiv+3)^0,f,c
  6895   005642  320B               	rrcf	(??___fldiv+2)^0,f,c
  6896   005644  320A               	rrcf	(??___fldiv+1)^0,f,c
  6897   005646  3209               	rrcf	??___fldiv^0,f,c
  6898   005648  C009  F001         	movff	??___fldiv,___fldiv@b
  6899   00564C  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6900   005650  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6901   005654  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6902   005658  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6903   00565A  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6904   00565C                     l2523:
  6905   00565C  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6906   00565E  EF39  F02B         	goto	u2491
  6907   005662  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6908   005664  E108               	bnz	u2490
  6909   005666  2812               	incf	___fldiv@new_exp^0,w,c
  6910   005668  A0D8               	btfss	status,0,c
  6911   00566A  EF39  F02B         	goto	u2491
  6912   00566E  EF3B  F02B         	goto	u2490
  6913   005672                     u2491:
  6914   005672  EF46  F02B         	goto	l2527
  6915   005676                     u2490:
  6916   005676  0E00               	movlw	0
  6917   005678  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6918   00567A  6812               	setf	___fldiv@new_exp^0,c
  6919   00567C  0E00               	movlw	0
  6920   00567E  6E01               	movwf	___fldiv@b^0,c
  6921   005680  0E00               	movlw	0
  6922   005682  6E02               	movwf	(___fldiv@b+1)^0,c
  6923   005684  0E00               	movlw	0
  6924   005686  6E03               	movwf	(___fldiv@b+2)^0,c
  6925   005688  0E00               	movlw	0
  6926   00568A  6E04               	movwf	(___fldiv@b+3)^0,c
  6927   00568C                     l2527:
  6928   00568C  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6929   00568E  EF53  F02B         	goto	u2500
  6930   005692  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6931   005694  E106               	bnz	u2501
  6932   005696  0412               	decf	___fldiv@new_exp^0,w,c
  6933   005698  B0D8               	btfsc	status,0,c
  6934   00569A  EF51  F02B         	goto	u2501
  6935   00569E  EF53  F02B         	goto	u2500
  6936   0056A2                     u2501:
  6937   0056A2  EF60  F02B         	goto	l2533
  6938   0056A6                     u2500:
  6939   0056A6  0E00               	movlw	0
  6940   0056A8  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6941   0056AA  0E00               	movlw	0
  6942   0056AC  6E12               	movwf	___fldiv@new_exp^0,c
  6943   0056AE  0E00               	movlw	0
  6944   0056B0  6E01               	movwf	___fldiv@b^0,c
  6945   0056B2  0E00               	movlw	0
  6946   0056B4  6E02               	movwf	(___fldiv@b+1)^0,c
  6947   0056B6  0E00               	movlw	0
  6948   0056B8  6E03               	movwf	(___fldiv@b+2)^0,c
  6949   0056BA  0E00               	movlw	0
  6950   0056BC  6E04               	movwf	(___fldiv@b+3)^0,c
  6951   0056BE  6A11               	clrf	___fldiv@sign^0,c
  6952   0056C0                     l2533:
  6953   0056C0  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6954   0056C4  A018               	btfss	___fldiv@bexp^0,0,c
  6955   0056C6  EF67  F02B         	goto	u2511
  6956   0056CA  EF69  F02B         	goto	u2510
  6957   0056CE                     u2511:
  6958   0056CE  EF6C  F02B         	goto	l2539
  6959   0056D2                     u2510:
  6960   0056D2  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6961   0056D4  EF6D  F02B         	goto	l2541
  6962   0056D8                     l2539:
  6963   0056D8  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6964   0056DA                     l2541:
  6965   0056DA  90D8               	bcf	status,0,c
  6966   0056DC  3018               	rrcf	___fldiv@bexp^0,w,c
  6967   0056DE  6E04               	movwf	(___fldiv@b+3)^0,c
  6968   0056E0  EF26  F02A         	goto	l2457
  6969   0056E4                     l728:
  6970   0056E4  0012               	return		;funcret
  6971   0056E6                     __end_of___fldiv:
  6972                           	callstack 0
  6973                           
  6974 ;; *************** function ___xxtofl *****************
  6975 ;; Defined at:
  6976 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;  sign            1    wreg     unsigned char 
  6979 ;;  val             4    0[COMRAM] long 
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;  sign            1    8[COMRAM] unsigned char 
  6982 ;;  arg             4   10[COMRAM] unsigned long 
  6983 ;;  exp             1    9[COMRAM] unsigned char 
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  4    0[COMRAM] unsigned char 
  6986 ;; Registers used:
  6987 ;;		wreg, status,2, status,0
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6993 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6994 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6995 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6996 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6997 ;;Total ram usage:       14 bytes
  6998 ;; Hardware stack levels used: 1
  6999 ;; Hardware stack levels required when called: 1
  7000 ;; This function calls:
  7001 ;;		Nothing
  7002 ;; This function is called by:
  7003 ;;		_main
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           	psect	text24
  7008   005B08                     __ptext24:
  7009                           	callstack 0
  7010   005B08                     ___xxtofl:
  7011                           	callstack 29
  7012                           
  7013                           ;incstack = 0
  7014                           ;___xxtofl@sign stored from wreg
  7015   005B08  6E09               	movwf	___xxtofl@sign^0,c
  7016   005B0A  5009               	movf	___xxtofl@sign^0,w,c
  7017   005B0C  B4D8               	btfsc	status,2,c
  7018   005B0E  EF8B  F02D         	goto	u3551
  7019   005B12  EF8D  F02D         	goto	u3550
  7020   005B16                     u3551:
  7021   005B16  EFAF  F02D         	goto	l801
  7022   005B1A                     u3550:
  7023   005B1A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7024   005B1C  EF94  F02D         	goto	u3560
  7025   005B20  EF92  F02D         	goto	u3561
  7026   005B24                     u3561:
  7027   005B24  EFAF  F02D         	goto	l801
  7028   005B28                     u3560:
  7029   005B28  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7030   005B2C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7031   005B30  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7032   005B34  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7033   005B38  1E05               	comf	??___xxtofl^0,f,c
  7034   005B3A  1E06               	comf	(??___xxtofl+1)^0,f,c
  7035   005B3C  1E07               	comf	(??___xxtofl+2)^0,f,c
  7036   005B3E  1E08               	comf	(??___xxtofl+3)^0,f,c
  7037   005B40  2A05               	incf	??___xxtofl^0,f,c
  7038   005B42  0E00               	movlw	0
  7039   005B44  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7040   005B46  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7041   005B48  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7042   005B4A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7043   005B4E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7044   005B52  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7045   005B56  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7046   005B5A  EFB7  F02D         	goto	l3283
  7047   005B5E                     l801:
  7048   005B5E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7049   005B62  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7050   005B66  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7051   005B6A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7052   005B6E                     l3283:
  7053   005B6E  5001               	movf	___xxtofl@val^0,w,c
  7054   005B70  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7055   005B72  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7056   005B74  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7057   005B76  A4D8               	btfss	status,2,c
  7058   005B78  EFC0  F02D         	goto	u3571
  7059   005B7C  EFC2  F02D         	goto	u3570
  7060   005B80                     u3571:
  7061   005B80  EFCC  F02D         	goto	l3289
  7062   005B84                     u3570:
  7063   005B84  0E00               	movlw	0
  7064   005B86  6E01               	movwf	?___xxtofl^0,c
  7065   005B88  0E00               	movlw	0
  7066   005B8A  6E02               	movwf	(?___xxtofl+1)^0,c
  7067   005B8C  0E00               	movlw	0
  7068   005B8E  6E03               	movwf	(?___xxtofl+2)^0,c
  7069   005B90  0E00               	movlw	0
  7070   005B92  6E04               	movwf	(?___xxtofl+3)^0,c
  7071   005B94  EF5D  F02E         	goto	l804
  7072   005B98                     l3289:
  7073   005B98  0E96               	movlw	150
  7074   005B9A  6E0A               	movwf	___xxtofl@exp^0,c
  7075   005B9C  EFD6  F02D         	goto	l3293
  7076   005BA0                     l3291:
  7077   005BA0  2A0A               	incf	___xxtofl@exp^0,f,c
  7078   005BA2  90D8               	bcf	status,0,c
  7079   005BA4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7080   005BA6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7081   005BA8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7082   005BAA  320B               	rrcf	___xxtofl@arg^0,f,c
  7083   005BAC                     l3293:
  7084   005BAC  0E00               	movlw	0
  7085   005BAE  140B               	andwf	___xxtofl@arg^0,w,c
  7086   005BB0  6E05               	movwf	??___xxtofl^0,c
  7087   005BB2  0E00               	movlw	0
  7088   005BB4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7089   005BB6  6E06               	movwf	(??___xxtofl+1)^0,c
  7090   005BB8  0E00               	movlw	0
  7091   005BBA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7092   005BBC  6E07               	movwf	(??___xxtofl+2)^0,c
  7093   005BBE  0EFE               	movlw	254
  7094   005BC0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7095   005BC2  6E08               	movwf	(??___xxtofl+3)^0,c
  7096   005BC4  5005               	movf	??___xxtofl^0,w,c
  7097   005BC6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7098   005BC8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7099   005BCA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7100   005BCC  A4D8               	btfss	status,2,c
  7101   005BCE  EFEB  F02D         	goto	u3581
  7102   005BD2  EFED  F02D         	goto	u3580
  7103   005BD6                     u3581:
  7104   005BD6  EFD0  F02D         	goto	l3291
  7105   005BDA                     u3580:
  7106   005BDA  EFFB  F02D         	goto	l808
  7107   005BDE                     l3295:
  7108   005BDE  2A0A               	incf	___xxtofl@exp^0,f,c
  7109   005BE0  0E01               	movlw	1
  7110   005BE2  260B               	addwf	___xxtofl@arg^0,f,c
  7111   005BE4  0E00               	movlw	0
  7112   005BE6  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7113   005BE8  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7114   005BEA  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7115   005BEC  90D8               	bcf	status,0,c
  7116   005BEE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7117   005BF0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7118   005BF2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7119   005BF4  320B               	rrcf	___xxtofl@arg^0,f,c
  7120   005BF6                     l808:
  7121   005BF6  0E00               	movlw	0
  7122   005BF8  140B               	andwf	___xxtofl@arg^0,w,c
  7123   005BFA  6E05               	movwf	??___xxtofl^0,c
  7124   005BFC  0E00               	movlw	0
  7125   005BFE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7126   005C00  6E06               	movwf	(??___xxtofl+1)^0,c
  7127   005C02  0E00               	movlw	0
  7128   005C04  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7129   005C06  6E07               	movwf	(??___xxtofl+2)^0,c
  7130   005C08  0EFF               	movlw	255
  7131   005C0A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7132   005C0C  6E08               	movwf	(??___xxtofl+3)^0,c
  7133   005C0E  5005               	movf	??___xxtofl^0,w,c
  7134   005C10  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7135   005C12  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7136   005C14  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7137   005C16  A4D8               	btfss	status,2,c
  7138   005C18  EF10  F02E         	goto	u3591
  7139   005C1C  EF12  F02E         	goto	u3590
  7140   005C20                     u3591:
  7141   005C20  EFEF  F02D         	goto	l3295
  7142   005C24                     u3590:
  7143   005C24  EF1A  F02E         	goto	l3303
  7144   005C28                     l3301:
  7145   005C28  060A               	decf	___xxtofl@exp^0,f,c
  7146   005C2A  90D8               	bcf	status,0,c
  7147   005C2C  360B               	rlcf	___xxtofl@arg^0,f,c
  7148   005C2E  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7149   005C30  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7150   005C32  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7151   005C34                     l3303:
  7152   005C34  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7153   005C36  EF1F  F02E         	goto	u3601
  7154   005C3A  EF21  F02E         	goto	u3600
  7155   005C3E                     u3601:
  7156   005C3E  EF29  F02E         	goto	l815
  7157   005C42                     u3600:
  7158   005C42  0E02               	movlw	2
  7159   005C44  600A               	cpfslt	___xxtofl@exp^0,c
  7160   005C46  EF27  F02E         	goto	u3611
  7161   005C4A  EF29  F02E         	goto	u3610
  7162   005C4E                     u3611:
  7163   005C4E  EF14  F02E         	goto	l3301
  7164   005C52                     u3610:
  7165   005C52                     l815:
  7166   005C52  B00A               	btfsc	___xxtofl@exp^0,0,c
  7167   005C54  EF2E  F02E         	goto	u3621
  7168   005C58  EF30  F02E         	goto	u3620
  7169   005C5C                     u3621:
  7170   005C5C  EF31  F02E         	goto	l3309
  7171   005C60                     u3620:
  7172   005C60  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7173   005C62                     l3309:
  7174   005C62  90D8               	bcf	status,0,c
  7175   005C64  320A               	rrcf	___xxtofl@exp^0,f,c
  7176   005C66  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7177   005C6A  6A06               	clrf	(??___xxtofl+1)^0,c
  7178   005C6C  6A07               	clrf	(??___xxtofl+2)^0,c
  7179   005C6E  6A08               	clrf	(??___xxtofl+3)^0,c
  7180   005C70  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7181   005C74  6A07               	clrf	(??___xxtofl+2)^0,c
  7182   005C76  6A06               	clrf	(??___xxtofl+1)^0,c
  7183   005C78  6A05               	clrf	??___xxtofl^0,c
  7184   005C7A  5005               	movf	??___xxtofl^0,w,c
  7185   005C7C  120B               	iorwf	___xxtofl@arg^0,f,c
  7186   005C7E  5006               	movf	(??___xxtofl+1)^0,w,c
  7187   005C80  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7188   005C82  5007               	movf	(??___xxtofl+2)^0,w,c
  7189   005C84  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7190   005C86  5008               	movf	(??___xxtofl+3)^0,w,c
  7191   005C88  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7192   005C8A  5009               	movf	___xxtofl@sign^0,w,c
  7193   005C8C  B4D8               	btfsc	status,2,c
  7194   005C8E  EF4B  F02E         	goto	u3631
  7195   005C92  EF4D  F02E         	goto	u3630
  7196   005C96                     u3631:
  7197   005C96  EF55  F02E         	goto	l3319
  7198   005C9A                     u3630:
  7199   005C9A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7200   005C9C  EF54  F02E         	goto	u3640
  7201   005CA0  EF52  F02E         	goto	u3641
  7202   005CA4                     u3641:
  7203   005CA4  EF55  F02E         	goto	l3319
  7204   005CA8                     u3640:
  7205   005CA8  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7206   005CAA                     l3319:
  7207   005CAA  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7208   005CAE  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7209   005CB2  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7210   005CB6  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7211   005CBA                     l804:
  7212   005CBA  0012               	return		;funcret
  7213   005CBC                     __end_of___xxtofl:
  7214                           	callstack 0
  7215                           
  7216 ;; *************** function _LCD_String_xy *****************
  7217 ;; Defined at:
  7218 ;;		line 242 in file "ACD_LCD_main.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;  row             1    wreg     unsigned char 
  7221 ;;  pos             1    9[COMRAM] unsigned char 
  7222 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  7223 ;;		 -> data(10), STR_1(9), 
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;  row             1   12[COMRAM] unsigned char 
  7226 ;;  location        1   13[COMRAM] unsigned char 
  7227 ;; Return value:  Size  Location     Type
  7228 ;;                  1    wreg      void 
  7229 ;; Registers used:
  7230 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7231 ;; Tracked objects:
  7232 ;;		On entry : 0/0
  7233 ;;		On exit  : 0/0
  7234 ;;		Unchanged: 0/0
  7235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7236 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7237 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7239 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7240 ;;Total ram usage:        5 bytes
  7241 ;; Hardware stack levels used: 1
  7242 ;; Hardware stack levels required when called: 4
  7243 ;; This function calls:
  7244 ;;		_LCD_Command
  7245 ;;		_LCD_String
  7246 ;; This function is called by:
  7247 ;;		_main
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           	psect	text25
  7252   0065DA                     __ptext25:
  7253                           	callstack 0
  7254   0065DA                     _LCD_String_xy:
  7255                           	callstack 26
  7256                           
  7257                           ;incstack = 0
  7258                           ;LCD_String_xy@row stored from wreg
  7259   0065DA  6E0D               	movwf	LCD_String_xy@row^0,c
  7260   0065DC                     
  7261                           ;ACD_LCD_main.c: 245:     if(row<=1)
  7262   0065DC  0E02               	movlw	2
  7263   0065DE  600D               	cpfslt	LCD_String_xy@row^0,c
  7264   0065E0  EFF4  F032         	goto	u3521
  7265   0065E4  EFF6  F032         	goto	u3520
  7266   0065E8                     u3521:
  7267   0065E8  EFFF  F032         	goto	l3249
  7268   0065EC                     u3520:
  7269   0065EC                     
  7270                           ;ACD_LCD_main.c: 246:     {;ACD_LCD_main.c: 247:         location=(0x80) | ((pos) & 0x0f
      +                          );
  7271   0065EC  500A               	movf	LCD_String_xy@pos^0,w,c
  7272   0065EE  0B0F               	andlw	15
  7273   0065F0  0980               	iorlw	128
  7274   0065F2  6E0E               	movwf	LCD_String_xy@location^0,c
  7275   0065F4                     
  7276                           ;ACD_LCD_main.c: 248:         LCD_Command(location);
  7277   0065F4  500E               	movf	LCD_String_xy@location^0,w,c
  7278   0065F6  ECED  F033         	call	_LCD_Command
  7279                           
  7280                           ;ACD_LCD_main.c: 249:     }
  7281   0065FA  EF06  F033         	goto	l3253
  7282   0065FE                     l3249:
  7283                           
  7284                           ;ACD_LCD_main.c: 251:     {;ACD_LCD_main.c: 252:         location=(0xC0) | ((pos) & 0x0f
      +                          );
  7285   0065FE  500A               	movf	LCD_String_xy@pos^0,w,c
  7286   006600  0B0F               	andlw	15
  7287   006602  09C0               	iorlw	192
  7288   006604  6E0E               	movwf	LCD_String_xy@location^0,c
  7289   006606                     
  7290                           ;ACD_LCD_main.c: 253:         LCD_Command(location);
  7291   006606  500E               	movf	LCD_String_xy@location^0,w,c
  7292   006608  ECED  F033         	call	_LCD_Command
  7293   00660C                     l3253:
  7294                           
  7295                           ;ACD_LCD_main.c: 255:     LCD_String(msg);
  7296   00660C  C00B  F008         	movff	LCD_String_xy@msg,LCD_String@msg
  7297   006610  C00C  F009         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  7298   006614  EC9C  F031         	call	_LCD_String	;wreg free
  7299   006618  0012               	return		;funcret
  7300   00661A                     __end_of_LCD_String_xy:
  7301                           	callstack 0
  7302                           
  7303 ;; *************** function _LCD_String *****************
  7304 ;; Defined at:
  7305 ;;		line 233 in file "ACD_LCD_main.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  7308 ;;		 -> data(10), STR_1(9), 
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;		None
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  1    wreg      void 
  7313 ;; Registers used:
  7314 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7324 ;;Total ram usage:        2 bytes
  7325 ;; Hardware stack levels used: 1
  7326 ;; Hardware stack levels required when called: 3
  7327 ;; This function calls:
  7328 ;;		_LCD_Char
  7329 ;; This function is called by:
  7330 ;;		_LCD_String_xy
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           	psect	text26
  7335   006338                     __ptext26:
  7336                           	callstack 0
  7337   006338                     _LCD_String:
  7338                           	callstack 26
  7339   006338                     
  7340                           ;ACD_LCD_main.c: 233: void LCD_String(const char *msg);ACD_LCD_main.c: 234: {;ACD_LCD_ma
      +                          in.c: 235:     while((*msg)!=0)
  7341   006338  EFB7  F031         	goto	l3193
  7342   00633C                     l3189:
  7343                           
  7344                           ;ACD_LCD_main.c: 236:     {;ACD_LCD_main.c: 237:       LCD_Char(*msg);
  7345   00633C  0060  F023  FFF6   	movff	LCD_String@msg,tblptrl
  7346   006342  0060  F027  FFF7   	movff	LCD_String@msg+1,tblptrh
  7347   006348  0E00               	movlw	low (__smallconst shr (0+16))
  7348   00634A  6EF8               	movwf	tblptru,c
  7349   00634C  0E1F               	movlw	(high __ramtop+-1)
  7350   00634E  64F7               	cpfsgt	tblptrh,c
  7351   006350  D003               	bra	u3487
  7352   006352  0008               	tblrd		*
  7353   006354  50F5               	movf	tablat,w,c
  7354   006356  D007               	bra	u3480
  7355   006358                     u3487:
  7356   006358  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7357   00635E  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7358   006364  50E7               	movf	indf1,w,c
  7359   006366                     u3480:
  7360   006366  ECDE  F033         	call	_LCD_Char
  7361   00636A                     
  7362                           ;ACD_LCD_main.c: 238:       msg++;
  7363   00636A  4A08               	infsnz	LCD_String@msg^0,f,c
  7364   00636C  2A09               	incf	(LCD_String@msg+1)^0,f,c
  7365   00636E                     l3193:
  7366                           
  7367                           ;ACD_LCD_main.c: 235:     while((*msg)!=0)
  7368   00636E  0060  F023  FFF6   	movff	LCD_String@msg,tblptrl
  7369   006374  0060  F027  FFF7   	movff	LCD_String@msg+1,tblptrh
  7370   00637A  0E00               	movlw	low (__smallconst shr (0+16))
  7371   00637C  6EF8               	movwf	tblptru,c
  7372   00637E  0E1F               	movlw	(high __ramtop+-1)
  7373   006380  64F7               	cpfsgt	tblptrh,c
  7374   006382  D003               	bra	u3497
  7375   006384  0008               	tblrd		*
  7376   006386  50F5               	movf	tablat,w,c
  7377   006388  D007               	bra	u3490
  7378   00638A                     u3497:
  7379   00638A  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7380   006390  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7381   006396  50E7               	movf	indf1,w,c
  7382   006398                     u3490:
  7383   006398  0900               	iorlw	0
  7384   00639A  A4D8               	btfss	status,2,c
  7385   00639C  EFD2  F031         	goto	u3501
  7386   0063A0  EFD4  F031         	goto	u3500
  7387   0063A4                     u3501:
  7388   0063A4  EF9E  F031         	goto	l3189
  7389   0063A8                     u3500:
  7390   0063A8  0012               	return		;funcret
  7391   0063AA                     __end_of_LCD_String:
  7392                           	callstack 0
  7393                           
  7394 ;; *************** function _LCD_Char *****************
  7395 ;; Defined at:
  7396 ;;		line 222 in file "ACD_LCD_main.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;  dat             1    wreg     unsigned char 
  7399 ;; Auto vars:     Size  Location     Type
  7400 ;;  dat             1    6[COMRAM] unsigned char 
  7401 ;; Return value:  Size  Location     Type
  7402 ;;                  1    wreg      void 
  7403 ;; Registers used:
  7404 ;;		wreg, status,2, status,0, cstack
  7405 ;; Tracked objects:
  7406 ;;		On entry : 0/0
  7407 ;;		On exit  : 0/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7413 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7414 ;;Total ram usage:        1 bytes
  7415 ;; Hardware stack levels used: 1
  7416 ;; Hardware stack levels required when called: 2
  7417 ;; This function calls:
  7418 ;;		_MSdelay
  7419 ;; This function is called by:
  7420 ;;		_LCD_String
  7421 ;; This function uses a non-reentrant model
  7422 ;;
  7423                           
  7424                           	psect	text27
  7425   0067BC                     __ptext27:
  7426                           	callstack 0
  7427   0067BC                     _LCD_Char:
  7428                           	callstack 26
  7429                           
  7430                           ;incstack = 0
  7431                           ;LCD_Char@dat stored from wreg
  7432   0067BC  6E07               	movwf	LCD_Char@dat^0,c
  7433   0067BE                     
  7434                           ;ACD_LCD_main.c: 222: void LCD_Char(char dat);ACD_LCD_main.c: 223: {;ACD_LCD_main.c: 224
      +                          :     LATB= dat;
  7435   0067BE  0060  F01F  FFBB   	movff	LCD_Char@dat,16315	;volatile
  7436   0067C4                     
  7437                           ;ACD_LCD_main.c: 225:     LATD0 = 1;
  7438   0067C4  80BD               	bsf	16317,0,c	;volatile
  7439   0067C6                     
  7440                           ;ACD_LCD_main.c: 226:     LATD1=1;
  7441   0067C6  82BD               	bsf	16317,1,c	;volatile
  7442   0067C8                     
  7443                           ;ACD_LCD_main.c: 227:     __nop();
  7444   0067C8  0000               	nop	
  7445   0067CA                     
  7446                           ;ACD_LCD_main.c: 228:     LATD1=0;
  7447   0067CA  92BD               	bcf	16317,1,c	;volatile
  7448   0067CC                     
  7449                           ;ACD_LCD_main.c: 229:     MSdelay(1);
  7450   0067CC  0E00               	movlw	0
  7451   0067CE  6E02               	movwf	(MSdelay@val+1)^0,c
  7452   0067D0  0E01               	movlw	1
  7453   0067D2  6E01               	movwf	MSdelay@val^0,c
  7454   0067D4  EC62  F032         	call	_MSdelay	;wreg free
  7455   0067D8  0012               	return		;funcret
  7456   0067DA                     __end_of_LCD_Char:
  7457                           	callstack 0
  7458                           
  7459 ;; *************** function _LCD_Init *****************
  7460 ;; Defined at:
  7461 ;;		line 196 in file "ACD_LCD_main.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;		None
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;		None
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  1    wreg      void 
  7468 ;; Registers used:
  7469 ;;		wreg, status,2, status,0, cstack
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7479 ;;Total ram usage:        0 bytes
  7480 ;; Hardware stack levels used: 1
  7481 ;; Hardware stack levels required when called: 3
  7482 ;; This function calls:
  7483 ;;		_LCD_Command
  7484 ;;		_MSdelay
  7485 ;; This function is called by:
  7486 ;;		_main
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           	psect	text28
  7491   0066FE                     __ptext28:
  7492                           	callstack 0
  7493   0066FE                     _LCD_Init:
  7494                           	callstack 27
  7495   0066FE                     
  7496                           ;ACD_LCD_main.c: 198:     MSdelay(500);
  7497   0066FE  0E01               	movlw	1
  7498   006700  6E02               	movwf	(MSdelay@val+1)^0,c
  7499   006702  0EF4               	movlw	244
  7500   006704  6E01               	movwf	MSdelay@val^0,c
  7501   006706  EC62  F032         	call	_MSdelay	;wreg free
  7502   00670A                     
  7503                           ;ACD_LCD_main.c: 199:     TRISB = 0x00;
  7504   00670A  6AC3               	clrf	195,c	;volatile
  7505   00670C                     
  7506                           ;ACD_LCD_main.c: 200:     TRISD = 0x00;
  7507   00670C  6AC5               	clrf	197,c	;volatile
  7508                           
  7509                           ;ACD_LCD_main.c: 201:     LCD_Command(0x01);
  7510   00670E  0E01               	movlw	1
  7511   006710  ECED  F033         	call	_LCD_Command
  7512                           
  7513                           ;ACD_LCD_main.c: 202:     LCD_Command(0x38);
  7514   006714  0E38               	movlw	56
  7515   006716  ECED  F033         	call	_LCD_Command
  7516                           
  7517                           ;ACD_LCD_main.c: 203:     LCD_Command(0x0c);
  7518   00671A  0E0C               	movlw	12
  7519   00671C  ECED  F033         	call	_LCD_Command
  7520                           
  7521                           ;ACD_LCD_main.c: 204:     LCD_Command(0x06);
  7522   006720  0E06               	movlw	6
  7523   006722  ECED  F033         	call	_LCD_Command
  7524   006726  0012               	return		;funcret
  7525   006728                     __end_of_LCD_Init:
  7526                           	callstack 0
  7527                           
  7528 ;; *************** function _LCD_Command *****************
  7529 ;; Defined at:
  7530 ;;		line 212 in file "ACD_LCD_main.c"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;  cmd             1    wreg     unsigned char 
  7533 ;; Auto vars:     Size  Location     Type
  7534 ;;  cmd             1    6[COMRAM] unsigned char 
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  1    wreg      void 
  7537 ;; Registers used:
  7538 ;;		wreg, status,2, status,0, cstack
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7548 ;;Total ram usage:        1 bytes
  7549 ;; Hardware stack levels used: 1
  7550 ;; Hardware stack levels required when called: 2
  7551 ;; This function calls:
  7552 ;;		_MSdelay
  7553 ;; This function is called by:
  7554 ;;		_LCD_Init
  7555 ;;		_LCD_String_xy
  7556 ;;		_LCD_Clear
  7557 ;; This function uses a non-reentrant model
  7558 ;;
  7559                           
  7560                           	psect	text29
  7561   0067DA                     __ptext29:
  7562                           	callstack 0
  7563   0067DA                     _LCD_Command:
  7564                           	callstack 27
  7565                           
  7566                           ;incstack = 0
  7567                           ;LCD_Command@cmd stored from wreg
  7568   0067DA  6E07               	movwf	LCD_Command@cmd^0,c
  7569   0067DC                     
  7570                           ;ACD_LCD_main.c: 212: void LCD_Command(char cmd );ACD_LCD_main.c: 213: {;ACD_LCD_main.c:
      +                           214:     LATB= cmd;
  7571   0067DC  0060  F01F  FFBB   	movff	LCD_Command@cmd,16315	;volatile
  7572   0067E2                     
  7573                           ;ACD_LCD_main.c: 215:     LATD0 = 0;
  7574   0067E2  90BD               	bcf	16317,0,c	;volatile
  7575   0067E4                     
  7576                           ;ACD_LCD_main.c: 216:     LATD1 = 1;
  7577   0067E4  82BD               	bsf	16317,1,c	;volatile
  7578   0067E6                     
  7579                           ;ACD_LCD_main.c: 217:     __nop();
  7580   0067E6  0000               	nop	
  7581   0067E8                     
  7582                           ;ACD_LCD_main.c: 218:     LATD1 = 0;
  7583   0067E8  92BD               	bcf	16317,1,c	;volatile
  7584   0067EA                     
  7585                           ;ACD_LCD_main.c: 219:     MSdelay(3);
  7586   0067EA  0E00               	movlw	0
  7587   0067EC  6E02               	movwf	(MSdelay@val+1)^0,c
  7588   0067EE  0E03               	movlw	3
  7589   0067F0  6E01               	movwf	MSdelay@val^0,c
  7590   0067F2  EC62  F032         	call	_MSdelay	;wreg free
  7591   0067F6  0012               	return		;funcret
  7592   0067F8                     __end_of_LCD_Command:
  7593                           	callstack 0
  7594                           
  7595 ;; *************** function _MSdelay *****************
  7596 ;; Defined at:
  7597 ;;		line 259 in file "ACD_LCD_main.c"
  7598 ;; Parameters:    Size  Location     Type
  7599 ;;  val             2    0[COMRAM] unsigned int 
  7600 ;; Auto vars:     Size  Location     Type
  7601 ;;  j               2    4[COMRAM] unsigned int 
  7602 ;;  i               2    2[COMRAM] unsigned int 
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  1    wreg      void 
  7605 ;; Registers used:
  7606 ;;		wreg, status,2, status,0
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7612 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7613 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7615 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7616 ;;Total ram usage:        6 bytes
  7617 ;; Hardware stack levels used: 1
  7618 ;; Hardware stack levels required when called: 1
  7619 ;; This function calls:
  7620 ;;		Nothing
  7621 ;; This function is called by:
  7622 ;;		_LCD_Init
  7623 ;;		_LCD_Command
  7624 ;;		_LCD_Char
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628                           	psect	text30
  7629   0064C4                     __ptext30:
  7630                           	callstack 0
  7631   0064C4                     _MSdelay:
  7632                           	callstack 26
  7633   0064C4                     
  7634                           ;ACD_LCD_main.c: 259: void MSdelay(unsigned int val);ACD_LCD_main.c: 260: {;ACD_LCD_main
      +                          .c: 261:      unsigned int i,j;;ACD_LCD_main.c: 262:         for(i=0;i<val;i++)
  7635   0064C4  0E00               	movlw	0
  7636   0064C6  6E04               	movwf	(MSdelay@i+1)^0,c
  7637   0064C8  0E00               	movlw	0
  7638   0064CA  6E03               	movwf	MSdelay@i^0,c
  7639   0064CC  EF7B  F032         	goto	l2871
  7640   0064D0                     l2859:
  7641                           
  7642                           ;ACD_LCD_main.c: 263:             for(j=0;j<165;j++);
  7643   0064D0  0E00               	movlw	0
  7644   0064D2  6E06               	movwf	(MSdelay@j+1)^0,c
  7645   0064D4  0E00               	movlw	0
  7646   0064D6  6E05               	movwf	MSdelay@j^0,c
  7647   0064D8                     l2865:
  7648   0064D8  4A05               	infsnz	MSdelay@j^0,f,c
  7649   0064DA  2A06               	incf	(MSdelay@j+1)^0,f,c
  7650   0064DC  5006               	movf	(MSdelay@j+1)^0,w,c
  7651   0064DE  E109               	bnz	u3090
  7652   0064E0  0EA5               	movlw	165
  7653   0064E2  5C05               	subwf	MSdelay@j^0,w,c
  7654   0064E4  A0D8               	btfss	status,0,c
  7655   0064E6  EF77  F032         	goto	u3091
  7656   0064EA  EF79  F032         	goto	u3090
  7657   0064EE                     u3091:
  7658   0064EE  EF6C  F032         	goto	l2865
  7659   0064F2                     u3090:
  7660   0064F2  4A03               	infsnz	MSdelay@i^0,f,c
  7661   0064F4  2A04               	incf	(MSdelay@i+1)^0,f,c
  7662   0064F6                     l2871:
  7663   0064F6  5001               	movf	MSdelay@val^0,w,c
  7664   0064F8  5C03               	subwf	MSdelay@i^0,w,c
  7665   0064FA  5002               	movf	(MSdelay@val+1)^0,w,c
  7666   0064FC  5804               	subwfb	(MSdelay@i+1)^0,w,c
  7667   0064FE  A0D8               	btfss	status,0,c
  7668   006500  EF84  F032         	goto	u3101
  7669   006504  EF86  F032         	goto	u3100
  7670   006508                     u3101:
  7671   006508  EF68  F032         	goto	l2859
  7672   00650C                     u3100:
  7673   00650C  0012               	return		;funcret
  7674   00650E                     __end_of_MSdelay:
  7675                           	callstack 0
  7676                           
  7677 ;; *************** function _IOCC2_Init *****************
  7678 ;; Defined at:
  7679 ;;		line 175 in file "ACD_LCD_main.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;		None
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;		None
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  1    wreg      void 
  7686 ;; Registers used:
  7687 ;;		wreg, status,2
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7697 ;;Total ram usage:        0 bytes
  7698 ;; Hardware stack levels used: 1
  7699 ;; Hardware stack levels required when called: 1
  7700 ;; This function calls:
  7701 ;;		Nothing
  7702 ;; This function is called by:
  7703 ;;		_main
  7704 ;; This function uses a non-reentrant model
  7705 ;;
  7706                           
  7707                           	psect	text31
  7708   006778                     __ptext31:
  7709                           	callstack 0
  7710   006778                     _IOCC2_Init:
  7711                           	callstack 29
  7712   006778                     
  7713                           ;ACD_LCD_main.c: 176:     TRISCbits.TRISC2 = 1;
  7714   006778  84C4               	bsf	196,2,c	;volatile
  7715                           
  7716                           ;ACD_LCD_main.c: 177:     ANSELCbits.ANSELC2 = 0;
  7717   00677A  013A               	movlb	58	; () banked
  7718   00677C  9560               	bcf	96,2,b	;volatile
  7719                           
  7720                           ;ACD_LCD_main.c: 178:     WPUCbits.WPUC2 = 1;
  7721   00677E  8561               	bsf	97,2,b	;volatile
  7722                           
  7723                           ;ACD_LCD_main.c: 180:     IOCCPbits.IOCCP2 = 0;
  7724   006780  9565               	bcf	101,2,b	;volatile
  7725                           
  7726                           ;ACD_LCD_main.c: 181:     IOCCNbits.IOCCN2 = 1;
  7727   006782  8566               	bsf	102,2,b	;volatile
  7728                           
  7729                           ;ACD_LCD_main.c: 182:     IOCCFbits.IOCCF2 = 0;
  7730   006784  9567               	bcf	103,2,b	;volatile
  7731                           
  7732                           ;ACD_LCD_main.c: 183:     PIR0bits.IOCIF = 0;
  7733   006786  0139               	movlb	57	; () banked
  7734   006788  9FA0               	bcf	160,7,b	;volatile
  7735                           
  7736                           ;ACD_LCD_main.c: 185:     PIE0bits.IOCIE = 1;
  7737   00678A  8F90               	bsf	144,7,b	;volatile
  7738                           
  7739                           ;ACD_LCD_main.c: 186:     INTCON0bits.GIE = 1;
  7740   00678C  8ED2               	bsf	210,7,c	;volatile
  7741                           
  7742                           ;ACD_LCD_main.c: 187:     INTCON0bits.IPEN = 0;
  7743   00678E  9AD2               	bcf	210,5,c	;volatile
  7744                           
  7745                           ;ACD_LCD_main.c: 189:     IVTBASEU = 0x00;
  7746   006790  6AD7               	clrf	215,c	;volatile
  7747   006792                     
  7748                           ; BSR set to: 57
  7749                           ;ACD_LCD_main.c: 190:     IVTBASEH = 0x40;
  7750   006792  0E40               	movlw	64
  7751   006794  6ED6               	movwf	214,c	;volatile
  7752                           
  7753                           ;ACD_LCD_main.c: 191:     IVTBASEL = 0x08;
  7754   006796  0E08               	movlw	8
  7755   006798  6ED5               	movwf	213,c	;volatile
  7756   00679A                     
  7757                           ; BSR set to: 57
  7758   00679A  0012               	return		;funcret
  7759   00679C                     __end_of_IOCC2_Init:
  7760                           	callstack 0
  7761                           
  7762 ;; *************** function _ADC_Init *****************
  7763 ;; Defined at:
  7764 ;;		line 266 in file "ACD_LCD_main.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;		None
  7767 ;; Auto vars:     Size  Location     Type
  7768 ;;		None
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  1    wreg      void 
  7771 ;; Registers used:
  7772 ;;		wreg, status,2
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7782 ;;Total ram usage:        0 bytes
  7783 ;; Hardware stack levels used: 1
  7784 ;; Hardware stack levels required when called: 1
  7785 ;; This function calls:
  7786 ;;		Nothing
  7787 ;; This function is called by:
  7788 ;;		_main
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           	psect	text32
  7793   006750                     __ptext32:
  7794                           	callstack 0
  7795   006750                     _ADC_Init:
  7796                           	callstack 29
  7797   006750                     
  7798                           ;ACD_LCD_main.c: 269:     ADCON0bits.FM = 1;
  7799   006750  013E               	movlb	62	; () banked
  7800   006752  51F8               	movf	248,w,b	;volatile
  7801   006754  0BF3               	andlw	-13
  7802   006756  0904               	iorlw	4
  7803   006758  6FF8               	movwf	248,b	;volatile
  7804   00675A                     
  7805                           ; BSR set to: 62
  7806                           ;ACD_LCD_main.c: 270:     ADCON0bits.CS = 1;
  7807   00675A  89F8               	bsf	248,4,b	;volatile
  7808   00675C                     
  7809                           ; BSR set to: 62
  7810                           ;ACD_LCD_main.c: 272:     TRISAbits.TRISA0 = 1;
  7811   00675C  80C2               	bsf	194,0,c	;volatile
  7812   00675E                     
  7813                           ; BSR set to: 62
  7814                           ;ACD_LCD_main.c: 273:     ANSELAbits.ANSELA0 = 1;
  7815   00675E  013A               	movlb	58	; () banked
  7816   006760  8140               	bsf	64,0,b	;volatile
  7817   006762                     
  7818                           ; BSR set to: 58
  7819                           ;ACD_LCD_main.c: 275:     ADPCH = 0x00;
  7820   006762  013E               	movlb	62	; () banked
  7821   006764  6BF1               	clrf	241,b	;volatile
  7822   006766                     
  7823                           ; BSR set to: 62
  7824                           ;ACD_LCD_main.c: 276:     ADCLK = 0x00;
  7825   006766  6BFF               	clrf	255,b	;volatile
  7826   006768                     
  7827                           ; BSR set to: 62
  7828                           ;ACD_LCD_main.c: 278:     ADRESH = 0x00;
  7829   006768  6BF0               	clrf	240,b	;volatile
  7830   00676A                     
  7831                           ; BSR set to: 62
  7832                           ;ACD_LCD_main.c: 279:     ADRESL = 0x00;
  7833   00676A  6BEF               	clrf	239,b	;volatile
  7834   00676C                     
  7835                           ; BSR set to: 62
  7836                           ;ACD_LCD_main.c: 281:     ADPREL = 0x00;
  7837   00676C  6BF6               	clrf	246,b	;volatile
  7838   00676E                     
  7839                           ; BSR set to: 62
  7840                           ;ACD_LCD_main.c: 282:     ADPREH = 0x00;
  7841   00676E  6BF7               	clrf	247,b	;volatile
  7842   006770                     
  7843                           ; BSR set to: 62
  7844                           ;ACD_LCD_main.c: 284:     ADACQL = 0x00;
  7845   006770  6BF3               	clrf	243,b	;volatile
  7846   006772                     
  7847                           ; BSR set to: 62
  7848                           ;ACD_LCD_main.c: 285:     ADACQH = 0x00;
  7849   006772  6BF4               	clrf	244,b	;volatile
  7850   006774                     
  7851                           ; BSR set to: 62
  7852                           ;ACD_LCD_main.c: 287:     ADCON0bits.ON = 1;
  7853   006774  8FF8               	bsf	248,7,b	;volatile
  7854   006776                     
  7855                           ; BSR set to: 62
  7856   006776  0012               	return		;funcret
  7857   006778                     __end_of_ADC_Init:
  7858                           	callstack 0
  7859                           
  7860 ;; *************** function _IOC_ISR *****************
  7861 ;; Defined at:
  7862 ;;		line 97 in file "ACD_LCD_main.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;		None
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;		None
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  1    wreg      void 
  7869 ;; Registers used:
  7870 ;;		wreg, status,2
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7880 ;;Total ram usage:        0 bytes
  7881 ;; Hardware stack levels used: 1
  7882 ;; This function calls:
  7883 ;;		Nothing
  7884 ;; This function is called by:
  7885 ;;		Interrupt level 2
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           	psect	text33
  7890   00679C                     __ptext33:
  7891                           	callstack 0
  7892   00679C                     _IOC_ISR:
  7893                           	callstack 22
  7894   00679C                     
  7895                           ;ACD_LCD_main.c: 99:     if (IOCCFbits.IOCCF2)
  7896   00679C  013A               	movlb	58	; () banked
  7897   00679E  A567               	btfss	103,2,b	;volatile
  7898   0067A0  EFD4  F033         	goto	i2u181_41
  7899   0067A4  EFD6  F033         	goto	i2u181_40
  7900   0067A8                     i2u181_41:
  7901   0067A8  EFDD  F033         	goto	i2l92
  7902   0067AC                     i2u181_40:
  7903   0067AC                     
  7904                           ; BSR set to: 58
  7905                           ;ACD_LCD_main.c: 100:     {;ACD_LCD_main.c: 101:         halt = 1;
  7906   0067AC  0E00               	movlw	0
  7907   0067AE  6E5A               	movwf	(_halt+1)^0,c
  7908   0067B0  0E01               	movlw	1
  7909   0067B2  6E59               	movwf	_halt^0,c
  7910   0067B4                     
  7911                           ; BSR set to: 58
  7912                           ;ACD_LCD_main.c: 102:         IOCCFbits.IOCCF2 = 0;
  7913   0067B4  9567               	bcf	103,2,b	;volatile
  7914   0067B6                     
  7915                           ; BSR set to: 58
  7916                           ;ACD_LCD_main.c: 103:         PIR0bits.IOCIF = 0;
  7917   0067B6  0139               	movlb	57	; () banked
  7918   0067B8  9FA0               	bcf	160,7,b	;volatile
  7919   0067BA                     i2l92:
  7920   0067BA  0011               	retfie		f
  7921   0067BC                     __end_of_IOC_ISR:
  7922                           	callstack 0
  7923                           
  7924                           ;
  7925                           ; H/W Interrupt Vector Table @ 0x4008
  7926                           ;
  7927                           
  7928                           	psect	ivt0x4008
  7929   004008                     __pivt0x4008:
  7930                           	callstack 0
  7931   004008                     ivt0x4008_base:
  7932                           	callstack 0
  7933                           
  7934                           ; Vector 0 : SWINT
  7935   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
  7936                           
  7937                           ; Vector 1 : HLVD
  7938   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
  7939                           
  7940                           ; Vector 2 : OSF
  7941   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
  7942                           
  7943                           ; Vector 3 : CSW
  7944   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
  7945                           
  7946                           ; Vector 4 : NVM
  7947   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
  7948                           
  7949                           ; Vector 5 : SCAN
  7950   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
  7951                           
  7952                           ; Vector 6 : CRC
  7953   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
  7954                           
  7955                           ; Vector 7 : IOC
  7956   004016  19E7               	dw	_IOC_ISR shr (0+2)
  7957                           
  7958                           ; Vector 8 : INT0
  7959   004018  102B               	dw	ivt0x4008_undefint shr (0+2)
  7960                           
  7961                           ; Vector 9 : ZCD
  7962   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
  7963                           
  7964                           ; Vector 10 : AD
  7965   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
  7966                           
  7967                           ; Vector 11 : ADT
  7968   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
  7969                           
  7970                           ; Vector 12 : CMP1
  7971   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
  7972                           
  7973                           ; Vector 13 : SMT1
  7974   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
  7975                           
  7976                           ; Vector 14 : SMT1PRA
  7977   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
  7978                           
  7979                           ; Vector 15 : SMT1PRW
  7980   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
  7981                           
  7982                           ; Vector 16 : DMA1SCNT
  7983   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
  7984                           
  7985                           ; Vector 17 : DMA1DCNT
  7986   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  7987                           
  7988                           ; Vector 18 : DMA1OR
  7989   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  7990                           
  7991                           ; Vector 19 : DMA1A
  7992   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  7993                           
  7994                           ; Vector 20 : SPI1RX
  7995   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  7996                           
  7997                           ; Vector 21 : SPI1TX
  7998   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  7999                           
  8000                           ; Vector 22 : SPI1
  8001   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  8002                           
  8003                           ; Vector 23 : I2C1RX
  8004   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  8005                           
  8006                           ; Vector 24 : I2C1TX
  8007   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  8008                           
  8009                           ; Vector 25 : I2C1
  8010   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8011                           
  8012                           ; Vector 26 : I2C1E
  8013   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8014                           
  8015                           ; Vector 27 : U1RX
  8016   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8017                           
  8018                           ; Vector 28 : U1TX
  8019   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  8020                           
  8021                           ; Vector 29 : U1E
  8022   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  8023                           
  8024                           ; Vector 30 : U1
  8025   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  8026                           
  8027                           ; Vector 31 : TMR0
  8028   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  8029                           
  8030                           ; Vector 32 : TMR1
  8031   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  8032                           
  8033                           ; Vector 33 : TMR1G
  8034   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8035                           
  8036                           ; Vector 34 : TMR2
  8037   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8038                           
  8039                           ; Vector 35 : CCP1
  8040   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8041                           
  8042                           ; Vector 36 : Undefined
  8043   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  8044                           
  8045                           ; Vector 37 : NCO1
  8046   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  8047                           
  8048                           ; Vector 38 : CWG1
  8049   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  8050                           
  8051                           ; Vector 39 : CLC1
  8052   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  8053                           
  8054                           ; Vector 40 : INT1
  8055   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  8056                           
  8057                           ; Vector 41 : CMP2
  8058   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8059                           
  8060                           ; Vector 42 : DMA2SCNT
  8061   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8062                           
  8063                           ; Vector 43 : DMA2DCNT
  8064   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8065                           
  8066                           ; Vector 44 : DMA2OR
  8067   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  8068                           
  8069                           ; Vector 45 : DMA2A
  8070   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  8071                           
  8072                           ; Vector 46 : I2C2RX
  8073   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  8074                           
  8075                           ; Vector 47 : I2C2TX
  8076   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  8077                           
  8078                           ; Vector 48 : I2C2
  8079   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  8080                           
  8081                           ; Vector 49 : I2C2E
  8082   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8083                           
  8084                           ; Vector 50 : U2RX
  8085   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8086                           
  8087                           ; Vector 51 : U2TX
  8088   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8089                           
  8090                           ; Vector 52 : U2E
  8091   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  8092                           
  8093                           ; Vector 53 : U2
  8094   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  8095                           
  8096                           ; Vector 54 : TMR3
  8097   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  8098                           
  8099                           ; Vector 55 : TMR3G
  8100   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  8101                           
  8102                           ; Vector 56 : TMR4
  8103   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  8104                           
  8105                           ; Vector 57 : CCP2
  8106   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8107                           
  8108                           ; Vector 58 : Undefined
  8109   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8110                           
  8111                           ; Vector 59 : CWG2
  8112   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8113                           
  8114                           ; Vector 60 : CLC2
  8115   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  8116                           
  8117                           ; Vector 61 : INT2
  8118   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  8119                           
  8120                           ; Vector 62 : Undefined
  8121   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  8122                           
  8123                           ; Vector 63 : Undefined
  8124   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  8125                           
  8126                           ; Vector 64 : Undefined
  8127   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  8128                           
  8129                           ; Vector 65 : Undefined
  8130   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8131                           
  8132                           ; Vector 66 : Undefined
  8133   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8134                           
  8135                           ; Vector 67 : Undefined
  8136   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8137                           
  8138                           ; Vector 68 : Undefined
  8139   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  8140                           
  8141                           ; Vector 69 : Undefined
  8142   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  8143                           
  8144                           ; Vector 70 : TMR5
  8145   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  8146                           
  8147                           ; Vector 71 : TMR5G
  8148   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  8149                           
  8150                           ; Vector 72 : TMR6
  8151   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  8152                           
  8153                           ; Vector 73 : CCP3
  8154   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  8155                           
  8156                           ; Vector 74 : CWG3
  8157   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  8158                           
  8159                           ; Vector 75 : CLC3
  8160   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  8161                           
  8162                           ; Vector 76 : Undefined
  8163   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  8164                           
  8165                           ; Vector 77 : Undefined
  8166   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  8167                           
  8168                           ; Vector 78 : Undefined
  8169   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  8170                           
  8171                           ; Vector 79 : Undefined
  8172   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  8173                           
  8174                           ; Vector 80 : CCP4
  8175   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  8176                           
  8177                           ; Vector 81 : CLC4
  8178   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  8179   0040AC                     ivt0x4008_undefint:
  8180                           	callstack 0
  8181   0040AC  00FF               	reset	
  8182                           
  8183                           	psect	rparam
  8184   000001                     ___rparam_used  equ	1
  8185   000000                     ___param_bank   equ	0
  8186   000000                     __Lparam        equ	__Lrparam
  8187   000000                     __Hparam        equ	__Hrparam
  8188                           
  8189                           	psect	config
  8190                           
  8191                           ;Config register CONFIG1L @ 0x300000
  8192                           ;	External Oscillator Selection
  8193                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  8194                           ;	Reset Oscillator Selection
  8195                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  8196   300000                     	org	3145728
  8197   300000  F8                 	db	248
  8198                           
  8199                           ;Config register CONFIG1H @ 0x300001
  8200                           ;	Clock out Enable bit
  8201                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  8202                           ;	PRLOCKED One-Way Set Enable bit
  8203                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  8204                           ;	Clock Switch Enable bit
  8205                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8206                           ;	Fail-Safe Clock Monitor Enable bit
  8207                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  8208   300001                     	org	3145729
  8209   300001  FF                 	db	255
  8210                           
  8211                           ;Config register CONFIG2L @ 0x300002
  8212                           ;	MCLR Enable bit
  8213                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  8214                           ;	Power-up timer selection bits
  8215                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  8216                           ;	Multi-vector enable bit
  8217                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  8218                           ;	IVTLOCK bit One-way set enable bit
  8219                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  8220                           ;	Low Power BOR Enable bit
  8221                           ;	LPBOREN = OFF, ULPBOR disabled
  8222                           ;	Brown-out Reset Enable bits
  8223                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  8224   300002                     	org	3145730
  8225   300002  FF                 	db	255
  8226                           
  8227                           ;Config register CONFIG2H @ 0x300003
  8228                           ;	Brown-out Reset Voltage Selection bits
  8229                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  8230                           ;	ZCD Disable bit
  8231                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  8232                           ;	PPSLOCK bit One-Way Set Enable bit
  8233                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  8234                           ;	Stack Full/Underflow Reset Enable bit
  8235                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8236                           ;	Debugger Enable bit
  8237                           ;	DEBUG = OFF, Background debugger disabled
  8238                           ;	Extended Instruction Set Enable bit
  8239                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  8240   300003                     	org	3145731
  8241   300003  FF                 	db	255
  8242                           
  8243                           ;Config register CONFIG3L @ 0x300004
  8244                           ;	WDT Period selection bits
  8245                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8246                           ;	WDT operating mode
  8247                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  8248   300004                     	org	3145732
  8249   300004  9F                 	db	159
  8250                           
  8251                           ;Config register CONFIG3H @ 0x300005
  8252                           ;	WDT Window Select bits
  8253                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8254                           ;	WDT input clock selector
  8255                           ;	WDTCCS = SC, Software Control
  8256   300005                     	org	3145733
  8257   300005  FF                 	db	255
  8258                           
  8259                           ;Config register CONFIG4L @ 0x300006
  8260                           ;	Boot Block Size selection bits
  8261                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  8262                           ;	Boot Block enable bit
  8263                           ;	BBEN = OFF, Boot block disabled
  8264                           ;	Storage Area Flash enable bit
  8265                           ;	SAFEN = OFF, SAF disabled
  8266                           ;	Application Block write protection bit
  8267                           ;	WRTAPP = OFF, Application Block not write protected
  8268   300006                     	org	3145734
  8269   300006  FF                 	db	255
  8270                           
  8271                           ;Config register CONFIG4H @ 0x300007
  8272                           ;	Boot Block Write Protection bit
  8273                           ;	WRTB = OFF, Boot Block not write-protected
  8274                           ;	Configuration Register Write Protection bit
  8275                           ;	WRTC = OFF, Configuration registers not write-protected
  8276                           ;	Data EEPROM Write Protection bit
  8277                           ;	WRTD = OFF, Data EEPROM not write-protected
  8278                           ;	SAF Write protection bit
  8279                           ;	WRTSAF = OFF, SAF not Write Protected
  8280                           ;	Low Voltage Programming Enable bit
  8281                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  8282   300007                     	org	3145735
  8283   300007  FF                 	db	255
  8284                           
  8285                           ;Config register CONFIG5L @ 0x300008
  8286                           ;	PFM and Data EEPROM Code Protection bit
  8287                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  8288   300008                     	org	3145736
  8289   300008  FF                 	db	255
  8290                           
  8291                           ;Config register CONFIG5H @ 0x300009
  8292                           ;	unspecified, using default values
  8293   300009                     	org	3145737
  8294   300009  FF                 	db	255
  8295                           tosu	equ	0x3FFF
  8296                           tosh	equ	0x3FFE
  8297                           tosl	equ	0x3FFD
  8298                           stkptr	equ	0x3FFC
  8299                           pclatu	equ	0x3FFB
  8300                           pclath	equ	0x3FFA
  8301                           pcl	equ	0x3FF9
  8302                           tblptru	equ	0x3FF8
  8303                           tblptrh	equ	0x3FF7
  8304                           tblptrl	equ	0x3FF6
  8305                           tablat	equ	0x3FF5
  8306                           prodh	equ	0x3FF4
  8307                           prodl	equ	0x3FF3
  8308                           indf0	equ	0x3FEF
  8309                           postinc0	equ	0x3FEE
  8310                           postdec0	equ	0x3FED
  8311                           preinc0	equ	0x3FEC
  8312                           plusw0	equ	0x3FEB
  8313                           fsr0h	equ	0x3FEA
  8314                           fsr0l	equ	0x3FE9
  8315                           wreg	equ	0x3FE8
  8316                           indf1	equ	0x3FE7
  8317                           postinc1	equ	0x3FE6
  8318                           postdec1	equ	0x3FE5
  8319                           preinc1	equ	0x3FE4
  8320                           plusw1	equ	0x3FE3
  8321                           fsr1h	equ	0x3FE2
  8322                           fsr1l	equ	0x3FE1
  8323                           bsr	equ	0x3FE0
  8324                           indf2	equ	0x3FDF
  8325                           postinc2	equ	0x3FDE
  8326                           postdec2	equ	0x3FDD
  8327                           preinc2	equ	0x3FDC
  8328                           plusw2	equ	0x3FDB
  8329                           fsr2h	equ	0x3FDA
  8330                           fsr2l	equ	0x3FD9
  8331                           status	equ	0x3FD8

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         111
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     88      93
    BANK0           160     50     156
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> data(BANK0[10]), STR_1(CODE[9]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> data(BANK0[10]), STR_1(CODE[9]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1004$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    S1004$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    strcat@src	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[4]), STR_7(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _IOC_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _IOC_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _IOC_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IOC_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IOC_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _IOC_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _IOC_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _IOC_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _IOC_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _IOC_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _IOC_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _IOC_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _IOC_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _IOC_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _IOC_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _IOC_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _IOC_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _IOC_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _IOC_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _IOC_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _IOC_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _IOC_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _IOC_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _IOC_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _IOC_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _IOC_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _IOC_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _IOC_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _IOC_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _IOC_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _IOC_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _IOC_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _IOC_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   14818
                                             84 COMRAM     4     4      0
                           _ADC_Init
                         _IOCC2_Init
                           _LCD_Init
                      _LCD_String_xy
                            ___flmul
                           ___xxtofl
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     2      2     122
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    14      6   12174
                                             72 COMRAM    12    12      0
                                             44 BANK0      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   11969
                                             68 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3   11835
                                             58 COMRAM    10     7      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     182
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              52    46      6   10905
                                             51 COMRAM     7     1      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               4     2      2      77
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     3      4     707
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2     331
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     232
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               7     3      4     146
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4      69
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     137
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     232
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2037
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    1988
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      46
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    1480
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     190
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1131
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     337
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3     440
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     170
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     124
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     219
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     124
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2      95
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _IOCC2_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _IOC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _IOCC2_Init
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
   _strcat

 _IOC_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh       1169      0       0      0.0%
BITBIGSFRlll       400      0       0      0.0%
BITBIGSFRh         263      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBIGSFRllh       213      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     50     156     97.5%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     88      93     97.9%
STACK                0      0       0      0.0%
DATA                 0      0     249      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun May 04 16:51:39 2025

              ___fldiv@aexp 0019                ___fldiv@bexp 0018                ___fldiv@sign 0011  
              ?_LCD_Command 0001                          l99 5CFC                 ?_LCD_String 0008  
                       l101 5D58                         l112 6726                         l121 67D8  
                       l140 650C                         l132 6618                         l109 679A  
                       l118 67F6                         l143 6776                         l127 63A8  
                       l411 5FE4                         l420 66C6                         l405 6336  
                       l416 602A                         l443 5F26                         l700 4E26  
                       l701 4E14                         l801 5B5E                         l730 5548  
                       l707 4ECE                         l804 5CBA                         l740 55AC  
                       l716 6552                         l741 5604                         l733 550C  
                       l742 55F2                         l815 5C52                         l911 61D8  
                       l808 5BF6                         l728 56E4                         l760 4FD0  
                       l824 66FC                         l770 524E                         l674 4C3E  
                       l739 558E                         l691 4D58                         l683 4F0A  
                       l675 4C2C                         l851 6422                         l915 61E0  
                       l764 5354                         l676 4BF2                         l925 59B0  
                       l942 6596                         l767 51EA                         l855 646C  
                       l871 426C                         l935 5B06                         l768 5208  
                       l688 4DE6                         l952 6128                         l777 5316  
                       l769 5260                         l962 583A                         l866 4A54  
                       l973 64C2                         l869 4426                         l959 58F6  
                       l991 628C                         l979 65D8                         l899 486C  
                       l999 6654                         _pad 640C                         wreg 3FE8  
              ___flmul@aexp 0020                ___flmul@bexp 0021                ___flmul@sign 001B  
              ___flmul@temp 0026                ___flmul@prod 0022                 LCD_Char@dat 0007  
           __end_of_IOC_ISR 67BC                ___fltol@exp1 000A                        l1002 67F8  
                      l1011 640A                        l1017 668E                        l2201 6202  
                      l3001 466C                        l2211 4A56                        l2203 620C  
                      l3011 4748                        l3003 469E                        l2301 4C10  
                      l2221 4A92                        l2213 4A62                        l2205 6228  
                      l3021 47AA                        l3013 474E                        l3005 46AE  
                      l3101 6182                        l3111 67C6                        l2311 4C5C  
                      l2303 4C1E                        l2231 4AC0                        l2223 4AA2  
                      l2215 4A70                        l2207 625A                        l3031 4842  
                      l3023 47B2                        l3015 4782                        l3007 46BE  
                      l3103 61A4                        l3113 67C8                        l2401 4EFA  
                      l2321 4C9C                        l2305 4C20                        l2241 4AEA  
                      l2233 4AD2                        l2225 4AA4                        l2217 4A72  
                      l3041 489C                        l3033 4862                        l3025 47B6  
                      l3017 4796                        l3009 46F2                        l3105 61AC  
                      l3121 5920                        l3201 658E                        l3211 675E  
                      l3115 67CA                        l3107 67BE                        l2331 4CC6  
                      l2323 4CA8                        l2315 4C70                        l2307 4C2A  
                      l2243 4AFA                        l2251 4B22                        l2235 4AD4  
                      l2219 4A82                        l2227 4AAA                        l2411 6638  
                      l3051 48C0                        l3043 48A2                        l3035 487E  
                      l3027 47BE                        l3019 479A                        l3131 596A  
                      l3123 5928                        l3221 676C                        l3213 6762  
                      l3205 6750                        l3117 67CC                        l3109 67C4  
                      l3301 5C28                        l2501 5574                        l2421 5382  
                      l2413 5356                        l2341 4D38                        l2325 4CAC  
                      l2317 4C80                        l2309 4C4C                        l2333 4CCC  
                      l2261 4B5A                        l2253 4B32                        l2245 4B0A  
                      l2237 4ADA                        l2229 4ABA                        l2405 661A  
                      l3061 48F0                        l3045 48AA                        l3037 488C  
                      l3053 48C6                        l3029 47CA                        l3133 597E  
                      l3125 5936                        l3223 676E                        l3215 6766  
                      l3207 675A                        l3231 66FE                        l3311 5C66  
                      l3303 5C34                        l2511 55EA                        l2503 557E  
                      l2431 53BA                        l2423 5392                        l2415 5362  
                      l2351 4D92                        l2335 4CF2                        l2343 4D48  
                      l2327 4CBA                        l2319 4C8E                        l2271 4B6E  
                      l2263 4B5E                        l2255 4B44                        l2247 4B1A  
                      l2239 4AE8                        l2407 6626                        l3071 49A6  
                      l3063 4948                        l3055 48D8                        l3047 48B6  
                      l3039 4898                        l3143 59B6                        l3135 5988  
                      l3127 593A                        l3119 58F8                        l3225 6770  
                      l3217 6768                        l3209 675C                        l3233 670A  
                      l3241 65DC                        l3313 5C8A                        l3305 5C42  
                      l2521 5658                        l2505 558C                        l2441 53E6  
                      l2433 53C0                        l2425 53A2                        l2417 5370  
                      l2601 506C                        l2361 4DC2                        l2353 4D9C  
                      l2345 4D6E                        l2337 4D26                        l2329 4CBC  
                      l2281 4B82                        l2273 4B72                        l2265 4B62  
                      l2257 4B52                        l2249 4B1C                        l2409 6634  
                      l3081 49FA                        l3073 49C2                        l3065 497C  
                      l3057 48E6                        l3049 48BA                        l3153 5A5E  
                      l3145 59D4                        l3137 59A2                        l3129 5962  
                      l3227 6772                        l3219 676A                        l3235 670C  
                      l3251 6606                        l3243 65DC                        l3315 5C9A  
                      l3307 5C60                        l2531 56BE                        l2515 5614  
                      l2523 565C                        l2507 559E                        l2451 541E  
                      l2443 53F6                        l2435 53C6                        l2427 53A4  
                      l2419 5372                        l2611 50B6                        l2603 5078  
                      l2371 4E0C                        l2363 4DC6                        l2355 4DAA  
                      l2347 4D7E                        l2339 4D28                        l2291 4BBE  
                      l2283 4B86                        l2275 4B76                        l2267 4B66  
                      l2259 4B56                        l3083 4A12                        l3075 49CA  
                      l3067 4984                        l3059 48EA                        l3163 5AB4  
                      l3155 5A74                        l3147 59FA                        l3139 59A8  
                      l3331 5CCA                        l3323 5CBC                        l3229 6774  
                      l3237 6778                        l3181 67E6                        l3253 660C  
                      l3245 65EC                        l3317 5CA8                        l3309 5C62  
                      l2541 56DA                        l2533 56C0                        l2525 5676  
                      l2517 5620                        l2509 55BC                        l2453 5434  
                      l2445 5406                        l2437 53D4                        l2429 53AA  
                      l2701 5F56                        l2621 5124                        l2613 50C6  
                      l2605 5086                        l2381 4E8A                        l2365 4DD6  
                      l2357 4DAC                        l2293 4BDA                        l2285 4B8A  
                      l2277 4B7A                        l2269 4B6A                        l2197 61E2  
                      l3085 4A22                        l3077 49D4                        l3069 4988  
                      l3093 612A                        l3157 5A82                        l3149 5A2C  
                      l3165 5AD2                        l3261 66E0                        l3333 5CCC  
                      l3325 5CC0                        l3239 6792                        l3183 67E8  
                      l3175 67DC                        l3191 636A                        l3247 65F4  
                      l3319 5CAA                        l2535 56C4                        l2527 568C  
                      l2519 562E                        l2471 5488                        l2455 5444  
                      l2463 5464                        l2447 5408                        l2439 53D6  
                      l2711 5FC4                        l2703 5F66                        l2631 51D0  
                      l2623 5144                        l2615 50E4                        l2607 5096  
                      l2551 4F18                        l2391 4EDC                        l2375 4E36  
                      l2383 4E8C                        l2359 4DBA                        l2367 4DD8  
                      l2295 4BEA                        l2287 4B8E                        l2279 4B7E  
                      l2199 61F2                        l3087 4A36                        l3079 49EC  
                      l3095 6132                        l3263 66F0                        l3255 66C8  
                      l3271 63BA                        l3343 5CFE                        l3351 5D54  
                      l3335 5CE2                        l3327 5CC4                        l3185 67EA  
                      l3177 67E2                        l3193 636E                        l3249 65FE  
                      l3281 5B28                        l2537 56D2                        l2529 56A6  
                      l2481 54D8                        l2473 54A2                        l2465 5474  
                      l2457 544C                        l2449 540E                        l2713 5FD2  
                      l2705 5F94                        l2641 5246                        l2633 51DA  
                      l2625 516E                        l2617 50F4                        l2609 50A6  
                      l2561 4F58                        l2553 4F26                        l2721 6690  
                      l2393 4EE2                        l2385 4E9C                        l2377 4E42  
                      l2369 4DF6                        l2297 4C00                        l2289 4B92  
                      l3089 4A3E                        l3097 615A                        l3169 5ADE  
                      l3257 66D0                        l3273 63D6                        l3361 5DF4  
                      l3353 5D66                        l3345 5D14                        l3337 5CF4  
                      l3329 5CC8                        l3179 67E4                        l3187 6338  
                      l3291 5BA0                        l3283 5B6E                        l2539 56D8  
                      l2491 5534                        l2483 54E8                        l2475 54B2  
                      l2467 5474                        l2459 5450                        l2715 6022  
                      l2707 5FA4                        l2651 52B4                        l2635 51E8  
                      l2627 51A4                        l2619 5114                        l2571 4F88  
                      l2563 4F5E                        l2555 4F28                        l2723 66A6  
                      l2395 4EE4                        l2387 4EAC                        l2379 4E50  
                      l2299 4C0C                        l2731 5E38                        l2803 6120  
                      l2811 646E                        l3099 6162                        l3195 6554  
                      l3259 66D8                        l3275 63DC                        l3267 63AA  
                      l3363 5E04                        l3355 5D7E                        l3347 5D2C  
                      l3189 633C                        l3293 5BAC                        l3285 5B84  
                      l3277 5B0A                        l2493 5536                        l2485 54FC  
                      l2477 54C2                        l2717 6028                        l2709 5FB2  
                      l2661 5310                        l2645 5270                        l2653 52B8  
                      l2637 51FA                        l2629 51B2                        l2581 4FC0  
                      l2573 4F8A                        l2565 4F6E                        l2557 4F38  
                      l2549 4F0C                        l2725 66B6                        l2397 4EEA  
                      l2389 4ECC                        l2741 5E88                        l2821 5706  
                      l2813 647C                        l2901 4182                        l3197 655C  
                      l3269 63B6                        l3357 5DCA                        l3349 5D4C  
                      l3295 5BDE                        l3279 5B1A                        l2495 5546  
                      l2487 550A                        l2479 54D2                        l2663 531A  
                      l2671 5340                        l2655 52D2                        l2647 527C  
                      l2639 5218                        l2591 5014                        l2583 4FE0  
                      l2575 4F9A                        l2567 4F74                        l2559 4F48  
                      l2399 4EF8                        l2751 5EB2                        l2743 5E8C  
                      l2735 5E4C                        l2831 57EE                        l2823 575C  
                      l2815 6490                        l2807 6656                        l2903 4188  
                      l3199 656C                        l3359 5DE8                        l3297 5BE0  
                      l3289 5B98                        l2497 5558                        l2489 5516  
                      l2673 5344                        l2665 532A                        l2657 52E6  
                      l2649 528A                        l2593 501E                        l2585 4FF0  
                      l2577 4FAA                        l2569 4F7A                        l2761 5EDA  
                      l2753 5EBC                        l2745 5E9A                        l2737 5E76  
                      l2729 5E22                        l2841 58D6                        l2833 582A  
                      l2825 5770                        l2809 665A                        l2921 4202  
                      l2905 4190                        l2913 41C0                        l3299 5BEC  
                      l2499 556E                        l2691 630A                        l2683 628E  
                      l2667 5338                        l2659 5300                        l2595 5038  
                      l2579 4FBA                        l2763 5EE6                        l2755 5EC6  
                      l2739 5E78                        l2843 58E6                        l2827 577E  
                      l2835 585E                        l2819 56E6                        l2851 65AE  
                      l2923 420A                        l2915 41E6                        l2931 421C  
                      l2907 419E                        l2693 632E                        l2685 62BC  
                      l2669 533A                        l2597 5044                        l2589 5004  
                      l2677 650E                        l2765 5EF6                        l2837 589A  
                      l2853 65B0                        l2781 6442                        l2773 640C  
                      l2941 42B6                        l2933 4236                        l2917 41F8  
                      l2909 41A8                        ?_pad 000E                        l2871 64F6  
                      l2695 6334                        l2687 62CC                        l2599 5060  
                      l2679 651E                        l2767 5F06                        l2791 60B2  
                      l2839 58AE                        l2855 65BE                        l2847 6598  
                      l2783 6460                        l2775 641A                        l2951 43AC  
                      l2943 42F4                        l2919 41FC                        l2865 64D8  
                      l2857 64C4                        l2689 62FA                        l2769 5F16  
                      l2793 60BE                        l2785 602C                        l2849 65A4  
                      l2777 642E                        l2961 443E                        l2953 43B4  
                      l2945 4326                        l2937 427C                        l2881 40FC  
                      l2873 40B2                        l2867 64DC                        l2859 64D0  
                      l2699 5F28                        l2787 604C                        l2779 643E  
                      l2971 4470                        l2963 444A                        l2947 4364  
                      l2939 4282                        l2891 413A                        l2883 4106  
                      l2875 40C6                        l2869 64F2                        l2789 608A  
                      l2797 60CA                        l2981 44B8                        l2973 447E  
                      l2965 4452                        l2949 4378                        l2957 43F4  
                      l2893 4142                        l2885 410E                        l2877 40D4  
                      l2799 60DC                        l2991 45CC                        l2983 44C8  
                      l2975 4496                        l2967 445A                        l2959 442E  
                      l2887 411E                        l2895 4146                        l2879 40D8  
                      l2985 44DC                        l2993 45D2                        l2977 44A8  
                      l2969 445E                        l2897 416C                        l2889 412E  
                      l2995 45F0                        l2987 4540                        l2979 44B0  
                      l2899 417E                        l2997 4624                        l2989 4598  
                      l2999 4656                        STR_1 2001                        STR_2 200A  
                      STR_3 2017                        STR_4 200F                        STR_7 2013  
                      u2000 4BD8                        u2010 4C00                        u2011 4BFC  
                      u2100 4D38                        u2020 4C1E                        u2101 4D34  
                      u2021 4C1A                        u2110 4D6E                        u2030 4C3E  
                      u2111 4D6A                        u2031 4C3A                        u2200 4E36  
                      u2120 4D7E                        u2040 4C4C                        u3000 577E  
                      u2201 4E32                        u2121 4D7A                        u2041 4C48  
                      u3001 577A                        u2210 4E50                        u2130 4DAA  
                      u2050 4C5C                        u2211 4E4C                        u2131 4DA6  
                      u2051 4C58                        u3100 650C                        u2300 5382  
                      u2220 4E8A                        u2140 4DBA                        u2060 4C8E  
                      u3020 57EA                        u3101 6508                        u2301 537E  
                      u2221 4E86                        u2141 4DB6                        u2061 4C8A  
                      u3021 57E6                        u2310 5392                        u2230 4E9C  
                      u2150 4DD6                        u2070 4C9C                        u3030 580E  
                      u3110 40D4                        _LATB 3FBB                        u2311 538E  
                      u2231 4E98                        u2151 4DD2                        u2071 4C98  
                      u3015 5792                        u3111 40D0                        u2400 5558  
                      u2320 53D4                        u2240 4EAC                        u2160 4DE6  
                      u2080 4CBA                        u3040 582A                        u3016 579C  
                      u3200 4326                        u3120 411E                        u2401 5554  
                      u2321 53D0                        u2241 4EA8                        u2161 4DE2  
                      u2081 4CB6                        u3041 5826                        u3017 57AC  
                      u3201 4322                        u3121 411A                        u2410 556E  
                      u2330 53E6                        u2250 4ECC                        u2170 4DF6  
                      u2090 4CF2                        u3050 587E                        u3210 4364  
                      u3130 412E                        u2411 556A                        u2331 53E2  
                      u2251 4EC8                        u2171 4DF2                        u2091 4CEE  
                      u3035 5804                        u3211 4360                        u3131 412A  
                      u2500 56A6                        u2420 558C                        u2340 53F6  
                      u2260 4EDC                        u2180 4E0C                        u3060 589A  
                      u3300 469E                        u3220 43F0                        u3140 416C  
                      u2501 56A2                        u2421 5588                        u2341 53F2  
                      u2261 4ED8                        u2181 4E08                        u3061 5896  
                      u3301 469A                        u3221 43EC                        u3141 4168  
                      u2510 56D2                        u2430 55AC                        u2350 5434  
                      u2270 4EF8                        u2190 4E22                        u3070 58D6  
                      u3310 46AE                        u3230 4426                        u3150 417E  
                      u2511 56CE                        u2431 55A8                        u2351 5430  
                      u2271 4EF4                        u2191 4E1E                        u3071 58D2  
                      u3055 5874                        u3311 46AA                        u3231 4422  
                      u3151 417A                        u2440 55BC                        u2360 5474  
                      u2600 518E                        u2520 4F26                        u3080 65D8  
                      u2280 6654                        u3400 4A0C                        u3320 4748  
                      u3240 443E                        u3160 41E6                        u2441 55B8  
                      u2361 5470                        u2521 4F22                        u3081 65D4  
                      u2281 6650                        u3401 4A06                        u3321 4744  
                      u3241 443A                        u3161 41E2                        u3090 64F2  
                      u2450 55EA                        u2370 54E8                        u2290 5370  
                      u2610 51E8                        u2530 4F38                        u3410 4A0E  
                      u3330 4796                        u3250 4470                        u3170 41F8  
                      u3091 64EE                        u2451 55E6                        u2371 54E4  
                      u2291 536C                        u2611 51E4                        u2531 4F34  
                      u3331 4792                        u3251 446C                        u3171 41F4  
                      u3500 63A8                        u2460 5600                        u2380 550A  
                      u2700 5338                        u2620 5208                        u2540 4F48  
                      u1900 4A82                        u3420 4A22                        u3340 4842  
                      u3260 447E                        u3180 4268                        u3501 63A4  
                      u2461 55FC                        u2381 5506                        u2701 5334  
                      u2621 5204                        u2605 5184                        u2541 4F44  
                      u1901 4A7E                        u3421 4A1E                        u3341 483E  
                      u3261 447A                        u3181 4264                        u2470 5614  
                      u2390 5534                        u2710 62BC                        u2630 5218  
                      u2550 4F88                        u1910 4A92                        u3350 487E  
                      u3270 44A8                        u3190 42F4                        u3430 615A  
                      u3510 658E                        u2471 5610                        u2391 5530  
                      u2711 62B8                        u2631 5214                        u2551 4F84  
                      u1911 4A8E                        u3351 487A                        u3271 44A4  
                      u3191 42F0                        u3431 6156                        u3511 658A  
                      u3520 65EC                        u3600 5C42                        u2480 562E  
                      u2720 62FA                        u2640 5246                        u2560 4F9A  
                      u1920 4AD2                        u2800 5E38                        u3360 488C  
                      u3280 45F0                        u3440 61D8                        u3521 65E8  
                      u3601 5C3E                        u2481 562A                        u2721 62F6  
                      u2641 5242                        u2561 4F96                        u1921 4ACE  
                      u2801 5E34                        u3361 4888                        u3281 45EC  
                      u3441 61D4                        u3610 5C52                        u2490 5676  
                      u2730 632E                        u2650 525C                        u2570 4FAA  
                      u1930 4AE8                        u2810 5E6C                        u1850 61F2  
                      u3370 48D8                        u3290 4656                        u3450 5920  
                      u3530 63D2                        u3611 5C4E                        u2491 5672  
                      u2731 632A                        u2651 5258                        u2571 4FA6  
                      u1931 4AE4                        u1851 61EE                        u3371 48D4  
                      u3291 4652                        u3451 591C                        u3531 63CE  
                      u3620 5C60                        u2740 5F56                        u2660 5270  
                      u2580 4FE0                        u1940 4AFA                        u2820 5E9A  
                      u2900 608A                        u1860 6202                        u3380 49A6  
                      u3460 5962                        u3540 640A                        u3621 5C5C  
                      u2741 5F52                        u2661 526C                        u2581 4FDC  
                      u1941 4AF6                        u2821 5E96                        u2901 6086  
                      u1861 61FE                        u3381 49A2                        u3461 595E  
                      u3541 6406                        u3630 5C9A                        u3550 5B1A  
                      u2750 5F94                        u2670 528A                        u2590 4FF0  
                      u1950 4B0A                        u2830 5EAE                        u2910 60B2  
                      u1870 6228                        u3390 49C2                        u3470 59F6  
                      u3631 5C96                        u3551 5B16                        u2751 5F90  
                      u2671 5286                        u2591 4FEC                        u1951 4B06  
                      u2831 5EAA                        u2815 5E62                        u2911 60AE  
                      u1871 6224                        u3391 49BE                        u3471 59F2  
                      u3480 6366                        u3640 5CA8                        u3560 5B28  
                      u2760 5FB2                        u2680 52D2                        u1960 4B44  
                      u2840 5ED6                        u2920 60DC                        u1880 625A  
                      u3641 5CA4                        u3561 5B24                        u2761 5FAE  
                      u2681 52CE                        u1961 4B40                        u2841 5ED2  
                      u2921 60D8                        u1881 6256                        u3490 6398  
                      u3570 5B84                        u2770 5FD2                        u2690 5300  
                      u1970 4B52                        u1890 4A70                        u2850 5EF6  
                      u3650 5CF4                        u3571 5B80                        u2771 5FCE  
                      u2691 52FC                        u1971 4B4E                        u1891 4A6C  
                      u2851 5EF2                        u3707 5E0E                        u3651 5CF0  
                      u3580 5BDA                        u2780 6022                        u1980 4BBE  
                      u2860 5F06                        u2940 6116                        u3660 5D4C  
                      u3581 5BD6                        u2781 601E                        u1981 4BBA  
                      u2861 5F02                        u2941 6110                        u3661 5D48  
                      u3590 5C24                        u2790 66A6                        u1990 4BD6  
                      u2950 6118                        u2870 641A                        u3670 5D66  
                      u3487 6358                        u3591 5C20                        u2791 66A2  
                      u1991 4BD0                        u2935 60EE                        u2871 6416  
                      u3671 5D62                        u2880 6460                        u2960 668E  
                      u3497 638A                        u2881 645C                        u2961 668A  
                      u2890 606C                        u2970 647C                        u2971 6478  
                      u2980 572E                        u2990 575C                        u2895 6062  
                      u2991 5758                        u3687 5D08                        u2985 5724  
                      u3697 5D20                        i2l92 67BA                        _data 00C0  
                      _dbuf 0070                        _halt 0059                        _labs 646E  
                      _main 5CBC                        _prec 006E                        pad@i 0013  
                      pad@p 0010                        fsr1h 3FE2                        fsr2h 3FDA  
                      indf1 3FE7                        indf2 3FDF                        fsr1l 3FE1  
                      fsr2l 3FD9            __end_of_ADC_Init 6778               ___fpclassifyf 602C  
                      prodh 3FF4                        prodl 3FF3                        start 40AE  
           __end_of_MSdelay 650E             ___fldiv@new_exp 0012               _LCD_String_xy 65DA  
              ___param_bank 0000                       ??_pad 0012            __end_of_LCD_Char 67DA  
          __end_of_LCD_Init 6728               ___fltol@sign1 0009                       ?_labs 0001  
           __end_of___fladd 4F0C                       ?_main 0001                       _ADCLK 3EFF  
                     _ADPCH 3EF1             __end_of___fldiv 56E6             __end_of___flneg 66C8  
           __end_of___flmul 5356             __end_of___flsub 6554             __end_of___fltol 5F28  
                     _LATD0 1FDE8                       _LATD1 1FDE9                vfpfcnvrt@fmt 003C  
                     _TRISB 3FC3                       _TRISD 3FC5                       _flags 005D  
       read_prec_or_width@c 0005         read_prec_or_width@n 0006                       _fputc 61E2  
                     _fputs 661A                       labs@a 0001                       pad@fp 000E  
                     _width 006C                       _putch 67F8                       main@i 0057  
                     tablat 3FF5                       status 3FD8             __end_of_sprintf 66FE  
            ?___fpclassifyf 0001              ?_LCD_String_xy 000A             __initialization 6728  
              __end_of_labs 64C4                __end_of_main 5E22                      ??_labs 0005  
                    ??_main 0055               __activetblptr 0003                   ??_IOC_ISR 0001  
__end_of_read_prec_or_width 61E2                      _ADACQH 3EF4                      _ADACQL 3EF3  
                    ?_fputc 0001                      ?_fputs 0009                      _ADRESH 3EF0  
                    _ADRESL 3EEF                      _ADPREH 3EF7                      _ADPREL 3EF6  
                    ?_putch 0001            LCD_String_xy@msg 000B            LCD_String_xy@pos 000A  
          LCD_String_xy@row 000D                   ??_MSdelay 0003                      i2l2151 67B6  
                    i2l2145 679C                      i2l2147 67AC                      i2l2149 67B4  
          __end_of___xxtofl 5CBC                vfprintf@cfmt 0048                      ___flge 5F28  
                    ___fleq 628E                   ??___fladd 0009                   ??___fldiv 0009  
                 ??___flneg 0005                   ??___flmul 0017                   ??___flsub 0030  
                 ??___fltol 0005                      _efgtoa 40B2                      _floorf 56E6  
                    _memcpy 6598        read_prec_or_width@ap 0002                      clear_0 672E  
                    isa$std 0001                      pad@buf 000F                      _strcat 63AA  
                    _strcpy 6656                      fputc@c 0001                      fputs@c 000B  
                    fputs@i 000C                      fputs@s 0009             ___fpclassifyf@e 0009  
                 ?_ADC_Init 0001             ___fpclassifyf@u 000B             ___fpclassifyf@x 0001  
              __mediumconst 2000                      tblptrh 3FF7                      tblptrl 3FF6  
                    tblptru 3FF8                      putch@c 0001            __end_of_vfprintf 6598  
                 ??_sprintf 0049                  ___flge@ff1 0028                  ___flge@ff2 002C  
           ??___fpclassifyf 0005                ??_IOCC2_Init 0001                ___xxtofl@arg 000B  
              ___xxtofl@exp 000A                ___xxtofl@val 0001                  ___fleq@ff1 0001  
                ___fleq@ff2 0005                   ?_LCD_Char 0001                  __accesstop 0060  
   __end_of__initialization 674A                   ?_LCD_Init 0001             ??_LCD_String_xy 000D  
                ___flneg@f1 0001               ___rparam_used 0001                  ___fltol@f1 0001  
            __pcstackCOMRAM 0001               __end_of_fputc 628E               __end_of_fputs 6656  
             __end_of_putch 67FA                ??_LCD_String 000A          __end_of_IOCC2_Init 679C  
                ??_ADC_Init 0001                     ??_fputc 0004                     ??_fputs 000B  
                   ??_putch 0001                  __pbssBANK0 0060                  ??_LCD_Char 0007  
                ??_LCD_Init 0008          __end_of_LCD_String 63AA                     IVTBASEH 3FD6  
                   IVTBASEL 3FD5                     IVTBASEU 3FD7                     ?___flge 0028  
                   ?___fleq 0001                     ?_efgtoa 0034                     ?_floorf 001A  
                   ?_memcpy 0001                     ?_strcat 0001                     ?_strcpy 0001  
                   _IOC_ISR 679C                   ?___xxtofl 0001                     _MSdelay 64C4  
             LCD_String@msg 0008                     __Hparam 0000                     __Lparam 0000  
                   ___fladd 4A56                     ___fldiv 5356                     ___flneg 6690  
                   ___flmul 4F0C                     ___flsub 650E                     ___fltol 5E22  
                 ?_vfprintf 0045                __psmallconst 2000                     __pcinit 6728  
                   __ramtop 2000                     _digital 005B               ivt0x4008_base 4008  
                   __ptext0 5CBC                     __ptext1 63AA                     __ptext2 66C8  
                   __ptext3 6554                     __ptext4 58F8                     __ptext5 612A  
                   __ptext6 40B2                     __ptext7 6656                     __ptext8 640C  
                   __ptext9 661A       read_prec_or_width@fmt 0001                  ??___xxtofl 0005  
                 _IOCCFbits 3A67                     efgtoa@c 0039                     efgtoa@d 00D5  
                   efgtoa@e 00D9                     efgtoa@f 0035                     efgtoa@g 00EE  
                   efgtoa@h 00E3                     efgtoa@i 00E1                     efgtoa@l 00E7  
                   efgtoa@m 00D7                     efgtoa@n 00EC                     efgtoa@p 00CC  
                   efgtoa@t 00CE                     efgtoa@u 00F2                     efgtoa@w 00DB  
                 _IOCCNbits 3A66                   _IOCCPbits 3A65                     _sprintf 66C8  
                   _voltage 0068        end_of_initialization 674A                     floorf@e 0028  
                   floorf@m 0024                     floorf@u 002A                     floorf@x 001A  
                   memcpy@d 0006                     memcpy@n 0003                     memcpy@s 0007  
                   fputc@fp 0003              LCD_Command@cmd 0007                     fputs@fp 000A  
        _read_prec_or_width 612A           __end_of_vfpfcnvrt 5B08                  efgtoa@mode 00D3  
                efgtoa@sign 00EB                     postdec2 3FDD         ?_read_prec_or_width 0001  
                   postinc0 3FEE                     postinc1 3FE6                     postinc2 3FDE  
          vfpfcnvrt@convarg 003F                  ??_vfprintf 0048                     strcat@i 0003  
                   strcpy@d 0004                 ___fladd@grs 0010               ___xxtofl@sign 0009  
                 _TRISAbits 3FC2                   _TRISCbits 3FC4        ??_read_prec_or_width 0003  
               ___fldiv@grs 0014                 ___fldiv@rem 000D                 ___flmul@grs 001C  
             ??_LCD_Command 0007              __end_of___flge 602C              __end_of___fleq 6338  
               vfpfcnvrt@ap 003D                 vfpfcnvrt@cp 0044                 vfpfcnvrt@fp 003B  
            __end_of_efgtoa 4A56              __end_of_floorf 58F8              __end_of_memcpy 65DA  
                floorf@F521 0060              __end_of_strcat 640C              __end_of_strcpy 6690  
       start_initialization 6728                 __end_of_pad 646E       __end_of___fpclassifyf 612A  
     __end_of_LCD_String_xy 661A                 vfprintf@fmt 0046                    ??___flge 0030  
                  ??___fleq 0009                    ??_efgtoa 003A                    ??_floorf 001E  
                  ??_memcpy 0005                    ??_strcat 0003                    ??_strcpy 0003  
                 ___fladd@a 0005                   ___fladd@b 0001                   ___fldiv@a 0005  
                 ___fldiv@b 0001         __end_of_LCD_Command 67F8                    ?_IOC_ISR 0001  
                 ___flmul@a 0013                   ___flmul@b 000F                 __pbssCOMRAM 0059  
                 ___flsub@a 002C                   ___flsub@b 0028               __pcstackBANK0 00CA  
                  ?_MSdelay 0001                 __pivt0x4008 4008                 _efgtoa$1129 00D0  
                  ?___fladd 0001                    ?___fldiv 0001                    ?___flneg 0001  
                  ?___flmul 000F                    ?___flsub 0028                    ?___fltol 0001  
               __smallconst 2000                    _ADC_Init 6750       LCD_String_xy@location 000E  
                  ?_sprintf 00F6                    MSdelay@i 0003                    MSdelay@j 0005  
                  _LCD_Char 67BC                    _LCD_Init 66FE                    _LATCbits 3FBC  
                  _PIE0bits 3990                    _IVTBASEH 3FD6                    _IVTBASEL 3FD5  
                  _IVTBASEU 3FD7                    i2u181_40 67AC                    i2u181_41 67A8  
                  _PIR0bits 39A0           ivt0x4008_undefint 40AC                 _LCD_Command 67DA  
                 _vfpfcnvrt 58F8                  _ADCON0bits 3EF8                    _WPUCbits 3A61  
                vfpfcnvrt@c 0043                 _INTCON0bits 3FD2                    __Hrparam 0000  
                 memcpy@tmp 0005                  vfprintf@ap 0047                    __Lrparam 0000  
                vfprintf@fp 0045                  ?_vfpfcnvrt 003B                  _ANSELAbits 3A40  
                _ANSELCbits 3A60          ___fpclassifyf@F465 0064                  sprintf@fmt 00F7  
                  ___xxtofl 5B08                  strcat@dest 0001                    __ptext10 61E2  
                  __ptext11 67F8                    __ptext20 4F0C                    __ptext12 6598  
                  __ptext21 5F28                    __ptext13 646E                    __ptext30 64C4  
                  __ptext22 628E                    __ptext14 56E6                    __ptext31 6778  
                  __ptext23 5356                    __ptext15 602C                    __ptext32 6750  
                  __ptext24 5B08                    __ptext16 5E22                    __ptext33 679C  
                  __ptext25 65DA                    __ptext17 650E                    __ptext26 6338  
                  __ptext18 4A56                    __ptext27 67BC                    __ptext19 6690  
                  __ptext28 66FE                    __ptext29 67DA                  strcpy@dest 0001  
                _IOCC2_Init 6778                  MSdelay@val 0001                    efgtoa@fp 0034  
                  efgtoa@ne 00CA                    efgtoa@pp 00D2                    efgtoa@ou 00DD  
                  isa$xinst 0000                    _vfprintf 6554                  _LCD_String 6338  
                  memcpy@d1 0001                    memcpy@s1 0002                    intlevel2 0000  
                 sprintf@ap 0049                   strcat@src 0002                   strcpy@src 0002  
               efgtoa@nmode 00D4                 ??_vfpfcnvrt 003E                    sprintf@f 004A  
                  sprintf@s 00F6               ___fladd@signs 000D                 ?_IOCC2_Init 0001  
              ___fladd@aexp 000E                ___fladd@bexp 000F  
