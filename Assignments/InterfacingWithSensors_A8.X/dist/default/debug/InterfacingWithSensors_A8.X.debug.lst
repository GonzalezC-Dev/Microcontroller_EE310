

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 29 11:40:35 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=4,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	ivt0x4008,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    27                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Generated 12/10/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F47K42 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   003FE0                     bsr             equ	16352
    67   003FE9                     fsr0            equ	16361
    68   003FEA                     fsr0h           equ	16362
    69   003FE9                     fsr0l           equ	16361
    70   003FE1                     fsr1            equ	16353
    71   003FE2                     fsr1h           equ	16354
    72   003FE1                     fsr1l           equ	16353
    73   003FD9                     fsr2            equ	16345
    74   003FDA                     fsr2h           equ	16346
    75   003FD9                     fsr2l           equ	16345
    76   003FEF                     indf0           equ	16367
    77   003FE7                     indf1           equ	16359
    78   003FDF                     indf2           equ	16351
    79   003FD2                     intcon          equ	16338
    80   0039E5                     nvmcon          equ	14821
    81   003FF9                     pcl             equ	16377
    82   003FFA                     pclath          equ	16378
    83   003FFB                     pclatu          equ	16379
    84   003FEB                     plusw0          equ	16363
    85   003FE3                     plusw1          equ	16355
    86   003FDB                     plusw2          equ	16347
    87   003FED                     postdec0        equ	16365
    88   003FE5                     postdec1        equ	16357
    89   003FDD                     postdec2        equ	16349
    90   003FEE                     postinc0        equ	16366
    91   003FE6                     postinc1        equ	16358
    92   003FDE                     postinc2        equ	16350
    93   003FEC                     preinc0         equ	16364
    94   003FE4                     preinc1         equ	16356
    95   003FDC                     preinc2         equ	16348
    96   003FF3                     prod            equ	16371
    97   003FF4                     prodh           equ	16372
    98   003FF3                     prodl           equ	16371
    99   003FD8                     status          equ	16344
   100   003FF5                     tablat          equ	16373
   101   003FF6                     tblptr          equ	16374
   102   003FF7                     tblptrh         equ	16375
   103   003FF6                     tblptrl         equ	16374
   104   003FF8                     tblptru         equ	16376
   105   003FFD                     tosl            equ	16381
   106   003FE8                     wreg            equ	16360
   107   003880                     STATUS_CSHAD    equ	14464	;# 
   108   003881                     WREG_CSHAD      equ	14465	;# 
   109   003882                     BSR_CSHAD       equ	14466	;# 
   110   003883                     SHADCON         equ	14467	;# 
   111   003884                     STATUS_SHAD     equ	14468	;# 
   112   003885                     WREG_SHAD       equ	14469	;# 
   113   003886                     BSR_SHAD        equ	14470	;# 
   114   003887                     PCLATH_SHAD     equ	14471	;# 
   115   003888                     PCLATU_SHAD     equ	14472	;# 
   116   003889                     FSR0SH          equ	14473	;# 
   117   003889                     FSR0L_SHAD      equ	14473	;# 
   118   00388A                     FSR0H_SHAD      equ	14474	;# 
   119   00388B                     FSR1SH          equ	14475	;# 
   120   00388B                     FSR1L_SHAD      equ	14475	;# 
   121   00388C                     FSR1H_SHAD      equ	14476	;# 
   122   00388D                     FSR2SH          equ	14477	;# 
   123   00388D                     FSR2L_SHAD      equ	14477	;# 
   124   00388E                     FSR2H_SHAD      equ	14478	;# 
   125   00388F                     PRODSH          equ	14479	;# 
   126   00388F                     PRODL_SHAD      equ	14479	;# 
   127   003890                     PRODH_SHAD      equ	14480	;# 
   128   00389D                     IVTADL          equ	14493	;# 
   129   00389E                     IVTADH          equ	14494	;# 
   130   00389F                     IVTADU          equ	14495	;# 
   131   00395B                     WDTCON0         equ	14683	;# 
   132   00395C                     WDTCON1         equ	14684	;# 
   133   00395D                     WDTPSL          equ	14685	;# 
   134   00395E                     WDTPSH          equ	14686	;# 
   135   00395F                     WDTTMR          equ	14687	;# 
   136   003960                     CRCDATA         equ	14688	;# 
   137   003960                     CRCDATL         equ	14688	;# 
   138   003961                     CRCDATH         equ	14689	;# 
   139   003962                     CRCACC          equ	14690	;# 
   140   003962                     CRCACCL         equ	14690	;# 
   141   003963                     CRCACCH         equ	14691	;# 
   142   003964                     CRCSHFT         equ	14692	;# 
   143   003964                     CRCSHIFTL       equ	14692	;# 
   144   003965                     CRCSHIFTH       equ	14693	;# 
   145   003966                     CRCXOR          equ	14694	;# 
   146   003966                     CRCXORL         equ	14694	;# 
   147   003967                     CRCXORH         equ	14695	;# 
   148   003968                     CRCCON0         equ	14696	;# 
   149   003969                     CRCCON1         equ	14697	;# 
   150   003976                     SCANLADR        equ	14710	;# 
   151   003976                     SCANLADRL       equ	14710	;# 
   152   003977                     SCANLADRH       equ	14711	;# 
   153   003978                     SCANLADRU       equ	14712	;# 
   154   003979                     SCANHADR        equ	14713	;# 
   155   003979                     SCANHADRL       equ	14713	;# 
   156   00397A                     SCANHADRH       equ	14714	;# 
   157   00397B                     SCANHADRU       equ	14715	;# 
   158   00397C                     SCANCON0        equ	14716	;# 
   159   00397D                     SCANTRIG        equ	14717	;# 
   160   003980                     IPR0            equ	14720	;# 
   161   003981                     IPR1            equ	14721	;# 
   162   003982                     IPR2            equ	14722	;# 
   163   003983                     IPR3            equ	14723	;# 
   164   003984                     IPR4            equ	14724	;# 
   165   003985                     IPR5            equ	14725	;# 
   166   003986                     IPR6            equ	14726	;# 
   167   003987                     IPR7            equ	14727	;# 
   168   003988                     IPR8            equ	14728	;# 
   169   003989                     IPR9            equ	14729	;# 
   170   00398A                     IPR10           equ	14730	;# 
   171   003990                     PIE0            equ	14736	;# 
   172   003991                     PIE1            equ	14737	;# 
   173   003992                     PIE2            equ	14738	;# 
   174   003993                     PIE3            equ	14739	;# 
   175   003994                     PIE4            equ	14740	;# 
   176   003995                     PIE5            equ	14741	;# 
   177   003996                     PIE6            equ	14742	;# 
   178   003997                     PIE7            equ	14743	;# 
   179   003998                     PIE8            equ	14744	;# 
   180   003999                     PIE9            equ	14745	;# 
   181   00399A                     PIE10           equ	14746	;# 
   182   0039A0                     PIR0            equ	14752	;# 
   183   0039A1                     PIR1            equ	14753	;# 
   184   0039A2                     PIR2            equ	14754	;# 
   185   0039A3                     PIR3            equ	14755	;# 
   186   0039A4                     PIR4            equ	14756	;# 
   187   0039A5                     PIR5            equ	14757	;# 
   188   0039A6                     PIR6            equ	14758	;# 
   189   0039A7                     PIR7            equ	14759	;# 
   190   0039A8                     PIR8            equ	14760	;# 
   191   0039A9                     PIR9            equ	14761	;# 
   192   0039AA                     PIR10           equ	14762	;# 
   193   0039C0                     PMD0            equ	14784	;# 
   194   0039C1                     PMD1            equ	14785	;# 
   195   0039C2                     PMD2            equ	14786	;# 
   196   0039C3                     PMD3            equ	14787	;# 
   197   0039C4                     PMD4            equ	14788	;# 
   198   0039C5                     PMD5            equ	14789	;# 
   199   0039C6                     PMD6            equ	14790	;# 
   200   0039C7                     PMD7            equ	14791	;# 
   201   0039D0                     BORCON          equ	14800	;# 
   202   0039D1                     VREGCON         equ	14801	;# 
   203   0039D8                     CPUDOZE         equ	14808	;# 
   204   0039D9                     OSCCON1         equ	14809	;# 
   205   0039DA                     OSCCON2         equ	14810	;# 
   206   0039DB                     OSCCON3         equ	14811	;# 
   207   0039DC                     OSCSTAT         equ	14812	;# 
   208   0039DC                     OSCSTAT1        equ	14812	;# 
   209   0039DD                     OSCEN           equ	14813	;# 
   210   0039DE                     OSCTUNE         equ	14814	;# 
   211   0039DF                     OSCFRQ          equ	14815	;# 
   212   0039E0                     NVMADRL         equ	14816	;# 
   213   0039E1                     NVMADRH         equ	14817	;# 
   214   0039E3                     NVMDAT          equ	14819	;# 
   215   0039E5                     NVMCON1         equ	14821	;# 
   216   0039E6                     NVMCON2         equ	14822	;# 
   217   0039EF                     PRLOCK          equ	14831	;# 
   218   0039F1                     ISRPR           equ	14833	;# 
   219   0039F2                     MAINPR          equ	14834	;# 
   220   0039F3                     DMA1PR          equ	14835	;# 
   221   0039F4                     DMA2PR          equ	14836	;# 
   222   0039F7                     SCANPR          equ	14839	;# 
   223   003A00                     RA0PPS          equ	14848	;# 
   224   003A01                     RA1PPS          equ	14849	;# 
   225   003A02                     RA2PPS          equ	14850	;# 
   226   003A03                     RA3PPS          equ	14851	;# 
   227   003A04                     RA4PPS          equ	14852	;# 
   228   003A05                     RA5PPS          equ	14853	;# 
   229   003A06                     RA6PPS          equ	14854	;# 
   230   003A07                     RA7PPS          equ	14855	;# 
   231   003A08                     RB0PPS          equ	14856	;# 
   232   003A09                     RB1PPS          equ	14857	;# 
   233   003A0A                     RB2PPS          equ	14858	;# 
   234   003A0B                     RB3PPS          equ	14859	;# 
   235   003A0C                     RB4PPS          equ	14860	;# 
   236   003A0D                     RB5PPS          equ	14861	;# 
   237   003A0E                     RB6PPS          equ	14862	;# 
   238   003A0F                     RB7PPS          equ	14863	;# 
   239   003A10                     RC0PPS          equ	14864	;# 
   240   003A11                     RC1PPS          equ	14865	;# 
   241   003A12                     RC2PPS          equ	14866	;# 
   242   003A13                     RC3PPS          equ	14867	;# 
   243   003A14                     RC4PPS          equ	14868	;# 
   244   003A15                     RC5PPS          equ	14869	;# 
   245   003A16                     RC6PPS          equ	14870	;# 
   246   003A17                     RC7PPS          equ	14871	;# 
   247   003A18                     RD0PPS          equ	14872	;# 
   248   003A19                     RD1PPS          equ	14873	;# 
   249   003A1A                     RD2PPS          equ	14874	;# 
   250   003A1B                     RD3PPS          equ	14875	;# 
   251   003A1C                     RD4PPS          equ	14876	;# 
   252   003A1D                     RD5PPS          equ	14877	;# 
   253   003A1E                     RD6PPS          equ	14878	;# 
   254   003A1F                     RD7PPS          equ	14879	;# 
   255   003A20                     RE0PPS          equ	14880	;# 
   256   003A21                     RE1PPS          equ	14881	;# 
   257   003A22                     RE2PPS          equ	14882	;# 
   258   003A40                     ANSELA          equ	14912	;# 
   259   003A41                     WPUA            equ	14913	;# 
   260   003A42                     ODCONA          equ	14914	;# 
   261   003A43                     SLRCONA         equ	14915	;# 
   262   003A44                     INLVLA          equ	14916	;# 
   263   003A45                     IOCAP           equ	14917	;# 
   264   003A46                     IOCAN           equ	14918	;# 
   265   003A47                     IOCAF           equ	14919	;# 
   266   003A50                     ANSELB          equ	14928	;# 
   267   003A51                     WPUB            equ	14929	;# 
   268   003A52                     ODCONB          equ	14930	;# 
   269   003A53                     SLRCONB         equ	14931	;# 
   270   003A54                     INLVLB          equ	14932	;# 
   271   003A55                     IOCBP           equ	14933	;# 
   272   003A56                     IOCBN           equ	14934	;# 
   273   003A57                     IOCBF           equ	14935	;# 
   274   003A5A                     RB1I2C          equ	14938	;# 
   275   003A5B                     RB2I2C          equ	14939	;# 
   276   003A60                     ANSELC          equ	14944	;# 
   277   003A61                     WPUC            equ	14945	;# 
   278   003A62                     ODCONC          equ	14946	;# 
   279   003A63                     SLRCONC         equ	14947	;# 
   280   003A64                     INLVLC          equ	14948	;# 
   281   003A65                     IOCCP           equ	14949	;# 
   282   003A66                     IOCCN           equ	14950	;# 
   283   003A67                     IOCCF           equ	14951	;# 
   284   003A6A                     RC3I2C          equ	14954	;# 
   285   003A6B                     RC4I2C          equ	14955	;# 
   286   003A70                     ANSELD          equ	14960	;# 
   287   003A71                     WPUD            equ	14961	;# 
   288   003A72                     ODCOND          equ	14962	;# 
   289   003A73                     SLRCOND         equ	14963	;# 
   290   003A74                     INLVLD          equ	14964	;# 
   291   003A7A                     RD0I2C          equ	14970	;# 
   292   003A7B                     RD1I2C          equ	14971	;# 
   293   003A80                     ANSELE          equ	14976	;# 
   294   003A81                     WPUE            equ	14977	;# 
   295   003A82                     ODCONE          equ	14978	;# 
   296   003A83                     SLRCONE         equ	14979	;# 
   297   003A84                     INLVLE          equ	14980	;# 
   298   003A85                     IOCEP           equ	14981	;# 
   299   003A86                     IOCEN           equ	14982	;# 
   300   003A87                     IOCEF           equ	14983	;# 
   301   003ABF                     PPSLOCK         equ	15039	;# 
   302   003AC0                     INT0PPS         equ	15040	;# 
   303   003AC1                     INT1PPS         equ	15041	;# 
   304   003AC2                     INT2PPS         equ	15042	;# 
   305   003AC3                     T0CKIPPS        equ	15043	;# 
   306   003AC4                     T1CKIPPS        equ	15044	;# 
   307   003AC5                     T1GPPS          equ	15045	;# 
   308   003AC6                     T3CKIPPS        equ	15046	;# 
   309   003AC7                     T3GPPS          equ	15047	;# 
   310   003AC8                     T5CKIPPS        equ	15048	;# 
   311   003AC9                     T5GPPS          equ	15049	;# 
   312   003ACA                     T2INPPS         equ	15050	;# 
   313   003ACB                     T4INPPS         equ	15051	;# 
   314   003ACC                     T6INPPS         equ	15052	;# 
   315   003ACD                     CCP1PPS         equ	15053	;# 
   316   003ACE                     CCP2PPS         equ	15054	;# 
   317   003ACF                     CCP3PPS         equ	15055	;# 
   318   003AD0                     CCP4PPS         equ	15056	;# 
   319   003AD1                     SMT1WINPPS      equ	15057	;# 
   320   003AD2                     SMT1SIGPPS      equ	15058	;# 
   321   003AD3                     CWG1INPPS       equ	15059	;# 
   322   003AD4                     CWG2INPPS       equ	15060	;# 
   323   003AD5                     CWG3INPPS       equ	15061	;# 
   324   003AD6                     MD1CARLPPS      equ	15062	;# 
   325   003AD7                     MD1CARHPPS      equ	15063	;# 
   326   003AD8                     MD1SRCPPS       equ	15064	;# 
   327   003AD9                     CLCIN0PPS       equ	15065	;# 
   328   003ADA                     CLCIN1PPS       equ	15066	;# 
   329   003ADB                     CLCIN2PPS       equ	15067	;# 
   330   003ADC                     CLCIN3PPS       equ	15068	;# 
   331   003ADD                     ADACTPPS        equ	15069	;# 
   332   003ADE                     SPI1SCKPPS      equ	15070	;# 
   333   003ADF                     SPI1SDIPPS      equ	15071	;# 
   334   003AE0                     SPI1SSPPS       equ	15072	;# 
   335   003AE1                     I2C1SCLPPS      equ	15073	;# 
   336   003AE2                     I2C1SDAPPS      equ	15074	;# 
   337   003AE3                     I2C2SCLPPS      equ	15075	;# 
   338   003AE4                     I2C2SDAPPS      equ	15076	;# 
   339   003AE5                     U1RXPPS         equ	15077	;# 
   340   003AE6                     U1CTSPPS        equ	15078	;# 
   341   003AE8                     U2RXPPS         equ	15080	;# 
   342   003AE9                     U2CTSPPS        equ	15081	;# 
   343   003BC9                     DMA2BUF         equ	15305	;# 
   344   003BCA                     DMA2DCNT        equ	15306	;# 
   345   003BCA                     DMA2DCNTL       equ	15306	;# 
   346   003BCB                     DMA2DCNTH       equ	15307	;# 
   347   003BCC                     DMA2DPTR        equ	15308	;# 
   348   003BCC                     DMA2DPTRL       equ	15308	;# 
   349   003BCD                     DMA2DPTRH       equ	15309	;# 
   350   003BCE                     DMA2DSZ         equ	15310	;# 
   351   003BCE                     DMA2DSZL        equ	15310	;# 
   352   003BCF                     DMA2DSZH        equ	15311	;# 
   353   003BD0                     DMA2DSA         equ	15312	;# 
   354   003BD0                     DMA2DSAL        equ	15312	;# 
   355   003BD1                     DMA2DSAH        equ	15313	;# 
   356   003BD2                     DMA2SCNT        equ	15314	;# 
   357   003BD2                     DMA2SCNTL       equ	15314	;# 
   358   003BD3                     DMA2SCNTH       equ	15315	;# 
   359   003BD4                     DMA2SPTR        equ	15316	;# 
   360   003BD4                     DMA2SPTRL       equ	15316	;# 
   361   003BD5                     DMA2SPTRH       equ	15317	;# 
   362   003BD6                     DMA2SPTRU       equ	15318	;# 
   363   003BD7                     DMA2SSZ         equ	15319	;# 
   364   003BD7                     DMA2SSZL        equ	15319	;# 
   365   003BD8                     DMA2SSZH        equ	15320	;# 
   366   003BD9                     DMA2SSA         equ	15321	;# 
   367   003BD9                     DMA2SSAL        equ	15321	;# 
   368   003BDA                     DMA2SSAH        equ	15322	;# 
   369   003BDB                     DMA2SSAU        equ	15323	;# 
   370   003BDC                     DMA2CON0        equ	15324	;# 
   371   003BDD                     DMA2CON1        equ	15325	;# 
   372   003BDE                     DMA2AIRQ        equ	15326	;# 
   373   003BDF                     DMA2SIRQ        equ	15327	;# 
   374   003BE9                     DMA1BUF         equ	15337	;# 
   375   003BEA                     DMA1DCNT        equ	15338	;# 
   376   003BEA                     DMA1DCNTL       equ	15338	;# 
   377   003BEB                     DMA1DCNTH       equ	15339	;# 
   378   003BEC                     DMA1DPTR        equ	15340	;# 
   379   003BEC                     DMA1DPTRL       equ	15340	;# 
   380   003BED                     DMA1DPTRH       equ	15341	;# 
   381   003BEE                     DMA1DSZ         equ	15342	;# 
   382   003BEE                     DMA1DSZL        equ	15342	;# 
   383   003BEF                     DMA1DSZH        equ	15343	;# 
   384   003BF0                     DMA1DSA         equ	15344	;# 
   385   003BF0                     DMA1DSAL        equ	15344	;# 
   386   003BF1                     DMA1DSAH        equ	15345	;# 
   387   003BF2                     DMA1SCNT        equ	15346	;# 
   388   003BF2                     DMA1SCNTL       equ	15346	;# 
   389   003BF3                     DMA1SCNTH       equ	15347	;# 
   390   003BF4                     DMA1SPTR        equ	15348	;# 
   391   003BF4                     DMA1SPTRL       equ	15348	;# 
   392   003BF5                     DMA1SPTRH       equ	15349	;# 
   393   003BF6                     DMA1SPTRU       equ	15350	;# 
   394   003BF7                     DMA1SSZ         equ	15351	;# 
   395   003BF7                     DMA1SSZL        equ	15351	;# 
   396   003BF8                     DMA1SSZH        equ	15352	;# 
   397   003BF9                     DMA1SSA         equ	15353	;# 
   398   003BF9                     DMA1SSAL        equ	15353	;# 
   399   003BFA                     DMA1SSAH        equ	15354	;# 
   400   003BFB                     DMA1SSAU        equ	15355	;# 
   401   003BFC                     DMA1CON0        equ	15356	;# 
   402   003BFD                     DMA1CON1        equ	15357	;# 
   403   003BFE                     DMA1AIRQ        equ	15358	;# 
   404   003BFF                     DMA1SIRQ        equ	15359	;# 
   405   003C56                     CLC4CON         equ	15446	;# 
   406   003C57                     CLC4POL         equ	15447	;# 
   407   003C58                     CLC4SEL0        equ	15448	;# 
   408   003C59                     CLC4SEL1        equ	15449	;# 
   409   003C5A                     CLC4SEL2        equ	15450	;# 
   410   003C5B                     CLC4SEL3        equ	15451	;# 
   411   003C5C                     CLC4GLS0        equ	15452	;# 
   412   003C5D                     CLC4GLS1        equ	15453	;# 
   413   003C5E                     CLC4GLS2        equ	15454	;# 
   414   003C5F                     CLC4GLS3        equ	15455	;# 
   415   003C60                     CLC3CON         equ	15456	;# 
   416   003C61                     CLC3POL         equ	15457	;# 
   417   003C62                     CLC3SEL0        equ	15458	;# 
   418   003C63                     CLC3SEL1        equ	15459	;# 
   419   003C64                     CLC3SEL2        equ	15460	;# 
   420   003C65                     CLC3SEL3        equ	15461	;# 
   421   003C66                     CLC3GLS0        equ	15462	;# 
   422   003C67                     CLC3GLS1        equ	15463	;# 
   423   003C68                     CLC3GLS2        equ	15464	;# 
   424   003C69                     CLC3GLS3        equ	15465	;# 
   425   003C6A                     CLC2CON         equ	15466	;# 
   426   003C6B                     CLC2POL         equ	15467	;# 
   427   003C6C                     CLC2SEL0        equ	15468	;# 
   428   003C6D                     CLC2SEL1        equ	15469	;# 
   429   003C6E                     CLC2SEL2        equ	15470	;# 
   430   003C6F                     CLC2SEL3        equ	15471	;# 
   431   003C70                     CLC2GLS0        equ	15472	;# 
   432   003C71                     CLC2GLS1        equ	15473	;# 
   433   003C72                     CLC2GLS2        equ	15474	;# 
   434   003C73                     CLC2GLS3        equ	15475	;# 
   435   003C74                     CLC1CON         equ	15476	;# 
   436   003C75                     CLC1POL         equ	15477	;# 
   437   003C76                     CLC1SEL0        equ	15478	;# 
   438   003C77                     CLC1SEL1        equ	15479	;# 
   439   003C78                     CLC1SEL2        equ	15480	;# 
   440   003C79                     CLC1SEL3        equ	15481	;# 
   441   003C7A                     CLC1GLS0        equ	15482	;# 
   442   003C7B                     CLC1GLS1        equ	15483	;# 
   443   003C7C                     CLC1GLS2        equ	15484	;# 
   444   003C7D                     CLC1GLS3        equ	15485	;# 
   445   003C7E                     CLCDATA0        equ	15486	;# 
   446   003CE5                     CLKRCON         equ	15589	;# 
   447   003CE6                     CLKRCLK         equ	15590	;# 
   448   003CFA                     MD1CON0         equ	15610	;# 
   449   003CFB                     MD1CON1         equ	15611	;# 
   450   003CFC                     MD1SRC          equ	15612	;# 
   451   003CFD                     MD1CARL         equ	15613	;# 
   452   003CFE                     MD1CARH         equ	15614	;# 
   453   003D10                     SPI1RXB         equ	15632	;# 
   454   003D11                     SPI1TXB         equ	15633	;# 
   455   003D12                     SPI1TCNT        equ	15634	;# 
   456   003D12                     SPI1TCNTL       equ	15634	;# 
   457   003D13                     SPI1TCNTH       equ	15635	;# 
   458   003D14                     SPI1CON0        equ	15636	;# 
   459   003D15                     SPI1CON1        equ	15637	;# 
   460   003D16                     SPI1CON2        equ	15638	;# 
   461   003D17                     SPI1STATUS      equ	15639	;# 
   462   003D18                     SPI1TWIDTH      equ	15640	;# 
   463   003D19                     SPI1BAUD        equ	15641	;# 
   464   003D1A                     SPI1INTF        equ	15642	;# 
   465   003D1B                     SPI1INTE        equ	15643	;# 
   466   003D1C                     SPI1CLK         equ	15644	;# 
   467   003D54                     I2C2RXB         equ	15700	;# 
   468   003D55                     I2C2TXB         equ	15701	;# 
   469   003D56                     I2C2CNT         equ	15702	;# 
   470   003D57                     I2C2ADB0        equ	15703	;# 
   471   003D58                     I2C2ADB1        equ	15704	;# 
   472   003D59                     I2C2ADR0        equ	15705	;# 
   473   003D5A                     I2C2ADR1        equ	15706	;# 
   474   003D5B                     I2C2ADR2        equ	15707	;# 
   475   003D5C                     I2C2ADR3        equ	15708	;# 
   476   003D5D                     I2C2CON0        equ	15709	;# 
   477   003D5E                     I2C2CON1        equ	15710	;# 
   478   003D5F                     I2C2CON2        equ	15711	;# 
   479   003D60                     I2C2ERR         equ	15712	;# 
   480   003D61                     I2C2STAT0       equ	15713	;# 
   481   003D62                     I2C2STAT1       equ	15714	;# 
   482   003D63                     I2C2PIR         equ	15715	;# 
   483   003D64                     I2C2PIE         equ	15716	;# 
   484   003D65                     I2C2CLK         equ	15717	;# 
   485   003D66                     I2C2BTO         equ	15718	;# 
   486   003D6A                     I2C1RXB         equ	15722	;# 
   487   003D6B                     I2C1TXB         equ	15723	;# 
   488   003D6C                     I2C1CNT         equ	15724	;# 
   489   003D6D                     I2C1ADB0        equ	15725	;# 
   490   003D6E                     I2C1ADB1        equ	15726	;# 
   491   003D6F                     I2C1ADR0        equ	15727	;# 
   492   003D70                     I2C1ADR1        equ	15728	;# 
   493   003D71                     I2C1ADR2        equ	15729	;# 
   494   003D72                     I2C1ADR3        equ	15730	;# 
   495   003D73                     I2C1CON0        equ	15731	;# 
   496   003D74                     I2C1CON1        equ	15732	;# 
   497   003D75                     I2C1CON2        equ	15733	;# 
   498   003D76                     I2C1ERR         equ	15734	;# 
   499   003D77                     I2C1STAT0       equ	15735	;# 
   500   003D78                     I2C1STAT1       equ	15736	;# 
   501   003D79                     I2C1PIR         equ	15737	;# 
   502   003D7A                     I2C1PIE         equ	15738	;# 
   503   003D7B                     I2C1CLK         equ	15739	;# 
   504   003D7C                     I2C1BTO         equ	15740	;# 
   505   003DD0                     U2RXB           equ	15824	;# 
   506   003DD0                     U2RXBL          equ	15824	;# 
   507   003DD2                     U2TXB           equ	15826	;# 
   508   003DD2                     U2TXBL          equ	15826	;# 
   509   003DD4                     U2P1            equ	15828	;# 
   510   003DD4                     U2P1L           equ	15828	;# 
   511   003DD6                     U2P2            equ	15830	;# 
   512   003DD6                     U2P2L           equ	15830	;# 
   513   003DD8                     U2P3            equ	15832	;# 
   514   003DD8                     U2P3L           equ	15832	;# 
   515   003DDA                     U2CON0          equ	15834	;# 
   516   003DDB                     U2CON1          equ	15835	;# 
   517   003DDC                     U2CON2          equ	15836	;# 
   518   003DDD                     U2BRG           equ	15837	;# 
   519   003DDD                     U2BRGL          equ	15837	;# 
   520   003DDE                     U2BRGH          equ	15838	;# 
   521   003DDF                     U2FIFO          equ	15839	;# 
   522   003DE0                     U2UIR           equ	15840	;# 
   523   003DE1                     U2ERRIR         equ	15841	;# 
   524   003DE2                     U2ERRIE         equ	15842	;# 
   525   003DE8                     U1RXB           equ	15848	;# 
   526   003DE8                     U1RXBL          equ	15848	;# 
   527   003DE9                     U1RXCHK         equ	15849	;# 
   528   003DEA                     U1TXB           equ	15850	;# 
   529   003DEA                     U1TXBL          equ	15850	;# 
   530   003DEB                     U1TXCHK         equ	15851	;# 
   531   003DEC                     U1P1            equ	15852	;# 
   532   003DEC                     U1P1L           equ	15852	;# 
   533   003DED                     U1P1H           equ	15853	;# 
   534   003DEE                     U1P2            equ	15854	;# 
   535   003DEE                     U1P2L           equ	15854	;# 
   536   003DEF                     U1P2H           equ	15855	;# 
   537   003DF0                     U1P3            equ	15856	;# 
   538   003DF0                     U1P3L           equ	15856	;# 
   539   003DF1                     U1P3H           equ	15857	;# 
   540   003DF2                     U1CON0          equ	15858	;# 
   541   003DF3                     U1CON1          equ	15859	;# 
   542   003DF4                     U1CON2          equ	15860	;# 
   543   003DF5                     U1BRG           equ	15861	;# 
   544   003DF5                     U1BRGL          equ	15861	;# 
   545   003DF6                     U1BRGH          equ	15862	;# 
   546   003DF7                     U1FIFO          equ	15863	;# 
   547   003DF8                     U1UIR           equ	15864	;# 
   548   003DF9                     U1ERRIR         equ	15865	;# 
   549   003DFA                     U1ERRIE         equ	15866	;# 
   550   003E9C                     DAC1CON1        equ	16028	;# 
   551   003E9E                     DAC1CON0        equ	16030	;# 
   552   003EB8                     CM2CON0         equ	16056	;# 
   553   003EB9                     CM2CON1         equ	16057	;# 
   554   003EBA                     CM2NCH          equ	16058	;# 
   555   003EBB                     CM2PCH          equ	16059	;# 
   556   003EBC                     CM1CON0         equ	16060	;# 
   557   003EBD                     CM1CON1         equ	16061	;# 
   558   003EBE                     CM1NCH          equ	16062	;# 
   559   003EBF                     CM1PCH          equ	16063	;# 
   560   003EC0                     CMOUT           equ	16064	;# 
   561   003EC1                     FVRCON          equ	16065	;# 
   562   003EC3                     ZCDCON          equ	16067	;# 
   563   003EC9                     HLVDCON0        equ	16073	;# 
   564   003ECA                     HLVDCON1        equ	16074	;# 
   565   003ED7                     ADCP            equ	16087	;# 
   566   003EDE                     ADLTH           equ	16094	;# 
   567   003EDE                     ADLTHL          equ	16094	;# 
   568   003EDF                     ADLTHH          equ	16095	;# 
   569   003EE0                     ADUTH           equ	16096	;# 
   570   003EE0                     ADUTHL          equ	16096	;# 
   571   003EE1                     ADUTHH          equ	16097	;# 
   572   003EE2                     ADERR           equ	16098	;# 
   573   003EE2                     ADERRL          equ	16098	;# 
   574   003EE3                     ADERRH          equ	16099	;# 
   575   003EE4                     ADSTPT          equ	16100	;# 
   576   003EE4                     ADSTPTL         equ	16100	;# 
   577   003EE5                     ADSTPTH         equ	16101	;# 
   578   003EE6                     ADFLTR          equ	16102	;# 
   579   003EE6                     ADFLTRL         equ	16102	;# 
   580   003EE7                     ADFLTRH         equ	16103	;# 
   581   003EE8                     ADACC           equ	16104	;# 
   582   003EE8                     ADACCL          equ	16104	;# 
   583   003EE9                     ADACCH          equ	16105	;# 
   584   003EEA                     ADACCU          equ	16106	;# 
   585   003EEB                     ADCNT           equ	16107	;# 
   586   003EEC                     ADRPT           equ	16108	;# 
   587   003EED                     ADPREV          equ	16109	;# 
   588   003EED                     ADPREVL         equ	16109	;# 
   589   003EEE                     ADPREVH         equ	16110	;# 
   590   003EEF                     ADRES           equ	16111	;# 
   591   003EEF                     ADRESL          equ	16111	;# 
   592   003EF0                     ADRESH          equ	16112	;# 
   593   003EF1                     ADPCH           equ	16113	;# 
   594   003EF3                     ADACQ           equ	16115	;# 
   595   003EF3                     ADACQL          equ	16115	;# 
   596   003EF4                     ADACQH          equ	16116	;# 
   597   003EF5                     ADCAP           equ	16117	;# 
   598   003EF6                     ADPRE           equ	16118	;# 
   599   003EF6                     ADPREL          equ	16118	;# 
   600   003EF7                     ADPREH          equ	16119	;# 
   601   003EF8                     ADCON0          equ	16120	;# 
   602   003EF9                     ADCON1          equ	16121	;# 
   603   003EFA                     ADCON2          equ	16122	;# 
   604   003EFB                     ADCON3          equ	16123	;# 
   605   003EFC                     ADSTAT          equ	16124	;# 
   606   003EFD                     ADREF           equ	16125	;# 
   607   003EFE                     ADACT           equ	16126	;# 
   608   003EFF                     ADCLK           equ	16127	;# 
   609   003F12                     SMT1TMR         equ	16146	;# 
   610   003F12                     SMT1TMRL        equ	16146	;# 
   611   003F13                     SMT1TMRH        equ	16147	;# 
   612   003F14                     SMT1TMRU        equ	16148	;# 
   613   003F15                     SMT1CPR         equ	16149	;# 
   614   003F15                     SMT1CPRL        equ	16149	;# 
   615   003F16                     SMT1CPRH        equ	16150	;# 
   616   003F17                     SMT1CPRU        equ	16151	;# 
   617   003F18                     SMT1CPW         equ	16152	;# 
   618   003F18                     SMT1CPWL        equ	16152	;# 
   619   003F19                     SMT1CPWH        equ	16153	;# 
   620   003F1A                     SMT1CPWU        equ	16154	;# 
   621   003F1B                     SMT1PR          equ	16155	;# 
   622   003F1B                     SMT1PRL         equ	16155	;# 
   623   003F1C                     SMT1PRH         equ	16156	;# 
   624   003F1D                     SMT1PRU         equ	16157	;# 
   625   003F1E                     SMT1CON0        equ	16158	;# 
   626   003F1F                     SMT1CON1        equ	16159	;# 
   627   003F20                     SMT1STAT        equ	16160	;# 
   628   003F21                     SMT1CLK         equ	16161	;# 
   629   003F22                     SMT1SIG         equ	16162	;# 
   630   003F23                     SMT1WIN         equ	16163	;# 
   631   003F38                     NCO1ACC         equ	16184	;# 
   632   003F38                     NCO1ACCL        equ	16184	;# 
   633   003F39                     NCO1ACCH        equ	16185	;# 
   634   003F3A                     NCO1ACCU        equ	16186	;# 
   635   003F3B                     NCO1INC         equ	16187	;# 
   636   003F3B                     NCO1INCL        equ	16187	;# 
   637   003F3C                     NCO1INCH        equ	16188	;# 
   638   003F3D                     NCO1INCU        equ	16189	;# 
   639   003F3E                     NCO1CON         equ	16190	;# 
   640   003F3F                     NCO1CLK         equ	16191	;# 
   641   003F40                     CWG3CLK         equ	16192	;# 
   642   003F40                     CWG3CLKCON      equ	16192	;# 
   643   003F41                     CWG3ISM         equ	16193	;# 
   644   003F41                     CWG3DAT         equ	16193	;# 
   645   003F42                     CWG3DBR         equ	16194	;# 
   646   003F43                     CWG3DBF         equ	16195	;# 
   647   003F44                     CWG3CON0        equ	16196	;# 
   648   003F45                     CWG3CON1        equ	16197	;# 
   649   003F46                     CWG3AS0         equ	16198	;# 
   650   003F47                     CWG3AS1         equ	16199	;# 
   651   003F48                     CWG3STR         equ	16200	;# 
   652   003F49                     CWG2CLK         equ	16201	;# 
   653   003F49                     CWG2CLKCON      equ	16201	;# 
   654   003F4A                     CWG2ISM         equ	16202	;# 
   655   003F4A                     CWG2DAT         equ	16202	;# 
   656   003F4B                     CWG2DBR         equ	16203	;# 
   657   003F4C                     CWG2DBF         equ	16204	;# 
   658   003F4D                     CWG2CON0        equ	16205	;# 
   659   003F4E                     CWG2CON1        equ	16206	;# 
   660   003F4F                     CWG2AS0         equ	16207	;# 
   661   003F50                     CWG2AS1         equ	16208	;# 
   662   003F51                     CWG2STR         equ	16209	;# 
   663   003F52                     CWG1CLK         equ	16210	;# 
   664   003F52                     CWG1CLKCON      equ	16210	;# 
   665   003F53                     CWG1ISM         equ	16211	;# 
   666   003F53                     CWG1DAT         equ	16211	;# 
   667   003F54                     CWG1DBR         equ	16212	;# 
   668   003F55                     CWG1DBF         equ	16213	;# 
   669   003F56                     CWG1CON0        equ	16214	;# 
   670   003F57                     CWG1CON1        equ	16215	;# 
   671   003F58                     CWG1AS0         equ	16216	;# 
   672   003F59                     CWG1AS1         equ	16217	;# 
   673   003F5A                     CWG1STR         equ	16218	;# 
   674   003F5E                     CCPTMRS0        equ	16222	;# 
   675   003F5F                     CCPTMRS1        equ	16223	;# 
   676   003F60                     PWM8DC          equ	16224	;# 
   677   003F60                     PWM8DCL         equ	16224	;# 
   678   003F61                     PWM8DCH         equ	16225	;# 
   679   003F62                     PWM8CON         equ	16226	;# 
   680   003F64                     PWM7DC          equ	16228	;# 
   681   003F64                     PWM7DCL         equ	16228	;# 
   682   003F65                     PWM7DCH         equ	16229	;# 
   683   003F66                     PWM7CON         equ	16230	;# 
   684   003F68                     PWM6DC          equ	16232	;# 
   685   003F68                     PWM6DCL         equ	16232	;# 
   686   003F69                     PWM6DCH         equ	16233	;# 
   687   003F6A                     PWM6CON         equ	16234	;# 
   688   003F6C                     PWM5DC          equ	16236	;# 
   689   003F6C                     PWM5DCL         equ	16236	;# 
   690   003F6D                     PWM5DCH         equ	16237	;# 
   691   003F6E                     PWM5CON         equ	16238	;# 
   692   003F70                     CCPR4           equ	16240	;# 
   693   003F70                     CCPR4L          equ	16240	;# 
   694   003F71                     CCPR4H          equ	16241	;# 
   695   003F72                     CCP4CON         equ	16242	;# 
   696   003F73                     CCP4CAP         equ	16243	;# 
   697   003F74                     CCPR3           equ	16244	;# 
   698   003F74                     CCPR3L          equ	16244	;# 
   699   003F75                     CCPR3H          equ	16245	;# 
   700   003F76                     CCP3CON         equ	16246	;# 
   701   003F77                     CCP3CAP         equ	16247	;# 
   702   003F78                     CCPR2           equ	16248	;# 
   703   003F78                     CCPR2L          equ	16248	;# 
   704   003F79                     CCPR2H          equ	16249	;# 
   705   003F7A                     CCP2CON         equ	16250	;# 
   706   003F7B                     CCP2CAP         equ	16251	;# 
   707   003F7C                     CCPR1           equ	16252	;# 
   708   003F7C                     CCPR1L          equ	16252	;# 
   709   003F7D                     CCPR1H          equ	16253	;# 
   710   003F7E                     CCP1CON         equ	16254	;# 
   711   003F7F                     CCP1CAP         equ	16255	;# 
   712   003F92                     T6TMR           equ	16274	;# 
   713   003F92                     TMR6            equ	16274	;# 
   714   003F93                     T6PR            equ	16275	;# 
   715   003F93                     PR6             equ	16275	;# 
   716   003F94                     T6CON           equ	16276	;# 
   717   003F95                     T6HLT           equ	16277	;# 
   718   003F96                     T6CLKCON        equ	16278	;# 
   719   003F96                     T6CLK           equ	16278	;# 
   720   003F97                     T6RST           equ	16279	;# 
   721   003F98                     TMR5            equ	16280	;# 
   722   003F98                     TMR5L           equ	16280	;# 
   723   003F99                     TMR5H           equ	16281	;# 
   724   003F9A                     T5CON           equ	16282	;# 
   725   003F9A                     TMR5CON         equ	16282	;# 
   726   003F9B                     T5GCON          equ	16283	;# 
   727   003F9B                     TMR5GCON        equ	16283	;# 
   728   003F9C                     T5GATE          equ	16284	;# 
   729   003F9C                     TMR5GATE        equ	16284	;# 
   730   003F9D                     T5CLK           equ	16285	;# 
   731   003F9D                     TMR5CLK         equ	16285	;# 
   732   003F9D                     PR5             equ	16285	;# 
   733   003F9E                     T4TMR           equ	16286	;# 
   734   003F9E                     TMR4            equ	16286	;# 
   735   003F9F                     T4PR            equ	16287	;# 
   736   003F9F                     PR4             equ	16287	;# 
   737   003FA0                     T4CON           equ	16288	;# 
   738   003FA1                     T4HLT           equ	16289	;# 
   739   003FA2                     T4CLKCON        equ	16290	;# 
   740   003FA2                     T4CLK           equ	16290	;# 
   741   003FA3                     T4RST           equ	16291	;# 
   742   003FA4                     TMR3            equ	16292	;# 
   743   003FA4                     TMR3L           equ	16292	;# 
   744   003FA5                     TMR3H           equ	16293	;# 
   745   003FA6                     T3CON           equ	16294	;# 
   746   003FA6                     TMR3CON         equ	16294	;# 
   747   003FA7                     T3GCON          equ	16295	;# 
   748   003FA7                     TMR3GCON        equ	16295	;# 
   749   003FA8                     T3GATE          equ	16296	;# 
   750   003FA8                     TMR3GATE        equ	16296	;# 
   751   003FA9                     T3CLK           equ	16297	;# 
   752   003FA9                     TMR3CLK         equ	16297	;# 
   753   003FA9                     PR3             equ	16297	;# 
   754   003FAA                     T2TMR           equ	16298	;# 
   755   003FAA                     TMR2            equ	16298	;# 
   756   003FAB                     T2PR            equ	16299	;# 
   757   003FAB                     PR2             equ	16299	;# 
   758   003FAC                     T2CON           equ	16300	;# 
   759   003FAD                     T2HLT           equ	16301	;# 
   760   003FAE                     T2CLKCON        equ	16302	;# 
   761   003FAE                     T2CLK           equ	16302	;# 
   762   003FAF                     T2RST           equ	16303	;# 
   763   003FB0                     TMR1            equ	16304	;# 
   764   003FB0                     TMR1L           equ	16304	;# 
   765   003FB1                     TMR1H           equ	16305	;# 
   766   003FB2                     T1CON           equ	16306	;# 
   767   003FB2                     TMR1CON         equ	16306	;# 
   768   003FB3                     T1GCON          equ	16307	;# 
   769   003FB3                     TMR1GCON        equ	16307	;# 
   770   003FB4                     T1GATE          equ	16308	;# 
   771   003FB4                     TMR1GATE        equ	16308	;# 
   772   003FB5                     T1CLK           equ	16309	;# 
   773   003FB5                     TMR1CLK         equ	16309	;# 
   774   003FB5                     PR1             equ	16309	;# 
   775   003FB6                     TMR0L           equ	16310	;# 
   776   003FB6                     TMR0            equ	16310	;# 
   777   003FB7                     TMR0H           equ	16311	;# 
   778   003FB7                     PR0             equ	16311	;# 
   779   003FB8                     T0CON0          equ	16312	;# 
   780   003FB9                     T0CON1          equ	16313	;# 
   781   003FBA                     LATA            equ	16314	;# 
   782   003FBB                     LATB            equ	16315	;# 
   783   003FBC                     LATC            equ	16316	;# 
   784   003FBD                     LATD            equ	16317	;# 
   785   003FBE                     LATE            equ	16318	;# 
   786   003FC2                     TRISA           equ	16322	;# 
   787   003FC3                     TRISB           equ	16323	;# 
   788   003FC4                     TRISC           equ	16324	;# 
   789   003FC5                     TRISD           equ	16325	;# 
   790   003FC6                     TRISE           equ	16326	;# 
   791   003FCA                     PORTA           equ	16330	;# 
   792   003FCB                     PORTB           equ	16331	;# 
   793   003FCC                     PORTC           equ	16332	;# 
   794   003FCD                     PORTD           equ	16333	;# 
   795   003FCE                     PORTE           equ	16334	;# 
   796   003FD2                     INTCON0         equ	16338	;# 
   797   003FD3                     INTCON1         equ	16339	;# 
   798   003FD4                     IVTLOCK         equ	16340	;# 
   799   003FD5                     IVTBASE         equ	16341	;# 
   800   003FD5                     IVTBASEL        equ	16341	;# 
   801   003FD6                     IVTBASEH        equ	16342	;# 
   802   003FD7                     IVTBASEU        equ	16343	;# 
   803   003FD8                     STATUS          equ	16344	;# 
   804   003FD9                     FSR2            equ	16345	;# 
   805   003FD9                     FSR2L           equ	16345	;# 
   806   003FDA                     FSR2H           equ	16346	;# 
   807   003FDB                     PLUSW2          equ	16347	;# 
   808   003FDC                     PREINC2         equ	16348	;# 
   809   003FDD                     POSTDEC2        equ	16349	;# 
   810   003FDE                     POSTINC2        equ	16350	;# 
   811   003FDF                     INDF2           equ	16351	;# 
   812   003FE0                     BSR             equ	16352	;# 
   813   003FE1                     FSR1            equ	16353	;# 
   814   003FE1                     FSR1L           equ	16353	;# 
   815   003FE2                     FSR1H           equ	16354	;# 
   816   003FE3                     PLUSW1          equ	16355	;# 
   817   003FE4                     PREINC1         equ	16356	;# 
   818   003FE5                     POSTDEC1        equ	16357	;# 
   819   003FE6                     POSTINC1        equ	16358	;# 
   820   003FE7                     INDF1           equ	16359	;# 
   821   003FE8                     WREG            equ	16360	;# 
   822   003FE9                     FSR0            equ	16361	;# 
   823   003FE9                     FSR0L           equ	16361	;# 
   824   003FEA                     FSR0H           equ	16362	;# 
   825   003FEB                     PLUSW0          equ	16363	;# 
   826   003FEC                     PREINC0         equ	16364	;# 
   827   003FED                     POSTDEC0        equ	16365	;# 
   828   003FEE                     POSTINC0        equ	16366	;# 
   829   003FEF                     INDF0           equ	16367	;# 
   830   003FF0                     PCON0           equ	16368	;# 
   831   003FF1                     PCON1           equ	16369	;# 
   832   003FF3                     PROD            equ	16371	;# 
   833   003FF3                     PRODL           equ	16371	;# 
   834   003FF4                     PRODH           equ	16372	;# 
   835   003FF5                     TABLAT          equ	16373	;# 
   836   003FF6                     TBLPTR          equ	16374	;# 
   837   003FF6                     TBLPTRL         equ	16374	;# 
   838   003FF7                     TBLPTRH         equ	16375	;# 
   839   003FF8                     TBLPTRU         equ	16376	;# 
   840   003FF9                     PCLAT           equ	16377	;# 
   841   003FF9                     PCL             equ	16377	;# 
   842   003FFA                     PCLATH          equ	16378	;# 
   843   003FFB                     PCLATU          equ	16379	;# 
   844   003FFC                     STKPTR          equ	16380	;# 
   845   003FFD                     TOS             equ	16381	;# 
   846   003FFD                     TOSL            equ	16381	;# 
   847   003FFE                     TOSH            equ	16382	;# 
   848   003FFF                     TOSU            equ	16383	;# 
   849                           
   850                           	psect	idataCOMRAM
   851   004700                     __pidataCOMRAM:
   852                           	callstack 0
   853                           
   854                           ;initializer for get_keypad_key@F16222
   855   004700  31                 	db	49
   856   004701  32                 	db	50
   857   004702  33                 	db	51
   858   004703  34                 	db	52
   859   004704  35                 	db	53
   860   004705  36                 	db	54
   861   004706  37                 	db	55
   862   004707  38                 	db	56
   863   004708  39                 	db	57
   864   004709  2A                 	db	42
   865   00470A  30                 	db	48
   866   00470B  23                 	db	35
   867                           
   868                           	psect	nvCOMRAM
   869   00002B                     __pnvCOMRAM:
   870                           	callstack 0
   871   00002B                     _SECRET_CODE:
   872                           	callstack 0
   873   00002B                     	ds	1
   874   0039A1                     _PIR1bits       set	14753
   875   003991                     _PIE1bits       set	14737
   876   003981                     _IPR1bits       set	14721
   877   003A80                     _ANSELE         set	14976
   878   003A70                     _ANSELD         set	14960
   879   003A60                     _ANSELC         set	14944
   880   003A50                     _ANSELB         set	14928
   881   003FCB                     _PORTBbits      set	16331
   882   003FBB                     _LATBbits       set	16315
   883   003FCC                     _PORTCbits      set	16332
   884   003FCE                     _PORTEbits      set	16334
   885   003FD5                     _IVTBASEL       set	16341
   886   003FD6                     _IVTBASEH       set	16342
   887   003FD7                     _IVTBASEU       set	16343
   888   003FD2                     _INTCON0bits    set	16338
   889   003FBD                     _LATD           set	16317
   890   003FBB                     _LATB           set	16315
   891   003FCE                     _PORTE          set	16334
   892   003FCD                     _PORTD          set	16333
   893   003FCC                     _PORTC          set	16332
   894   003FCB                     _PORTB          set	16331
   895   003FC6                     _TRISE          set	16326
   896   003FC5                     _TRISD          set	16325
   897   003FC4                     _TRISC          set	16324
   898   003FC3                     _TRISB          set	16323
   899                           
   900                           ; #config settings
   901                           
   902                           	psect	cinit
   903   0045F4                     __pcinit:
   904                           	callstack 0
   905   0045F4                     start_initialization:
   906                           	callstack 0
   907   0045F4                     __initialization:
   908                           	callstack 0
   909                           
   910                           ; Initialize objects allocated to COMRAM (12 bytes)
   911                           ; load TBLPTR registers with __pidataCOMRAM
   912   0045F4  0E00               	movlw	low __pidataCOMRAM
   913   0045F6  6EF6               	movwf	tblptrl,c
   914   0045F8  0E47               	movlw	high __pidataCOMRAM
   915   0045FA  6EF7               	movwf	tblptrh,c
   916   0045FC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   917   0045FE  6EF8               	movwf	tblptru,c
   918   004600  EE00  F01B         	lfsr	0,__pdataCOMRAM
   919   004604  EE10 F00C          	lfsr	1,12
   920   004608                     copy_data0:
   921   004608  0009               	tblrd		*+
   922   00460A  006F FFD7 FFEE     	movff	tablat,postinc0
   923   004610  50E5               	movf	postdec1,w,c
   924   004612  50E1               	movf	fsr1l,w,c
   925   004614  E1F9               	bnz	copy_data0
   926                           
   927                           ; Clear objects allocated to COMRAM (4 bytes)
   928   004616  6A2A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   929   004618  6A29               	clrf	(__pbssCOMRAM+2)& (0+255),c
   930   00461A  6A28               	clrf	(__pbssCOMRAM+1)& (0+255),c
   931   00461C  6A27               	clrf	__pbssCOMRAM& (0+255),c
   932                           
   933                           ;
   934                           ; Setup IVTBASE
   935                           ;
   936   003FD5                     IVTBASEL        equ	16341
   937   003FD6                     IVTBASEH        equ	16342
   938   003FD7                     IVTBASEU        equ	16343
   939   00461E  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   940   004620  6ED5               	movwf	213,c
   941   004622  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   942   004624  6ED6               	movwf	214,c
   943   004626  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   944   004628  6ED7               	movwf	215,c
   945   00462A                     end_of_initialization:
   946                           	callstack 0
   947   00462A                     __end_of__initialization:
   948                           	callstack 0
   949   00462A  0100               	movlb	0
   950   00462C  EF36  F023         	goto	_main	;jump to C main() function
   951                           
   952                           	psect	bssCOMRAM
   953   000027                     __pbssCOMRAM:
   954                           	callstack 0
   955   000027                     _user_code:
   956                           	callstack 0
   957   000027                     	ds	1
   958   000028                     _confirmation:
   959                           	callstack 0
   960   000028                     	ds	1
   961   000029                     _low_digit:
   962                           	callstack 0
   963   000029                     	ds	1
   964   00002A                     _high_digit:
   965                           	callstack 0
   966   00002A                     	ds	1
   967                           
   968                           	psect	dataCOMRAM
   969   00001B                     __pdataCOMRAM:
   970                           	callstack 0
   971   00001B                     get_keypad_key@F16222:
   972                           	callstack 0
   973   00001B                     	ds	12
   974                           
   975                           	psect	cstackCOMRAM
   976   000001                     __pcstackCOMRAM:
   977                           	callstack 0
   978   000001                     ??_emergency_melody:
   979                           
   980                           ; 1 bytes @ 0x0
   981   000001                     	ds	2
   982   000003                     emergency_melody@i:
   983                           	callstack 0
   984                           
   985                           ; 1 bytes @ 0x2
   986   000003                     	ds	1
   987   000004                     display_digit@value:
   988                           	callstack 0
   989   000004                     check_code@user_code:
   990                           	callstack 0
   991   000004                     ??_activate_motor:
   992   000004                     ??_activate_buzzer:
   993   000004                     ??_get_keypad_key:
   994                           
   995                           ; 1 bytes @ 0x3
   996   000004                     	ds	1
   997   000005                     get_keypad_key@keys:
   998                           	callstack 0
   999   000005                     ??_input_digit:
  1000                           
  1001                           ; 1 bytes @ 0x4
  1002   000005                     	ds	1
  1003   000006                     
  1004                           ; 1 bytes @ 0x5
  1005   000006                     	ds	1
  1006   000007                     input_digit@sensor_pin:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x6
  1010   000007                     	ds	1
  1011   000008                     input_digit@count:
  1012                           	callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x7
  1015   000008                     	ds	1
  1016   000009                     ??_check_for_PR_input:
  1017                           
  1018                           ; 1 bytes @ 0x8
  1019   000009                     	ds	8
  1020   000011                     get_keypad_key@row:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x10
  1024   000011                     	ds	2
  1025   000013                     ??_wait_for_keypad_digit:
  1026                           
  1027                           ; 1 bytes @ 0x12
  1028   000013                     	ds	1
  1029   000014                     wait_for_keypad_digit@key:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x13
  1033   000014                     	ds	1
  1034   000015                     ??_set_new_secret_code:
  1035                           
  1036                           ; 1 bytes @ 0x14
  1037   000015                     	ds	2
  1038   000017                     set_new_secret_code@newCode:
  1039                           	callstack 0
  1040                           
  1041                           ; 1 bytes @ 0x16
  1042   000017                     	ds	1
  1043   000018                     set_new_secret_code@high:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x17
  1047   000018                     	ds	1
  1048   000019                     set_new_secret_code@low:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x18
  1052   000019                     	ds	1
  1053   00001A                     check_for_change_code_request@key:
  1054                           	callstack 0
  1055   00001A                     
  1056                           ; 1 bytes @ 0x19
  1057   00001A                     	ds	1
  1058   00001B                     
  1059                           ; 1 bytes @ 0x1A
  1060 ;;
  1061 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1062 ;;
  1063 ;; *************** function _main *****************
  1064 ;; Defined at:
  1065 ;;		line 55 in file "mainA8.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1083 ;;Total ram usage:        0 bytes
  1084 ;; Hardware stack levels required when called: 6
  1085 ;; This function calls:
  1086 ;;		_check_for_PR_input
  1087 ;;		_check_for_change_code_request
  1088 ;;		_code_correct_or_wrong
  1089 ;;		_init_system
  1090 ;;		_set_new_secret_code
  1091 ;; This function is called by:
  1092 ;;		Startup code after reset
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text0
  1097   00466C                     __ptext0:
  1098                           	callstack 0
  1099   00466C                     _main:
  1100                           	callstack 25
  1101   00466C                     
  1102                           ;mainA8.c: 56:     init_system();
  1103   00466C  ECD9  F022         	call	_init_system	;wreg free
  1104   004670                     
  1105                           ;mainA8.c: 57:     PORTCbits.RC3 = 1;
  1106   004670  86CC               	bsf	204,3,c	;volatile
  1107   004672                     
  1108                           ;mainA8.c: 58:     SECRET_CODE = set_new_secret_code();
  1109   004672  EC86  F022         	call	_set_new_secret_code	;wreg free
  1110   004676  6E2B               	movwf	_SECRET_CODE^0,c
  1111   004678                     l1115:
  1112                           
  1113                           ;mainA8.c: 61:         PORTCbits.RC3 = 1;
  1114   004678  86CC               	bsf	204,3,c	;volatile
  1115   00467A                     
  1116                           ;mainA8.c: 63:         check_for_change_code_request();
  1117   00467A  EC47  F023         	call	_check_for_change_code_request	;wreg free
  1118   00467E                     
  1119                           ;mainA8.c: 65:         check_for_PR_input();
  1120   00467E  EC4D  F022         	call	_check_for_PR_input	;wreg free
  1121   004682                     
  1122                           ;mainA8.c: 67:         code_correct_or_wrong();
  1123   004682  EC18  F023         	call	_code_correct_or_wrong	;wreg free
  1124   004686  EF3C  F023         	goto	l1115
  1125   00468A  EF57  F020         	goto	start
  1126   00468E                     __end_of_main:
  1127                           	callstack 0
  1128                           
  1129 ;; *************** function _init_system *****************
  1130 ;; Defined at:
  1131 ;;		line 9 in file "./init.h"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1149 ;;Total ram usage:        0 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; Hardware stack levels required when called: 2
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text1
  1160   0045B2                     __ptext1:
  1161                           	callstack 0
  1162   0045B2                     _init_system:
  1163                           	callstack 28
  1164   0045B2                     
  1165                           ;./init.h: 11:     TRISB = 0xE1;
  1166   0045B2  0EE1               	movlw	225
  1167   0045B4  6EC3               	movwf	195,c	;volatile
  1168                           
  1169                           ;./init.h: 12:     TRISC = 0x10;
  1170   0045B6  0E10               	movlw	16
  1171   0045B8  6EC4               	movwf	196,c	;volatile
  1172   0045BA                     
  1173                           ;./init.h: 13:     TRISD = 0x00;
  1174   0045BA  6AC5               	clrf	197,c	;volatile
  1175                           
  1176                           ;./init.h: 14:     TRISE = 0x03;
  1177   0045BC  0E03               	movlw	3
  1178   0045BE  6EC6               	movwf	198,c	;volatile
  1179   0045C0                     
  1180                           ;./init.h: 17:     ANSELB = 0x00;
  1181   0045C0  013A               	movlb	58	; () banked
  1182   0045C2  6B50               	clrf	80,b	;volatile
  1183   0045C4                     
  1184                           ; BSR set to: 58
  1185                           ;./init.h: 18:     ANSELC = 0x00;
  1186   0045C4  6B60               	clrf	96,b	;volatile
  1187   0045C6                     
  1188                           ; BSR set to: 58
  1189                           ;./init.h: 19:     ANSELD = 0x00;
  1190   0045C6  6B70               	clrf	112,b	;volatile
  1191   0045C8                     
  1192                           ; BSR set to: 58
  1193                           ;./init.h: 20:     ANSELE = 0x00;
  1194   0045C8  6B80               	clrf	128,b	;volatile
  1195   0045CA                     
  1196                           ; BSR set to: 58
  1197                           ;./init.h: 22:     PORTB = 0;
  1198   0045CA  6ACB               	clrf	203,c	;volatile
  1199   0045CC                     
  1200                           ; BSR set to: 58
  1201                           ;./init.h: 23:     PORTC = 0;
  1202   0045CC  6ACC               	clrf	204,c	;volatile
  1203   0045CE                     
  1204                           ; BSR set to: 58
  1205                           ;./init.h: 24:     PORTD = 0;
  1206   0045CE  6ACD               	clrf	205,c	;volatile
  1207   0045D0                     
  1208                           ; BSR set to: 58
  1209                           ;./init.h: 25:     PORTE = 0;
  1210   0045D0  6ACE               	clrf	206,c	;volatile
  1211                           
  1212                           ;./init.h: 27:     LATB = 0x1E;
  1213   0045D2  0E1E               	movlw	30
  1214   0045D4  6EBB               	movwf	187,c	;volatile
  1215   0045D6                     
  1216                           ; BSR set to: 58
  1217                           ;./init.h: 28:     LATD = 0;
  1218   0045D6  6ABD               	clrf	189,c	;volatile
  1219   0045D8                     
  1220                           ; BSR set to: 58
  1221                           ;./init.h: 32:     INTCON0bits.IPEN = 1;
  1222   0045D8  8AD2               	bsf	210,5,c	;volatile
  1223   0045DA                     
  1224                           ; BSR set to: 58
  1225                           ;./init.h: 34:     INTCON0bits.GIEH = 1;
  1226   0045DA  8ED2               	bsf	210,7,c	;volatile
  1227   0045DC                     
  1228                           ; BSR set to: 58
  1229                           ;./init.h: 36:     INTCON0bits.GIEL = 1;
  1230   0045DC  8CD2               	bsf	210,6,c	;volatile
  1231   0045DE                     
  1232                           ; BSR set to: 58
  1233                           ;./init.h: 38:     INTCON0bits.INT0EDG = 1;
  1234   0045DE  80D2               	bsf	210,0,c	;volatile
  1235   0045E0                     
  1236                           ; BSR set to: 58
  1237                           ;./init.h: 41:     IPR1bits.INT0IP = 1;
  1238   0045E0  0139               	movlb	57	; () banked
  1239   0045E2  8181               	bsf	129,0,b	;volatile
  1240   0045E4                     
  1241                           ; BSR set to: 57
  1242                           ;./init.h: 43:     PIE1bits.INT0IE = 1;
  1243   0045E4  8191               	bsf	145,0,b	;volatile
  1244   0045E6                     
  1245                           ; BSR set to: 57
  1246                           ;./init.h: 46:     PIR1bits.INT0IF = 0;
  1247   0045E6  91A1               	bcf	161,0,b	;volatile
  1248   0045E8                     
  1249                           ; BSR set to: 57
  1250                           ;./init.h: 50:     IVTBASEU = 0x00;
  1251   0045E8  6AD7               	clrf	215,c	;volatile
  1252                           
  1253                           ;./init.h: 52:     IVTBASEH = 0x40;
  1254   0045EA  0E40               	movlw	64
  1255   0045EC  6ED6               	movwf	214,c	;volatile
  1256                           
  1257                           ;./init.h: 54:     IVTBASEL = 0x08;
  1258   0045EE  0E08               	movlw	8
  1259   0045F0  6ED5               	movwf	213,c	;volatile
  1260   0045F2                     
  1261                           ; BSR set to: 57
  1262   0045F2  0012               	return		;funcret
  1263   0045F4                     __end_of_init_system:
  1264                           	callstack 0
  1265                           
  1266 ;; *************** function _code_correct_or_wrong *****************
  1267 ;; Defined at:
  1268 ;;		line 199 in file "./functions.h"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1286 ;;Total ram usage:        0 bytes
  1287 ;; Hardware stack levels used: 1
  1288 ;; Hardware stack levels required when called: 3
  1289 ;; This function calls:
  1290 ;;		_activate_buzzer
  1291 ;;		_activate_motor
  1292 ;;		_check_code
  1293 ;; This function is called by:
  1294 ;;		_main
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text2
  1299   004630                     __ptext2:
  1300                           	callstack 0
  1301   004630                     _code_correct_or_wrong:
  1302                           	callstack 27
  1303   004630                     
  1304                           ;./functions.h: 200:     if (confirmation == 2) {
  1305   004630  0E02               	movlw	2
  1306   004632  1828               	xorwf	_confirmation^0,w,c
  1307   004634  A4D8               	btfss	status,2,c
  1308   004636  EF1F  F023         	goto	u351
  1309   00463A  EF21  F023         	goto	u350
  1310   00463E                     u351:
  1311   00463E  EF35  F023         	goto	l160
  1312   004642                     u350:
  1313   004642                     
  1314                           ;./functions.h: 201:         if (check_code(user_code)) {
  1315   004642  5027               	movf	_user_code^0,w,c
  1316   004644  EC73  F023         	call	_check_code
  1317   004648  0900               	iorlw	0
  1318   00464A  B4D8               	btfsc	status,2,c
  1319   00464C  EF2A  F023         	goto	u361
  1320   004650  EF2C  F023         	goto	u360
  1321   004654                     u361:
  1322   004654  EF30  F023         	goto	l1097
  1323   004658                     u360:
  1324   004658                     
  1325                           ;./functions.h: 202:             activate_motor();
  1326   004658  EC57  F023         	call	_activate_motor	;wreg free
  1327                           
  1328                           ;./functions.h: 203:         } else {
  1329   00465C  EF32  F023         	goto	l1099
  1330   004660                     l1097:
  1331                           
  1332                           ;./functions.h: 204:             activate_buzzer();
  1333   004660  EC65  F023         	call	_activate_buzzer	;wreg free
  1334   004664                     l1099:
  1335                           
  1336                           ;./functions.h: 206:         high_digit = 0;
  1337   004664  6A2A               	clrf	_high_digit^0,c
  1338   004666                     
  1339                           ;./functions.h: 207:         low_digit = 0;
  1340   004666  6A29               	clrf	_low_digit^0,c
  1341   004668                     
  1342                           ;./functions.h: 208:         confirmation = 0;
  1343   004668  6A28               	clrf	_confirmation^0,c
  1344   00466A                     l160:
  1345   00466A  0012               	return		;funcret
  1346   00466C                     __end_of_code_correct_or_wrong:
  1347                           	callstack 0
  1348                           
  1349 ;; *************** function _check_code *****************
  1350 ;; Defined at:
  1351 ;;		line 85 in file "./functions.h"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  user_code       1    wreg     unsigned char 
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;  user_code       1    3[COMRAM] unsigned char 
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1    wreg      _Bool 
  1358 ;; Registers used:
  1359 ;;		wreg, status,2, status,0
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1369 ;;Total ram usage:        1 bytes
  1370 ;; Hardware stack levels used: 1
  1371 ;; Hardware stack levels required when called: 2
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_code_correct_or_wrong
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text3
  1380   0046E6                     __ptext3:
  1381                           	callstack 0
  1382   0046E6                     _check_code:
  1383                           	callstack 27
  1384                           
  1385                           ;incstack = 0
  1386                           ;check_code@user_code stored from wreg
  1387   0046E6  6E04               	movwf	check_code@user_code^0,c
  1388   0046E8                     
  1389                           ;./functions.h: 86:     return user_code == SECRET_CODE;
  1390   0046E8  502B               	movf	_SECRET_CODE^0,w,c
  1391   0046EA  1804               	xorwf	check_code@user_code^0,w,c
  1392   0046EC  B4D8               	btfsc	status,2,c
  1393   0046EE  EF7B  F023         	goto	u271
  1394   0046F2  EF7E  F023         	goto	u270
  1395   0046F6                     u271:
  1396   0046F6  0E01               	movlw	1
  1397   0046F8  EF7F  F023         	goto	u280
  1398   0046FC                     u270:
  1399   0046FC  0E00               	movlw	0
  1400   0046FE                     u280:
  1401   0046FE  0012               	return		;funcret
  1402   004700                     __end_of_check_code:
  1403                           	callstack 0
  1404                           
  1405 ;; *************** function _activate_motor *****************
  1406 ;; Defined at:
  1407 ;;		line 90 in file "./functions.h"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		wreg
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1423 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1424 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1425 ;;Total ram usage:        2 bytes
  1426 ;; Hardware stack levels used: 1
  1427 ;; Hardware stack levels required when called: 2
  1428 ;; This function calls:
  1429 ;;		Nothing
  1430 ;; This function is called by:
  1431 ;;		_code_correct_or_wrong
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text4
  1436   0046AE                     __ptext4:
  1437                           	callstack 0
  1438   0046AE                     _activate_motor:
  1439                           	callstack 27
  1440   0046AE                     
  1441                           ;./functions.h: 91:     PORTCbits.RC7 = 1;
  1442   0046AE  8ECC               	bsf	204,7,c	;volatile
  1443   0046B0                     
  1444                           ;./functions.h: 92:     _delay((unsigned long)((3000)*(4000000/4000.0)));
  1445   0046B0  0E10               	movlw	16
  1446   0046B2  6E05               	movwf	(??_activate_motor+1)^0,c
  1447   0046B4  0E39               	movlw	57
  1448   0046B6  6E04               	movwf	??_activate_motor^0,c
  1449   0046B8  0E0E               	movlw	14
  1450   0046BA                     u377:
  1451   0046BA  2EE8               	decfsz	wreg,f,c
  1452   0046BC  D7FE               	bra	u377
  1453   0046BE  2E04               	decfsz	??_activate_motor^0,f,c
  1454   0046C0  D7FC               	bra	u377
  1455   0046C2  2E05               	decfsz	(??_activate_motor+1)^0,f,c
  1456   0046C4  D7FA               	bra	u377
  1457   0046C6                     
  1458                           ;./functions.h: 93:     PORTCbits.RC7 = 0;
  1459   0046C6  9ECC               	bcf	204,7,c	;volatile
  1460   0046C8  0012               	return		;funcret
  1461   0046CA                     __end_of_activate_motor:
  1462                           	callstack 0
  1463                           
  1464 ;; *************** function _activate_buzzer *****************
  1465 ;; Defined at:
  1466 ;;		line 97 in file "./functions.h"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1484 ;;Total ram usage:        2 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; Hardware stack levels required when called: 2
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_code_correct_or_wrong
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text5
  1495   0046CA                     __ptext5:
  1496                           	callstack 0
  1497   0046CA                     _activate_buzzer:
  1498                           	callstack 27
  1499   0046CA                     
  1500                           ;./functions.h: 98:     PORTCbits.RC6 = 1;
  1501   0046CA  8CCC               	bsf	204,6,c	;volatile
  1502   0046CC                     
  1503                           ;./functions.h: 99:     _delay((unsigned long)((2000)*(4000000/4000.0)));
  1504   0046CC  0E0B               	movlw	11
  1505   0046CE  6E05               	movwf	(??_activate_buzzer+1)^0,c
  1506   0046D0  0E26               	movlw	38
  1507   0046D2  6E04               	movwf	??_activate_buzzer^0,c
  1508   0046D4  0E5E               	movlw	94
  1509   0046D6                     u387:
  1510   0046D6  2EE8               	decfsz	wreg,f,c
  1511   0046D8  D7FE               	bra	u387
  1512   0046DA  2E04               	decfsz	??_activate_buzzer^0,f,c
  1513   0046DC  D7FC               	bra	u387
  1514   0046DE  2E05               	decfsz	(??_activate_buzzer+1)^0,f,c
  1515   0046E0  D7FA               	bra	u387
  1516   0046E2                     
  1517                           ;./functions.h: 100:     PORTCbits.RC6 = 0;
  1518   0046E2  9CCC               	bcf	204,6,c	;volatile
  1519   0046E4  0012               	return		;funcret
  1520   0046E6                     __end_of_activate_buzzer:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _check_for_change_code_request *****************
  1524 ;; Defined at:
  1525 ;;		line 173 in file "./functions.h"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;		None
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  key             1   25[COMRAM] unsigned char 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1542 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1543 ;;Total ram usage:        1 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; Hardware stack levels required when called: 5
  1546 ;; This function calls:
  1547 ;;		_get_keypad_key
  1548 ;;		_set_new_secret_code
  1549 ;; This function is called by:
  1550 ;;		_main
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           	psect	text6
  1555   00468E                     __ptext6:
  1556                           	callstack 0
  1557   00468E                     _check_for_change_code_request:
  1558                           	callstack 25
  1559   00468E                     
  1560                           ;./functions.h: 174:     char key = get_keypad_key();
  1561   00468E  EC59  F020         	call	_get_keypad_key	;wreg free
  1562   004692  6E1A               	movwf	check_for_change_code_request@key^0,c
  1563   004694                     
  1564                           ;./functions.h: 175:     if (key == '*'){
  1565   004694  0E2A               	movlw	42
  1566   004696  181A               	xorwf	check_for_change_code_request@key^0,w,c
  1567   004698  A4D8               	btfss	status,2,c
  1568   00469A  EF51  F023         	goto	u301
  1569   00469E  EF53  F023         	goto	u300
  1570   0046A2                     u301:
  1571   0046A2  EF56  F023         	goto	l145
  1572   0046A6                     u300:
  1573   0046A6                     
  1574                           ;./functions.h: 176:             SECRET_CODE = set_new_secret_code();
  1575   0046A6  EC86  F022         	call	_set_new_secret_code	;wreg free
  1576   0046AA  6E2B               	movwf	_SECRET_CODE^0,c
  1577   0046AC                     l145:
  1578   0046AC  0012               	return		;funcret
  1579   0046AE                     __end_of_check_for_change_code_request:
  1580                           	callstack 0
  1581                           
  1582 ;; *************** function _set_new_secret_code *****************
  1583 ;; Defined at:
  1584 ;;		line 213 in file "./functions.h"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;		None
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  low             1   24[COMRAM] unsigned char 
  1589 ;;  high            1   23[COMRAM] unsigned char 
  1590 ;;  newCode         1   22[COMRAM] unsigned char 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      unsigned char 
  1593 ;; Registers used:
  1594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1601 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1602 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1603 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1604 ;;Total ram usage:        5 bytes
  1605 ;; Hardware stack levels used: 1
  1606 ;; Hardware stack levels required when called: 4
  1607 ;; This function calls:
  1608 ;;		_display_digit
  1609 ;;		_wait_for_keypad_digit
  1610 ;; This function is called by:
  1611 ;;		_check_for_change_code_request
  1612 ;;		_main
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text7
  1617   00450C                     __ptext7:
  1618                           	callstack 0
  1619   00450C                     _set_new_secret_code:
  1620                           	callstack 26
  1621   00450C                     
  1622                           ;./functions.h: 215:     uint8_t high = wait_for_keypad_digit();
  1623   00450C  EC01  F022         	call	_wait_for_keypad_digit	;wreg free
  1624   004510  6E18               	movwf	set_new_secret_code@high^0,c
  1625   004512                     
  1626                           ;./functions.h: 216:     display_digit((char)(high + '0'));
  1627   004512  5018               	movf	set_new_secret_code@high^0,w,c
  1628   004514  0F30               	addlw	48
  1629   004516  EC92  F021         	call	_display_digit
  1630   00451A                     
  1631                           ;./functions.h: 217:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1632   00451A  0E06               	movlw	6
  1633   00451C  6E16               	movwf	(??_set_new_secret_code+1)^0,c
  1634   00451E  0E13               	movlw	19
  1635   004520  6E15               	movwf	??_set_new_secret_code^0,c
  1636   004522  0EAE               	movlw	174
  1637   004524                     u397:
  1638   004524  2EE8               	decfsz	wreg,f,c
  1639   004526  D7FE               	bra	u397
  1640   004528  2E15               	decfsz	??_set_new_secret_code^0,f,c
  1641   00452A  D7FC               	bra	u397
  1642   00452C  2E16               	decfsz	(??_set_new_secret_code+1)^0,f,c
  1643   00452E  D7FA               	bra	u397
  1644   004530                     
  1645                           ;./functions.h: 219:     uint8_t low = wait_for_keypad_digit();
  1646   004530  EC01  F022         	call	_wait_for_keypad_digit	;wreg free
  1647   004534  6E19               	movwf	set_new_secret_code@low^0,c
  1648   004536                     
  1649                           ;./functions.h: 220:     display_digit((char)(low + '0'));
  1650   004536  5019               	movf	set_new_secret_code@low^0,w,c
  1651   004538  0F30               	addlw	48
  1652   00453A  EC92  F021         	call	_display_digit
  1653                           
  1654                           ;./functions.h: 221:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1655   00453E  0E06               	movlw	6
  1656   004540  6E16               	movwf	(??_set_new_secret_code+1)^0,c
  1657   004542  0E13               	movlw	19
  1658   004544  6E15               	movwf	??_set_new_secret_code^0,c
  1659   004546  0EAE               	movlw	174
  1660   004548                     u407:
  1661   004548  2EE8               	decfsz	wreg,f,c
  1662   00454A  D7FE               	bra	u407
  1663   00454C  2E15               	decfsz	??_set_new_secret_code^0,f,c
  1664   00454E  D7FC               	bra	u407
  1665   004550  2E16               	decfsz	(??_set_new_secret_code+1)^0,f,c
  1666   004552  D7FA               	bra	u407
  1667   004554                     
  1668                           ;./functions.h: 223:     display_digit('E');
  1669   004554  0E45               	movlw	69
  1670   004556  EC92  F021         	call	_display_digit
  1671   00455A                     
  1672                           ;./functions.h: 225:     uint8_t newCode = (high * 10) + low;
  1673   00455A  5018               	movf	set_new_secret_code@high^0,w,c
  1674   00455C  0D0A               	mullw	10
  1675   00455E  50F3               	movf	243,w,c
  1676   004560  2419               	addwf	set_new_secret_code@low^0,w,c
  1677   004562  6E17               	movwf	set_new_secret_code@newCode^0,c
  1678   004564                     
  1679                           ;./functions.h: 226:     return newCode;
  1680   004564  5017               	movf	set_new_secret_code@newCode^0,w,c
  1681   004566  0012               	return		;funcret
  1682   004568                     __end_of_set_new_secret_code:
  1683                           	callstack 0
  1684                           
  1685 ;; *************** function _wait_for_keypad_digit *****************
  1686 ;; Defined at:
  1687 ;;		line 152 in file "./functions.h"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  key             1   19[COMRAM] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      unsigned char 
  1694 ;; Registers used:
  1695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1703 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1704 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1705 ;;Total ram usage:        2 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; Hardware stack levels required when called: 3
  1708 ;; This function calls:
  1709 ;;		_get_keypad_key
  1710 ;; This function is called by:
  1711 ;;		_set_new_secret_code
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text8
  1716   004402                     __ptext8:
  1717                           	callstack 0
  1718   004402                     _wait_for_keypad_digit:
  1719                           	callstack 26
  1720   004402                     l139:
  1721   004402                     
  1722                           ;./functions.h: 155:         LATD = 0b00000001;
  1723   004402  0E01               	movlw	1
  1724   004404  6EBD               	movwf	189,c	;volatile
  1725   004406                     
  1726                           ;./functions.h: 156:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1727   004406  0E0D               	movlw	13
  1728   004408  6E13               	movwf	??_wait_for_keypad_digit^0,c
  1729   00440A  0EFC               	movlw	252
  1730   00440C                     u417:
  1731   00440C  2EE8               	decfsz	wreg,f,c
  1732   00440E  D7FE               	bra	u417
  1733   004410  2E13               	decfsz	??_wait_for_keypad_digit^0,f,c
  1734   004412  D7FC               	bra	u417
  1735   004414                     
  1736                           ;./functions.h: 157:         LATD = 0b00000010;
  1737   004414  0E02               	movlw	2
  1738   004416  6EBD               	movwf	189,c	;volatile
  1739                           
  1740                           ;./functions.h: 158:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1741   004418  0E0D               	movlw	13
  1742   00441A  6E13               	movwf	??_wait_for_keypad_digit^0,c
  1743   00441C  0EFC               	movlw	252
  1744   00441E                     u427:
  1745   00441E  2EE8               	decfsz	wreg,f,c
  1746   004420  D7FE               	bra	u427
  1747   004422  2E13               	decfsz	??_wait_for_keypad_digit^0,f,c
  1748   004424  D7FC               	bra	u427
  1749   004426                     
  1750                           ;./functions.h: 159:         LATD = 0b00000100;
  1751   004426  0E04               	movlw	4
  1752   004428  6EBD               	movwf	189,c	;volatile
  1753   00442A                     
  1754                           ;./functions.h: 160:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1755   00442A  0E0D               	movlw	13
  1756   00442C  6E13               	movwf	??_wait_for_keypad_digit^0,c
  1757   00442E  0EFC               	movlw	252
  1758   004430                     u437:
  1759   004430  2EE8               	decfsz	wreg,f,c
  1760   004432  D7FE               	bra	u437
  1761   004434  2E13               	decfsz	??_wait_for_keypad_digit^0,f,c
  1762   004436  D7FC               	bra	u437
  1763                           
  1764                           ;./functions.h: 161:         LATD = 0b00001000;
  1765   004438  0E08               	movlw	8
  1766   00443A  6EBD               	movwf	189,c	;volatile
  1767   00443C                     
  1768                           ;./functions.h: 162:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1769   00443C  0E0D               	movlw	13
  1770   00443E  6E13               	movwf	??_wait_for_keypad_digit^0,c
  1771   004440  0EFC               	movlw	252
  1772   004442                     u447:
  1773   004442  2EE8               	decfsz	wreg,f,c
  1774   004444  D7FE               	bra	u447
  1775   004446  2E13               	decfsz	??_wait_for_keypad_digit^0,f,c
  1776   004448  D7FC               	bra	u447
  1777   00444A                     
  1778                           ;./functions.h: 163:         LATD = 0b00010000;
  1779   00444A  0E10               	movlw	16
  1780   00444C  6EBD               	movwf	189,c	;volatile
  1781                           
  1782                           ;./functions.h: 164:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1783   00444E  0E0D               	movlw	13
  1784   004450  6E13               	movwf	??_wait_for_keypad_digit^0,c
  1785   004452  0EFC               	movlw	252
  1786   004454                     u457:
  1787   004454  2EE8               	decfsz	wreg,f,c
  1788   004456  D7FE               	bra	u457
  1789   004458  2E13               	decfsz	??_wait_for_keypad_digit^0,f,c
  1790   00445A  D7FC               	bra	u457
  1791   00445C                     
  1792                           ;./functions.h: 165:         LATD = 0b00100000;
  1793   00445C  0E20               	movlw	32
  1794   00445E  6EBD               	movwf	189,c	;volatile
  1795   004460                     
  1796                           ;./functions.h: 166:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1797   004460  0E0D               	movlw	13
  1798   004462  6E13               	movwf	??_wait_for_keypad_digit^0,c
  1799   004464  0EFC               	movlw	252
  1800   004466                     u467:
  1801   004466  2EE8               	decfsz	wreg,f,c
  1802   004468  D7FE               	bra	u467
  1803   00446A  2E13               	decfsz	??_wait_for_keypad_digit^0,f,c
  1804   00446C  D7FC               	bra	u467
  1805   00446E                     
  1806                           ;./functions.h: 167:         key = get_keypad_key();
  1807   00446E  EC59  F020         	call	_get_keypad_key	;wreg free
  1808   004472  6E14               	movwf	wait_for_keypad_digit@key^0,c
  1809   004474                     
  1810                           ;./functions.h: 168:     } while (key < '0' || key > '4');
  1811   004474  0E2F               	movlw	47
  1812   004476  6414               	cpfsgt	wait_for_keypad_digit@key^0,c
  1813   004478  EF40  F022         	goto	u141
  1814   00447C  EF42  F022         	goto	u140
  1815   004480                     u141:
  1816   004480  EF01  F022         	goto	l139
  1817   004484                     u140:
  1818   004484  0E35               	movlw	53
  1819   004486  6014               	cpfslt	wait_for_keypad_digit@key^0,c
  1820   004488  EF48  F022         	goto	u151
  1821   00448C  EF4A  F022         	goto	u150
  1822   004490                     u151:
  1823   004490  EF01  F022         	goto	l139
  1824   004494                     u150:
  1825   004494                     
  1826                           ;./functions.h: 169:     return key - '0';
  1827   004494  5014               	movf	wait_for_keypad_digit@key^0,w,c
  1828   004496  0FD0               	addlw	208
  1829   004498  0012               	return		;funcret
  1830   00449A                     __end_of_wait_for_keypad_digit:
  1831                           	callstack 0
  1832                           
  1833 ;; *************** function _get_keypad_key *****************
  1834 ;; Defined at:
  1835 ;;		line 123 in file "./functions.h"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;		None
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  row             2   16[COMRAM] int 
  1840 ;;  keys           12    4[COMRAM] unsigned char [3][4]
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      unsigned char 
  1843 ;; Registers used:
  1844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1851 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1852 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1853 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1854 ;;Total ram usage:       15 bytes
  1855 ;; Hardware stack levels used: 1
  1856 ;; Hardware stack levels required when called: 2
  1857 ;; This function calls:
  1858 ;;		Nothing
  1859 ;; This function is called by:
  1860 ;;		_wait_for_keypad_digit
  1861 ;;		_check_for_change_code_request
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text9
  1866   0040B2                     __ptext9:
  1867                           	callstack 0
  1868   0040B2                     _get_keypad_key:
  1869                           	callstack 26
  1870   0040B2                     
  1871                           ;./functions.h: 124:     char keys[4][3] = {
  1872   0040B2  EE20  F01B         	lfsr	2,get_keypad_key@F16222
  1873   0040B6  EE10  F005         	lfsr	1,get_keypad_key@keys
  1874   0040BA  0E0B               	movlw	11
  1875   0040BC                     u11:
  1876   0040BC  006F FF6F FFE3     	movff	plusw2,plusw1
  1877   0040C2  06E8               	decf	wreg,f,c
  1878   0040C4  E2FB               	bc	u11
  1879   0040C6                     
  1880                           ;./functions.h: 131:     for (int row = 0; row < 4; row++) {
  1881   0040C6  0E00               	movlw	0
  1882   0040C8  6E12               	movwf	(get_keypad_key@row+1)^0,c
  1883   0040CA  0E00               	movlw	0
  1884   0040CC  6E11               	movwf	get_keypad_key@row^0,c
  1885   0040CE                     l855:
  1886                           
  1887                           ;./functions.h: 133:         LATBbits.LATB1 = (row == 0) ? 0 : 1;
  1888   0040CE  5011               	movf	get_keypad_key@row^0,w,c
  1889   0040D0  1012               	iorwf	(get_keypad_key@row+1)^0,w,c
  1890   0040D2  A4D8               	btfss	status,2,c
  1891   0040D4  EF6E  F020         	goto	u21
  1892   0040D8  EF72  F020         	goto	u20
  1893   0040DC                     u21:
  1894   0040DC  6A04               	clrf	??_get_keypad_key^0,c
  1895   0040DE  2A04               	incf	??_get_keypad_key^0,f,c
  1896   0040E0  EF73  F020         	goto	u38
  1897   0040E4                     u20:
  1898   0040E4  6A04               	clrf	??_get_keypad_key^0,c
  1899   0040E6                     u38:
  1900   0040E6  4604               	rlncf	??_get_keypad_key^0,f,c
  1901   0040E8  50BB               	movf	187,w,c	;volatile
  1902   0040EA  1804               	xorwf	??_get_keypad_key^0,w,c
  1903   0040EC  0BFD               	andlw	-3
  1904   0040EE  1804               	xorwf	??_get_keypad_key^0,w,c
  1905   0040F0  6EBB               	movwf	187,c	;volatile
  1906                           
  1907                           ;./functions.h: 134:         LATBbits.LATB2 = (row == 1) ? 0 : 1;
  1908   0040F2  0411               	decf	get_keypad_key@row^0,w,c
  1909   0040F4  1012               	iorwf	(get_keypad_key@row+1)^0,w,c
  1910   0040F6  A4D8               	btfss	status,2,c
  1911   0040F8  EF80  F020         	goto	u41
  1912   0040FC  EF84  F020         	goto	u40
  1913   004100                     u41:
  1914   004100  6A04               	clrf	??_get_keypad_key^0,c
  1915   004102  2A04               	incf	??_get_keypad_key^0,f,c
  1916   004104  EF85  F020         	goto	u58
  1917   004108                     u40:
  1918   004108  6A04               	clrf	??_get_keypad_key^0,c
  1919   00410A                     u58:
  1920   00410A  4604               	rlncf	??_get_keypad_key^0,f,c
  1921   00410C  4604               	rlncf	??_get_keypad_key^0,f,c
  1922   00410E  50BB               	movf	187,w,c	;volatile
  1923   004110  1804               	xorwf	??_get_keypad_key^0,w,c
  1924   004112  0BFB               	andlw	-5
  1925   004114  1804               	xorwf	??_get_keypad_key^0,w,c
  1926   004116  6EBB               	movwf	187,c	;volatile
  1927                           
  1928                           ;./functions.h: 135:         LATBbits.LATB3 = (row == 2) ? 0 : 1;
  1929   004118  0E02               	movlw	2
  1930   00411A  1811               	xorwf	get_keypad_key@row^0,w,c
  1931   00411C  1012               	iorwf	(get_keypad_key@row+1)^0,w,c
  1932   00411E  A4D8               	btfss	status,2,c
  1933   004120  EF94  F020         	goto	u61
  1934   004124  EF98  F020         	goto	u60
  1935   004128                     u61:
  1936   004128  6A04               	clrf	??_get_keypad_key^0,c
  1937   00412A  2A04               	incf	??_get_keypad_key^0,f,c
  1938   00412C  EF99  F020         	goto	u78
  1939   004130                     u60:
  1940   004130  6A04               	clrf	??_get_keypad_key^0,c
  1941   004132                     u78:
  1942   004132  4604               	rlncf	??_get_keypad_key^0,f,c
  1943   004134  4604               	rlncf	??_get_keypad_key^0,f,c
  1944   004136  4604               	rlncf	??_get_keypad_key^0,f,c
  1945   004138  50BB               	movf	187,w,c	;volatile
  1946   00413A  1804               	xorwf	??_get_keypad_key^0,w,c
  1947   00413C  0BF7               	andlw	-9
  1948   00413E  1804               	xorwf	??_get_keypad_key^0,w,c
  1949   004140  6EBB               	movwf	187,c	;volatile
  1950                           
  1951                           ;./functions.h: 136:         LATBbits.LATB4 = (row == 3) ? 0 : 1;
  1952   004142  0E03               	movlw	3
  1953   004144  1811               	xorwf	get_keypad_key@row^0,w,c
  1954   004146  1012               	iorwf	(get_keypad_key@row+1)^0,w,c
  1955   004148  A4D8               	btfss	status,2,c
  1956   00414A  EFA9  F020         	goto	u81
  1957   00414E  EFAD  F020         	goto	u80
  1958   004152                     u81:
  1959   004152  6A04               	clrf	??_get_keypad_key^0,c
  1960   004154  2A04               	incf	??_get_keypad_key^0,f,c
  1961   004156  EFAE  F020         	goto	u98
  1962   00415A                     u80:
  1963   00415A  6A04               	clrf	??_get_keypad_key^0,c
  1964   00415C                     u98:
  1965   00415C  3A04               	swapf	??_get_keypad_key^0,f,c
  1966   00415E  50BB               	movf	187,w,c	;volatile
  1967   004160  1804               	xorwf	??_get_keypad_key^0,w,c
  1968   004162  0BEF               	andlw	-17
  1969   004164  1804               	xorwf	??_get_keypad_key^0,w,c
  1970   004166  6EBB               	movwf	187,c	;volatile
  1971   004168                     
  1972                           ;./functions.h: 138:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1973   004168  0E07               	movlw	7
  1974   00416A  6E04               	movwf	??_get_keypad_key^0,c
  1975   00416C  0E7D               	movlw	125
  1976   00416E                     u477:
  1977   00416E  2EE8               	decfsz	wreg,f,c
  1978   004170  D7FE               	bra	u477
  1979   004172  2E04               	decfsz	??_get_keypad_key^0,f,c
  1980   004174  D7FC               	bra	u477
  1981   004176  0000               	nop	
  1982   004178                     
  1983                           ;./functions.h: 141:         if (!PORTBbits.RB5) return keys[row][0];
  1984   004178  BACB               	btfsc	203,5,c	;volatile
  1985   00417A  EFC1  F020         	goto	u101
  1986   00417E  EFC3  F020         	goto	u100
  1987   004182                     u101:
  1988   004182  EFCC  F020         	goto	l133
  1989   004186                     u100:
  1990   004186  5011               	movf	get_keypad_key@row^0,w,c
  1991   004188  0D03               	mullw	3
  1992   00418A  50F3               	movf	243,w,c
  1993   00418C  0F05               	addlw	low get_keypad_key@keys
  1994   00418E  6ED9               	movwf	fsr2l,c
  1995   004190  6ADA               	clrf	fsr2h,c
  1996   004192  50DF               	movf	indf2,w,c
  1997   004194  EF07  F021         	goto	l134
  1998   004198                     l133:
  1999                           
  2000                           ;./functions.h: 142:         if (!PORTBbits.RB6) return keys[row][1];
  2001   004198  BCCB               	btfsc	203,6,c	;volatile
  2002   00419A  EFD1  F020         	goto	u111
  2003   00419E  EFD3  F020         	goto	u110
  2004   0041A2                     u111:
  2005   0041A2  EFE1  F020         	goto	l135
  2006   0041A6                     u110:
  2007   0041A6  5011               	movf	get_keypad_key@row^0,w,c
  2008   0041A8  0D03               	mullw	3
  2009   0041AA  006F FFCC  F004    	movff	prodl,??_get_keypad_key
  2010   0041B0  0E01               	movlw	1
  2011   0041B2  2604               	addwf	??_get_keypad_key^0,f,c
  2012   0041B4  5004               	movf	??_get_keypad_key^0,w,c
  2013   0041B6  0F05               	addlw	low get_keypad_key@keys
  2014   0041B8  6ED9               	movwf	fsr2l,c
  2015   0041BA  6ADA               	clrf	fsr2h,c
  2016   0041BC  50DF               	movf	indf2,w,c
  2017   0041BE  EF07  F021         	goto	l134
  2018   0041C2                     l135:
  2019                           
  2020                           ;./functions.h: 143:         if (!PORTBbits.RB7) return keys[row][2];
  2021   0041C2  BECB               	btfsc	203,7,c	;volatile
  2022   0041C4  EFE6  F020         	goto	u121
  2023   0041C8  EFE8  F020         	goto	u120
  2024   0041CC                     u121:
  2025   0041CC  EFF6  F020         	goto	l873
  2026   0041D0                     u120:
  2027   0041D0  5011               	movf	get_keypad_key@row^0,w,c
  2028   0041D2  0D03               	mullw	3
  2029   0041D4  006F FFCC  F004    	movff	prodl,??_get_keypad_key
  2030   0041DA  0E02               	movlw	2
  2031   0041DC  2604               	addwf	??_get_keypad_key^0,f,c
  2032   0041DE  5004               	movf	??_get_keypad_key^0,w,c
  2033   0041E0  0F05               	addlw	low get_keypad_key@keys
  2034   0041E2  6ED9               	movwf	fsr2l,c
  2035   0041E4  6ADA               	clrf	fsr2h,c
  2036   0041E6  50DF               	movf	indf2,w,c
  2037   0041E8  EF07  F021         	goto	l134
  2038   0041EC                     l873:
  2039                           
  2040                           ;./functions.h: 144:     }
  2041   0041EC  4A11               	infsnz	get_keypad_key@row^0,f,c
  2042   0041EE  2A12               	incf	(get_keypad_key@row+1)^0,f,c
  2043   0041F0  BE12               	btfsc	(get_keypad_key@row+1)^0,7,c
  2044   0041F2  EF04  F021         	goto	u131
  2045   0041F6  5012               	movf	(get_keypad_key@row+1)^0,w,c
  2046   0041F8  E109               	bnz	u130
  2047   0041FA  0E04               	movlw	4
  2048   0041FC  5C11               	subwf	get_keypad_key@row^0,w,c
  2049   0041FE  A0D8               	btfss	status,0,c
  2050   004200  EF04  F021         	goto	u131
  2051   004204  EF06  F021         	goto	u130
  2052   004208                     u131:
  2053   004208  EF67  F020         	goto	l855
  2054   00420C                     u130:
  2055   00420C                     
  2056                           ;./functions.h: 146:     return 0;
  2057   00420C  0E00               	movlw	0
  2058   00420E                     l134:
  2059   00420E  0012               	return		;funcret
  2060   004210                     __end_of_get_keypad_key:
  2061                           	callstack 0
  2062                           
  2063 ;; *************** function _check_for_PR_input *****************
  2064 ;; Defined at:
  2065 ;;		line 182 in file "./functions.h"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;		None
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2081 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2083 ;;Total ram usage:        2 bytes
  2084 ;; Hardware stack levels used: 1
  2085 ;; Hardware stack levels required when called: 4
  2086 ;; This function calls:
  2087 ;;		_input_digit
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text10
  2094   00449A                     __ptext10:
  2095                           	callstack 0
  2096   00449A                     _check_for_PR_input:
  2097                           	callstack 26
  2098   00449A                     
  2099                           ;./functions.h: 183:     if(PORTEbits.RE0 == 1 || PORTEbits.RE1 == 1){
  2100   00449A  B0CE               	btfsc	206,0,c	;volatile
  2101   00449C  EF52  F022         	goto	u311
  2102   0044A0  EF54  F022         	goto	u310
  2103   0044A4                     u311:
  2104   0044A4  EF5B  F022         	goto	l150
  2105   0044A8                     u310:
  2106   0044A8  A2CE               	btfss	206,1,c	;volatile
  2107   0044AA  EF59  F022         	goto	u321
  2108   0044AE  EF5B  F022         	goto	u320
  2109   0044B2                     u321:
  2110   0044B2  EF85  F022         	goto	l154
  2111   0044B6                     u320:
  2112   0044B6                     l150:
  2113                           
  2114                           ;./functions.h: 184:         if (PORTEbits.RE0 == 1){
  2115   0044B6  A0CE               	btfss	206,0,c	;volatile
  2116   0044B8  EF60  F022         	goto	u331
  2117   0044BC  EF62  F022         	goto	u330
  2118   0044C0                     u331:
  2119   0044C0  EF73  F022         	goto	l151
  2120   0044C4                     u330:
  2121   0044C4                     
  2122                           ;./functions.h: 185:             high_digit = input_digit(0);
  2123   0044C4  0E00               	movlw	0
  2124   0044C6  EC08  F021         	call	_input_digit
  2125   0044CA  6E2A               	movwf	_high_digit^0,c
  2126   0044CC                     l1083:
  2127                           
  2128                           ;./functions.h: 187:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2129   0044CC  0E03               	movlw	3
  2130   0044CE  6E0A               	movwf	(??_check_for_PR_input+1)^0,c
  2131   0044D0  0E8A               	movlw	138
  2132   0044D2  6E09               	movwf	??_check_for_PR_input^0,c
  2133   0044D4  0E56               	movlw	86
  2134   0044D6                     u487:
  2135   0044D6  2EE8               	decfsz	wreg,f,c
  2136   0044D8  D7FE               	bra	u487
  2137   0044DA  2E09               	decfsz	??_check_for_PR_input^0,f,c
  2138   0044DC  D7FC               	bra	u487
  2139   0044DE  2E0A               	decfsz	(??_check_for_PR_input+1)^0,f,c
  2140   0044E0  D7FA               	bra	u487
  2141                           
  2142                           ;./functions.h: 188:         }else if (PORTEbits.RE1 == 1){
  2143   0044E2  EF80  F022         	goto	l1089
  2144   0044E6                     l151:
  2145   0044E6  A2CE               	btfss	206,1,c	;volatile
  2146   0044E8  EF78  F022         	goto	u341
  2147   0044EC  EF7A  F022         	goto	u340
  2148   0044F0                     u341:
  2149   0044F0  EF80  F022         	goto	l1089
  2150   0044F4                     u340:
  2151   0044F4                     
  2152                           ;./functions.h: 189:             low_digit = input_digit(1);
  2153   0044F4  0E01               	movlw	1
  2154   0044F6  EC08  F021         	call	_input_digit
  2155   0044FA  6E29               	movwf	_low_digit^0,c
  2156   0044FC  EF66  F022         	goto	l1083
  2157   004500                     l1089:
  2158                           
  2159                           ;./functions.h: 194:         user_code = (high_digit * 10) + low_digit;
  2160   004500  502A               	movf	_high_digit^0,w,c
  2161   004502  0D0A               	mullw	10
  2162   004504  50F3               	movf	243,w,c
  2163   004506  2429               	addwf	_low_digit^0,w,c
  2164   004508  6E27               	movwf	_user_code^0,c
  2165   00450A                     l154:
  2166   00450A  0012               	return		;funcret
  2167   00450C                     __end_of_check_for_PR_input:
  2168                           	callstack 0
  2169                           
  2170 ;; *************** function _input_digit *****************
  2171 ;; Defined at:
  2172 ;;		line 32 in file "./functions.h"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  sensor_pin      1    wreg     unsigned char 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  sensor_pin      1    6[COMRAM] unsigned char 
  2177 ;;  count           1    7[COMRAM] unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      unsigned char 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2188 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2189 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2190 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2191 ;;Total ram usage:        4 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 3
  2194 ;; This function calls:
  2195 ;;		_display_digit
  2196 ;; This function is called by:
  2197 ;;		_check_for_PR_input
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text11
  2202   004210                     __ptext11:
  2203                           	callstack 0
  2204   004210                     _input_digit:
  2205                           	callstack 26
  2206                           
  2207                           ;incstack = 0
  2208                           ;input_digit@sensor_pin stored from wreg
  2209   004210  6E07               	movwf	input_digit@sensor_pin^0,c
  2210   004212                     
  2211                           ;./functions.h: 33:     uint8_t count = 1;
  2212   004212  0E01               	movlw	1
  2213   004214  6E08               	movwf	input_digit@count^0,c
  2214   004216                     l72:
  2215   004216  B0CE               	btfsc	206,0,c	;volatile
  2216   004218  EF10  F021         	goto	u161
  2217   00421C  EF12  F021         	goto	u160
  2218   004220                     u161:
  2219   004220  EF0B  F021         	goto	l72
  2220   004224                     u160:
  2221   004224  B2CE               	btfsc	206,1,c	;volatile
  2222   004226  EF17  F021         	goto	u171
  2223   00422A  EF19  F021         	goto	u170
  2224   00422E                     u171:
  2225   00422E  EF0B  F021         	goto	l72
  2226   004232                     u170:
  2227   004232                     
  2228                           ;./functions.h: 35:     display_digit((char)(count + '0'));
  2229   004232  5008               	movf	input_digit@count^0,w,c
  2230   004234  0F30               	addlw	48
  2231   004236  EC92  F021         	call	_display_digit
  2232   00423A                     l949:
  2233                           
  2234                           ;./functions.h: 39:         if (sensor_pin == 0 && PORTEbits.RE0 == 1 && count < 4) {
  2235   00423A  5007               	movf	input_digit@sensor_pin^0,w,c
  2236   00423C  A4D8               	btfss	status,2,c
  2237   00423E  EF23  F021         	goto	u181
  2238   004242  EF25  F021         	goto	u180
  2239   004246                     u181:
  2240   004246  EF4E  F021         	goto	l961
  2241   00424A                     u180:
  2242   00424A  A0CE               	btfss	206,0,c	;volatile
  2243   00424C  EF2A  F021         	goto	u191
  2244   004250  EF2C  F021         	goto	u190
  2245   004254                     u191:
  2246   004254  EF4E  F021         	goto	l961
  2247   004258                     u190:
  2248   004258  0E04               	movlw	4
  2249   00425A  6008               	cpfslt	input_digit@count^0,c
  2250   00425C  EF32  F021         	goto	u201
  2251   004260  EF34  F021         	goto	u200
  2252   004264                     u201:
  2253   004264  EF4E  F021         	goto	l961
  2254   004268                     u200:
  2255   004268                     
  2256                           ;./functions.h: 40:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2257   004268  0E03               	movlw	3
  2258   00426A  6E06               	movwf	(??_input_digit+1)^0,c
  2259   00426C  0E8A               	movlw	138
  2260   00426E  6E05               	movwf	??_input_digit^0,c
  2261   004270  0E56               	movlw	86
  2262   004272                     u497:
  2263   004272  2EE8               	decfsz	wreg,f,c
  2264   004274  D7FE               	bra	u497
  2265   004276  2E05               	decfsz	??_input_digit^0,f,c
  2266   004278  D7FC               	bra	u497
  2267   00427A  2E06               	decfsz	(??_input_digit+1)^0,f,c
  2268   00427C  D7FA               	bra	u497
  2269   00427E                     
  2270                           ;./functions.h: 41:             count++;
  2271   00427E  2A08               	incf	input_digit@count^0,f,c
  2272   004280                     l77:
  2273   004280  B0CE               	btfsc	206,0,c	;volatile
  2274   004282  EF45  F021         	goto	u211
  2275   004286  EF47  F021         	goto	u210
  2276   00428A                     u211:
  2277   00428A  EF40  F021         	goto	l77
  2278   00428E                     u210:
  2279   00428E                     
  2280                           ;./functions.h: 43:             PORTE = 0;
  2281   00428E  6ACE               	clrf	206,c	;volatile
  2282   004290                     
  2283                           ;./functions.h: 44:             display_digit((char)(count + '0'));
  2284   004290  5008               	movf	input_digit@count^0,w,c
  2285   004292  0F30               	addlw	48
  2286   004294  EC92  F021         	call	_display_digit
  2287                           
  2288                           ;./functions.h: 45:         }
  2289   004298  EF7D  F021         	goto	l973
  2290   00429C                     l961:
  2291   00429C  0407               	decf	input_digit@sensor_pin^0,w,c
  2292   00429E  A4D8               	btfss	status,2,c
  2293   0042A0  EF54  F021         	goto	u221
  2294   0042A4  EF56  F021         	goto	u220
  2295   0042A8                     u221:
  2296   0042A8  EF7D  F021         	goto	l973
  2297   0042AC                     u220:
  2298   0042AC  A2CE               	btfss	206,1,c	;volatile
  2299   0042AE  EF5B  F021         	goto	u231
  2300   0042B2  EF5D  F021         	goto	u230
  2301   0042B6                     u231:
  2302   0042B6  EF7D  F021         	goto	l973
  2303   0042BA                     u230:
  2304   0042BA  0E04               	movlw	4
  2305   0042BC  6008               	cpfslt	input_digit@count^0,c
  2306   0042BE  EF63  F021         	goto	u241
  2307   0042C2  EF65  F021         	goto	u240
  2308   0042C6                     u241:
  2309   0042C6  EF7D  F021         	goto	l973
  2310   0042CA                     u240:
  2311   0042CA                     
  2312                           ;./functions.h: 47:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2313   0042CA  0E03               	movlw	3
  2314   0042CC  6E06               	movwf	(??_input_digit+1)^0,c
  2315   0042CE  0E8A               	movlw	138
  2316   0042D0  6E05               	movwf	??_input_digit^0,c
  2317   0042D2  0E56               	movlw	86
  2318   0042D4                     u507:
  2319   0042D4  2EE8               	decfsz	wreg,f,c
  2320   0042D6  D7FE               	bra	u507
  2321   0042D8  2E05               	decfsz	??_input_digit^0,f,c
  2322   0042DA  D7FC               	bra	u507
  2323   0042DC  2E06               	decfsz	(??_input_digit+1)^0,f,c
  2324   0042DE  D7FA               	bra	u507
  2325   0042E0                     
  2326                           ;./functions.h: 48:             count++;
  2327   0042E0  2A08               	incf	input_digit@count^0,f,c
  2328   0042E2                     l82:
  2329   0042E2  B2CE               	btfsc	206,1,c	;volatile
  2330   0042E4  EF76  F021         	goto	u251
  2331   0042E8  EF78  F021         	goto	u250
  2332   0042EC                     u251:
  2333   0042EC  EF71  F021         	goto	l82
  2334   0042F0                     u250:
  2335   0042F0                     
  2336                           ;./functions.h: 50:             PORTE = 0;
  2337   0042F0  6ACE               	clrf	206,c	;volatile
  2338   0042F2                     
  2339                           ;./functions.h: 51:             display_digit((char)(count + '0'));
  2340   0042F2  5008               	movf	input_digit@count^0,w,c
  2341   0042F4  0F30               	addlw	48
  2342   0042F6  EC92  F021         	call	_display_digit
  2343   0042FA                     l973:
  2344                           
  2345                           ;./functions.h: 55:         if (PORTCbits.RC4 == 1) {
  2346   0042FA  A8CC               	btfss	204,4,c	;volatile
  2347   0042FC  EF82  F021         	goto	u261
  2348   004300  EF84  F021         	goto	u260
  2349   004304                     u261:
  2350   004304  EF1D  F021         	goto	l949
  2351   004308                     u260:
  2352   004308                     
  2353                           ;./functions.h: 56:             _delay((unsigned long)((50)*(4000000/4000.0)));
  2354   004308  0E41               	movlw	65
  2355   00430A  6E05               	movwf	??_input_digit^0,c
  2356   00430C  0EEE               	movlw	238
  2357   00430E                     u517:
  2358   00430E  2EE8               	decfsz	wreg,f,c
  2359   004310  D7FE               	bra	u517
  2360   004312  2E05               	decfsz	??_input_digit^0,f,c
  2361   004314  D7FC               	bra	u517
  2362   004316  D000               	nop2	
  2363   004318                     
  2364                           ;./functions.h: 57:             confirmation++;
  2365   004318  2A28               	incf	_confirmation^0,f,c
  2366   00431A                     
  2367                           ;./functions.h: 58:             display_digit('E');
  2368   00431A  0E45               	movlw	69
  2369   00431C  EC92  F021         	call	_display_digit
  2370   004320                     
  2371                           ;./functions.h: 59:             return count;
  2372   004320  5008               	movf	input_digit@count^0,w,c
  2373   004322  0012               	return		;funcret
  2374   004324                     __end_of_input_digit:
  2375                           	callstack 0
  2376                           
  2377 ;; *************** function _display_digit *****************
  2378 ;; Defined at:
  2379 ;;		line 65 in file "./functions.h"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  value           1    wreg     unsigned char 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  value           1    3[COMRAM] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2394 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2396 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2397 ;;Total ram usage:        1 bytes
  2398 ;; Hardware stack levels used: 1
  2399 ;; Hardware stack levels required when called: 2
  2400 ;; This function calls:
  2401 ;;		Nothing
  2402 ;; This function is called by:
  2403 ;;		_input_digit
  2404 ;;		_set_new_secret_code
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text12
  2409   004324                     __ptext12:
  2410                           	callstack 0
  2411   004324                     _display_digit:
  2412                           	callstack 27
  2413                           
  2414                           ;incstack = 0
  2415                           ;display_digit@value stored from wreg
  2416   004324  6E04               	movwf	display_digit@value^0,c
  2417   004326                     
  2418                           ;./functions.h: 66:     switch (value) {
  2419   004326  EFC9  F021         	goto	l913
  2420   00432A                     l883:
  2421   00432A  0E3F               	movlw	63
  2422   00432C  6EBD               	movwf	189,c	;volatile
  2423   00432E  EF00  F022         	goto	l107
  2424   004332                     l885:
  2425   004332  0E06               	movlw	6
  2426   004334  6EBD               	movwf	189,c	;volatile
  2427   004336  EF00  F022         	goto	l107
  2428   00433A                     l887:
  2429   00433A  0E5B               	movlw	91
  2430   00433C  6EBD               	movwf	189,c	;volatile
  2431   00433E  EF00  F022         	goto	l107
  2432   004342                     l889:
  2433   004342  0E4F               	movlw	79
  2434   004344  6EBD               	movwf	189,c	;volatile
  2435   004346  EF00  F022         	goto	l107
  2436   00434A                     l891:
  2437   00434A  0E66               	movlw	102
  2438   00434C  6EBD               	movwf	189,c	;volatile
  2439   00434E  EF00  F022         	goto	l107
  2440   004352                     l893:
  2441   004352  0E6D               	movlw	109
  2442   004354  6EBD               	movwf	189,c	;volatile
  2443   004356  EF00  F022         	goto	l107
  2444   00435A                     l895:
  2445   00435A  0E7D               	movlw	125
  2446   00435C  6EBD               	movwf	189,c	;volatile
  2447   00435E  EF00  F022         	goto	l107
  2448   004362                     l897:
  2449   004362  0E07               	movlw	7
  2450   004364  6EBD               	movwf	189,c	;volatile
  2451   004366  EF00  F022         	goto	l107
  2452   00436A                     l899:
  2453   00436A  0E7F               	movlw	127
  2454   00436C  6EBD               	movwf	189,c	;volatile
  2455   00436E  EF00  F022         	goto	l107
  2456   004372                     l901:
  2457   004372  0E6F               	movlw	111
  2458   004374  6EBD               	movwf	189,c	;volatile
  2459   004376  EF00  F022         	goto	l107
  2460   00437A                     l903:
  2461   00437A  0E63               	movlw	99
  2462   00437C  6EBD               	movwf	189,c	;volatile
  2463   00437E  EF00  F022         	goto	l107
  2464   004382                     l905:
  2465   004382  0E79               	movlw	121
  2466   004384  6EBD               	movwf	189,c	;volatile
  2467   004386  EF00  F022         	goto	l107
  2468   00438A                     l907:
  2469   00438A  0E49               	movlw	73
  2470   00438C  6EBD               	movwf	189,c	;volatile
  2471   00438E  EF00  F022         	goto	l107
  2472   004392                     l913:
  2473   004392  5004               	movf	display_digit@value^0,w,c
  2474                           
  2475                           ; Switch size 1, requested type "simple"
  2476                           ; Number of cases is 13, Range of values is 35 to 69
  2477                           ; switch strategies available:
  2478                           ; Name         Instructions Cycles
  2479                           ; simple_byte           40    21 (average)
  2480                           ;	Chosen strategy is simple_byte
  2481   004394  0A23               	xorlw	35	; case 35
  2482   004396  B4D8               	btfsc	status,2,c
  2483   004398  EFC1  F021         	goto	l905
  2484   00439C  0A09               	xorlw	9	; case 42
  2485   00439E  B4D8               	btfsc	status,2,c
  2486   0043A0  EFBD  F021         	goto	l903
  2487   0043A4  0A1A               	xorlw	26	; case 48
  2488   0043A6  B4D8               	btfsc	status,2,c
  2489   0043A8  EF95  F021         	goto	l883
  2490   0043AC  0A01               	xorlw	1	; case 49
  2491   0043AE  B4D8               	btfsc	status,2,c
  2492   0043B0  EF99  F021         	goto	l885
  2493   0043B4  0A03               	xorlw	3	; case 50
  2494   0043B6  B4D8               	btfsc	status,2,c
  2495   0043B8  EF9D  F021         	goto	l887
  2496   0043BC  0A01               	xorlw	1	; case 51
  2497   0043BE  B4D8               	btfsc	status,2,c
  2498   0043C0  EFA1  F021         	goto	l889
  2499   0043C4  0A07               	xorlw	7	; case 52
  2500   0043C6  B4D8               	btfsc	status,2,c
  2501   0043C8  EFA5  F021         	goto	l891
  2502   0043CC  0A01               	xorlw	1	; case 53
  2503   0043CE  B4D8               	btfsc	status,2,c
  2504   0043D0  EFA9  F021         	goto	l893
  2505   0043D4  0A03               	xorlw	3	; case 54
  2506   0043D6  B4D8               	btfsc	status,2,c
  2507   0043D8  EFAD  F021         	goto	l895
  2508   0043DC  0A01               	xorlw	1	; case 55
  2509   0043DE  B4D8               	btfsc	status,2,c
  2510   0043E0  EFB1  F021         	goto	l897
  2511   0043E4  0A0F               	xorlw	15	; case 56
  2512   0043E6  B4D8               	btfsc	status,2,c
  2513   0043E8  EFB5  F021         	goto	l899
  2514   0043EC  0A01               	xorlw	1	; case 57
  2515   0043EE  B4D8               	btfsc	status,2,c
  2516   0043F0  EFB9  F021         	goto	l901
  2517   0043F4  0A7C               	xorlw	124	; case 69
  2518   0043F6  B4D8               	btfsc	status,2,c
  2519   0043F8  EFC5  F021         	goto	l907
  2520   0043FC  EFC5  F021         	goto	l907
  2521   004400                     l107:
  2522   004400  0012               	return		;funcret
  2523   004402                     __end_of_display_digit:
  2524                           	callstack 0
  2525                           
  2526 ;; *************** function _INT0_ISR *****************
  2527 ;; Defined at:
  2528 ;;		line 116 in file "./functions.h"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;		None
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, status,2, status,0, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2546 ;;Total ram usage:        0 bytes
  2547 ;; Hardware stack levels used: 1
  2548 ;; Hardware stack levels required when called: 1
  2549 ;; This function calls:
  2550 ;;		_emergency_melody
  2551 ;; This function is called by:
  2552 ;;		Interrupt level 2
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text13
  2557   00470C                     __ptext13:
  2558                           	callstack 0
  2559   00470C                     _INT0_ISR:
  2560                           	callstack 25
  2561   00470C                     
  2562                           ;./functions.h: 117:     emergency_melody();
  2563   00470C  ECB4  F022         	call	_emergency_melody	;wreg free
  2564   004710                     
  2565                           ;./functions.h: 118:     PIR1bits.INT0IF = 0;
  2566   004710  0139               	movlb	57	; () banked
  2567   004712  91A1               	bcf	161,0,b	;volatile
  2568   004714                     
  2569                           ; BSR set to: 57
  2570   004714  0011               	retfie		f
  2571   004716                     __end_of_INT0_ISR:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _emergency_melody *****************
  2575 ;; Defined at:
  2576 ;;		line 104 in file "./functions.h"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  i               1    2[COMRAM] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2593 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2594 ;;Total ram usage:        3 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_INT0_ISR
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text14
  2604   004568                     __ptext14:
  2605                           	callstack 0
  2606   004568                     _emergency_melody:
  2607                           	callstack 25
  2608   004568                     
  2609                           ;./functions.h: 105:     for (uint8_t i = 0; i < 5; i++) {
  2610   004568  6A03               	clrf	emergency_melody@i^0,c
  2611   00456A                     i2l119:
  2612                           
  2613                           ;./functions.h: 106:         PORTCbits.RC3 = 0;
  2614   00456A  96CC               	bcf	204,3,c	;volatile
  2615                           
  2616                           ;./functions.h: 107:         PORTCbits.RC6 = 1;
  2617   00456C  8CCC               	bsf	204,6,c	;volatile
  2618   00456E                     
  2619                           ;./functions.h: 108:         _delay((unsigned long)((500)*(4000000/4000.0)));
  2620   00456E  0E03               	movlw	3
  2621   004570  6E02               	movwf	(??_emergency_melody+1)^0,c
  2622   004572  0E8A               	movlw	138
  2623   004574  6E01               	movwf	??_emergency_melody^0,c
  2624   004576  0E56               	movlw	86
  2625   004578                     i2u52_47:
  2626   004578  2EE8               	decfsz	wreg,f,c
  2627   00457A  D7FE               	bra	i2u52_47
  2628   00457C  2E01               	decfsz	??_emergency_melody^0,f,c
  2629   00457E  D7FC               	bra	i2u52_47
  2630   004580  2E02               	decfsz	(??_emergency_melody+1)^0,f,c
  2631   004582  D7FA               	bra	i2u52_47
  2632   004584                     
  2633                           ;./functions.h: 109:         PORTCbits.RC3 = 1;
  2634   004584  86CC               	bsf	204,3,c	;volatile
  2635   004586                     
  2636                           ;./functions.h: 110:         PORTCbits.RC6 = 0;
  2637   004586  9CCC               	bcf	204,6,c	;volatile
  2638                           
  2639                           ;./functions.h: 111:         _delay((unsigned long)((500)*(4000000/4000.0)));
  2640   004588  0E03               	movlw	3
  2641   00458A  6E02               	movwf	(??_emergency_melody+1)^0,c
  2642   00458C  0E8A               	movlw	138
  2643   00458E  6E01               	movwf	??_emergency_melody^0,c
  2644   004590  0E56               	movlw	86
  2645   004592                     i2u53_47:
  2646   004592  2EE8               	decfsz	wreg,f,c
  2647   004594  D7FE               	bra	i2u53_47
  2648   004596  2E01               	decfsz	??_emergency_melody^0,f,c
  2649   004598  D7FC               	bra	i2u53_47
  2650   00459A  2E02               	decfsz	(??_emergency_melody+1)^0,f,c
  2651   00459C  D7FA               	bra	i2u53_47
  2652   00459E                     
  2653                           ;./functions.h: 112:     }
  2654   00459E  2A03               	incf	emergency_melody@i^0,f,c
  2655   0045A0  0E04               	movlw	4
  2656   0045A2  6403               	cpfsgt	emergency_melody@i^0,c
  2657   0045A4  EFD6  F022         	goto	i2u29_41
  2658   0045A8  EFD8  F022         	goto	i2u29_40
  2659   0045AC                     i2u29_41:
  2660   0045AC  EFB5  F022         	goto	i2l119
  2661   0045B0                     i2u29_40:
  2662   0045B0  0012               	return		;funcret
  2663   0045B2                     __end_of_emergency_melody:
  2664                           	callstack 0
  2665                           
  2666                           ;
  2667                           ; H/W Interrupt Vector Table @ 0x4008
  2668                           ;
  2669                           
  2670                           	psect	ivt0x4008
  2671   004008                     __pivt0x4008:
  2672                           	callstack 0
  2673   004008                     ivt0x4008_base:
  2674                           	callstack 0
  2675                           
  2676                           ; Vector 0 : SWINT
  2677   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
  2678                           
  2679                           ; Vector 1 : HLVD
  2680   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
  2681                           
  2682                           ; Vector 2 : OSF
  2683   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
  2684                           
  2685                           ; Vector 3 : CSW
  2686   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
  2687                           
  2688                           ; Vector 4 : NVM
  2689   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
  2690                           
  2691                           ; Vector 5 : SCAN
  2692   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
  2693                           
  2694                           ; Vector 6 : CRC
  2695   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
  2696                           
  2697                           ; Vector 7 : IOC
  2698   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
  2699                           
  2700                           ; Vector 8 : INT0
  2701   004018  11C3               	dw	_INT0_ISR shr (0+2)
  2702                           
  2703                           ; Vector 9 : ZCD
  2704   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
  2705                           
  2706                           ; Vector 10 : AD
  2707   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
  2708                           
  2709                           ; Vector 11 : ADT
  2710   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
  2711                           
  2712                           ; Vector 12 : CMP1
  2713   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
  2714                           
  2715                           ; Vector 13 : SMT1
  2716   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
  2717                           
  2718                           ; Vector 14 : SMT1PRA
  2719   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
  2720                           
  2721                           ; Vector 15 : SMT1PRW
  2722   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
  2723                           
  2724                           ; Vector 16 : DMA1SCNT
  2725   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
  2726                           
  2727                           ; Vector 17 : DMA1DCNT
  2728   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  2729                           
  2730                           ; Vector 18 : DMA1OR
  2731   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  2732                           
  2733                           ; Vector 19 : DMA1A
  2734   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  2735                           
  2736                           ; Vector 20 : SPI1RX
  2737   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  2738                           
  2739                           ; Vector 21 : SPI1TX
  2740   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  2741                           
  2742                           ; Vector 22 : SPI1
  2743   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  2744                           
  2745                           ; Vector 23 : I2C1RX
  2746   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  2747                           
  2748                           ; Vector 24 : I2C1TX
  2749   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  2750                           
  2751                           ; Vector 25 : I2C1
  2752   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  2753                           
  2754                           ; Vector 26 : I2C1E
  2755   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  2756                           
  2757                           ; Vector 27 : U1RX
  2758   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  2759                           
  2760                           ; Vector 28 : U1TX
  2761   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  2762                           
  2763                           ; Vector 29 : U1E
  2764   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  2765                           
  2766                           ; Vector 30 : U1
  2767   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  2768                           
  2769                           ; Vector 31 : TMR0
  2770   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  2771                           
  2772                           ; Vector 32 : TMR1
  2773   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  2774                           
  2775                           ; Vector 33 : TMR1G
  2776   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  2777                           
  2778                           ; Vector 34 : TMR2
  2779   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  2780                           
  2781                           ; Vector 35 : CCP1
  2782   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  2783                           
  2784                           ; Vector 36 : Undefined
  2785   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  2786                           
  2787                           ; Vector 37 : NCO1
  2788   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  2789                           
  2790                           ; Vector 38 : CWG1
  2791   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  2792                           
  2793                           ; Vector 39 : CLC1
  2794   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  2795                           
  2796                           ; Vector 40 : INT1
  2797   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  2798                           
  2799                           ; Vector 41 : CMP2
  2800   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  2801                           
  2802                           ; Vector 42 : DMA2SCNT
  2803   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  2804                           
  2805                           ; Vector 43 : DMA2DCNT
  2806   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  2807                           
  2808                           ; Vector 44 : DMA2OR
  2809   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  2810                           
  2811                           ; Vector 45 : DMA2A
  2812   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  2813                           
  2814                           ; Vector 46 : I2C2RX
  2815   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  2816                           
  2817                           ; Vector 47 : I2C2TX
  2818   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  2819                           
  2820                           ; Vector 48 : I2C2
  2821   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  2822                           
  2823                           ; Vector 49 : I2C2E
  2824   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  2825                           
  2826                           ; Vector 50 : U2RX
  2827   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  2828                           
  2829                           ; Vector 51 : U2TX
  2830   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  2831                           
  2832                           ; Vector 52 : U2E
  2833   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  2834                           
  2835                           ; Vector 53 : U2
  2836   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  2837                           
  2838                           ; Vector 54 : TMR3
  2839   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  2840                           
  2841                           ; Vector 55 : TMR3G
  2842   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  2843                           
  2844                           ; Vector 56 : TMR4
  2845   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  2846                           
  2847                           ; Vector 57 : CCP2
  2848   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  2849                           
  2850                           ; Vector 58 : Undefined
  2851   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  2852                           
  2853                           ; Vector 59 : CWG2
  2854   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  2855                           
  2856                           ; Vector 60 : CLC2
  2857   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  2858                           
  2859                           ; Vector 61 : INT2
  2860   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  2861                           
  2862                           ; Vector 62 : Undefined
  2863   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  2864                           
  2865                           ; Vector 63 : Undefined
  2866   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  2867                           
  2868                           ; Vector 64 : Undefined
  2869   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  2870                           
  2871                           ; Vector 65 : Undefined
  2872   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  2873                           
  2874                           ; Vector 66 : Undefined
  2875   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  2876                           
  2877                           ; Vector 67 : Undefined
  2878   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  2879                           
  2880                           ; Vector 68 : Undefined
  2881   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  2882                           
  2883                           ; Vector 69 : Undefined
  2884   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  2885                           
  2886                           ; Vector 70 : TMR5
  2887   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  2888                           
  2889                           ; Vector 71 : TMR5G
  2890   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  2891                           
  2892                           ; Vector 72 : TMR6
  2893   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  2894                           
  2895                           ; Vector 73 : CCP3
  2896   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  2897                           
  2898                           ; Vector 74 : CWG3
  2899   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  2900                           
  2901                           ; Vector 75 : CLC3
  2902   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  2903                           
  2904                           ; Vector 76 : Undefined
  2905   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  2906                           
  2907                           ; Vector 77 : Undefined
  2908   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  2909                           
  2910                           ; Vector 78 : Undefined
  2911   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  2912                           
  2913                           ; Vector 79 : Undefined
  2914   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  2915                           
  2916                           ; Vector 80 : CCP4
  2917   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  2918                           
  2919                           ; Vector 81 : CLC4
  2920   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  2921   0040AC                     ivt0x4008_undefint:
  2922                           	callstack 0
  2923   0040AC  00FF               	reset	
  2924                           
  2925                           	psect	smallconst
  2926   002000                     __psmallconst:
  2927                           	callstack 0
  2928   002000  00                 	db	0
  2929   002001  00                 	db	0	; dummy byte at the end
  2930   002000                     __smallconst    set	__psmallconst
  2931   002000                     __mediumconst   set	__psmallconst
  2932   000003                     __activetblptr  equ	3
  2933                           
  2934                           	psect	rparam
  2935   000001                     ___rparam_used  equ	1
  2936   000000                     ___param_bank   equ	0
  2937   000000                     __Lparam        equ	__Lrparam
  2938   000000                     __Hparam        equ	__Hrparam
  2939                           
  2940                           	psect	config
  2941                           
  2942                           ;Config register CONFIG1L @ 0x300000
  2943                           ;	External Oscillator Selection
  2944                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  2945                           ;	Reset Oscillator Selection
  2946                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2947   300000                     	org	3145728
  2948   300000  F8                 	db	248
  2949                           
  2950                           ;Config register CONFIG1H @ 0x300001
  2951                           ;	Clock out Enable bit
  2952                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2953                           ;	PRLOCKED One-Way Set Enable bit
  2954                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  2955                           ;	Clock Switch Enable bit
  2956                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2957                           ;	Fail-Safe Clock Monitor Enable bit
  2958                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2959   300001                     	org	3145729
  2960   300001  FF                 	db	255
  2961                           
  2962                           ;Config register CONFIG2L @ 0x300002
  2963                           ;	MCLR Enable bit
  2964                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2965                           ;	Power-up timer selection bits
  2966                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2967                           ;	Multi-vector enable bit
  2968                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2969                           ;	IVTLOCK bit One-way set enable bit
  2970                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2971                           ;	Low Power BOR Enable bit
  2972                           ;	LPBOREN = OFF, ULPBOR disabled
  2973                           ;	Brown-out Reset Enable bits
  2974                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2975   300002                     	org	3145730
  2976   300002  FF                 	db	255
  2977                           
  2978                           ;Config register CONFIG2H @ 0x300003
  2979                           ;	Brown-out Reset Voltage Selection bits
  2980                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2981                           ;	ZCD Disable bit
  2982                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2983                           ;	PPSLOCK bit One-Way Set Enable bit
  2984                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2985                           ;	Stack Full/Underflow Reset Enable bit
  2986                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2987                           ;	Debugger Enable bit
  2988                           ;	DEBUG = OFF, Background debugger disabled
  2989                           ;	Extended Instruction Set Enable bit
  2990                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2991   300003                     	org	3145731
  2992   300003  FF                 	db	255
  2993                           
  2994                           ;Config register CONFIG3L @ 0x300004
  2995                           ;	WDT Period selection bits
  2996                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2997                           ;	WDT operating mode
  2998                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2999   300004                     	org	3145732
  3000   300004  9F                 	db	159
  3001                           
  3002                           ;Config register CONFIG3H @ 0x300005
  3003                           ;	WDT Window Select bits
  3004                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3005                           ;	WDT input clock selector
  3006                           ;	WDTCCS = SC, Software Control
  3007   300005                     	org	3145733
  3008   300005  FF                 	db	255
  3009                           
  3010                           ;Config register CONFIG4L @ 0x300006
  3011                           ;	Boot Block Size selection bits
  3012                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3013                           ;	Boot Block enable bit
  3014                           ;	BBEN = OFF, Boot block disabled
  3015                           ;	Storage Area Flash enable bit
  3016                           ;	SAFEN = OFF, SAF disabled
  3017                           ;	Application Block write protection bit
  3018                           ;	WRTAPP = OFF, Application Block not write protected
  3019   300006                     	org	3145734
  3020   300006  FF                 	db	255
  3021                           
  3022                           ;Config register CONFIG4H @ 0x300007
  3023                           ;	Boot Block Write Protection bit
  3024                           ;	WRTB = OFF, Boot Block not write-protected
  3025                           ;	Configuration Register Write Protection bit
  3026                           ;	WRTC = OFF, Configuration registers not write-protected
  3027                           ;	Data EEPROM Write Protection bit
  3028                           ;	WRTD = OFF, Data EEPROM not write-protected
  3029                           ;	SAF Write protection bit
  3030                           ;	WRTSAF = OFF, SAF not Write Protected
  3031                           ;	Low Voltage Programming Enable bit
  3032                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3033   300007                     	org	3145735
  3034   300007  FF                 	db	255
  3035                           
  3036                           ;Config register CONFIG5L @ 0x300008
  3037                           ;	PFM and Data EEPROM Code Protection bit
  3038                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3039   300008                     	org	3145736
  3040   300008  FF                 	db	255
  3041                           
  3042                           ;Config register CONFIG5H @ 0x300009
  3043                           ;	unspecified, using default values
  3044   300009                     	org	3145737
  3045   300009  FF                 	db	255
  3046                           tosu	equ	0x3FFF
  3047                           tosh	equ	0x3FFE
  3048                           tosl	equ	0x3FFD
  3049                           stkptr	equ	0x3FFC
  3050                           pclatu	equ	0x3FFB
  3051                           pclath	equ	0x3FFA
  3052                           pcl	equ	0x3FF9
  3053                           tblptru	equ	0x3FF8
  3054                           tblptrh	equ	0x3FF7
  3055                           tblptrl	equ	0x3FF6
  3056                           tablat	equ	0x3FF5
  3057                           prodh	equ	0x3FF4
  3058                           prodl	equ	0x3FF3
  3059                           indf0	equ	0x3FEF
  3060                           postinc0	equ	0x3FEE
  3061                           postdec0	equ	0x3FED
  3062                           preinc0	equ	0x3FEC
  3063                           plusw0	equ	0x3FEB
  3064                           fsr0h	equ	0x3FEA
  3065                           fsr0l	equ	0x3FE9
  3066                           wreg	equ	0x3FE8
  3067                           indf1	equ	0x3FE7
  3068                           postinc1	equ	0x3FE6
  3069                           postdec1	equ	0x3FE5
  3070                           preinc1	equ	0x3FE4
  3071                           plusw1	equ	0x3FE3
  3072                           fsr1h	equ	0x3FE2
  3073                           fsr1l	equ	0x3FE1
  3074                           bsr	equ	0x3FE0
  3075                           indf2	equ	0x3FDF
  3076                           postinc2	equ	0x3FDE
  3077                           postdec2	equ	0x3FDD
  3078                           preinc2	equ	0x3FDC
  3079                           plusw2	equ	0x3FDB
  3080                           fsr2h	equ	0x3FDA
  3081                           fsr2l	equ	0x3FD9
  3082                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         4
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     26      43
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_check_for_change_code_request
    _code_correct_or_wrong->_activate_buzzer
    _code_correct_or_wrong->_activate_motor
    _check_for_change_code_request->_set_new_secret_code
    _set_new_secret_code->_wait_for_keypad_digit
    _wait_for_keypad_digit->_get_keypad_key
    _check_for_PR_input->_input_digit
    _input_digit->_display_digit

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->_emergency_melody

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     975
                 _check_for_PR_input
      _check_for_change_code_request
              _code_correct_or_wrong
                        _init_system
                _set_new_secret_code
 ---------------------------------------------------------------------------------
 (1) _init_system                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _code_correct_or_wrong                                0     0      0      15
                    _activate_buzzer
                     _activate_motor
                         _check_code
 ---------------------------------------------------------------------------------
 (2) _check_code                                           1     1      0      15
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _activate_motor                                       2     2      0       0
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _activate_buzzer                                      2     2      0       0
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _check_for_change_code_request                        1     1      0     510
                                             25 COMRAM     1     1      0
                     _get_keypad_key
                _set_new_secret_code
 ---------------------------------------------------------------------------------
 (1) _set_new_secret_code                                  5     5      0     315
                                             20 COMRAM     5     5      0
                      _display_digit
              _wait_for_keypad_digit
 ---------------------------------------------------------------------------------
 (2) _wait_for_keypad_digit                                2     2      0     225
                                             18 COMRAM     2     2      0
                     _get_keypad_key
 ---------------------------------------------------------------------------------
 (3) _get_keypad_key                                      15    15      0     180
                                              3 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 (1) _check_for_PR_input                                   2     2      0     135
                                              8 COMRAM     2     2      0
                        _input_digit
 ---------------------------------------------------------------------------------
 (2) _input_digit                                          4     4      0     135
                                              4 COMRAM     4     4      0
                      _display_digit
 ---------------------------------------------------------------------------------
 (2) _display_digit                                        1     1      0      15
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0      30
                   _emergency_melody
 ---------------------------------------------------------------------------------
 (6) _emergency_melody                                     3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_for_PR_input
     _input_digit
       _display_digit
   _check_for_change_code_request
     _get_keypad_key
     _set_new_secret_code
       _display_digit
       _wait_for_keypad_digit
         _get_keypad_key
   _code_correct_or_wrong
     _activate_buzzer
     _activate_motor
     _check_code
   _init_system
   _set_new_secret_code

 _INT0_ISR (ROOT)
   _emergency_melody

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh       1577      0       0      0.0%
BITBIGSFRlll       385      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     26      43     45.3%
BITBIGSFRh          52      0       0      0.0%
BITBIGSFRllh        31      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      43      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 29 11:40:35 2025

                  check_code@user_code 0004                                     l72 4216  
                                   l82 42E2                                     l59 45F2  
                                   l84 42F0                                     l77 4280  
                                   l86 4322                                     l79 428E  
                                   u11 40BC                                     u20 40E4  
                                   u21 40DC                                     u40 4108  
                                   u41 4100                                     u60 4130  
                                   u61 4128                                     u38 40E6  
                                   u80 415A                                     u81 4152  
                                   u58 410A                                     u78 4132  
                                   u98 415C                                    l110 46FE  
                                  l113 46C8                                    l107 4400  
                                  l116 46E4                                    l133 4198  
                                  l141 4498                                    l150 44B6  
                                  l134 420E                                    l151 44E6  
                                  l135 41C2                                    l160 466A  
                                  l145 46AC                                    l154 450A  
                                  l139 4402                                    l163 4566  
                                  l901 4372                                    l903 437A  
                                  l905 4382                                    l913 4392  
                                  l921 4426                                    l907 438A  
                                  l931 4460                                    l923 442A  
                                  l915 4402                                    l861 4186  
                                  l933 446E                                    l925 443C  
                                  l917 4406                                    l951 424A  
                                  l943 4212                                    l855 40CE  
                                  l847 40B2                                    l935 4474  
                                  l927 444A                                    l919 4414  
                                  l881 4326                                    l953 4258  
                                  l961 429C                                    l945 4224  
                                  l873 41EC                                    l865 41A6  
                                  l857 4168                                    l849 40C6  
                                  l937 4484                                    l929 445C  
                                  l891 434A                                    l883 432A  
                                  l971 42F2                                    l963 42AC  
                                  l955 4268                                    l947 4232  
                                  l875 41F0                                    l859 4178  
                                  l939 4494                                    l893 4352  
                                  l885 4332                                    l981 4320  
                                  l965 42BA                                    l973 42FA  
                                  l957 427E                                    l949 423A  
                                  l877 420C                                    l869 41D0  
                                  l895 435A                                    l887 433A  
                                  l975 4308                                    l967 42CA  
                                  l959 4290                                    l991 46B0  
                                  l897 4362                                    l889 4342  
                                  l977 4318                                    l969 42E0  
                                  l993 46C6                                    l985 46E8  
                                  l899 436A                                    l979 431A  
                                  l995 46CA                                    l997 46CC  
                                  l989 46AE                                    l999 46E2  
                                  u100 4186                                    u101 4182  
                                  u110 41A6                                    u111 41A2  
                                  u200 4268                                    u120 41D0  
                                  u201 4264                                    u121 41CC  
                                  u210 428E                                    u130 420C  
                                  u211 428A                                    u131 4208  
                                  u220 42AC                                    u140 4484  
                                  u300 46A6                                    u221 42A8  
                                  u141 4480                                    u301 46A2  
                                  u230 42BA                                    u310 44A8  
                                  u150 4494                                    u231 42B6  
                                  u311 44A4                                    u151 4490  
                                  u240 42CA                                    u160 4224  
                                  u320 44B6                                    u241 42C6  
                                  u161 4220                                    u321 44B2  
                                  u250 42F0                                    u170 4232  
                                  u330 44C4                                    u251 42EC  
                                  u171 422E                                    u331 44C0  
                                  u260 4308                                    u180 424A  
                                  u340 44F4                                    u261 4304  
                                  u181 4246                                    u341 44F0  
                                  u190 4258                                    u270 46FC  
                                  u350 4642                                    u191 4254  
                                  u407 4548                                    u271 46F6  
                                  u351 463E                                    u280 46FE  
                                  u360 4658                                    u417 440C  
                                  u361 4654                                    u507 42D4  
                                  u427 441E                                    u517 430E  
                                  u437 4430                                    u447 4442  
                                  u457 4454                                    u377 46BA  
                                  u467 4466                                    u387 46D6  
                                  u477 416E                                    u397 4524  
                                  u487 44D6                                    u497 4272  
                                  wreg 3FE8                       input_digit@count 0008  
                    ??_activate_buzzer 0004                                   l1001 450C  
                                 l1011 4554                                   l1003 4512  
                                 l1013 455A                                   l1005 451A  
                                 l1101 4666                                   l1021 45BA  
                                 l1015 4564                                   l1007 4530  
                                 l1103 4668                                   l1031 45CA  
                                 l1023 45C0                                   l1111 4670  
                                 l1009 4536                                   l1041 45D8  
                                 l1033 45CC                                   l1025 45C4  
                                 l1121 4682                                   l1113 4672  
                                 l1051 45E4                                   l1043 45DA  
                                 l1035 45CE                                   l1027 45C6  
                                 l1019 45B2                                   l1115 4678  
                                 l1053 45E6                                   l1045 45DC  
                                 l1037 45D0                                   l1029 45C8  
                                 l1117 467A                                   l1109 466C  
                                 l1071 468E                                   l1055 45E8  
                                 l1047 45DE                                   l1039 45D6  
                                 l1119 467E                                   l1081 44C4  
                                 l1073 4694                                   l1049 45E0  
                                 l1083 44CC                                   l1075 46A6  
                                 l1091 4630                                   l1085 44F4  
                                 l1077 449A                                   l1093 4642  
                                 l1079 44A8                                   l1095 4658  
                                 l1089 4500                                   l1097 4660  
                                 l1099 4664                         ?_display_digit 0001  
                                 _LATB 3FBB                                   _LATD 3FBD  
                                 _main 466C                                   fsr2h 3FDA  
                                 indf2 3FDF                                   fsr1l 3FE1  
                                 fsr2l 3FD9                                   prodl 3FF3  
                                 start 40AE          __end_of_code_correct_or_wrong 466C  
                    ?_emergency_melody 0001                           ___param_bank 0000  
           __end_of_check_for_PR_input 450C                     ??_emergency_melody 0001  
                     __end_of_INT0_ISR 4716                                  ?_main 0001  
                                i2l121 45B0                                  i2l126 4714  
                                i2l119 456A                                  _PORTB 3FCB  
                                _PORTC 3FCC                                  _PORTD 3FCD  
                                _PORTE 3FCE                                  _TRISB 3FC3  
                                _TRISC 3FC4                                  _TRISD 3FC5  
                                _TRISE 3FC6             set_new_secret_code@newCode 0017  
                  _set_new_secret_code 450C                           ?_init_system 0001  
                                tablat 3FF5                   get_keypad_key@F16222 001B  
                                plusw1 3FE3                                  plusw2 3FDB  
                                status 3FD8                   ?_set_new_secret_code 0001  
                      __initialization 45F4                           __end_of_main 468E  
                         ?_input_digit 0001                         _activate_motor 46AE  
                    get_keypad_key@row 0011                                 ??_main 001B  
                        __activetblptr 0003                        ??_display_digit 0004  
                               _ANSELB 3A50                                 _ANSELC 3A60  
                               _ANSELD 3A70                                 _ANSELE 3A80  
                               i2l1105 470C                                 i2l1107 4710  
                               i2l1063 456E                                 i2l1065 4584  
                               i2l1057 4568                                 i2l1067 4586  
                               i2l1069 459E                  ??_set_new_secret_code 0015  
               __end_of_activate_motor 46CA          __end_of_wait_for_keypad_digit 449A  
                               isa$std 0001                           __pdataCOMRAM 001B  
                         __mediumconst 2000                                 tblptrh 3FF7  
                               tblptrl 3FF6                                 tblptru 3FF8  
                     ??_get_keypad_key 0004                             __accesstop 0060  
              __end_of__initialization 462A                              ?_INT0_ISR 0001  
                        ___rparam_used 0001                         __pcstackCOMRAM 0001  
                      ?_activate_motor 0001                        _activate_buzzer 46CA  
                   get_keypad_key@keys 0005                             _check_code 46E6  
                           ??_INT0_ISR 0004                             __pnvCOMRAM 002B  
                              IVTBASEH 3FD6                                IVTBASEL 3FD5  
                              IVTBASEU 3FD7                  input_digit@sensor_pin 0007  
                   display_digit@value 0004                     _check_for_PR_input 449A  
                           _high_digit 002A                                i2u52_47 4578  
                              i2u29_40 45B0                                i2u29_41 45AC  
                              i2u53_47 4592                    ?_check_for_PR_input 0001  
                              __Hparam 0000                                __Lparam 0000  
              __end_of_activate_buzzer 46E6                  _code_correct_or_wrong 4630  
                 ??_check_for_PR_input 0009                           __psmallconst 2000  
                              __pcinit 45F4                                __ramtop 2000  
                        ivt0x4008_base 4008                                __ptext0 466C  
                              __ptext1 45B2                                __ptext2 4630  
                              __ptext3 46E6                                __ptext4 46AE  
                              __ptext5 46CA                                __ptext6 468E  
                              __ptext7 450C                                __ptext8 4402  
                              __ptext9 40B2                   end_of_initialization 462A  
      ??_check_for_change_code_request 001A                            ?_check_code 0001  
                              postdec1 3FE5                                postinc0 3FEE  
                         _confirmation 0028                              _PORTBbits 3FCB  
                            _PORTCbits 3FCC                              _PORTEbits 3FCE  
                __end_of_display_digit 4402            __end_of_set_new_secret_code 4568  
                     ??_activate_motor 0004                 ?_code_correct_or_wrong 0001  
                     ?_activate_buzzer 0001                          __pidataCOMRAM 4700  
                _wait_for_keypad_digit 4402                    start_initialization 45F4  
                     _emergency_melody 4568                      emergency_melody@i 0003  
__end_of_check_for_change_code_request 46AE          _check_for_change_code_request 468E  
     check_for_change_code_request@key 001A                            __pbssCOMRAM 0027  
                        ??_init_system 0004                            __pivt0x4008 4008  
                        ??_input_digit 0005                 ?_wait_for_keypad_digit 0001  
                          __smallconst 2000                           ??_check_code 0004  
                             _INT0_ISR 470C                    __end_of_init_system 45F4  
                             _LATBbits 3FBB                               _IPR1bits 3981  
                             _PIE1bits 3991                              _low_digit 0029  
                             _IVTBASEH 3FD6                               _IVTBASEL 3FD5  
                             _IVTBASEU 3FD7                               _PIR1bits 39A1  
                    ivt0x4008_undefint 40AC         ?_check_for_change_code_request 0001  
                   __end_of_check_code 4700                    __end_of_input_digit 4324  
                            _user_code 0027                            _INTCON0bits 3FD2  
                            copy_data0 4608                ??_code_correct_or_wrong 0006  
              set_new_secret_code@high 0018                               __Hrparam 0000  
             __end_of_emergency_melody 45B2                               __Lrparam 0000  
                          _SECRET_CODE 002B                               __ptext10 449A  
                             __ptext11 4210                               __ptext12 4324  
                             __ptext13 470C                               __ptext14 4568  
                          _init_system 45B2                         _get_keypad_key 40B2  
                             isa$xinst 0000                            _input_digit 4210  
               set_new_secret_code@low 0019                               intlevel2 0000  
               __end_of_get_keypad_key 4210                ??_wait_for_keypad_digit 0013  
             wait_for_keypad_digit@key 0014                          _display_digit 4324  
                      ?_get_keypad_key 0001  
