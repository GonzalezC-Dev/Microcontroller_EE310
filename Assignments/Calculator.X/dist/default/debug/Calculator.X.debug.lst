

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 08 14:38:42 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F47K42 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   003FE0                     bsr             equ	16352
    58   003FE9                     fsr0            equ	16361
    59   003FEA                     fsr0h           equ	16362
    60   003FE9                     fsr0l           equ	16361
    61   003FE1                     fsr1            equ	16353
    62   003FE2                     fsr1h           equ	16354
    63   003FE1                     fsr1l           equ	16353
    64   003FD9                     fsr2            equ	16345
    65   003FDA                     fsr2h           equ	16346
    66   003FD9                     fsr2l           equ	16345
    67   003FEF                     indf0           equ	16367
    68   003FE7                     indf1           equ	16359
    69   003FDF                     indf2           equ	16351
    70   003FD2                     intcon          equ	16338
    71   0039E5                     nvmcon          equ	14821
    72   003FF9                     pcl             equ	16377
    73   003FFA                     pclath          equ	16378
    74   003FFB                     pclatu          equ	16379
    75   003FEB                     plusw0          equ	16363
    76   003FE3                     plusw1          equ	16355
    77   003FDB                     plusw2          equ	16347
    78   003FED                     postdec0        equ	16365
    79   003FE5                     postdec1        equ	16357
    80   003FDD                     postdec2        equ	16349
    81   003FEE                     postinc0        equ	16366
    82   003FE6                     postinc1        equ	16358
    83   003FDE                     postinc2        equ	16350
    84   003FEC                     preinc0         equ	16364
    85   003FE4                     preinc1         equ	16356
    86   003FDC                     preinc2         equ	16348
    87   003FF3                     prod            equ	16371
    88   003FF4                     prodh           equ	16372
    89   003FF3                     prodl           equ	16371
    90   003FD8                     status          equ	16344
    91   003FF5                     tablat          equ	16373
    92   003FF6                     tblptr          equ	16374
    93   003FF7                     tblptrh         equ	16375
    94   003FF6                     tblptrl         equ	16374
    95   003FF8                     tblptru         equ	16376
    96   003FFD                     tosl            equ	16381
    97   003FE8                     wreg            equ	16360
    98   003880                     STATUS_CSHAD    equ	14464	;# 
    99   003881                     WREG_CSHAD      equ	14465	;# 
   100   003882                     BSR_CSHAD       equ	14466	;# 
   101   003883                     SHADCON         equ	14467	;# 
   102   003884                     STATUS_SHAD     equ	14468	;# 
   103   003885                     WREG_SHAD       equ	14469	;# 
   104   003886                     BSR_SHAD        equ	14470	;# 
   105   003887                     PCLATH_SHAD     equ	14471	;# 
   106   003888                     PCLATU_SHAD     equ	14472	;# 
   107   003889                     FSR0SH          equ	14473	;# 
   108   003889                     FSR0L_SHAD      equ	14473	;# 
   109   00388A                     FSR0H_SHAD      equ	14474	;# 
   110   00388B                     FSR1SH          equ	14475	;# 
   111   00388B                     FSR1L_SHAD      equ	14475	;# 
   112   00388C                     FSR1H_SHAD      equ	14476	;# 
   113   00388D                     FSR2SH          equ	14477	;# 
   114   00388D                     FSR2L_SHAD      equ	14477	;# 
   115   00388E                     FSR2H_SHAD      equ	14478	;# 
   116   00388F                     PRODSH          equ	14479	;# 
   117   00388F                     PRODL_SHAD      equ	14479	;# 
   118   003890                     PRODH_SHAD      equ	14480	;# 
   119   00389D                     IVTADL          equ	14493	;# 
   120   00389E                     IVTADH          equ	14494	;# 
   121   00389F                     IVTADU          equ	14495	;# 
   122   00395B                     WDTCON0         equ	14683	;# 
   123   00395C                     WDTCON1         equ	14684	;# 
   124   00395D                     WDTPSL          equ	14685	;# 
   125   00395E                     WDTPSH          equ	14686	;# 
   126   00395F                     WDTTMR          equ	14687	;# 
   127   003960                     CRCDATA         equ	14688	;# 
   128   003960                     CRCDATL         equ	14688	;# 
   129   003961                     CRCDATH         equ	14689	;# 
   130   003962                     CRCACC          equ	14690	;# 
   131   003962                     CRCACCL         equ	14690	;# 
   132   003963                     CRCACCH         equ	14691	;# 
   133   003964                     CRCSHFT         equ	14692	;# 
   134   003964                     CRCSHIFTL       equ	14692	;# 
   135   003965                     CRCSHIFTH       equ	14693	;# 
   136   003966                     CRCXOR          equ	14694	;# 
   137   003966                     CRCXORL         equ	14694	;# 
   138   003967                     CRCXORH         equ	14695	;# 
   139   003968                     CRCCON0         equ	14696	;# 
   140   003969                     CRCCON1         equ	14697	;# 
   141   003976                     SCANLADR        equ	14710	;# 
   142   003976                     SCANLADRL       equ	14710	;# 
   143   003977                     SCANLADRH       equ	14711	;# 
   144   003978                     SCANLADRU       equ	14712	;# 
   145   003979                     SCANHADR        equ	14713	;# 
   146   003979                     SCANHADRL       equ	14713	;# 
   147   00397A                     SCANHADRH       equ	14714	;# 
   148   00397B                     SCANHADRU       equ	14715	;# 
   149   00397C                     SCANCON0        equ	14716	;# 
   150   00397D                     SCANTRIG        equ	14717	;# 
   151   003980                     IPR0            equ	14720	;# 
   152   003981                     IPR1            equ	14721	;# 
   153   003982                     IPR2            equ	14722	;# 
   154   003983                     IPR3            equ	14723	;# 
   155   003984                     IPR4            equ	14724	;# 
   156   003985                     IPR5            equ	14725	;# 
   157   003986                     IPR6            equ	14726	;# 
   158   003987                     IPR7            equ	14727	;# 
   159   003988                     IPR8            equ	14728	;# 
   160   003989                     IPR9            equ	14729	;# 
   161   00398A                     IPR10           equ	14730	;# 
   162   003990                     PIE0            equ	14736	;# 
   163   003991                     PIE1            equ	14737	;# 
   164   003992                     PIE2            equ	14738	;# 
   165   003993                     PIE3            equ	14739	;# 
   166   003994                     PIE4            equ	14740	;# 
   167   003995                     PIE5            equ	14741	;# 
   168   003996                     PIE6            equ	14742	;# 
   169   003997                     PIE7            equ	14743	;# 
   170   003998                     PIE8            equ	14744	;# 
   171   003999                     PIE9            equ	14745	;# 
   172   00399A                     PIE10           equ	14746	;# 
   173   0039A0                     PIR0            equ	14752	;# 
   174   0039A1                     PIR1            equ	14753	;# 
   175   0039A2                     PIR2            equ	14754	;# 
   176   0039A3                     PIR3            equ	14755	;# 
   177   0039A4                     PIR4            equ	14756	;# 
   178   0039A5                     PIR5            equ	14757	;# 
   179   0039A6                     PIR6            equ	14758	;# 
   180   0039A7                     PIR7            equ	14759	;# 
   181   0039A8                     PIR8            equ	14760	;# 
   182   0039A9                     PIR9            equ	14761	;# 
   183   0039AA                     PIR10           equ	14762	;# 
   184   0039C0                     PMD0            equ	14784	;# 
   185   0039C1                     PMD1            equ	14785	;# 
   186   0039C2                     PMD2            equ	14786	;# 
   187   0039C3                     PMD3            equ	14787	;# 
   188   0039C4                     PMD4            equ	14788	;# 
   189   0039C5                     PMD5            equ	14789	;# 
   190   0039C6                     PMD6            equ	14790	;# 
   191   0039C7                     PMD7            equ	14791	;# 
   192   0039D0                     BORCON          equ	14800	;# 
   193   0039D1                     VREGCON         equ	14801	;# 
   194   0039D8                     CPUDOZE         equ	14808	;# 
   195   0039D9                     OSCCON1         equ	14809	;# 
   196   0039DA                     OSCCON2         equ	14810	;# 
   197   0039DB                     OSCCON3         equ	14811	;# 
   198   0039DC                     OSCSTAT         equ	14812	;# 
   199   0039DC                     OSCSTAT1        equ	14812	;# 
   200   0039DD                     OSCEN           equ	14813	;# 
   201   0039DE                     OSCTUNE         equ	14814	;# 
   202   0039DF                     OSCFRQ          equ	14815	;# 
   203   0039E0                     NVMADRL         equ	14816	;# 
   204   0039E1                     NVMADRH         equ	14817	;# 
   205   0039E3                     NVMDAT          equ	14819	;# 
   206   0039E5                     NVMCON1         equ	14821	;# 
   207   0039E6                     NVMCON2         equ	14822	;# 
   208   0039EF                     PRLOCK          equ	14831	;# 
   209   0039F1                     ISRPR           equ	14833	;# 
   210   0039F2                     MAINPR          equ	14834	;# 
   211   0039F3                     DMA1PR          equ	14835	;# 
   212   0039F4                     DMA2PR          equ	14836	;# 
   213   0039F7                     SCANPR          equ	14839	;# 
   214   003A00                     RA0PPS          equ	14848	;# 
   215   003A01                     RA1PPS          equ	14849	;# 
   216   003A02                     RA2PPS          equ	14850	;# 
   217   003A03                     RA3PPS          equ	14851	;# 
   218   003A04                     RA4PPS          equ	14852	;# 
   219   003A05                     RA5PPS          equ	14853	;# 
   220   003A06                     RA6PPS          equ	14854	;# 
   221   003A07                     RA7PPS          equ	14855	;# 
   222   003A08                     RB0PPS          equ	14856	;# 
   223   003A09                     RB1PPS          equ	14857	;# 
   224   003A0A                     RB2PPS          equ	14858	;# 
   225   003A0B                     RB3PPS          equ	14859	;# 
   226   003A0C                     RB4PPS          equ	14860	;# 
   227   003A0D                     RB5PPS          equ	14861	;# 
   228   003A0E                     RB6PPS          equ	14862	;# 
   229   003A0F                     RB7PPS          equ	14863	;# 
   230   003A10                     RC0PPS          equ	14864	;# 
   231   003A11                     RC1PPS          equ	14865	;# 
   232   003A12                     RC2PPS          equ	14866	;# 
   233   003A13                     RC3PPS          equ	14867	;# 
   234   003A14                     RC4PPS          equ	14868	;# 
   235   003A15                     RC5PPS          equ	14869	;# 
   236   003A16                     RC6PPS          equ	14870	;# 
   237   003A17                     RC7PPS          equ	14871	;# 
   238   003A18                     RD0PPS          equ	14872	;# 
   239   003A19                     RD1PPS          equ	14873	;# 
   240   003A1A                     RD2PPS          equ	14874	;# 
   241   003A1B                     RD3PPS          equ	14875	;# 
   242   003A1C                     RD4PPS          equ	14876	;# 
   243   003A1D                     RD5PPS          equ	14877	;# 
   244   003A1E                     RD6PPS          equ	14878	;# 
   245   003A1F                     RD7PPS          equ	14879	;# 
   246   003A20                     RE0PPS          equ	14880	;# 
   247   003A21                     RE1PPS          equ	14881	;# 
   248   003A22                     RE2PPS          equ	14882	;# 
   249   003A40                     ANSELA          equ	14912	;# 
   250   003A41                     WPUA            equ	14913	;# 
   251   003A42                     ODCONA          equ	14914	;# 
   252   003A43                     SLRCONA         equ	14915	;# 
   253   003A44                     INLVLA          equ	14916	;# 
   254   003A45                     IOCAP           equ	14917	;# 
   255   003A46                     IOCAN           equ	14918	;# 
   256   003A47                     IOCAF           equ	14919	;# 
   257   003A50                     ANSELB          equ	14928	;# 
   258   003A51                     WPUB            equ	14929	;# 
   259   003A52                     ODCONB          equ	14930	;# 
   260   003A53                     SLRCONB         equ	14931	;# 
   261   003A54                     INLVLB          equ	14932	;# 
   262   003A55                     IOCBP           equ	14933	;# 
   263   003A56                     IOCBN           equ	14934	;# 
   264   003A57                     IOCBF           equ	14935	;# 
   265   003A5A                     RB1I2C          equ	14938	;# 
   266   003A5B                     RB2I2C          equ	14939	;# 
   267   003A60                     ANSELC          equ	14944	;# 
   268   003A61                     WPUC            equ	14945	;# 
   269   003A62                     ODCONC          equ	14946	;# 
   270   003A63                     SLRCONC         equ	14947	;# 
   271   003A64                     INLVLC          equ	14948	;# 
   272   003A65                     IOCCP           equ	14949	;# 
   273   003A66                     IOCCN           equ	14950	;# 
   274   003A67                     IOCCF           equ	14951	;# 
   275   003A6A                     RC3I2C          equ	14954	;# 
   276   003A6B                     RC4I2C          equ	14955	;# 
   277   003A70                     ANSELD          equ	14960	;# 
   278   003A71                     WPUD            equ	14961	;# 
   279   003A72                     ODCOND          equ	14962	;# 
   280   003A73                     SLRCOND         equ	14963	;# 
   281   003A74                     INLVLD          equ	14964	;# 
   282   003A7A                     RD0I2C          equ	14970	;# 
   283   003A7B                     RD1I2C          equ	14971	;# 
   284   003A80                     ANSELE          equ	14976	;# 
   285   003A81                     WPUE            equ	14977	;# 
   286   003A82                     ODCONE          equ	14978	;# 
   287   003A83                     SLRCONE         equ	14979	;# 
   288   003A84                     INLVLE          equ	14980	;# 
   289   003A85                     IOCEP           equ	14981	;# 
   290   003A86                     IOCEN           equ	14982	;# 
   291   003A87                     IOCEF           equ	14983	;# 
   292   003ABF                     PPSLOCK         equ	15039	;# 
   293   003AC0                     INT0PPS         equ	15040	;# 
   294   003AC1                     INT1PPS         equ	15041	;# 
   295   003AC2                     INT2PPS         equ	15042	;# 
   296   003AC3                     T0CKIPPS        equ	15043	;# 
   297   003AC4                     T1CKIPPS        equ	15044	;# 
   298   003AC5                     T1GPPS          equ	15045	;# 
   299   003AC6                     T3CKIPPS        equ	15046	;# 
   300   003AC7                     T3GPPS          equ	15047	;# 
   301   003AC8                     T5CKIPPS        equ	15048	;# 
   302   003AC9                     T5GPPS          equ	15049	;# 
   303   003ACA                     T2INPPS         equ	15050	;# 
   304   003ACB                     T4INPPS         equ	15051	;# 
   305   003ACC                     T6INPPS         equ	15052	;# 
   306   003ACD                     CCP1PPS         equ	15053	;# 
   307   003ACE                     CCP2PPS         equ	15054	;# 
   308   003ACF                     CCP3PPS         equ	15055	;# 
   309   003AD0                     CCP4PPS         equ	15056	;# 
   310   003AD1                     SMT1WINPPS      equ	15057	;# 
   311   003AD2                     SMT1SIGPPS      equ	15058	;# 
   312   003AD3                     CWG1INPPS       equ	15059	;# 
   313   003AD4                     CWG2INPPS       equ	15060	;# 
   314   003AD5                     CWG3INPPS       equ	15061	;# 
   315   003AD6                     MD1CARLPPS      equ	15062	;# 
   316   003AD7                     MD1CARHPPS      equ	15063	;# 
   317   003AD8                     MD1SRCPPS       equ	15064	;# 
   318   003AD9                     CLCIN0PPS       equ	15065	;# 
   319   003ADA                     CLCIN1PPS       equ	15066	;# 
   320   003ADB                     CLCIN2PPS       equ	15067	;# 
   321   003ADC                     CLCIN3PPS       equ	15068	;# 
   322   003ADD                     ADACTPPS        equ	15069	;# 
   323   003ADE                     SPI1SCKPPS      equ	15070	;# 
   324   003ADF                     SPI1SDIPPS      equ	15071	;# 
   325   003AE0                     SPI1SSPPS       equ	15072	;# 
   326   003AE1                     I2C1SCLPPS      equ	15073	;# 
   327   003AE2                     I2C1SDAPPS      equ	15074	;# 
   328   003AE3                     I2C2SCLPPS      equ	15075	;# 
   329   003AE4                     I2C2SDAPPS      equ	15076	;# 
   330   003AE5                     U1RXPPS         equ	15077	;# 
   331   003AE6                     U1CTSPPS        equ	15078	;# 
   332   003AE8                     U2RXPPS         equ	15080	;# 
   333   003AE9                     U2CTSPPS        equ	15081	;# 
   334   003BC9                     DMA2BUF         equ	15305	;# 
   335   003BCA                     DMA2DCNT        equ	15306	;# 
   336   003BCA                     DMA2DCNTL       equ	15306	;# 
   337   003BCB                     DMA2DCNTH       equ	15307	;# 
   338   003BCC                     DMA2DPTR        equ	15308	;# 
   339   003BCC                     DMA2DPTRL       equ	15308	;# 
   340   003BCD                     DMA2DPTRH       equ	15309	;# 
   341   003BCE                     DMA2DSZ         equ	15310	;# 
   342   003BCE                     DMA2DSZL        equ	15310	;# 
   343   003BCF                     DMA2DSZH        equ	15311	;# 
   344   003BD0                     DMA2DSA         equ	15312	;# 
   345   003BD0                     DMA2DSAL        equ	15312	;# 
   346   003BD1                     DMA2DSAH        equ	15313	;# 
   347   003BD2                     DMA2SCNT        equ	15314	;# 
   348   003BD2                     DMA2SCNTL       equ	15314	;# 
   349   003BD3                     DMA2SCNTH       equ	15315	;# 
   350   003BD4                     DMA2SPTR        equ	15316	;# 
   351   003BD4                     DMA2SPTRL       equ	15316	;# 
   352   003BD5                     DMA2SPTRH       equ	15317	;# 
   353   003BD6                     DMA2SPTRU       equ	15318	;# 
   354   003BD7                     DMA2SSZ         equ	15319	;# 
   355   003BD7                     DMA2SSZL        equ	15319	;# 
   356   003BD8                     DMA2SSZH        equ	15320	;# 
   357   003BD9                     DMA2SSA         equ	15321	;# 
   358   003BD9                     DMA2SSAL        equ	15321	;# 
   359   003BDA                     DMA2SSAH        equ	15322	;# 
   360   003BDB                     DMA2SSAU        equ	15323	;# 
   361   003BDC                     DMA2CON0        equ	15324	;# 
   362   003BDD                     DMA2CON1        equ	15325	;# 
   363   003BDE                     DMA2AIRQ        equ	15326	;# 
   364   003BDF                     DMA2SIRQ        equ	15327	;# 
   365   003BE9                     DMA1BUF         equ	15337	;# 
   366   003BEA                     DMA1DCNT        equ	15338	;# 
   367   003BEA                     DMA1DCNTL       equ	15338	;# 
   368   003BEB                     DMA1DCNTH       equ	15339	;# 
   369   003BEC                     DMA1DPTR        equ	15340	;# 
   370   003BEC                     DMA1DPTRL       equ	15340	;# 
   371   003BED                     DMA1DPTRH       equ	15341	;# 
   372   003BEE                     DMA1DSZ         equ	15342	;# 
   373   003BEE                     DMA1DSZL        equ	15342	;# 
   374   003BEF                     DMA1DSZH        equ	15343	;# 
   375   003BF0                     DMA1DSA         equ	15344	;# 
   376   003BF0                     DMA1DSAL        equ	15344	;# 
   377   003BF1                     DMA1DSAH        equ	15345	;# 
   378   003BF2                     DMA1SCNT        equ	15346	;# 
   379   003BF2                     DMA1SCNTL       equ	15346	;# 
   380   003BF3                     DMA1SCNTH       equ	15347	;# 
   381   003BF4                     DMA1SPTR        equ	15348	;# 
   382   003BF4                     DMA1SPTRL       equ	15348	;# 
   383   003BF5                     DMA1SPTRH       equ	15349	;# 
   384   003BF6                     DMA1SPTRU       equ	15350	;# 
   385   003BF7                     DMA1SSZ         equ	15351	;# 
   386   003BF7                     DMA1SSZL        equ	15351	;# 
   387   003BF8                     DMA1SSZH        equ	15352	;# 
   388   003BF9                     DMA1SSA         equ	15353	;# 
   389   003BF9                     DMA1SSAL        equ	15353	;# 
   390   003BFA                     DMA1SSAH        equ	15354	;# 
   391   003BFB                     DMA1SSAU        equ	15355	;# 
   392   003BFC                     DMA1CON0        equ	15356	;# 
   393   003BFD                     DMA1CON1        equ	15357	;# 
   394   003BFE                     DMA1AIRQ        equ	15358	;# 
   395   003BFF                     DMA1SIRQ        equ	15359	;# 
   396   003C56                     CLC4CON         equ	15446	;# 
   397   003C57                     CLC4POL         equ	15447	;# 
   398   003C58                     CLC4SEL0        equ	15448	;# 
   399   003C59                     CLC4SEL1        equ	15449	;# 
   400   003C5A                     CLC4SEL2        equ	15450	;# 
   401   003C5B                     CLC4SEL3        equ	15451	;# 
   402   003C5C                     CLC4GLS0        equ	15452	;# 
   403   003C5D                     CLC4GLS1        equ	15453	;# 
   404   003C5E                     CLC4GLS2        equ	15454	;# 
   405   003C5F                     CLC4GLS3        equ	15455	;# 
   406   003C60                     CLC3CON         equ	15456	;# 
   407   003C61                     CLC3POL         equ	15457	;# 
   408   003C62                     CLC3SEL0        equ	15458	;# 
   409   003C63                     CLC3SEL1        equ	15459	;# 
   410   003C64                     CLC3SEL2        equ	15460	;# 
   411   003C65                     CLC3SEL3        equ	15461	;# 
   412   003C66                     CLC3GLS0        equ	15462	;# 
   413   003C67                     CLC3GLS1        equ	15463	;# 
   414   003C68                     CLC3GLS2        equ	15464	;# 
   415   003C69                     CLC3GLS3        equ	15465	;# 
   416   003C6A                     CLC2CON         equ	15466	;# 
   417   003C6B                     CLC2POL         equ	15467	;# 
   418   003C6C                     CLC2SEL0        equ	15468	;# 
   419   003C6D                     CLC2SEL1        equ	15469	;# 
   420   003C6E                     CLC2SEL2        equ	15470	;# 
   421   003C6F                     CLC2SEL3        equ	15471	;# 
   422   003C70                     CLC2GLS0        equ	15472	;# 
   423   003C71                     CLC2GLS1        equ	15473	;# 
   424   003C72                     CLC2GLS2        equ	15474	;# 
   425   003C73                     CLC2GLS3        equ	15475	;# 
   426   003C74                     CLC1CON         equ	15476	;# 
   427   003C75                     CLC1POL         equ	15477	;# 
   428   003C76                     CLC1SEL0        equ	15478	;# 
   429   003C77                     CLC1SEL1        equ	15479	;# 
   430   003C78                     CLC1SEL2        equ	15480	;# 
   431   003C79                     CLC1SEL3        equ	15481	;# 
   432   003C7A                     CLC1GLS0        equ	15482	;# 
   433   003C7B                     CLC1GLS1        equ	15483	;# 
   434   003C7C                     CLC1GLS2        equ	15484	;# 
   435   003C7D                     CLC1GLS3        equ	15485	;# 
   436   003C7E                     CLCDATA0        equ	15486	;# 
   437   003CE5                     CLKRCON         equ	15589	;# 
   438   003CE6                     CLKRCLK         equ	15590	;# 
   439   003CFA                     MD1CON0         equ	15610	;# 
   440   003CFB                     MD1CON1         equ	15611	;# 
   441   003CFC                     MD1SRC          equ	15612	;# 
   442   003CFD                     MD1CARL         equ	15613	;# 
   443   003CFE                     MD1CARH         equ	15614	;# 
   444   003D10                     SPI1RXB         equ	15632	;# 
   445   003D11                     SPI1TXB         equ	15633	;# 
   446   003D12                     SPI1TCNT        equ	15634	;# 
   447   003D12                     SPI1TCNTL       equ	15634	;# 
   448   003D13                     SPI1TCNTH       equ	15635	;# 
   449   003D14                     SPI1CON0        equ	15636	;# 
   450   003D15                     SPI1CON1        equ	15637	;# 
   451   003D16                     SPI1CON2        equ	15638	;# 
   452   003D17                     SPI1STATUS      equ	15639	;# 
   453   003D18                     SPI1TWIDTH      equ	15640	;# 
   454   003D19                     SPI1BAUD        equ	15641	;# 
   455   003D1A                     SPI1INTF        equ	15642	;# 
   456   003D1B                     SPI1INTE        equ	15643	;# 
   457   003D1C                     SPI1CLK         equ	15644	;# 
   458   003D54                     I2C2RXB         equ	15700	;# 
   459   003D55                     I2C2TXB         equ	15701	;# 
   460   003D56                     I2C2CNT         equ	15702	;# 
   461   003D57                     I2C2ADB0        equ	15703	;# 
   462   003D58                     I2C2ADB1        equ	15704	;# 
   463   003D59                     I2C2ADR0        equ	15705	;# 
   464   003D5A                     I2C2ADR1        equ	15706	;# 
   465   003D5B                     I2C2ADR2        equ	15707	;# 
   466   003D5C                     I2C2ADR3        equ	15708	;# 
   467   003D5D                     I2C2CON0        equ	15709	;# 
   468   003D5E                     I2C2CON1        equ	15710	;# 
   469   003D5F                     I2C2CON2        equ	15711	;# 
   470   003D60                     I2C2ERR         equ	15712	;# 
   471   003D61                     I2C2STAT0       equ	15713	;# 
   472   003D62                     I2C2STAT1       equ	15714	;# 
   473   003D63                     I2C2PIR         equ	15715	;# 
   474   003D64                     I2C2PIE         equ	15716	;# 
   475   003D65                     I2C2CLK         equ	15717	;# 
   476   003D66                     I2C2BTO         equ	15718	;# 
   477   003D6A                     I2C1RXB         equ	15722	;# 
   478   003D6B                     I2C1TXB         equ	15723	;# 
   479   003D6C                     I2C1CNT         equ	15724	;# 
   480   003D6D                     I2C1ADB0        equ	15725	;# 
   481   003D6E                     I2C1ADB1        equ	15726	;# 
   482   003D6F                     I2C1ADR0        equ	15727	;# 
   483   003D70                     I2C1ADR1        equ	15728	;# 
   484   003D71                     I2C1ADR2        equ	15729	;# 
   485   003D72                     I2C1ADR3        equ	15730	;# 
   486   003D73                     I2C1CON0        equ	15731	;# 
   487   003D74                     I2C1CON1        equ	15732	;# 
   488   003D75                     I2C1CON2        equ	15733	;# 
   489   003D76                     I2C1ERR         equ	15734	;# 
   490   003D77                     I2C1STAT0       equ	15735	;# 
   491   003D78                     I2C1STAT1       equ	15736	;# 
   492   003D79                     I2C1PIR         equ	15737	;# 
   493   003D7A                     I2C1PIE         equ	15738	;# 
   494   003D7B                     I2C1CLK         equ	15739	;# 
   495   003D7C                     I2C1BTO         equ	15740	;# 
   496   003DD0                     U2RXB           equ	15824	;# 
   497   003DD0                     U2RXBL          equ	15824	;# 
   498   003DD2                     U2TXB           equ	15826	;# 
   499   003DD2                     U2TXBL          equ	15826	;# 
   500   003DD4                     U2P1            equ	15828	;# 
   501   003DD4                     U2P1L           equ	15828	;# 
   502   003DD6                     U2P2            equ	15830	;# 
   503   003DD6                     U2P2L           equ	15830	;# 
   504   003DD8                     U2P3            equ	15832	;# 
   505   003DD8                     U2P3L           equ	15832	;# 
   506   003DDA                     U2CON0          equ	15834	;# 
   507   003DDB                     U2CON1          equ	15835	;# 
   508   003DDC                     U2CON2          equ	15836	;# 
   509   003DDD                     U2BRG           equ	15837	;# 
   510   003DDD                     U2BRGL          equ	15837	;# 
   511   003DDE                     U2BRGH          equ	15838	;# 
   512   003DDF                     U2FIFO          equ	15839	;# 
   513   003DE0                     U2UIR           equ	15840	;# 
   514   003DE1                     U2ERRIR         equ	15841	;# 
   515   003DE2                     U2ERRIE         equ	15842	;# 
   516   003DE8                     U1RXB           equ	15848	;# 
   517   003DE8                     U1RXBL          equ	15848	;# 
   518   003DE9                     U1RXCHK         equ	15849	;# 
   519   003DEA                     U1TXB           equ	15850	;# 
   520   003DEA                     U1TXBL          equ	15850	;# 
   521   003DEB                     U1TXCHK         equ	15851	;# 
   522   003DEC                     U1P1            equ	15852	;# 
   523   003DEC                     U1P1L           equ	15852	;# 
   524   003DED                     U1P1H           equ	15853	;# 
   525   003DEE                     U1P2            equ	15854	;# 
   526   003DEE                     U1P2L           equ	15854	;# 
   527   003DEF                     U1P2H           equ	15855	;# 
   528   003DF0                     U1P3            equ	15856	;# 
   529   003DF0                     U1P3L           equ	15856	;# 
   530   003DF1                     U1P3H           equ	15857	;# 
   531   003DF2                     U1CON0          equ	15858	;# 
   532   003DF3                     U1CON1          equ	15859	;# 
   533   003DF4                     U1CON2          equ	15860	;# 
   534   003DF5                     U1BRG           equ	15861	;# 
   535   003DF5                     U1BRGL          equ	15861	;# 
   536   003DF6                     U1BRGH          equ	15862	;# 
   537   003DF7                     U1FIFO          equ	15863	;# 
   538   003DF8                     U1UIR           equ	15864	;# 
   539   003DF9                     U1ERRIR         equ	15865	;# 
   540   003DFA                     U1ERRIE         equ	15866	;# 
   541   003E9C                     DAC1CON1        equ	16028	;# 
   542   003E9E                     DAC1CON0        equ	16030	;# 
   543   003EB8                     CM2CON0         equ	16056	;# 
   544   003EB9                     CM2CON1         equ	16057	;# 
   545   003EBA                     CM2NCH          equ	16058	;# 
   546   003EBB                     CM2PCH          equ	16059	;# 
   547   003EBC                     CM1CON0         equ	16060	;# 
   548   003EBD                     CM1CON1         equ	16061	;# 
   549   003EBE                     CM1NCH          equ	16062	;# 
   550   003EBF                     CM1PCH          equ	16063	;# 
   551   003EC0                     CMOUT           equ	16064	;# 
   552   003EC1                     FVRCON          equ	16065	;# 
   553   003EC3                     ZCDCON          equ	16067	;# 
   554   003EC9                     HLVDCON0        equ	16073	;# 
   555   003ECA                     HLVDCON1        equ	16074	;# 
   556   003ED7                     ADCP            equ	16087	;# 
   557   003EDE                     ADLTH           equ	16094	;# 
   558   003EDE                     ADLTHL          equ	16094	;# 
   559   003EDF                     ADLTHH          equ	16095	;# 
   560   003EE0                     ADUTH           equ	16096	;# 
   561   003EE0                     ADUTHL          equ	16096	;# 
   562   003EE1                     ADUTHH          equ	16097	;# 
   563   003EE2                     ADERR           equ	16098	;# 
   564   003EE2                     ADERRL          equ	16098	;# 
   565   003EE3                     ADERRH          equ	16099	;# 
   566   003EE4                     ADSTPT          equ	16100	;# 
   567   003EE4                     ADSTPTL         equ	16100	;# 
   568   003EE5                     ADSTPTH         equ	16101	;# 
   569   003EE6                     ADFLTR          equ	16102	;# 
   570   003EE6                     ADFLTRL         equ	16102	;# 
   571   003EE7                     ADFLTRH         equ	16103	;# 
   572   003EE8                     ADACC           equ	16104	;# 
   573   003EE8                     ADACCL          equ	16104	;# 
   574   003EE9                     ADACCH          equ	16105	;# 
   575   003EEA                     ADACCU          equ	16106	;# 
   576   003EEB                     ADCNT           equ	16107	;# 
   577   003EEC                     ADRPT           equ	16108	;# 
   578   003EED                     ADPREV          equ	16109	;# 
   579   003EED                     ADPREVL         equ	16109	;# 
   580   003EEE                     ADPREVH         equ	16110	;# 
   581   003EEF                     ADRES           equ	16111	;# 
   582   003EEF                     ADRESL          equ	16111	;# 
   583   003EF0                     ADRESH          equ	16112	;# 
   584   003EF1                     ADPCH           equ	16113	;# 
   585   003EF3                     ADACQ           equ	16115	;# 
   586   003EF3                     ADACQL          equ	16115	;# 
   587   003EF4                     ADACQH          equ	16116	;# 
   588   003EF5                     ADCAP           equ	16117	;# 
   589   003EF6                     ADPRE           equ	16118	;# 
   590   003EF6                     ADPREL          equ	16118	;# 
   591   003EF7                     ADPREH          equ	16119	;# 
   592   003EF8                     ADCON0          equ	16120	;# 
   593   003EF9                     ADCON1          equ	16121	;# 
   594   003EFA                     ADCON2          equ	16122	;# 
   595   003EFB                     ADCON3          equ	16123	;# 
   596   003EFC                     ADSTAT          equ	16124	;# 
   597   003EFD                     ADREF           equ	16125	;# 
   598   003EFE                     ADACT           equ	16126	;# 
   599   003EFF                     ADCLK           equ	16127	;# 
   600   003F12                     SMT1TMR         equ	16146	;# 
   601   003F12                     SMT1TMRL        equ	16146	;# 
   602   003F13                     SMT1TMRH        equ	16147	;# 
   603   003F14                     SMT1TMRU        equ	16148	;# 
   604   003F15                     SMT1CPR         equ	16149	;# 
   605   003F15                     SMT1CPRL        equ	16149	;# 
   606   003F16                     SMT1CPRH        equ	16150	;# 
   607   003F17                     SMT1CPRU        equ	16151	;# 
   608   003F18                     SMT1CPW         equ	16152	;# 
   609   003F18                     SMT1CPWL        equ	16152	;# 
   610   003F19                     SMT1CPWH        equ	16153	;# 
   611   003F1A                     SMT1CPWU        equ	16154	;# 
   612   003F1B                     SMT1PR          equ	16155	;# 
   613   003F1B                     SMT1PRL         equ	16155	;# 
   614   003F1C                     SMT1PRH         equ	16156	;# 
   615   003F1D                     SMT1PRU         equ	16157	;# 
   616   003F1E                     SMT1CON0        equ	16158	;# 
   617   003F1F                     SMT1CON1        equ	16159	;# 
   618   003F20                     SMT1STAT        equ	16160	;# 
   619   003F21                     SMT1CLK         equ	16161	;# 
   620   003F22                     SMT1SIG         equ	16162	;# 
   621   003F23                     SMT1WIN         equ	16163	;# 
   622   003F38                     NCO1ACC         equ	16184	;# 
   623   003F38                     NCO1ACCL        equ	16184	;# 
   624   003F39                     NCO1ACCH        equ	16185	;# 
   625   003F3A                     NCO1ACCU        equ	16186	;# 
   626   003F3B                     NCO1INC         equ	16187	;# 
   627   003F3B                     NCO1INCL        equ	16187	;# 
   628   003F3C                     NCO1INCH        equ	16188	;# 
   629   003F3D                     NCO1INCU        equ	16189	;# 
   630   003F3E                     NCO1CON         equ	16190	;# 
   631   003F3F                     NCO1CLK         equ	16191	;# 
   632   003F40                     CWG3CLK         equ	16192	;# 
   633   003F40                     CWG3CLKCON      equ	16192	;# 
   634   003F41                     CWG3ISM         equ	16193	;# 
   635   003F41                     CWG3DAT         equ	16193	;# 
   636   003F42                     CWG3DBR         equ	16194	;# 
   637   003F43                     CWG3DBF         equ	16195	;# 
   638   003F44                     CWG3CON0        equ	16196	;# 
   639   003F45                     CWG3CON1        equ	16197	;# 
   640   003F46                     CWG3AS0         equ	16198	;# 
   641   003F47                     CWG3AS1         equ	16199	;# 
   642   003F48                     CWG3STR         equ	16200	;# 
   643   003F49                     CWG2CLK         equ	16201	;# 
   644   003F49                     CWG2CLKCON      equ	16201	;# 
   645   003F4A                     CWG2ISM         equ	16202	;# 
   646   003F4A                     CWG2DAT         equ	16202	;# 
   647   003F4B                     CWG2DBR         equ	16203	;# 
   648   003F4C                     CWG2DBF         equ	16204	;# 
   649   003F4D                     CWG2CON0        equ	16205	;# 
   650   003F4E                     CWG2CON1        equ	16206	;# 
   651   003F4F                     CWG2AS0         equ	16207	;# 
   652   003F50                     CWG2AS1         equ	16208	;# 
   653   003F51                     CWG2STR         equ	16209	;# 
   654   003F52                     CWG1CLK         equ	16210	;# 
   655   003F52                     CWG1CLKCON      equ	16210	;# 
   656   003F53                     CWG1ISM         equ	16211	;# 
   657   003F53                     CWG1DAT         equ	16211	;# 
   658   003F54                     CWG1DBR         equ	16212	;# 
   659   003F55                     CWG1DBF         equ	16213	;# 
   660   003F56                     CWG1CON0        equ	16214	;# 
   661   003F57                     CWG1CON1        equ	16215	;# 
   662   003F58                     CWG1AS0         equ	16216	;# 
   663   003F59                     CWG1AS1         equ	16217	;# 
   664   003F5A                     CWG1STR         equ	16218	;# 
   665   003F5E                     CCPTMRS0        equ	16222	;# 
   666   003F5F                     CCPTMRS1        equ	16223	;# 
   667   003F60                     PWM8DC          equ	16224	;# 
   668   003F60                     PWM8DCL         equ	16224	;# 
   669   003F61                     PWM8DCH         equ	16225	;# 
   670   003F62                     PWM8CON         equ	16226	;# 
   671   003F64                     PWM7DC          equ	16228	;# 
   672   003F64                     PWM7DCL         equ	16228	;# 
   673   003F65                     PWM7DCH         equ	16229	;# 
   674   003F66                     PWM7CON         equ	16230	;# 
   675   003F68                     PWM6DC          equ	16232	;# 
   676   003F68                     PWM6DCL         equ	16232	;# 
   677   003F69                     PWM6DCH         equ	16233	;# 
   678   003F6A                     PWM6CON         equ	16234	;# 
   679   003F6C                     PWM5DC          equ	16236	;# 
   680   003F6C                     PWM5DCL         equ	16236	;# 
   681   003F6D                     PWM5DCH         equ	16237	;# 
   682   003F6E                     PWM5CON         equ	16238	;# 
   683   003F70                     CCPR4           equ	16240	;# 
   684   003F70                     CCPR4L          equ	16240	;# 
   685   003F71                     CCPR4H          equ	16241	;# 
   686   003F72                     CCP4CON         equ	16242	;# 
   687   003F73                     CCP4CAP         equ	16243	;# 
   688   003F74                     CCPR3           equ	16244	;# 
   689   003F74                     CCPR3L          equ	16244	;# 
   690   003F75                     CCPR3H          equ	16245	;# 
   691   003F76                     CCP3CON         equ	16246	;# 
   692   003F77                     CCP3CAP         equ	16247	;# 
   693   003F78                     CCPR2           equ	16248	;# 
   694   003F78                     CCPR2L          equ	16248	;# 
   695   003F79                     CCPR2H          equ	16249	;# 
   696   003F7A                     CCP2CON         equ	16250	;# 
   697   003F7B                     CCP2CAP         equ	16251	;# 
   698   003F7C                     CCPR1           equ	16252	;# 
   699   003F7C                     CCPR1L          equ	16252	;# 
   700   003F7D                     CCPR1H          equ	16253	;# 
   701   003F7E                     CCP1CON         equ	16254	;# 
   702   003F7F                     CCP1CAP         equ	16255	;# 
   703   003F92                     T6TMR           equ	16274	;# 
   704   003F92                     TMR6            equ	16274	;# 
   705   003F93                     T6PR            equ	16275	;# 
   706   003F93                     PR6             equ	16275	;# 
   707   003F94                     T6CON           equ	16276	;# 
   708   003F95                     T6HLT           equ	16277	;# 
   709   003F96                     T6CLKCON        equ	16278	;# 
   710   003F96                     T6CLK           equ	16278	;# 
   711   003F97                     T6RST           equ	16279	;# 
   712   003F98                     TMR5            equ	16280	;# 
   713   003F98                     TMR5L           equ	16280	;# 
   714   003F99                     TMR5H           equ	16281	;# 
   715   003F9A                     T5CON           equ	16282	;# 
   716   003F9A                     TMR5CON         equ	16282	;# 
   717   003F9B                     T5GCON          equ	16283	;# 
   718   003F9B                     TMR5GCON        equ	16283	;# 
   719   003F9C                     T5GATE          equ	16284	;# 
   720   003F9C                     TMR5GATE        equ	16284	;# 
   721   003F9D                     T5CLK           equ	16285	;# 
   722   003F9D                     TMR5CLK         equ	16285	;# 
   723   003F9D                     PR5             equ	16285	;# 
   724   003F9E                     T4TMR           equ	16286	;# 
   725   003F9E                     TMR4            equ	16286	;# 
   726   003F9F                     T4PR            equ	16287	;# 
   727   003F9F                     PR4             equ	16287	;# 
   728   003FA0                     T4CON           equ	16288	;# 
   729   003FA1                     T4HLT           equ	16289	;# 
   730   003FA2                     T4CLKCON        equ	16290	;# 
   731   003FA2                     T4CLK           equ	16290	;# 
   732   003FA3                     T4RST           equ	16291	;# 
   733   003FA4                     TMR3            equ	16292	;# 
   734   003FA4                     TMR3L           equ	16292	;# 
   735   003FA5                     TMR3H           equ	16293	;# 
   736   003FA6                     T3CON           equ	16294	;# 
   737   003FA6                     TMR3CON         equ	16294	;# 
   738   003FA7                     T3GCON          equ	16295	;# 
   739   003FA7                     TMR3GCON        equ	16295	;# 
   740   003FA8                     T3GATE          equ	16296	;# 
   741   003FA8                     TMR3GATE        equ	16296	;# 
   742   003FA9                     T3CLK           equ	16297	;# 
   743   003FA9                     TMR3CLK         equ	16297	;# 
   744   003FA9                     PR3             equ	16297	;# 
   745   003FAA                     T2TMR           equ	16298	;# 
   746   003FAA                     TMR2            equ	16298	;# 
   747   003FAB                     T2PR            equ	16299	;# 
   748   003FAB                     PR2             equ	16299	;# 
   749   003FAC                     T2CON           equ	16300	;# 
   750   003FAD                     T2HLT           equ	16301	;# 
   751   003FAE                     T2CLKCON        equ	16302	;# 
   752   003FAE                     T2CLK           equ	16302	;# 
   753   003FAF                     T2RST           equ	16303	;# 
   754   003FB0                     TMR1            equ	16304	;# 
   755   003FB0                     TMR1L           equ	16304	;# 
   756   003FB1                     TMR1H           equ	16305	;# 
   757   003FB2                     T1CON           equ	16306	;# 
   758   003FB2                     TMR1CON         equ	16306	;# 
   759   003FB3                     T1GCON          equ	16307	;# 
   760   003FB3                     TMR1GCON        equ	16307	;# 
   761   003FB4                     T1GATE          equ	16308	;# 
   762   003FB4                     TMR1GATE        equ	16308	;# 
   763   003FB5                     T1CLK           equ	16309	;# 
   764   003FB5                     TMR1CLK         equ	16309	;# 
   765   003FB5                     PR1             equ	16309	;# 
   766   003FB6                     TMR0L           equ	16310	;# 
   767   003FB6                     TMR0            equ	16310	;# 
   768   003FB7                     TMR0H           equ	16311	;# 
   769   003FB7                     PR0             equ	16311	;# 
   770   003FB8                     T0CON0          equ	16312	;# 
   771   003FB9                     T0CON1          equ	16313	;# 
   772   003FBA                     LATA            equ	16314	;# 
   773   003FBB                     LATB            equ	16315	;# 
   774   003FBC                     LATC            equ	16316	;# 
   775   003FBD                     LATD            equ	16317	;# 
   776   003FBE                     LATE            equ	16318	;# 
   777   003FC2                     TRISA           equ	16322	;# 
   778   003FC3                     TRISB           equ	16323	;# 
   779   003FC4                     TRISC           equ	16324	;# 
   780   003FC5                     TRISD           equ	16325	;# 
   781   003FC6                     TRISE           equ	16326	;# 
   782   003FCA                     PORTA           equ	16330	;# 
   783   003FCB                     PORTB           equ	16331	;# 
   784   003FCC                     PORTC           equ	16332	;# 
   785   003FCD                     PORTD           equ	16333	;# 
   786   003FCE                     PORTE           equ	16334	;# 
   787   003FD2                     INTCON0         equ	16338	;# 
   788   003FD3                     INTCON1         equ	16339	;# 
   789   003FD4                     IVTLOCK         equ	16340	;# 
   790   003FD5                     IVTBASE         equ	16341	;# 
   791   003FD5                     IVTBASEL        equ	16341	;# 
   792   003FD6                     IVTBASEH        equ	16342	;# 
   793   003FD7                     IVTBASEU        equ	16343	;# 
   794   003FD8                     STATUS          equ	16344	;# 
   795   003FD9                     FSR2            equ	16345	;# 
   796   003FD9                     FSR2L           equ	16345	;# 
   797   003FDA                     FSR2H           equ	16346	;# 
   798   003FDB                     PLUSW2          equ	16347	;# 
   799   003FDC                     PREINC2         equ	16348	;# 
   800   003FDD                     POSTDEC2        equ	16349	;# 
   801   003FDE                     POSTINC2        equ	16350	;# 
   802   003FDF                     INDF2           equ	16351	;# 
   803   003FE0                     BSR             equ	16352	;# 
   804   003FE1                     FSR1            equ	16353	;# 
   805   003FE1                     FSR1L           equ	16353	;# 
   806   003FE2                     FSR1H           equ	16354	;# 
   807   003FE3                     PLUSW1          equ	16355	;# 
   808   003FE4                     PREINC1         equ	16356	;# 
   809   003FE5                     POSTDEC1        equ	16357	;# 
   810   003FE6                     POSTINC1        equ	16358	;# 
   811   003FE7                     INDF1           equ	16359	;# 
   812   003FE8                     WREG            equ	16360	;# 
   813   003FE9                     FSR0            equ	16361	;# 
   814   003FE9                     FSR0L           equ	16361	;# 
   815   003FEA                     FSR0H           equ	16362	;# 
   816   003FEB                     PLUSW0          equ	16363	;# 
   817   003FEC                     PREINC0         equ	16364	;# 
   818   003FED                     POSTDEC0        equ	16365	;# 
   819   003FEE                     POSTINC0        equ	16366	;# 
   820   003FEF                     INDF0           equ	16367	;# 
   821   003FF0                     PCON0           equ	16368	;# 
   822   003FF1                     PCON1           equ	16369	;# 
   823   003FF3                     PROD            equ	16371	;# 
   824   003FF3                     PRODL           equ	16371	;# 
   825   003FF4                     PRODH           equ	16372	;# 
   826   003FF5                     TABLAT          equ	16373	;# 
   827   003FF6                     TBLPTR          equ	16374	;# 
   828   003FF6                     TBLPTRL         equ	16374	;# 
   829   003FF7                     TBLPTRH         equ	16375	;# 
   830   003FF8                     TBLPTRU         equ	16376	;# 
   831   003FF9                     PCLAT           equ	16377	;# 
   832   003FF9                     PCL             equ	16377	;# 
   833   003FFA                     PCLATH          equ	16378	;# 
   834   003FFB                     PCLATU          equ	16379	;# 
   835   003FFC                     STKPTR          equ	16380	;# 
   836   003FFD                     TOS             equ	16381	;# 
   837   003FFD                     TOSL            equ	16381	;# 
   838   003FFE                     TOSH            equ	16382	;# 
   839   003FFF                     TOSU            equ	16383	;# 
   840                           
   841                           	psect	idataCOMRAM
   842   00250C                     __pidataCOMRAM:
   843                           	callstack 0
   844                           
   845                           ;initializer for getKeyPressed@F16022
   846   00250C  31                 	db	49
   847   00250D  32                 	db	50
   848   00250E  33                 	db	51
   849   00250F  41                 	db	65
   850   002510  34                 	db	52
   851   002511  35                 	db	53
   852   002512  36                 	db	54
   853   002513  42                 	db	66
   854   002514  37                 	db	55
   855   002515  38                 	db	56
   856   002516  39                 	db	57
   857   002517  43                 	db	67
   858   002518  2A                 	db	42
   859   002519  30                 	db	48
   860   00251A  23                 	db	35
   861   00251B  44                 	db	68
   862                           
   863                           ;initializer for getKeyPressed@F16026
   864   00251C  FE                 	db	254
   865   00251D  FD                 	db	253
   866   00251E  FB                 	db	251
   867   00251F  F7                 	db	247
   868   003A70                     _ANSELD         set	14960
   869   003A50                     _ANSELB         set	14928
   870   003FCB                     _PORTBbits      set	16331
   871   003FCD                     _PORTD          set	16333
   872   003FBD                     _LATD           set	16317
   873   003FC5                     _TRISD          set	16325
   874   003FCB                     _PORTB          set	16331
   875   003FC3                     _TRISB          set	16323
   876   003FBB                     _LATB           set	16315
   877                           
   878                           ; #config settings
   879                           
   880                           	psect	cinit
   881   002474                     __pcinit:
   882                           	callstack 0
   883   002474                     start_initialization:
   884                           	callstack 0
   885   002474                     __initialization:
   886                           	callstack 0
   887                           
   888                           ; Initialize objects allocated to COMRAM (20 bytes)
   889                           ; load TBLPTR registers with __pidataCOMRAM
   890   002474  0E0C               	movlw	low __pidataCOMRAM
   891   002476  6EF6               	movwf	tblptrl,c
   892   002478  0E25               	movlw	high __pidataCOMRAM
   893   00247A  6EF7               	movwf	tblptrh,c
   894   00247C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   895   00247E  6EF8               	movwf	tblptru,c
   896   002480  EE00  F019         	lfsr	0,__pdataCOMRAM
   897   002484  EE10 F014          	lfsr	1,20
   898   002488                     copy_data0:
   899   002488  0009               	tblrd		*+
   900   00248A  006F FFD7 FFEE     	movff	tablat,postinc0
   901   002490  50E5               	movf	postdec1,w,c
   902   002492  50E1               	movf	fsr1l,w,c
   903   002494  E1F9               	bnz	copy_data0
   904                           
   905                           ; Clear objects allocated to COMRAM (11 bytes)
   906   002496  EE00  F02D         	lfsr	0,__pbssCOMRAM
   907   00249A  0E0B               	movlw	11
   908   00249C                     clear_0:
   909   00249C  6AEE               	clrf	postinc0,c
   910   00249E  06E8               	decf	wreg,f,c
   911   0024A0  E1FD               	bnz	clear_0
   912   0024A2                     end_of_initialization:
   913                           	callstack 0
   914   0024A2                     __end_of__initialization:
   915                           	callstack 0
   916   0024A2  0100               	movlb	0
   917   0024A4  EF08  F012         	goto	_main	;jump to C main() function
   918                           
   919                           	psect	bssCOMRAM
   920   00002D                     __pbssCOMRAM:
   921                           	callstack 0
   922   00002D                     _isSecond:
   923                           	callstack 0
   924   00002D                     	ds	2
   925   00002F                     _digitCount:
   926                           	callstack 0
   927   00002F                     	ds	2
   928   000031                     _Display_Result_REG:
   929                           	callstack 0
   930   000031                     	ds	2
   931   000033                     _Y_Input_REG:
   932                           	callstack 0
   933   000033                     	ds	2
   934   000035                     _X_Input_REG:
   935                           	callstack 0
   936   000035                     	ds	2
   937   000037                     _Operation_REG:
   938                           	callstack 0
   939   000037                     	ds	1
   940                           
   941                           	psect	dataCOMRAM
   942   000019                     __pdataCOMRAM:
   943                           	callstack 0
   944   000019                     getKeyPressed@F16022:
   945                           	callstack 0
   946   000019                     	ds	16
   947   000029                     getKeyPressed@F16026:
   948                           	callstack 0
   949   000029                     	ds	4
   950                           
   951                           	psect	cstackCOMRAM
   952   000001                     __pcstackCOMRAM:
   953                           	callstack 0
   954   000001                     ?___awdiv:
   955                           	callstack 0
   956   000001                     displayOnLEDs@value:
   957                           	callstack 0
   958   000001                     ___awdiv@dividend:
   959                           	callstack 0
   960   000001                     ??_getKeyPressed:
   961   000001                     
   962                           ; 1 bytes @ 0x0
   963   000001                     	ds	1
   964   000002                     getKeyPressed@keys:
   965                           	callstack 0
   966                           
   967                           ; 16 bytes @ 0x1
   968   000002                     	ds	1
   969   000003                     ___awdiv@divisor:
   970                           	callstack 0
   971   000003                     
   972                           ; 1 bytes @ 0x2
   973   000003                     	ds	2
   974   000005                     ___awdiv@counter:
   975                           	callstack 0
   976   000005                     
   977                           ; 1 bytes @ 0x4
   978   000005                     	ds	1
   979   000006                     ___awdiv@sign:
   980                           	callstack 0
   981                           
   982                           ; 1 bytes @ 0x5
   983   000006                     	ds	1
   984   000007                     ___awdiv@quotient:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x6
   988   000007                     	ds	2
   989   000009                     ??_calculate:
   990                           
   991                           ; 1 bytes @ 0x8
   992   000009                     	ds	2
   993   00000B                     ??_handleInput:
   994                           
   995                           ; 1 bytes @ 0xA
   996   00000B                     	ds	2
   997   00000D                     handleInput@key:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0xC
  1001   00000D                     	ds	5
  1002   000012                     getKeyPressed@row_values:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x11
  1006   000012                     	ds	4
  1007   000016                     getKeyPressed@row:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x15
  1011   000016                     	ds	2
  1012   000018                     main@key_93:
  1013                           	callstack 0
  1014   000018                     
  1015                           ; 1 bytes @ 0x17
  1016   000018                     	ds	1
  1017                           
  1018 ;;
  1019 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1020 ;;
  1021 ;; *************** function _main *****************
  1022 ;; Defined at:
  1023 ;;		line 211 in file "main.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  key             1   23[COMRAM] unsigned char 
  1028 ;;  key             1    0        unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1042 ;;Total ram usage:        1 bytes
  1043 ;; Hardware stack levels required when called: 3
  1044 ;; This function calls:
  1045 ;;		_getKeyPressed
  1046 ;;		_handleInput
  1047 ;;		_resetAll
  1048 ;;		_setup
  1049 ;; This function is called by:
  1050 ;;		Startup code after reset
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text0
  1055   002410                     __ptext0:
  1056                           	callstack 0
  1057   002410                     _main:
  1058                           	callstack 28
  1059   002410                     
  1060                           ;main.c: 212:     setup();
  1061   002410  EC7A  F012         	call	_setup	;wreg free
  1062                           
  1063                           ;main.c: 213:     resetAll();
  1064   002414  EC54  F012         	call	_resetAll	;wreg free
  1065   002418                     
  1066                           ;main.c: 216:     handleInput(key);
  1067   002418  0E30               	movlw	48
  1068   00241A  EC01  F010         	call	_handleInput
  1069   00241E                     
  1070                           ;main.c: 218:     handleInput(key);
  1071   00241E  0E30               	movlw	48
  1072   002420  EC01  F010         	call	_handleInput
  1073   002424                     
  1074                           ;main.c: 220:     handleInput(key);
  1075   002424  0E42               	movlw	66
  1076   002426  EC01  F010         	call	_handleInput
  1077   00242A                     
  1078                           ;main.c: 222:     handleInput(key);
  1079   00242A  0E30               	movlw	48
  1080   00242C  EC01  F010         	call	_handleInput
  1081   002430                     
  1082                           ;main.c: 224:     handleInput(key);
  1083   002430  0E30               	movlw	48
  1084   002432  EC01  F010         	call	_handleInput
  1085   002436                     
  1086                           ;main.c: 226:     handleInput(key);
  1087   002436  0E23               	movlw	35
  1088   002438  EC01  F010         	call	_handleInput
  1089   00243C                     l1117:
  1090                           
  1091                           ;main.c: 230:         char key = getKeyPressed();
  1092   00243C  ECB3  F010         	call	_getKeyPressed	;wreg free
  1093   002440  6E18               	movwf	main@key_93^0,c
  1094   002442                     
  1095                           ;main.c: 231:         if (key != 0) {
  1096   002442  5018               	movf	main@key_93^0,w,c
  1097   002444  B4D8               	btfsc	status,2,c
  1098   002446  EF27  F012         	goto	u551
  1099   00244A  EF29  F012         	goto	u550
  1100   00244E                     u551:
  1101   00244E  EF1E  F012         	goto	l1117
  1102   002452                     u550:
  1103   002452                     
  1104                           ;main.c: 232:             handleInput(key);
  1105   002452  5018               	movf	main@key_93^0,w,c
  1106   002454  EC01  F010         	call	_handleInput
  1107   002458                     l1123:
  1108   002458  ECB3  F010         	call	_getKeyPressed	;wreg free
  1109   00245C  0900               	iorlw	0
  1110   00245E  A4D8               	btfss	status,2,c
  1111   002460  EF34  F012         	goto	u561
  1112   002464  EF36  F012         	goto	u560
  1113   002468                     u561:
  1114   002468  EF2C  F012         	goto	l1123
  1115   00246C                     u560:
  1116   00246C  EF1E  F012         	goto	l1117
  1117   002470  EFFE  F0FF         	goto	start
  1118   002474                     __end_of_main:
  1119                           	callstack 0
  1120                           
  1121 ;; *************** function _setup *****************
  1122 ;; Defined at:
  1123 ;;		line 59 in file "main.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used: 1
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text1
  1151   0024F4                     __ptext1:
  1152                           	callstack 0
  1153   0024F4                     _setup:
  1154                           	callstack 30
  1155   0024F4                     
  1156                           ;main.c: 61:     LATB = 0x0F;
  1157   0024F4  0E0F               	movlw	15
  1158   0024F6  6EBB               	movwf	187,c	;volatile
  1159   0024F8                     
  1160                           ;main.c: 62:     ANSELB = 0x00;
  1161   0024F8  013A               	movlb	58	; () banked
  1162   0024FA  6B50               	clrf	80,b	;volatile
  1163                           
  1164                           ;main.c: 63:     TRISB = 0b11110000;
  1165   0024FC  0EF0               	movlw	240
  1166   0024FE  6EC3               	movwf	195,c	;volatile
  1167   002500                     
  1168                           ; BSR set to: 58
  1169                           ;main.c: 64:     PORTB = 0xFF;
  1170   002500  68CB               	setf	203,c	;volatile
  1171   002502                     
  1172                           ; BSR set to: 58
  1173                           ;main.c: 67:     ANSELD = 0x00;
  1174   002502  6B70               	clrf	112,b	;volatile
  1175   002504                     
  1176                           ; BSR set to: 58
  1177                           ;main.c: 68:     TRISD = 0x00;
  1178   002504  6AC5               	clrf	197,c	;volatile
  1179   002506                     
  1180                           ; BSR set to: 58
  1181                           ;main.c: 69:     LATD = 0x00;
  1182   002506  6ABD               	clrf	189,c	;volatile
  1183   002508                     
  1184                           ; BSR set to: 58
  1185                           ;main.c: 70:     PORTD = 0x00;
  1186   002508  6ACD               	clrf	205,c	;volatile
  1187   00250A                     
  1188                           ; BSR set to: 58
  1189   00250A  0012               	return		;funcret
  1190   00250C                     __end_of_setup:
  1191                           	callstack 0
  1192                           
  1193 ;; *************** function _handleInput *****************
  1194 ;; Defined at:
  1195 ;;		line 166 in file "main.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  key             1    wreg     unsigned char 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  key             1   12[COMRAM] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1211 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1212 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1213 ;;Total ram usage:        3 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; Hardware stack levels required when called: 2
  1216 ;; This function calls:
  1217 ;;		_calculate
  1218 ;;		_resetAll
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text2
  1225   002002                     __ptext2:
  1226                           	callstack 0
  1227   002002                     _handleInput:
  1228                           	callstack 28
  1229                           
  1230                           ; BSR set to: 58
  1231                           ;incstack = 0
  1232                           ;handleInput@key stored from wreg
  1233   002002  6E0D               	movwf	handleInput@key^0,c
  1234   002004                     
  1235                           ;main.c: 168:     if (key >= '0' && key <= '9') {
  1236   002004  0E2F               	movlw	47
  1237   002006  640D               	cpfsgt	handleInput@key^0,c
  1238   002008  EF08  F010         	goto	u441
  1239   00200C  EF0A  F010         	goto	u440
  1240   002010                     u441:
  1241   002010  EF71  F010         	goto	l1073
  1242   002014                     u440:
  1243   002014  0E3A               	movlw	58
  1244   002016  600D               	cpfslt	handleInput@key^0,c
  1245   002018  EF10  F010         	goto	u451
  1246   00201C  EF12  F010         	goto	u450
  1247   002020                     u451:
  1248   002020  EF71  F010         	goto	l1073
  1249   002024                     u450:
  1250   002024                     
  1251                           ;main.c: 169:         if (isSecond == 0) {
  1252   002024  502D               	movf	_isSecond^0,w,c
  1253   002026  102E               	iorwf	(_isSecond+1)^0,w,c
  1254   002028  A4D8               	btfss	status,2,c
  1255   00202A  EF19  F010         	goto	u461
  1256   00202E  EF1B  F010         	goto	u460
  1257   002032                     u461:
  1258   002032  EF48  F010         	goto	l1065
  1259   002036                     u460:
  1260   002036                     
  1261                           ;main.c: 170:             X_Input_REG = (X_Input_REG * 10) + (key - '0');
  1262   002036  0E0A               	movlw	10
  1263   002038  0235               	mulwf	_X_Input_REG^0,c
  1264   00203A  006F FFCC  F00B    	movff	prodl,??_handleInput
  1265   002040  006F FFD0  F00C    	movff	prodh,??_handleInput+1
  1266   002046  0236               	mulwf	(_X_Input_REG+1)^0,c
  1267   002048  50F3               	movf	prodl,w,c
  1268   00204A  260C               	addwf	(??_handleInput+1)^0,f,c
  1269   00204C  500D               	movf	handleInput@key^0,w,c
  1270   00204E  260B               	addwf	??_handleInput^0,f,c
  1271   002050  0E00               	movlw	0
  1272   002052  220C               	addwfc	(??_handleInput+1)^0,f,c
  1273   002054  0ED0               	movlw	208
  1274   002056  240B               	addwf	??_handleInput^0,w,c
  1275   002058  6E35               	movwf	_X_Input_REG^0,c
  1276   00205A  0EFF               	movlw	255
  1277   00205C  200C               	addwfc	(??_handleInput+1)^0,w,c
  1278   00205E  6E36               	movwf	(_X_Input_REG+1)^0,c
  1279   002060                     
  1280                           ;main.c: 171:             digitCount++;
  1281   002060  4A2F               	infsnz	_digitCount^0,f,c
  1282   002062  2A30               	incf	(_digitCount+1)^0,f,c
  1283   002064                     
  1284                           ;main.c: 172:             if (digitCount == 2) {
  1285   002064  0E02               	movlw	2
  1286   002066  182F               	xorwf	_digitCount^0,w,c
  1287   002068  1030               	iorwf	(_digitCount+1)^0,w,c
  1288   00206A  A4D8               	btfss	status,2,c
  1289   00206C  EF3A  F010         	goto	u471
  1290   002070  EF3C  F010         	goto	u470
  1291   002074                     u471:
  1292   002074  EFB2  F010         	goto	l79
  1293   002078                     u470:
  1294   002078                     
  1295                           ;main.c: 173:                 isSecond = 1;
  1296   002078  0E00               	movlw	0
  1297   00207A  6E2E               	movwf	(_isSecond+1)^0,c
  1298   00207C  0E01               	movlw	1
  1299   00207E  6E2D               	movwf	_isSecond^0,c
  1300                           
  1301                           ;main.c: 174:                 digitCount = 0;
  1302   002080  0E00               	movlw	0
  1303   002082  6E30               	movwf	(_digitCount+1)^0,c
  1304   002084  0E00               	movlw	0
  1305   002086  6E2F               	movwf	_digitCount^0,c
  1306                           
  1307                           ;main.c: 175:                 PORTD = 0x01;
  1308   002088  0E01               	movlw	1
  1309   00208A  6ECD               	movwf	205,c	;volatile
  1310   00208C  EFB2  F010         	goto	l79
  1311   002090                     l1065:
  1312                           
  1313                           ;main.c: 178:             Y_Input_REG = (Y_Input_REG * 10) + (key - '0');
  1314   002090  0E0A               	movlw	10
  1315   002092  0233               	mulwf	_Y_Input_REG^0,c
  1316   002094  006F FFCC  F00B    	movff	prodl,??_handleInput
  1317   00209A  006F FFD0  F00C    	movff	prodh,??_handleInput+1
  1318   0020A0  0234               	mulwf	(_Y_Input_REG+1)^0,c
  1319   0020A2  50F3               	movf	prodl,w,c
  1320   0020A4  260C               	addwf	(??_handleInput+1)^0,f,c
  1321   0020A6  500D               	movf	handleInput@key^0,w,c
  1322   0020A8  260B               	addwf	??_handleInput^0,f,c
  1323   0020AA  0E00               	movlw	0
  1324   0020AC  220C               	addwfc	(??_handleInput+1)^0,f,c
  1325   0020AE  0ED0               	movlw	208
  1326   0020B0  240B               	addwf	??_handleInput^0,w,c
  1327   0020B2  6E33               	movwf	_Y_Input_REG^0,c
  1328   0020B4  0EFF               	movlw	255
  1329   0020B6  200C               	addwfc	(??_handleInput+1)^0,w,c
  1330   0020B8  6E34               	movwf	(_Y_Input_REG+1)^0,c
  1331   0020BA                     
  1332                           ;main.c: 179:             digitCount++;
  1333   0020BA  4A2F               	infsnz	_digitCount^0,f,c
  1334   0020BC  2A30               	incf	(_digitCount+1)^0,f,c
  1335   0020BE                     
  1336                           ;main.c: 180:             if (digitCount == 2) {
  1337   0020BE  0E02               	movlw	2
  1338   0020C0  182F               	xorwf	_digitCount^0,w,c
  1339   0020C2  1030               	iorwf	(_digitCount+1)^0,w,c
  1340   0020C4  A4D8               	btfss	status,2,c
  1341   0020C6  EF67  F010         	goto	u481
  1342   0020CA  EF69  F010         	goto	u480
  1343   0020CE                     u481:
  1344   0020CE  EFB2  F010         	goto	l79
  1345   0020D2                     u480:
  1346   0020D2                     
  1347                           ;main.c: 181:                 digitCount = 0;
  1348   0020D2  0E00               	movlw	0
  1349   0020D4  6E30               	movwf	(_digitCount+1)^0,c
  1350   0020D6  0E00               	movlw	0
  1351   0020D8  6E2F               	movwf	_digitCount^0,c
  1352                           
  1353                           ;main.c: 182:                 PORTD = 0x02;
  1354   0020DA  0E02               	movlw	2
  1355   0020DC  6ECD               	movwf	205,c	;volatile
  1356   0020DE  EFB2  F010         	goto	l79
  1357   0020E2                     l1073:
  1358   0020E2  0E41               	movlw	65
  1359   0020E4  180D               	xorwf	handleInput@key^0,w,c
  1360   0020E6  B4D8               	btfsc	status,2,c
  1361   0020E8  EF78  F010         	goto	u491
  1362   0020EC  EF7A  F010         	goto	u490
  1363   0020F0                     u491:
  1364   0020F0  EF95  F010         	goto	l74
  1365   0020F4                     u490:
  1366   0020F4  0E42               	movlw	66
  1367   0020F6  180D               	xorwf	handleInput@key^0,w,c
  1368   0020F8  B4D8               	btfsc	status,2,c
  1369   0020FA  EF81  F010         	goto	u501
  1370   0020FE  EF83  F010         	goto	u500
  1371   002102                     u501:
  1372   002102  EF95  F010         	goto	l74
  1373   002106                     u500:
  1374   002106  0E43               	movlw	67
  1375   002108  180D               	xorwf	handleInput@key^0,w,c
  1376   00210A  B4D8               	btfsc	status,2,c
  1377   00210C  EF8A  F010         	goto	u511
  1378   002110  EF8C  F010         	goto	u510
  1379   002114                     u511:
  1380   002114  EF95  F010         	goto	l74
  1381   002118                     u510:
  1382   002118  0E44               	movlw	68
  1383   00211A  180D               	xorwf	handleInput@key^0,w,c
  1384   00211C  A4D8               	btfss	status,2,c
  1385   00211E  EF93  F010         	goto	u521
  1386   002122  EF95  F010         	goto	u520
  1387   002126                     u521:
  1388   002126  EF99  F010         	goto	l1081
  1389   00212A                     u520:
  1390   00212A                     l74:
  1391                           
  1392                           ;main.c: 189:         Operation_REG = key;
  1393   00212A  C00D  F037         	movff	handleInput@key,_Operation_REG
  1394                           
  1395                           ;main.c: 190:     }
  1396   00212E  EFB2  F010         	goto	l79
  1397   002132                     l1081:
  1398   002132  0E23               	movlw	35
  1399   002134  180D               	xorwf	handleInput@key^0,w,c
  1400   002136  A4D8               	btfss	status,2,c
  1401   002138  EFA0  F010         	goto	u531
  1402   00213C  EFA2  F010         	goto	u530
  1403   002140                     u531:
  1404   002140  EFA7  F010         	goto	l1087
  1405   002144                     u530:
  1406   002144                     
  1407                           ;main.c: 194:         PORTD = 0x00;
  1408   002144  6ACD               	clrf	205,c	;volatile
  1409   002146                     
  1410                           ;main.c: 195:         calculate();
  1411   002146  EC30  F011         	call	_calculate	;wreg free
  1412                           
  1413                           ;main.c: 196:     }
  1414   00214A  EFB2  F010         	goto	l79
  1415   00214E                     l1087:
  1416   00214E  0E2A               	movlw	42
  1417   002150  180D               	xorwf	handleInput@key^0,w,c
  1418   002152  A4D8               	btfss	status,2,c
  1419   002154  EFAE  F010         	goto	u541
  1420   002158  EFB0  F010         	goto	u540
  1421   00215C                     u541:
  1422   00215C  EFB2  F010         	goto	l79
  1423   002160                     u540:
  1424   002160                     
  1425                           ;main.c: 200:         resetAll();
  1426   002160  EC54  F012         	call	_resetAll	;wreg free
  1427   002164                     l79:
  1428   002164  0012               	return		;funcret
  1429   002166                     __end_of_handleInput:
  1430                           	callstack 0
  1431                           
  1432 ;; *************** function _resetAll *****************
  1433 ;; Defined at:
  1434 ;;		line 118 in file "main.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;		None
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1452 ;;Total ram usage:        0 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		_handleInput
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text3
  1463   0024A8                     __ptext3:
  1464                           	callstack 0
  1465   0024A8                     _resetAll:
  1466                           	callstack 30
  1467   0024A8                     
  1468                           ;main.c: 119:     X_Input_REG = 0;
  1469   0024A8  0E00               	movlw	0
  1470   0024AA  6E36               	movwf	(_X_Input_REG+1)^0,c
  1471   0024AC  0E00               	movlw	0
  1472   0024AE  6E35               	movwf	_X_Input_REG^0,c
  1473                           
  1474                           ;main.c: 120:     Y_Input_REG = 0;
  1475   0024B0  0E00               	movlw	0
  1476   0024B2  6E34               	movwf	(_Y_Input_REG+1)^0,c
  1477   0024B4  0E00               	movlw	0
  1478   0024B6  6E33               	movwf	_Y_Input_REG^0,c
  1479                           
  1480                           ;main.c: 121:     Display_Result_REG = 0;
  1481   0024B8  0E00               	movlw	0
  1482   0024BA  6E32               	movwf	(_Display_Result_REG+1)^0,c
  1483   0024BC  0E00               	movlw	0
  1484   0024BE  6E31               	movwf	_Display_Result_REG^0,c
  1485   0024C0                     
  1486                           ;main.c: 122:     Operation_REG = 0;
  1487   0024C0  6A37               	clrf	_Operation_REG^0,c
  1488                           
  1489                           ;main.c: 123:     digitCount = 0;
  1490   0024C2  0E00               	movlw	0
  1491   0024C4  6E30               	movwf	(_digitCount+1)^0,c
  1492   0024C6  0E00               	movlw	0
  1493   0024C8  6E2F               	movwf	_digitCount^0,c
  1494                           
  1495                           ;main.c: 124:     isSecond = 0;
  1496   0024CA  0E00               	movlw	0
  1497   0024CC  6E2E               	movwf	(_isSecond+1)^0,c
  1498   0024CE  0E00               	movlw	0
  1499   0024D0  6E2D               	movwf	_isSecond^0,c
  1500   0024D2                     
  1501                           ;main.c: 125:     PORTD = 0x00;
  1502   0024D2  6ACD               	clrf	205,c	;volatile
  1503   0024D4  0012               	return		;funcret
  1504   0024D6                     __end_of_resetAll:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function _calculate *****************
  1508 ;; Defined at:
  1509 ;;		line 142 in file "main.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;		None
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1525 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1526 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1527 ;;Total ram usage:        2 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; Hardware stack levels required when called: 1
  1530 ;; This function calls:
  1531 ;;		___awdiv
  1532 ;;		_displayOnLEDs
  1533 ;; This function is called by:
  1534 ;;		_handleInput
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text4
  1539   002260                     __ptext4:
  1540                           	callstack 0
  1541   002260                     _calculate:
  1542                           	callstack 28
  1543   002260                     
  1544                           ;main.c: 143:     if (Operation_REG == 'A') Display_Result_REG = X_Input_REG + Y_Input_R
      +                          EG;
  1545   002260  0E41               	movlw	65
  1546   002262  1837               	xorwf	_Operation_REG^0,w,c
  1547   002264  A4D8               	btfss	status,2,c
  1548   002266  EF37  F011         	goto	u391
  1549   00226A  EF39  F011         	goto	u390
  1550   00226E                     u391:
  1551   00226E  EF41  F011         	goto	l1029
  1552   002272                     u390:
  1553   002272  5033               	movf	_Y_Input_REG^0,w,c
  1554   002274  2435               	addwf	_X_Input_REG^0,w,c
  1555   002276  6E31               	movwf	_Display_Result_REG^0,c
  1556   002278  5034               	movf	(_Y_Input_REG+1)^0,w,c
  1557   00227A  2036               	addwfc	(_X_Input_REG+1)^0,w,c
  1558   00227C  6E32               	movwf	(_Display_Result_REG+1)^0,c
  1559   00227E  EF90  F011         	goto	l57
  1560   002282                     l1029:
  1561   002282  0E42               	movlw	66
  1562   002284  1837               	xorwf	_Operation_REG^0,w,c
  1563   002286  A4D8               	btfss	status,2,c
  1564   002288  EF48  F011         	goto	u401
  1565   00228C  EF4A  F011         	goto	u400
  1566   002290                     u401:
  1567   002290  EF52  F011         	goto	l1033
  1568   002294                     u400:
  1569   002294  5033               	movf	_Y_Input_REG^0,w,c
  1570   002296  5C35               	subwf	_X_Input_REG^0,w,c
  1571   002298  6E31               	movwf	_Display_Result_REG^0,c
  1572   00229A  5034               	movf	(_Y_Input_REG+1)^0,w,c
  1573   00229C  5836               	subwfb	(_X_Input_REG+1)^0,w,c
  1574   00229E  6E32               	movwf	(_Display_Result_REG+1)^0,c
  1575   0022A0  EF90  F011         	goto	l57
  1576   0022A4                     l1033:
  1577   0022A4  0E43               	movlw	67
  1578   0022A6  1837               	xorwf	_Operation_REG^0,w,c
  1579   0022A8  A4D8               	btfss	status,2,c
  1580   0022AA  EF59  F011         	goto	u411
  1581   0022AE  EF5B  F011         	goto	u410
  1582   0022B2                     u411:
  1583   0022B2  EF70  F011         	goto	l1037
  1584   0022B6                     u410:
  1585   0022B6  5033               	movf	_Y_Input_REG^0,w,c
  1586   0022B8  0235               	mulwf	_X_Input_REG^0,c
  1587   0022BA  006F FFCC  F009    	movff	prodl,??_calculate
  1588   0022C0  006F FFD0  F00A    	movff	prodh,??_calculate+1
  1589   0022C6  0236               	mulwf	(_X_Input_REG+1)^0,c
  1590   0022C8  50F3               	movf	prodl,w,c
  1591   0022CA  260A               	addwf	(??_calculate+1)^0,f,c
  1592   0022CC  5034               	movf	(_Y_Input_REG+1)^0,w,c
  1593   0022CE  0235               	mulwf	_X_Input_REG^0,c
  1594   0022D0  50F3               	movf	prodl,w,c
  1595   0022D2  260A               	addwf	(??_calculate+1)^0,f,c
  1596   0022D4  C009  F031         	movff	??_calculate,_Display_Result_REG
  1597   0022D8  C00A  F032         	movff	??_calculate+1,_Display_Result_REG+1
  1598   0022DC  EF90  F011         	goto	l57
  1599   0022E0                     l1037:
  1600   0022E0  0E44               	movlw	68
  1601   0022E2  1837               	xorwf	_Operation_REG^0,w,c
  1602   0022E4  A4D8               	btfss	status,2,c
  1603   0022E6  EF77  F011         	goto	u421
  1604   0022EA  EF79  F011         	goto	u420
  1605   0022EE                     u421:
  1606   0022EE  EF90  F011         	goto	l57
  1607   0022F2                     u420:
  1608   0022F2  5033               	movf	_Y_Input_REG^0,w,c
  1609   0022F4  1034               	iorwf	(_Y_Input_REG+1)^0,w,c
  1610   0022F6  B4D8               	btfsc	status,2,c
  1611   0022F8  EF80  F011         	goto	u431
  1612   0022FC  EF82  F011         	goto	u430
  1613   002300                     u431:
  1614   002300  EF90  F011         	goto	l57
  1615   002304                     u430:
  1616   002304  C035  F001         	movff	_X_Input_REG,___awdiv@dividend
  1617   002308  C036  F002         	movff	_X_Input_REG+1,___awdiv@dividend+1
  1618   00230C  C033  F003         	movff	_Y_Input_REG,___awdiv@divisor
  1619   002310  C034  F004         	movff	_Y_Input_REG+1,___awdiv@divisor+1
  1620   002314  ECA7  F011         	call	___awdiv	;wreg free
  1621   002318  C001  F031         	movff	?___awdiv,_Display_Result_REG
  1622   00231C  C002  F032         	movff	?___awdiv+1,_Display_Result_REG+1
  1623   002320                     l57:
  1624                           
  1625                           ;main.c: 148:     displayOnLEDs(Display_Result_REG);
  1626   002320  C031  F001         	movff	_Display_Result_REG,displayOnLEDs@value
  1627   002324  C032  F002         	movff	_Display_Result_REG+1,displayOnLEDs@value+1
  1628   002328  EC6B  F012         	call	_displayOnLEDs	;wreg free
  1629   00232C                     
  1630                           ;main.c: 152:     X_Input_REG = 0;
  1631   00232C  0E00               	movlw	0
  1632   00232E  6E36               	movwf	(_X_Input_REG+1)^0,c
  1633   002330  0E00               	movlw	0
  1634   002332  6E35               	movwf	_X_Input_REG^0,c
  1635   002334                     
  1636                           ;main.c: 153:     Y_Input_REG = 0;
  1637   002334  0E00               	movlw	0
  1638   002336  6E34               	movwf	(_Y_Input_REG+1)^0,c
  1639   002338  0E00               	movlw	0
  1640   00233A  6E33               	movwf	_Y_Input_REG^0,c
  1641   00233C                     
  1642                           ;main.c: 154:     digitCount = 0;
  1643   00233C  0E00               	movlw	0
  1644   00233E  6E30               	movwf	(_digitCount+1)^0,c
  1645   002340  0E00               	movlw	0
  1646   002342  6E2F               	movwf	_digitCount^0,c
  1647   002344                     
  1648                           ;main.c: 155:     isSecond = 0;
  1649   002344  0E00               	movlw	0
  1650   002346  6E2E               	movwf	(_isSecond+1)^0,c
  1651   002348  0E00               	movlw	0
  1652   00234A  6E2D               	movwf	_isSecond^0,c
  1653   00234C  0012               	return		;funcret
  1654   00234E                     __end_of_calculate:
  1655                           	callstack 0
  1656                           
  1657 ;; *************** function _displayOnLEDs *****************
  1658 ;; Defined at:
  1659 ;;		line 132 in file "main.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  value           2    0[COMRAM] int 
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, status,2, status,0
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1673 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1676 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1677 ;;Total ram usage:        2 bytes
  1678 ;; Hardware stack levels used: 1
  1679 ;; This function calls:
  1680 ;;		Nothing
  1681 ;; This function is called by:
  1682 ;;		_calculate
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text5
  1687   0024D6                     __ptext5:
  1688                           	callstack 0
  1689   0024D6                     _displayOnLEDs:
  1690                           	callstack 28
  1691   0024D6                     
  1692                           ;main.c: 133:     if (value < 0)
  1693   0024D6  BE02               	btfsc	(displayOnLEDs@value+1)^0,7,c
  1694   0024D8  EF72  F012         	goto	u320
  1695   0024DC  EF70  F012         	goto	u321
  1696   0024E0                     u321:
  1697   0024E0  EF76  F012         	goto	l979
  1698   0024E4                     u320:
  1699   0024E4                     
  1700                           ;main.c: 134:         value = ~value + 1;
  1701   0024E4  6C01               	negf	displayOnLEDs@value^0,c
  1702   0024E6  1E02               	comf	(displayOnLEDs@value+1)^0,f,c
  1703   0024E8  B0D8               	btfsc	status,0,c
  1704   0024EA  2A02               	incf	(displayOnLEDs@value+1)^0,f,c
  1705   0024EC                     l979:
  1706                           
  1707                           ;main.c: 135:     PORTD = (char)value;
  1708   0024EC  0060  F007  FFCD   	movff	displayOnLEDs@value,16333	;volatile
  1709   0024F2  0012               	return		;funcret
  1710   0024F4                     __end_of_displayOnLEDs:
  1711                           	callstack 0
  1712                           
  1713 ;; *************** function ___awdiv *****************
  1714 ;; Defined at:
  1715 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  dividend        2    0[COMRAM] int 
  1718 ;;  divisor         2    2[COMRAM] int 
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  quotient        2    6[COMRAM] int 
  1721 ;;  sign            1    5[COMRAM] unsigned char 
  1722 ;;  counter         1    4[COMRAM] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  2    0[COMRAM] int 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1732 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1733 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1735 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1736 ;;Total ram usage:        8 bytes
  1737 ;; Hardware stack levels used: 1
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_calculate
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text6
  1746   00234E                     __ptext6:
  1747                           	callstack 0
  1748   00234E                     ___awdiv:
  1749                           	callstack 28
  1750   00234E  6A06               	clrf	___awdiv@sign^0,c
  1751   002350  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1752   002352  EFAF  F011         	goto	u330
  1753   002356  EFAD  F011         	goto	u331
  1754   00235A                     u331:
  1755   00235A  EFB5  F011         	goto	l989
  1756   00235E                     u330:
  1757   00235E  6C03               	negf	___awdiv@divisor^0,c
  1758   002360  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1759   002362  B0D8               	btfsc	status,0,c
  1760   002364  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1761   002366  0E01               	movlw	1
  1762   002368  6E06               	movwf	___awdiv@sign^0,c
  1763   00236A                     l989:
  1764   00236A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1765   00236C  EFBC  F011         	goto	u340
  1766   002370  EFBA  F011         	goto	u341
  1767   002374                     u341:
  1768   002374  EFC2  F011         	goto	l995
  1769   002378                     u340:
  1770   002378  6C01               	negf	___awdiv@dividend^0,c
  1771   00237A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1772   00237C  B0D8               	btfsc	status,0,c
  1773   00237E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1774   002380  0E01               	movlw	1
  1775   002382  1A06               	xorwf	___awdiv@sign^0,f,c
  1776   002384                     l995:
  1777   002384  0E00               	movlw	0
  1778   002386  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1779   002388  0E00               	movlw	0
  1780   00238A  6E07               	movwf	___awdiv@quotient^0,c
  1781   00238C  5003               	movf	___awdiv@divisor^0,w,c
  1782   00238E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1783   002390  B4D8               	btfsc	status,2,c
  1784   002392  EFCD  F011         	goto	u351
  1785   002396  EFCF  F011         	goto	u350
  1786   00239A                     u351:
  1787   00239A  EFF7  F011         	goto	l1017
  1788   00239E                     u350:
  1789   00239E  0E01               	movlw	1
  1790   0023A0  6E05               	movwf	___awdiv@counter^0,c
  1791   0023A2  EFD7  F011         	goto	l1003
  1792   0023A6                     l1001:
  1793   0023A6  90D8               	bcf	status,0,c
  1794   0023A8  3603               	rlcf	___awdiv@divisor^0,f,c
  1795   0023AA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1796   0023AC  2A05               	incf	___awdiv@counter^0,f,c
  1797   0023AE                     l1003:
  1798   0023AE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1799   0023B0  EFDC  F011         	goto	u361
  1800   0023B4  EFDE  F011         	goto	u360
  1801   0023B8                     u361:
  1802   0023B8  EFD3  F011         	goto	l1001
  1803   0023BC                     u360:
  1804   0023BC                     l1005:
  1805   0023BC  90D8               	bcf	status,0,c
  1806   0023BE  3607               	rlcf	___awdiv@quotient^0,f,c
  1807   0023C0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1808   0023C2  5003               	movf	___awdiv@divisor^0,w,c
  1809   0023C4  5C01               	subwf	___awdiv@dividend^0,w,c
  1810   0023C6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1811   0023C8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1812   0023CA  A0D8               	btfss	status,0,c
  1813   0023CC  EFEA  F011         	goto	u371
  1814   0023D0  EFEC  F011         	goto	u370
  1815   0023D4                     u371:
  1816   0023D4  EFF1  F011         	goto	l1013
  1817   0023D8                     u370:
  1818   0023D8  5003               	movf	___awdiv@divisor^0,w,c
  1819   0023DA  5E01               	subwf	___awdiv@dividend^0,f,c
  1820   0023DC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1821   0023DE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1822   0023E0  8007               	bsf	___awdiv@quotient^0,0,c
  1823   0023E2                     l1013:
  1824   0023E2  90D8               	bcf	status,0,c
  1825   0023E4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1826   0023E6  3203               	rrcf	___awdiv@divisor^0,f,c
  1827   0023E8  2E05               	decfsz	___awdiv@counter^0,f,c
  1828   0023EA  EFDE  F011         	goto	l1005
  1829   0023EE                     l1017:
  1830   0023EE  5006               	movf	___awdiv@sign^0,w,c
  1831   0023F0  B4D8               	btfsc	status,2,c
  1832   0023F2  EFFD  F011         	goto	u381
  1833   0023F6  EFFF  F011         	goto	u380
  1834   0023FA                     u381:
  1835   0023FA  EF03  F012         	goto	l1021
  1836   0023FE                     u380:
  1837   0023FE  6C07               	negf	___awdiv@quotient^0,c
  1838   002400  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1839   002402  B0D8               	btfsc	status,0,c
  1840   002404  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1841   002406                     l1021:
  1842   002406  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1843   00240A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1844   00240E  0012               	return		;funcret
  1845   002410                     __end_of___awdiv:
  1846                           	callstack 0
  1847                           
  1848 ;; *************** function _getKeyPressed *****************
  1849 ;; Defined at:
  1850 ;;		line 79 in file "main.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;		None
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  row             2   21[COMRAM] int 
  1855 ;;  keys           16    1[COMRAM] unsigned char [4][4]
  1856 ;;  row_values      4   17[COMRAM] unsigned char [4]
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      unsigned char 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1867 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1868 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1869 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1870 ;;Total ram usage:       23 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; This function calls:
  1873 ;;		Nothing
  1874 ;; This function is called by:
  1875 ;;		_main
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text7
  1880   002166                     __ptext7:
  1881                           	callstack 0
  1882   002166                     _getKeyPressed:
  1883                           	callstack 30
  1884   002166                     
  1885                           ;main.c: 80:     char keys[4][4] = {
  1886   002166  EE20  F019         	lfsr	2,getKeyPressed@F16022
  1887   00216A  EE10  F002         	lfsr	1,getKeyPressed@keys
  1888   00216E  0E0F               	movlw	15
  1889   002170                     u131:
  1890   002170  006F FF6F FFE3     	movff	plusw2,plusw1
  1891   002176  06E8               	decf	wreg,f,c
  1892   002178  E2FB               	bc	u131
  1893   00217A                     
  1894                           ;main.c: 88:     unsigned char row_values[4] = {0b11111110, 0b11111101, 0b11111011, 0b11
      +                          110111};
  1895   00217A  C029  F012         	movff	getKeyPressed@F16026,getKeyPressed@row_values
  1896   00217E  C02A  F013         	movff	getKeyPressed@F16026+1,getKeyPressed@row_values+1
  1897   002182  C02B  F014         	movff	getKeyPressed@F16026+2,getKeyPressed@row_values+2
  1898   002186  C02C  F015         	movff	getKeyPressed@F16026+3,getKeyPressed@row_values+3
  1899   00218A                     
  1900                           ;main.c: 90:     for (int row = 0; row < 4; row++) {
  1901   00218A  0E00               	movlw	0
  1902   00218C  6E17               	movwf	(getKeyPressed@row+1)^0,c
  1903   00218E  0E00               	movlw	0
  1904   002190  6E16               	movwf	getKeyPressed@row^0,c
  1905   002192                     l873:
  1906                           
  1907                           ;main.c: 91:         LATB = row_values[row];
  1908   002192  5016               	movf	getKeyPressed@row^0,w,c
  1909   002194  0F12               	addlw	low getKeyPressed@row_values
  1910   002196  6ED9               	movwf	fsr2l,c
  1911   002198  6ADA               	clrf	fsr2h,c
  1912   00219A  50DF               	movf	indf2,w,c
  1913   00219C  6EBB               	movwf	187,c	;volatile
  1914   00219E                     
  1915                           ;main.c: 96:         if (!PORTBbits.RB4) return keys[row][0];
  1916   00219E  B8CB               	btfsc	203,4,c	;volatile
  1917   0021A0  EFD4  F010         	goto	u141
  1918   0021A4  EFD6  F010         	goto	u140
  1919   0021A8                     u141:
  1920   0021A8  EFDF  F010         	goto	l30
  1921   0021AC                     u140:
  1922   0021AC  5016               	movf	getKeyPressed@row^0,w,c
  1923   0021AE  0D04               	mullw	4
  1924   0021B0  50F3               	movf	243,w,c
  1925   0021B2  0F02               	addlw	low getKeyPressed@keys
  1926   0021B4  6ED9               	movwf	fsr2l,c
  1927   0021B6  6ADA               	clrf	fsr2h,c
  1928   0021B8  50DF               	movf	indf2,w,c
  1929   0021BA  EF2F  F011         	goto	l31
  1930   0021BE                     l30:
  1931                           
  1932                           ;main.c: 97:         if (!PORTBbits.RB5) return keys[row][1];
  1933   0021BE  BACB               	btfsc	203,5,c	;volatile
  1934   0021C0  EFE4  F010         	goto	u151
  1935   0021C4  EFE6  F010         	goto	u150
  1936   0021C8                     u151:
  1937   0021C8  EFF4  F010         	goto	l32
  1938   0021CC                     u150:
  1939   0021CC  5016               	movf	getKeyPressed@row^0,w,c
  1940   0021CE  0D04               	mullw	4
  1941   0021D0  006F FFCC  F001    	movff	prodl,??_getKeyPressed
  1942   0021D6  0E01               	movlw	1
  1943   0021D8  2601               	addwf	??_getKeyPressed^0,f,c
  1944   0021DA  5001               	movf	??_getKeyPressed^0,w,c
  1945   0021DC  0F02               	addlw	low getKeyPressed@keys
  1946   0021DE  6ED9               	movwf	fsr2l,c
  1947   0021E0  6ADA               	clrf	fsr2h,c
  1948   0021E2  50DF               	movf	indf2,w,c
  1949   0021E4  EF2F  F011         	goto	l31
  1950   0021E8                     l32:
  1951                           
  1952                           ;main.c: 98:         if (!PORTBbits.RB6) return keys[row][2];
  1953   0021E8  BCCB               	btfsc	203,6,c	;volatile
  1954   0021EA  EFF9  F010         	goto	u161
  1955   0021EE  EFFB  F010         	goto	u160
  1956   0021F2                     u161:
  1957   0021F2  EF09  F011         	goto	l33
  1958   0021F6                     u160:
  1959   0021F6  5016               	movf	getKeyPressed@row^0,w,c
  1960   0021F8  0D04               	mullw	4
  1961   0021FA  006F FFCC  F001    	movff	prodl,??_getKeyPressed
  1962   002200  0E02               	movlw	2
  1963   002202  2601               	addwf	??_getKeyPressed^0,f,c
  1964   002204  5001               	movf	??_getKeyPressed^0,w,c
  1965   002206  0F02               	addlw	low getKeyPressed@keys
  1966   002208  6ED9               	movwf	fsr2l,c
  1967   00220A  6ADA               	clrf	fsr2h,c
  1968   00220C  50DF               	movf	indf2,w,c
  1969   00220E  EF2F  F011         	goto	l31
  1970   002212                     l33:
  1971                           
  1972                           ;main.c: 99:         if (!PORTBbits.RB7) return keys[row][3];
  1973   002212  BECB               	btfsc	203,7,c	;volatile
  1974   002214  EF0E  F011         	goto	u171
  1975   002218  EF10  F011         	goto	u170
  1976   00221C                     u171:
  1977   00221C  EF1E  F011         	goto	l893
  1978   002220                     u170:
  1979   002220  5016               	movf	getKeyPressed@row^0,w,c
  1980   002222  0D04               	mullw	4
  1981   002224  006F FFCC  F001    	movff	prodl,??_getKeyPressed
  1982   00222A  0E03               	movlw	3
  1983   00222C  2601               	addwf	??_getKeyPressed^0,f,c
  1984   00222E  5001               	movf	??_getKeyPressed^0,w,c
  1985   002230  0F02               	addlw	low getKeyPressed@keys
  1986   002232  6ED9               	movwf	fsr2l,c
  1987   002234  6ADA               	clrf	fsr2h,c
  1988   002236  50DF               	movf	indf2,w,c
  1989   002238  EF2F  F011         	goto	l31
  1990   00223C                     l893:
  1991                           
  1992                           ;main.c: 100:     }
  1993   00223C  4A16               	infsnz	getKeyPressed@row^0,f,c
  1994   00223E  2A17               	incf	(getKeyPressed@row+1)^0,f,c
  1995   002240  BE17               	btfsc	(getKeyPressed@row+1)^0,7,c
  1996   002242  EF2C  F011         	goto	u181
  1997   002246  5017               	movf	(getKeyPressed@row+1)^0,w,c
  1998   002248  E109               	bnz	u180
  1999   00224A  0E04               	movlw	4
  2000   00224C  5C16               	subwf	getKeyPressed@row^0,w,c
  2001   00224E  A0D8               	btfss	status,0,c
  2002   002250  EF2C  F011         	goto	u181
  2003   002254  EF2E  F011         	goto	u180
  2004   002258                     u181:
  2005   002258  EFC9  F010         	goto	l873
  2006   00225C                     u180:
  2007   00225C                     
  2008                           ;main.c: 102:     return 0;
  2009   00225C  0E00               	movlw	0
  2010   00225E                     l31:
  2011   00225E  0012               	return		;funcret
  2012   002260                     __end_of_getKeyPressed:
  2013                           	callstack 0
  2014                           
  2015                           	psect	smallconst
  2016   002000                     __psmallconst:
  2017                           	callstack 0
  2018   002000  00                 	db	0
  2019   002001  00                 	db	0	; dummy byte at the end
  2020   002000                     __smallconst    set	__psmallconst
  2021   002000                     __mediumconst   set	__psmallconst
  2022   000000                     __activetblptr  equ	0
  2023                           
  2024                           	psect	rparam
  2025   000001                     ___rparam_used  equ	1
  2026   000000                     ___param_bank   equ	0
  2027   000000                     __Lparam        equ	__Lrparam
  2028   000000                     __Hparam        equ	__Hrparam
  2029                           
  2030                           	psect	config
  2031                           
  2032                           ;Config register CONFIG1L @ 0x300000
  2033                           ;	External Oscillator Selection
  2034                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  2035                           ;	Reset Oscillator Selection
  2036                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2037   300000                     	org	3145728
  2038   300000  F8                 	db	248
  2039                           
  2040                           ;Config register CONFIG1H @ 0x300001
  2041                           ;	Clock out Enable bit
  2042                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2043                           ;	PRLOCKED One-Way Set Enable bit
  2044                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  2045                           ;	Clock Switch Enable bit
  2046                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2047                           ;	Fail-Safe Clock Monitor Enable bit
  2048                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2049   300001                     	org	3145729
  2050   300001  FF                 	db	255
  2051                           
  2052                           ;Config register CONFIG2L @ 0x300002
  2053                           ;	MCLR Enable bit
  2054                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2055                           ;	Power-up timer selection bits
  2056                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2057                           ;	Multi-vector enable bit
  2058                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2059                           ;	IVTLOCK bit One-way set enable bit
  2060                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2061                           ;	Low Power BOR Enable bit
  2062                           ;	LPBOREN = OFF, ULPBOR disabled
  2063                           ;	Brown-out Reset Enable bits
  2064                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2065   300002                     	org	3145730
  2066   300002  FF                 	db	255
  2067                           
  2068                           ;Config register CONFIG2H @ 0x300003
  2069                           ;	Brown-out Reset Voltage Selection bits
  2070                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2071                           ;	ZCD Disable bit
  2072                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2073                           ;	PPSLOCK bit One-Way Set Enable bit
  2074                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2075                           ;	Stack Full/Underflow Reset Enable bit
  2076                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2077                           ;	Debugger Enable bit
  2078                           ;	DEBUG = OFF, Background debugger disabled
  2079                           ;	Extended Instruction Set Enable bit
  2080                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2081   300003                     	org	3145731
  2082   300003  FF                 	db	255
  2083                           
  2084                           ;Config register CONFIG3L @ 0x300004
  2085                           ;	WDT Period selection bits
  2086                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2087                           ;	WDT operating mode
  2088                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2089   300004                     	org	3145732
  2090   300004  9F                 	db	159
  2091                           
  2092                           ;Config register CONFIG3H @ 0x300005
  2093                           ;	WDT Window Select bits
  2094                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2095                           ;	WDT input clock selector
  2096                           ;	WDTCCS = SC, Software Control
  2097   300005                     	org	3145733
  2098   300005  FF                 	db	255
  2099                           
  2100                           ;Config register CONFIG4L @ 0x300006
  2101                           ;	Boot Block Size selection bits
  2102                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2103                           ;	Boot Block enable bit
  2104                           ;	BBEN = OFF, Boot block disabled
  2105                           ;	Storage Area Flash enable bit
  2106                           ;	SAFEN = OFF, SAF disabled
  2107                           ;	Application Block write protection bit
  2108                           ;	WRTAPP = OFF, Application Block not write protected
  2109   300006                     	org	3145734
  2110   300006  FF                 	db	255
  2111                           
  2112                           ;Config register CONFIG4H @ 0x300007
  2113                           ;	Boot Block Write Protection bit
  2114                           ;	WRTB = OFF, Boot Block not write-protected
  2115                           ;	Configuration Register Write Protection bit
  2116                           ;	WRTC = OFF, Configuration registers not write-protected
  2117                           ;	Data EEPROM Write Protection bit
  2118                           ;	WRTD = OFF, Data EEPROM not write-protected
  2119                           ;	SAF Write protection bit
  2120                           ;	WRTSAF = OFF, SAF not Write Protected
  2121                           ;	Low Voltage Programming Enable bit
  2122                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2123   300007                     	org	3145735
  2124   300007  FF                 	db	255
  2125                           
  2126                           ;Config register CONFIG5L @ 0x300008
  2127                           ;	PFM and Data EEPROM Code Protection bit
  2128                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2129   300008                     	org	3145736
  2130   300008  FF                 	db	255
  2131                           
  2132                           ;Config register CONFIG5H @ 0x300009
  2133                           ;	unspecified, using default values
  2134   300009                     	org	3145737
  2135   300009  FF                 	db	255
  2136                           tosu	equ	0x3FFF
  2137                           tosh	equ	0x3FFE
  2138                           tosl	equ	0x3FFD
  2139                           stkptr	equ	0x3FFC
  2140                           pclatu	equ	0x3FFB
  2141                           pclath	equ	0x3FFA
  2142                           pcl	equ	0x3FF9
  2143                           tblptru	equ	0x3FF8
  2144                           tblptrh	equ	0x3FF7
  2145                           tblptrl	equ	0x3FF6
  2146                           tablat	equ	0x3FF5
  2147                           prodh	equ	0x3FF4
  2148                           prodl	equ	0x3FF3
  2149                           indf0	equ	0x3FEF
  2150                           postinc0	equ	0x3FEE
  2151                           postdec0	equ	0x3FED
  2152                           preinc0	equ	0x3FEC
  2153                           plusw0	equ	0x3FEB
  2154                           fsr0h	equ	0x3FEA
  2155                           fsr0l	equ	0x3FE9
  2156                           wreg	equ	0x3FE8
  2157                           indf1	equ	0x3FE7
  2158                           postinc1	equ	0x3FE6
  2159                           postdec1	equ	0x3FE5
  2160                           preinc1	equ	0x3FE4
  2161                           plusw1	equ	0x3FE3
  2162                           fsr1h	equ	0x3FE2
  2163                           fsr1l	equ	0x3FE1
  2164                           bsr	equ	0x3FE0
  2165                           indf2	equ	0x3FDF
  2166                           postinc2	equ	0x3FDE
  2167                           postdec2	equ	0x3FDD
  2168                           preinc2	equ	0x3FDC
  2169                           plusw2	equ	0x3FDB
  2170                           fsr2h	equ	0x3FDA
  2171                           fsr2l	equ	0x3FD9
  2172                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      55
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_getKeyPressed
    _handleInput->_calculate
    _calculate->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1052
                                             23 COMRAM     1     1      0
                      _getKeyPressed
                        _handleInput
                           _resetAll
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handleInput                                          3     3      0     689
                                             10 COMRAM     3     3      0
                          _calculate
                           _resetAll
 ---------------------------------------------------------------------------------
 (1) _resetAll                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculate                                            2     2      0     370
                                              8 COMRAM     2     2      0
                            ___awdiv
                      _displayOnLEDs
 ---------------------------------------------------------------------------------
 (3) _displayOnLEDs                                        2     0      2      68
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                       23    23      0     180
                                              0 COMRAM    23    23      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getKeyPressed
   _handleInput
     _calculate
       ___awdiv
       _displayOnLEDs
     _resetAll
   _resetAll
   _setup

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRllh      1386      0       0      0.0%
BITBIGSFRlll       592      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     24      55     57.9%
BITBIGSFRh          52      0       0      0.0%
BITBIGSFRlh         15      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      55      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 08 14:38:42 2025

                     l21 250A                       l30 21BE                       l31 225E  
                     l32 21E8                       l33 2212                       l53 24F2  
                     l63 234C                       l57 2320                       l49 24D4  
                     l74 212A                       l79 2164             ___awdiv@sign 0006  
       getKeyPressed@row 0016                      l325 240E                      l821 24D2  
                    l817 24A8                      l819 24C0                      l851 24F8  
                    l861 2508                      l853 2500                      l863 2166  
                    l855 2502                      l881 21CC                      l873 2192  
                    l865 217A                      l857 2504                      l849 24F4  
                    l875 219E                      l867 218A                      l859 2506  
                    l893 223C                      l885 21F6                      l877 21AC  
                    l981 234E                      l895 2240                      l991 2378  
                    l983 2350                      l975 24D6                      l897 225C  
                    l889 2220                      l993 2380                      l985 235E  
                    l977 24E4                      l995 2384                      l987 2366  
                    l979 24EC                      l997 238C                      l989 236A  
                    l999 239E                      u131 2170                      u140 21AC  
                    u141 21A8                      u150 21CC                      u151 21C8  
                    u160 21F6                      u320 24E4                      u400 2294  
                    u161 21F2                      u321 24E0                      u401 2290  
                    u170 2220                      u330 235E                      u410 22B6  
                    u171 221C                      u331 235A                      u411 22B2  
                    u180 225C                      u340 2378                      u420 22F2  
                    u500 2106                      u181 2258                      u341 2374  
                    u421 22EE                      u501 2102                      u350 239E  
                    u430 2304                      u510 2118                      u351 239A  
                    u431 2300                      u511 2114                      u360 23BC  
                    u520 212A                      u440 2014                      u361 23B8  
                    u521 2126                      u441 2010                      u370 23D8  
                    u530 2144                      u450 2024                      u371 23D4  
                    u531 2140                      u451 2020                      u380 23FE  
                    u540 2160                      u460 2036                      u381 23FA  
                    u541 215C                      u461 2032                      u390 2272  
                    u470 2078                      u550 2452                      u391 226E  
                    u471 2074                      u551 244E                      u480 20D2  
                    u560 246C                      u481 20CE                      u561 2468  
                    u490 20F4                      u491 20F0                      wreg 3FE8  
         ?_displayOnLEDs 0001        getKeyPressed@keys 0002                     l1001 23A6  
                   l1011 23E0                     l1003 23AE                     l1021 2406  
                   l1013 23E2                     l1005 23BC                     l1101 2424  
                   l1015 23E8                     l1007 23C2                     l1031 2294  
                   l1111 2430                     l1103 2424                     l1009 23D8  
                   l1017 23EE                     l1041 2304                     l1033 22A4  
                   l1025 2260                     l1121 2452                     l1113 2436  
                   l1105 242A                     l1019 23FE                     l1043 232C  
                   l1035 22B6                     l1027 2272                     l1051 2004  
                   l1123 2458                     l1115 2436                     l1107 242A  
                   l1045 2334                     l1037 22E0                     l1029 2282  
                   l1061 2064                     l1053 2014                     l1117 243C  
                   l1109 2430                     l1047 233C                     l1039 22F2  
                   l1071 20D2                     l1063 2078                     l1055 2024  
                   l1119 2442                     l1049 2344                     l1081 2132  
                   l1057 2036                     l1065 2090                     l1073 20E2  
                   l1083 2144                     l1075 20F4                     l1067 20BA  
                   l1059 2060                     l1091 2410                     l1085 2146  
                   l1077 2106                     l1069 20BE                     l1093 2418  
                   l1087 214E                     l1079 2118                     l1095 2418  
                   l1089 2160                     l1097 241E                     l1099 241E  
                   _LATB 3FBB                     _LATD 3FBD                     _main 2410  
                   fsr2h 3FDA                     indf2 3FDF                     fsr1l 3FE1  
                   fsr2l 3FD9                     prodh 3FF4                     prodl 3FF3  
                   start FFFC             ___param_bank 0000                    ?_main 0001  
        __end_of___awdiv 2410          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  _PORTB 3FCB                    _PORTD 3FCD                    _TRISB 3FC3  
                  _TRISD 3FC5                    _setup 24F4      getKeyPressed@F16022 0019  
    getKeyPressed@F16026 0029                    tablat 3FF5                    plusw1 3FE3  
                  plusw2 3FDB                    status 3FD8          __initialization 2474  
           __end_of_main 2474                   ??_main 0018          ??_displayOnLEDs 0003  
          __activetblptr 0000         ___awdiv@dividend 0001                   ?_setup 0001  
                 _ANSELB 3A50                   _ANSELD 3A70                ??___awdiv 0005  
                 clear_0 249C         ___awdiv@quotient 0007                   isa$std 0001  
       __end_of_resetAll 24D6             __pdataCOMRAM 0019             __mediumconst 2000  
                 tblptrh 3FF7                   tblptrl 3FF6                   tblptru 3FF8  
             __accesstop 0060  __end_of__initialization 24A2            ___rparam_used 0001  
         __pcstackCOMRAM 0001    __end_of_getKeyPressed 2260            __end_of_setup 250C  
            _X_Input_REG 0035              _Y_Input_REG 0033                  ??_setup 0001  
             _digitCount 002F        __end_of_calculate 234E                  __Hparam 0000  
              ?_resetAll 0001                  __Lparam 0000                  ___awdiv 234E  
           __psmallconst 2000                  __pcinit 2474                  __ramtop 2000  
                __ptext0 2410                  __ptext1 24F4                  __ptext2 2002  
                __ptext3 24A8                  __ptext4 2260                  __ptext5 24D6  
                __ptext6 234E                  __ptext7 2166     end_of_initialization 24A2  
             ??_resetAll 0001                  postdec1 3FE5                  postinc0 3FEE  
              _PORTBbits 3FCB            ??_handleInput 000B    __end_of_displayOnLEDs 24F4  
     displayOnLEDs@value 0001               main@key_93 0018            __pidataCOMRAM 250C  
          _Operation_REG 0037      start_initialization 2474      __end_of_handleInput 2166  
         handleInput@key 000D              __pbssCOMRAM 002D  getKeyPressed@row_values 0012  
              _calculate 2260                 ?___awdiv 0001              __smallconst 2000  
            _handleInput 2002               ?_calculate 0001            _getKeyPressed 2166  
              copy_data0 2488                 __Hrparam 0000                 __Lrparam 0000  
         ?_getKeyPressed 0001                 _isSecond 002D              ??_calculate 0009  
               _resetAll 24A8                 isa$xinst 0000       _Display_Result_REG 0031  
        ??_getKeyPressed 0001             ?_handleInput 0001            _displayOnLEDs 24D6  
