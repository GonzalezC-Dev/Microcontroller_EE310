

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 08 11:46:22 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F47K42 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   003FE0                     bsr             equ	16352
    58   003FE9                     fsr0            equ	16361
    59   003FEA                     fsr0h           equ	16362
    60   003FE9                     fsr0l           equ	16361
    61   003FE1                     fsr1            equ	16353
    62   003FE2                     fsr1h           equ	16354
    63   003FE1                     fsr1l           equ	16353
    64   003FD9                     fsr2            equ	16345
    65   003FDA                     fsr2h           equ	16346
    66   003FD9                     fsr2l           equ	16345
    67   003FEF                     indf0           equ	16367
    68   003FE7                     indf1           equ	16359
    69   003FDF                     indf2           equ	16351
    70   003FD2                     intcon          equ	16338
    71   0039E5                     nvmcon          equ	14821
    72   003FF9                     pcl             equ	16377
    73   003FFA                     pclath          equ	16378
    74   003FFB                     pclatu          equ	16379
    75   003FEB                     plusw0          equ	16363
    76   003FE3                     plusw1          equ	16355
    77   003FDB                     plusw2          equ	16347
    78   003FED                     postdec0        equ	16365
    79   003FE5                     postdec1        equ	16357
    80   003FDD                     postdec2        equ	16349
    81   003FEE                     postinc0        equ	16366
    82   003FE6                     postinc1        equ	16358
    83   003FDE                     postinc2        equ	16350
    84   003FEC                     preinc0         equ	16364
    85   003FE4                     preinc1         equ	16356
    86   003FDC                     preinc2         equ	16348
    87   003FF3                     prod            equ	16371
    88   003FF4                     prodh           equ	16372
    89   003FF3                     prodl           equ	16371
    90   003FD8                     status          equ	16344
    91   003FF5                     tablat          equ	16373
    92   003FF6                     tblptr          equ	16374
    93   003FF7                     tblptrh         equ	16375
    94   003FF6                     tblptrl         equ	16374
    95   003FF8                     tblptru         equ	16376
    96   003FFD                     tosl            equ	16381
    97   003FE8                     wreg            equ	16360
    98   003880                     STATUS_CSHAD    equ	14464	;# 
    99   003881                     WREG_CSHAD      equ	14465	;# 
   100   003882                     BSR_CSHAD       equ	14466	;# 
   101   003883                     SHADCON         equ	14467	;# 
   102   003884                     STATUS_SHAD     equ	14468	;# 
   103   003885                     WREG_SHAD       equ	14469	;# 
   104   003886                     BSR_SHAD        equ	14470	;# 
   105   003887                     PCLATH_SHAD     equ	14471	;# 
   106   003888                     PCLATU_SHAD     equ	14472	;# 
   107   003889                     FSR0SH          equ	14473	;# 
   108   003889                     FSR0L_SHAD      equ	14473	;# 
   109   00388A                     FSR0H_SHAD      equ	14474	;# 
   110   00388B                     FSR1SH          equ	14475	;# 
   111   00388B                     FSR1L_SHAD      equ	14475	;# 
   112   00388C                     FSR1H_SHAD      equ	14476	;# 
   113   00388D                     FSR2SH          equ	14477	;# 
   114   00388D                     FSR2L_SHAD      equ	14477	;# 
   115   00388E                     FSR2H_SHAD      equ	14478	;# 
   116   00388F                     PRODSH          equ	14479	;# 
   117   00388F                     PRODL_SHAD      equ	14479	;# 
   118   003890                     PRODH_SHAD      equ	14480	;# 
   119   00389D                     IVTADL          equ	14493	;# 
   120   00389E                     IVTADH          equ	14494	;# 
   121   00389F                     IVTADU          equ	14495	;# 
   122   00395B                     WDTCON0         equ	14683	;# 
   123   00395C                     WDTCON1         equ	14684	;# 
   124   00395D                     WDTPSL          equ	14685	;# 
   125   00395E                     WDTPSH          equ	14686	;# 
   126   00395F                     WDTTMR          equ	14687	;# 
   127   003960                     CRCDATA         equ	14688	;# 
   128   003960                     CRCDATL         equ	14688	;# 
   129   003961                     CRCDATH         equ	14689	;# 
   130   003962                     CRCACC          equ	14690	;# 
   131   003962                     CRCACCL         equ	14690	;# 
   132   003963                     CRCACCH         equ	14691	;# 
   133   003964                     CRCSHFT         equ	14692	;# 
   134   003964                     CRCSHIFTL       equ	14692	;# 
   135   003965                     CRCSHIFTH       equ	14693	;# 
   136   003966                     CRCXOR          equ	14694	;# 
   137   003966                     CRCXORL         equ	14694	;# 
   138   003967                     CRCXORH         equ	14695	;# 
   139   003968                     CRCCON0         equ	14696	;# 
   140   003969                     CRCCON1         equ	14697	;# 
   141   003976                     SCANLADR        equ	14710	;# 
   142   003976                     SCANLADRL       equ	14710	;# 
   143   003977                     SCANLADRH       equ	14711	;# 
   144   003978                     SCANLADRU       equ	14712	;# 
   145   003979                     SCANHADR        equ	14713	;# 
   146   003979                     SCANHADRL       equ	14713	;# 
   147   00397A                     SCANHADRH       equ	14714	;# 
   148   00397B                     SCANHADRU       equ	14715	;# 
   149   00397C                     SCANCON0        equ	14716	;# 
   150   00397D                     SCANTRIG        equ	14717	;# 
   151   003980                     IPR0            equ	14720	;# 
   152   003981                     IPR1            equ	14721	;# 
   153   003982                     IPR2            equ	14722	;# 
   154   003983                     IPR3            equ	14723	;# 
   155   003984                     IPR4            equ	14724	;# 
   156   003985                     IPR5            equ	14725	;# 
   157   003986                     IPR6            equ	14726	;# 
   158   003987                     IPR7            equ	14727	;# 
   159   003988                     IPR8            equ	14728	;# 
   160   003989                     IPR9            equ	14729	;# 
   161   00398A                     IPR10           equ	14730	;# 
   162   003990                     PIE0            equ	14736	;# 
   163   003991                     PIE1            equ	14737	;# 
   164   003992                     PIE2            equ	14738	;# 
   165   003993                     PIE3            equ	14739	;# 
   166   003994                     PIE4            equ	14740	;# 
   167   003995                     PIE5            equ	14741	;# 
   168   003996                     PIE6            equ	14742	;# 
   169   003997                     PIE7            equ	14743	;# 
   170   003998                     PIE8            equ	14744	;# 
   171   003999                     PIE9            equ	14745	;# 
   172   00399A                     PIE10           equ	14746	;# 
   173   0039A0                     PIR0            equ	14752	;# 
   174   0039A1                     PIR1            equ	14753	;# 
   175   0039A2                     PIR2            equ	14754	;# 
   176   0039A3                     PIR3            equ	14755	;# 
   177   0039A4                     PIR4            equ	14756	;# 
   178   0039A5                     PIR5            equ	14757	;# 
   179   0039A6                     PIR6            equ	14758	;# 
   180   0039A7                     PIR7            equ	14759	;# 
   181   0039A8                     PIR8            equ	14760	;# 
   182   0039A9                     PIR9            equ	14761	;# 
   183   0039AA                     PIR10           equ	14762	;# 
   184   0039C0                     PMD0            equ	14784	;# 
   185   0039C1                     PMD1            equ	14785	;# 
   186   0039C2                     PMD2            equ	14786	;# 
   187   0039C3                     PMD3            equ	14787	;# 
   188   0039C4                     PMD4            equ	14788	;# 
   189   0039C5                     PMD5            equ	14789	;# 
   190   0039C6                     PMD6            equ	14790	;# 
   191   0039C7                     PMD7            equ	14791	;# 
   192   0039D0                     BORCON          equ	14800	;# 
   193   0039D1                     VREGCON         equ	14801	;# 
   194   0039D8                     CPUDOZE         equ	14808	;# 
   195   0039D9                     OSCCON1         equ	14809	;# 
   196   0039DA                     OSCCON2         equ	14810	;# 
   197   0039DB                     OSCCON3         equ	14811	;# 
   198   0039DC                     OSCSTAT         equ	14812	;# 
   199   0039DC                     OSCSTAT1        equ	14812	;# 
   200   0039DD                     OSCEN           equ	14813	;# 
   201   0039DE                     OSCTUNE         equ	14814	;# 
   202   0039DF                     OSCFRQ          equ	14815	;# 
   203   0039E0                     NVMADRL         equ	14816	;# 
   204   0039E1                     NVMADRH         equ	14817	;# 
   205   0039E3                     NVMDAT          equ	14819	;# 
   206   0039E5                     NVMCON1         equ	14821	;# 
   207   0039E6                     NVMCON2         equ	14822	;# 
   208   0039EF                     PRLOCK          equ	14831	;# 
   209   0039F1                     ISRPR           equ	14833	;# 
   210   0039F2                     MAINPR          equ	14834	;# 
   211   0039F3                     DMA1PR          equ	14835	;# 
   212   0039F4                     DMA2PR          equ	14836	;# 
   213   0039F7                     SCANPR          equ	14839	;# 
   214   003A00                     RA0PPS          equ	14848	;# 
   215   003A01                     RA1PPS          equ	14849	;# 
   216   003A02                     RA2PPS          equ	14850	;# 
   217   003A03                     RA3PPS          equ	14851	;# 
   218   003A04                     RA4PPS          equ	14852	;# 
   219   003A05                     RA5PPS          equ	14853	;# 
   220   003A06                     RA6PPS          equ	14854	;# 
   221   003A07                     RA7PPS          equ	14855	;# 
   222   003A08                     RB0PPS          equ	14856	;# 
   223   003A09                     RB1PPS          equ	14857	;# 
   224   003A0A                     RB2PPS          equ	14858	;# 
   225   003A0B                     RB3PPS          equ	14859	;# 
   226   003A0C                     RB4PPS          equ	14860	;# 
   227   003A0D                     RB5PPS          equ	14861	;# 
   228   003A0E                     RB6PPS          equ	14862	;# 
   229   003A0F                     RB7PPS          equ	14863	;# 
   230   003A10                     RC0PPS          equ	14864	;# 
   231   003A11                     RC1PPS          equ	14865	;# 
   232   003A12                     RC2PPS          equ	14866	;# 
   233   003A13                     RC3PPS          equ	14867	;# 
   234   003A14                     RC4PPS          equ	14868	;# 
   235   003A15                     RC5PPS          equ	14869	;# 
   236   003A16                     RC6PPS          equ	14870	;# 
   237   003A17                     RC7PPS          equ	14871	;# 
   238   003A18                     RD0PPS          equ	14872	;# 
   239   003A19                     RD1PPS          equ	14873	;# 
   240   003A1A                     RD2PPS          equ	14874	;# 
   241   003A1B                     RD3PPS          equ	14875	;# 
   242   003A1C                     RD4PPS          equ	14876	;# 
   243   003A1D                     RD5PPS          equ	14877	;# 
   244   003A1E                     RD6PPS          equ	14878	;# 
   245   003A1F                     RD7PPS          equ	14879	;# 
   246   003A20                     RE0PPS          equ	14880	;# 
   247   003A21                     RE1PPS          equ	14881	;# 
   248   003A22                     RE2PPS          equ	14882	;# 
   249   003A40                     ANSELA          equ	14912	;# 
   250   003A41                     WPUA            equ	14913	;# 
   251   003A42                     ODCONA          equ	14914	;# 
   252   003A43                     SLRCONA         equ	14915	;# 
   253   003A44                     INLVLA          equ	14916	;# 
   254   003A45                     IOCAP           equ	14917	;# 
   255   003A46                     IOCAN           equ	14918	;# 
   256   003A47                     IOCAF           equ	14919	;# 
   257   003A50                     ANSELB          equ	14928	;# 
   258   003A51                     WPUB            equ	14929	;# 
   259   003A52                     ODCONB          equ	14930	;# 
   260   003A53                     SLRCONB         equ	14931	;# 
   261   003A54                     INLVLB          equ	14932	;# 
   262   003A55                     IOCBP           equ	14933	;# 
   263   003A56                     IOCBN           equ	14934	;# 
   264   003A57                     IOCBF           equ	14935	;# 
   265   003A5A                     RB1I2C          equ	14938	;# 
   266   003A5B                     RB2I2C          equ	14939	;# 
   267   003A60                     ANSELC          equ	14944	;# 
   268   003A61                     WPUC            equ	14945	;# 
   269   003A62                     ODCONC          equ	14946	;# 
   270   003A63                     SLRCONC         equ	14947	;# 
   271   003A64                     INLVLC          equ	14948	;# 
   272   003A65                     IOCCP           equ	14949	;# 
   273   003A66                     IOCCN           equ	14950	;# 
   274   003A67                     IOCCF           equ	14951	;# 
   275   003A6A                     RC3I2C          equ	14954	;# 
   276   003A6B                     RC4I2C          equ	14955	;# 
   277   003A70                     ANSELD          equ	14960	;# 
   278   003A71                     WPUD            equ	14961	;# 
   279   003A72                     ODCOND          equ	14962	;# 
   280   003A73                     SLRCOND         equ	14963	;# 
   281   003A74                     INLVLD          equ	14964	;# 
   282   003A7A                     RD0I2C          equ	14970	;# 
   283   003A7B                     RD1I2C          equ	14971	;# 
   284   003A80                     ANSELE          equ	14976	;# 
   285   003A81                     WPUE            equ	14977	;# 
   286   003A82                     ODCONE          equ	14978	;# 
   287   003A83                     SLRCONE         equ	14979	;# 
   288   003A84                     INLVLE          equ	14980	;# 
   289   003A85                     IOCEP           equ	14981	;# 
   290   003A86                     IOCEN           equ	14982	;# 
   291   003A87                     IOCEF           equ	14983	;# 
   292   003ABF                     PPSLOCK         equ	15039	;# 
   293   003AC0                     INT0PPS         equ	15040	;# 
   294   003AC1                     INT1PPS         equ	15041	;# 
   295   003AC2                     INT2PPS         equ	15042	;# 
   296   003AC3                     T0CKIPPS        equ	15043	;# 
   297   003AC4                     T1CKIPPS        equ	15044	;# 
   298   003AC5                     T1GPPS          equ	15045	;# 
   299   003AC6                     T3CKIPPS        equ	15046	;# 
   300   003AC7                     T3GPPS          equ	15047	;# 
   301   003AC8                     T5CKIPPS        equ	15048	;# 
   302   003AC9                     T5GPPS          equ	15049	;# 
   303   003ACA                     T2INPPS         equ	15050	;# 
   304   003ACB                     T4INPPS         equ	15051	;# 
   305   003ACC                     T6INPPS         equ	15052	;# 
   306   003ACD                     CCP1PPS         equ	15053	;# 
   307   003ACE                     CCP2PPS         equ	15054	;# 
   308   003ACF                     CCP3PPS         equ	15055	;# 
   309   003AD0                     CCP4PPS         equ	15056	;# 
   310   003AD1                     SMT1WINPPS      equ	15057	;# 
   311   003AD2                     SMT1SIGPPS      equ	15058	;# 
   312   003AD3                     CWG1INPPS       equ	15059	;# 
   313   003AD4                     CWG2INPPS       equ	15060	;# 
   314   003AD5                     CWG3INPPS       equ	15061	;# 
   315   003AD6                     MD1CARLPPS      equ	15062	;# 
   316   003AD7                     MD1CARHPPS      equ	15063	;# 
   317   003AD8                     MD1SRCPPS       equ	15064	;# 
   318   003AD9                     CLCIN0PPS       equ	15065	;# 
   319   003ADA                     CLCIN1PPS       equ	15066	;# 
   320   003ADB                     CLCIN2PPS       equ	15067	;# 
   321   003ADC                     CLCIN3PPS       equ	15068	;# 
   322   003ADD                     ADACTPPS        equ	15069	;# 
   323   003ADE                     SPI1SCKPPS      equ	15070	;# 
   324   003ADF                     SPI1SDIPPS      equ	15071	;# 
   325   003AE0                     SPI1SSPPS       equ	15072	;# 
   326   003AE1                     I2C1SCLPPS      equ	15073	;# 
   327   003AE2                     I2C1SDAPPS      equ	15074	;# 
   328   003AE3                     I2C2SCLPPS      equ	15075	;# 
   329   003AE4                     I2C2SDAPPS      equ	15076	;# 
   330   003AE5                     U1RXPPS         equ	15077	;# 
   331   003AE6                     U1CTSPPS        equ	15078	;# 
   332   003AE8                     U2RXPPS         equ	15080	;# 
   333   003AE9                     U2CTSPPS        equ	15081	;# 
   334   003BC9                     DMA2BUF         equ	15305	;# 
   335   003BCA                     DMA2DCNT        equ	15306	;# 
   336   003BCA                     DMA2DCNTL       equ	15306	;# 
   337   003BCB                     DMA2DCNTH       equ	15307	;# 
   338   003BCC                     DMA2DPTR        equ	15308	;# 
   339   003BCC                     DMA2DPTRL       equ	15308	;# 
   340   003BCD                     DMA2DPTRH       equ	15309	;# 
   341   003BCE                     DMA2DSZ         equ	15310	;# 
   342   003BCE                     DMA2DSZL        equ	15310	;# 
   343   003BCF                     DMA2DSZH        equ	15311	;# 
   344   003BD0                     DMA2DSA         equ	15312	;# 
   345   003BD0                     DMA2DSAL        equ	15312	;# 
   346   003BD1                     DMA2DSAH        equ	15313	;# 
   347   003BD2                     DMA2SCNT        equ	15314	;# 
   348   003BD2                     DMA2SCNTL       equ	15314	;# 
   349   003BD3                     DMA2SCNTH       equ	15315	;# 
   350   003BD4                     DMA2SPTR        equ	15316	;# 
   351   003BD4                     DMA2SPTRL       equ	15316	;# 
   352   003BD5                     DMA2SPTRH       equ	15317	;# 
   353   003BD6                     DMA2SPTRU       equ	15318	;# 
   354   003BD7                     DMA2SSZ         equ	15319	;# 
   355   003BD7                     DMA2SSZL        equ	15319	;# 
   356   003BD8                     DMA2SSZH        equ	15320	;# 
   357   003BD9                     DMA2SSA         equ	15321	;# 
   358   003BD9                     DMA2SSAL        equ	15321	;# 
   359   003BDA                     DMA2SSAH        equ	15322	;# 
   360   003BDB                     DMA2SSAU        equ	15323	;# 
   361   003BDC                     DMA2CON0        equ	15324	;# 
   362   003BDD                     DMA2CON1        equ	15325	;# 
   363   003BDE                     DMA2AIRQ        equ	15326	;# 
   364   003BDF                     DMA2SIRQ        equ	15327	;# 
   365   003BE9                     DMA1BUF         equ	15337	;# 
   366   003BEA                     DMA1DCNT        equ	15338	;# 
   367   003BEA                     DMA1DCNTL       equ	15338	;# 
   368   003BEB                     DMA1DCNTH       equ	15339	;# 
   369   003BEC                     DMA1DPTR        equ	15340	;# 
   370   003BEC                     DMA1DPTRL       equ	15340	;# 
   371   003BED                     DMA1DPTRH       equ	15341	;# 
   372   003BEE                     DMA1DSZ         equ	15342	;# 
   373   003BEE                     DMA1DSZL        equ	15342	;# 
   374   003BEF                     DMA1DSZH        equ	15343	;# 
   375   003BF0                     DMA1DSA         equ	15344	;# 
   376   003BF0                     DMA1DSAL        equ	15344	;# 
   377   003BF1                     DMA1DSAH        equ	15345	;# 
   378   003BF2                     DMA1SCNT        equ	15346	;# 
   379   003BF2                     DMA1SCNTL       equ	15346	;# 
   380   003BF3                     DMA1SCNTH       equ	15347	;# 
   381   003BF4                     DMA1SPTR        equ	15348	;# 
   382   003BF4                     DMA1SPTRL       equ	15348	;# 
   383   003BF5                     DMA1SPTRH       equ	15349	;# 
   384   003BF6                     DMA1SPTRU       equ	15350	;# 
   385   003BF7                     DMA1SSZ         equ	15351	;# 
   386   003BF7                     DMA1SSZL        equ	15351	;# 
   387   003BF8                     DMA1SSZH        equ	15352	;# 
   388   003BF9                     DMA1SSA         equ	15353	;# 
   389   003BF9                     DMA1SSAL        equ	15353	;# 
   390   003BFA                     DMA1SSAH        equ	15354	;# 
   391   003BFB                     DMA1SSAU        equ	15355	;# 
   392   003BFC                     DMA1CON0        equ	15356	;# 
   393   003BFD                     DMA1CON1        equ	15357	;# 
   394   003BFE                     DMA1AIRQ        equ	15358	;# 
   395   003BFF                     DMA1SIRQ        equ	15359	;# 
   396   003C56                     CLC4CON         equ	15446	;# 
   397   003C57                     CLC4POL         equ	15447	;# 
   398   003C58                     CLC4SEL0        equ	15448	;# 
   399   003C59                     CLC4SEL1        equ	15449	;# 
   400   003C5A                     CLC4SEL2        equ	15450	;# 
   401   003C5B                     CLC4SEL3        equ	15451	;# 
   402   003C5C                     CLC4GLS0        equ	15452	;# 
   403   003C5D                     CLC4GLS1        equ	15453	;# 
   404   003C5E                     CLC4GLS2        equ	15454	;# 
   405   003C5F                     CLC4GLS3        equ	15455	;# 
   406   003C60                     CLC3CON         equ	15456	;# 
   407   003C61                     CLC3POL         equ	15457	;# 
   408   003C62                     CLC3SEL0        equ	15458	;# 
   409   003C63                     CLC3SEL1        equ	15459	;# 
   410   003C64                     CLC3SEL2        equ	15460	;# 
   411   003C65                     CLC3SEL3        equ	15461	;# 
   412   003C66                     CLC3GLS0        equ	15462	;# 
   413   003C67                     CLC3GLS1        equ	15463	;# 
   414   003C68                     CLC3GLS2        equ	15464	;# 
   415   003C69                     CLC3GLS3        equ	15465	;# 
   416   003C6A                     CLC2CON         equ	15466	;# 
   417   003C6B                     CLC2POL         equ	15467	;# 
   418   003C6C                     CLC2SEL0        equ	15468	;# 
   419   003C6D                     CLC2SEL1        equ	15469	;# 
   420   003C6E                     CLC2SEL2        equ	15470	;# 
   421   003C6F                     CLC2SEL3        equ	15471	;# 
   422   003C70                     CLC2GLS0        equ	15472	;# 
   423   003C71                     CLC2GLS1        equ	15473	;# 
   424   003C72                     CLC2GLS2        equ	15474	;# 
   425   003C73                     CLC2GLS3        equ	15475	;# 
   426   003C74                     CLC1CON         equ	15476	;# 
   427   003C75                     CLC1POL         equ	15477	;# 
   428   003C76                     CLC1SEL0        equ	15478	;# 
   429   003C77                     CLC1SEL1        equ	15479	;# 
   430   003C78                     CLC1SEL2        equ	15480	;# 
   431   003C79                     CLC1SEL3        equ	15481	;# 
   432   003C7A                     CLC1GLS0        equ	15482	;# 
   433   003C7B                     CLC1GLS1        equ	15483	;# 
   434   003C7C                     CLC1GLS2        equ	15484	;# 
   435   003C7D                     CLC1GLS3        equ	15485	;# 
   436   003C7E                     CLCDATA0        equ	15486	;# 
   437   003CE5                     CLKRCON         equ	15589	;# 
   438   003CE6                     CLKRCLK         equ	15590	;# 
   439   003CFA                     MD1CON0         equ	15610	;# 
   440   003CFB                     MD1CON1         equ	15611	;# 
   441   003CFC                     MD1SRC          equ	15612	;# 
   442   003CFD                     MD1CARL         equ	15613	;# 
   443   003CFE                     MD1CARH         equ	15614	;# 
   444   003D10                     SPI1RXB         equ	15632	;# 
   445   003D11                     SPI1TXB         equ	15633	;# 
   446   003D12                     SPI1TCNT        equ	15634	;# 
   447   003D12                     SPI1TCNTL       equ	15634	;# 
   448   003D13                     SPI1TCNTH       equ	15635	;# 
   449   003D14                     SPI1CON0        equ	15636	;# 
   450   003D15                     SPI1CON1        equ	15637	;# 
   451   003D16                     SPI1CON2        equ	15638	;# 
   452   003D17                     SPI1STATUS      equ	15639	;# 
   453   003D18                     SPI1TWIDTH      equ	15640	;# 
   454   003D19                     SPI1BAUD        equ	15641	;# 
   455   003D1A                     SPI1INTF        equ	15642	;# 
   456   003D1B                     SPI1INTE        equ	15643	;# 
   457   003D1C                     SPI1CLK         equ	15644	;# 
   458   003D54                     I2C2RXB         equ	15700	;# 
   459   003D55                     I2C2TXB         equ	15701	;# 
   460   003D56                     I2C2CNT         equ	15702	;# 
   461   003D57                     I2C2ADB0        equ	15703	;# 
   462   003D58                     I2C2ADB1        equ	15704	;# 
   463   003D59                     I2C2ADR0        equ	15705	;# 
   464   003D5A                     I2C2ADR1        equ	15706	;# 
   465   003D5B                     I2C2ADR2        equ	15707	;# 
   466   003D5C                     I2C2ADR3        equ	15708	;# 
   467   003D5D                     I2C2CON0        equ	15709	;# 
   468   003D5E                     I2C2CON1        equ	15710	;# 
   469   003D5F                     I2C2CON2        equ	15711	;# 
   470   003D60                     I2C2ERR         equ	15712	;# 
   471   003D61                     I2C2STAT0       equ	15713	;# 
   472   003D62                     I2C2STAT1       equ	15714	;# 
   473   003D63                     I2C2PIR         equ	15715	;# 
   474   003D64                     I2C2PIE         equ	15716	;# 
   475   003D65                     I2C2CLK         equ	15717	;# 
   476   003D66                     I2C2BTO         equ	15718	;# 
   477   003D6A                     I2C1RXB         equ	15722	;# 
   478   003D6B                     I2C1TXB         equ	15723	;# 
   479   003D6C                     I2C1CNT         equ	15724	;# 
   480   003D6D                     I2C1ADB0        equ	15725	;# 
   481   003D6E                     I2C1ADB1        equ	15726	;# 
   482   003D6F                     I2C1ADR0        equ	15727	;# 
   483   003D70                     I2C1ADR1        equ	15728	;# 
   484   003D71                     I2C1ADR2        equ	15729	;# 
   485   003D72                     I2C1ADR3        equ	15730	;# 
   486   003D73                     I2C1CON0        equ	15731	;# 
   487   003D74                     I2C1CON1        equ	15732	;# 
   488   003D75                     I2C1CON2        equ	15733	;# 
   489   003D76                     I2C1ERR         equ	15734	;# 
   490   003D77                     I2C1STAT0       equ	15735	;# 
   491   003D78                     I2C1STAT1       equ	15736	;# 
   492   003D79                     I2C1PIR         equ	15737	;# 
   493   003D7A                     I2C1PIE         equ	15738	;# 
   494   003D7B                     I2C1CLK         equ	15739	;# 
   495   003D7C                     I2C1BTO         equ	15740	;# 
   496   003DD0                     U2RXB           equ	15824	;# 
   497   003DD0                     U2RXBL          equ	15824	;# 
   498   003DD2                     U2TXB           equ	15826	;# 
   499   003DD2                     U2TXBL          equ	15826	;# 
   500   003DD4                     U2P1            equ	15828	;# 
   501   003DD4                     U2P1L           equ	15828	;# 
   502   003DD6                     U2P2            equ	15830	;# 
   503   003DD6                     U2P2L           equ	15830	;# 
   504   003DD8                     U2P3            equ	15832	;# 
   505   003DD8                     U2P3L           equ	15832	;# 
   506   003DDA                     U2CON0          equ	15834	;# 
   507   003DDB                     U2CON1          equ	15835	;# 
   508   003DDC                     U2CON2          equ	15836	;# 
   509   003DDD                     U2BRG           equ	15837	;# 
   510   003DDD                     U2BRGL          equ	15837	;# 
   511   003DDE                     U2BRGH          equ	15838	;# 
   512   003DDF                     U2FIFO          equ	15839	;# 
   513   003DE0                     U2UIR           equ	15840	;# 
   514   003DE1                     U2ERRIR         equ	15841	;# 
   515   003DE2                     U2ERRIE         equ	15842	;# 
   516   003DE8                     U1RXB           equ	15848	;# 
   517   003DE8                     U1RXBL          equ	15848	;# 
   518   003DE9                     U1RXCHK         equ	15849	;# 
   519   003DEA                     U1TXB           equ	15850	;# 
   520   003DEA                     U1TXBL          equ	15850	;# 
   521   003DEB                     U1TXCHK         equ	15851	;# 
   522   003DEC                     U1P1            equ	15852	;# 
   523   003DEC                     U1P1L           equ	15852	;# 
   524   003DED                     U1P1H           equ	15853	;# 
   525   003DEE                     U1P2            equ	15854	;# 
   526   003DEE                     U1P2L           equ	15854	;# 
   527   003DEF                     U1P2H           equ	15855	;# 
   528   003DF0                     U1P3            equ	15856	;# 
   529   003DF0                     U1P3L           equ	15856	;# 
   530   003DF1                     U1P3H           equ	15857	;# 
   531   003DF2                     U1CON0          equ	15858	;# 
   532   003DF3                     U1CON1          equ	15859	;# 
   533   003DF4                     U1CON2          equ	15860	;# 
   534   003DF5                     U1BRG           equ	15861	;# 
   535   003DF5                     U1BRGL          equ	15861	;# 
   536   003DF6                     U1BRGH          equ	15862	;# 
   537   003DF7                     U1FIFO          equ	15863	;# 
   538   003DF8                     U1UIR           equ	15864	;# 
   539   003DF9                     U1ERRIR         equ	15865	;# 
   540   003DFA                     U1ERRIE         equ	15866	;# 
   541   003E9C                     DAC1CON1        equ	16028	;# 
   542   003E9E                     DAC1CON0        equ	16030	;# 
   543   003EB8                     CM2CON0         equ	16056	;# 
   544   003EB9                     CM2CON1         equ	16057	;# 
   545   003EBA                     CM2NCH          equ	16058	;# 
   546   003EBB                     CM2PCH          equ	16059	;# 
   547   003EBC                     CM1CON0         equ	16060	;# 
   548   003EBD                     CM1CON1         equ	16061	;# 
   549   003EBE                     CM1NCH          equ	16062	;# 
   550   003EBF                     CM1PCH          equ	16063	;# 
   551   003EC0                     CMOUT           equ	16064	;# 
   552   003EC1                     FVRCON          equ	16065	;# 
   553   003EC3                     ZCDCON          equ	16067	;# 
   554   003EC9                     HLVDCON0        equ	16073	;# 
   555   003ECA                     HLVDCON1        equ	16074	;# 
   556   003ED7                     ADCP            equ	16087	;# 
   557   003EDE                     ADLTH           equ	16094	;# 
   558   003EDE                     ADLTHL          equ	16094	;# 
   559   003EDF                     ADLTHH          equ	16095	;# 
   560   003EE0                     ADUTH           equ	16096	;# 
   561   003EE0                     ADUTHL          equ	16096	;# 
   562   003EE1                     ADUTHH          equ	16097	;# 
   563   003EE2                     ADERR           equ	16098	;# 
   564   003EE2                     ADERRL          equ	16098	;# 
   565   003EE3                     ADERRH          equ	16099	;# 
   566   003EE4                     ADSTPT          equ	16100	;# 
   567   003EE4                     ADSTPTL         equ	16100	;# 
   568   003EE5                     ADSTPTH         equ	16101	;# 
   569   003EE6                     ADFLTR          equ	16102	;# 
   570   003EE6                     ADFLTRL         equ	16102	;# 
   571   003EE7                     ADFLTRH         equ	16103	;# 
   572   003EE8                     ADACC           equ	16104	;# 
   573   003EE8                     ADACCL          equ	16104	;# 
   574   003EE9                     ADACCH          equ	16105	;# 
   575   003EEA                     ADACCU          equ	16106	;# 
   576   003EEB                     ADCNT           equ	16107	;# 
   577   003EEC                     ADRPT           equ	16108	;# 
   578   003EED                     ADPREV          equ	16109	;# 
   579   003EED                     ADPREVL         equ	16109	;# 
   580   003EEE                     ADPREVH         equ	16110	;# 
   581   003EEF                     ADRES           equ	16111	;# 
   582   003EEF                     ADRESL          equ	16111	;# 
   583   003EF0                     ADRESH          equ	16112	;# 
   584   003EF1                     ADPCH           equ	16113	;# 
   585   003EF3                     ADACQ           equ	16115	;# 
   586   003EF3                     ADACQL          equ	16115	;# 
   587   003EF4                     ADACQH          equ	16116	;# 
   588   003EF5                     ADCAP           equ	16117	;# 
   589   003EF6                     ADPRE           equ	16118	;# 
   590   003EF6                     ADPREL          equ	16118	;# 
   591   003EF7                     ADPREH          equ	16119	;# 
   592   003EF8                     ADCON0          equ	16120	;# 
   593   003EF9                     ADCON1          equ	16121	;# 
   594   003EFA                     ADCON2          equ	16122	;# 
   595   003EFB                     ADCON3          equ	16123	;# 
   596   003EFC                     ADSTAT          equ	16124	;# 
   597   003EFD                     ADREF           equ	16125	;# 
   598   003EFE                     ADACT           equ	16126	;# 
   599   003EFF                     ADCLK           equ	16127	;# 
   600   003F12                     SMT1TMR         equ	16146	;# 
   601   003F12                     SMT1TMRL        equ	16146	;# 
   602   003F13                     SMT1TMRH        equ	16147	;# 
   603   003F14                     SMT1TMRU        equ	16148	;# 
   604   003F15                     SMT1CPR         equ	16149	;# 
   605   003F15                     SMT1CPRL        equ	16149	;# 
   606   003F16                     SMT1CPRH        equ	16150	;# 
   607   003F17                     SMT1CPRU        equ	16151	;# 
   608   003F18                     SMT1CPW         equ	16152	;# 
   609   003F18                     SMT1CPWL        equ	16152	;# 
   610   003F19                     SMT1CPWH        equ	16153	;# 
   611   003F1A                     SMT1CPWU        equ	16154	;# 
   612   003F1B                     SMT1PR          equ	16155	;# 
   613   003F1B                     SMT1PRL         equ	16155	;# 
   614   003F1C                     SMT1PRH         equ	16156	;# 
   615   003F1D                     SMT1PRU         equ	16157	;# 
   616   003F1E                     SMT1CON0        equ	16158	;# 
   617   003F1F                     SMT1CON1        equ	16159	;# 
   618   003F20                     SMT1STAT        equ	16160	;# 
   619   003F21                     SMT1CLK         equ	16161	;# 
   620   003F22                     SMT1SIG         equ	16162	;# 
   621   003F23                     SMT1WIN         equ	16163	;# 
   622   003F38                     NCO1ACC         equ	16184	;# 
   623   003F38                     NCO1ACCL        equ	16184	;# 
   624   003F39                     NCO1ACCH        equ	16185	;# 
   625   003F3A                     NCO1ACCU        equ	16186	;# 
   626   003F3B                     NCO1INC         equ	16187	;# 
   627   003F3B                     NCO1INCL        equ	16187	;# 
   628   003F3C                     NCO1INCH        equ	16188	;# 
   629   003F3D                     NCO1INCU        equ	16189	;# 
   630   003F3E                     NCO1CON         equ	16190	;# 
   631   003F3F                     NCO1CLK         equ	16191	;# 
   632   003F40                     CWG3CLK         equ	16192	;# 
   633   003F40                     CWG3CLKCON      equ	16192	;# 
   634   003F41                     CWG3ISM         equ	16193	;# 
   635   003F41                     CWG3DAT         equ	16193	;# 
   636   003F42                     CWG3DBR         equ	16194	;# 
   637   003F43                     CWG3DBF         equ	16195	;# 
   638   003F44                     CWG3CON0        equ	16196	;# 
   639   003F45                     CWG3CON1        equ	16197	;# 
   640   003F46                     CWG3AS0         equ	16198	;# 
   641   003F47                     CWG3AS1         equ	16199	;# 
   642   003F48                     CWG3STR         equ	16200	;# 
   643   003F49                     CWG2CLK         equ	16201	;# 
   644   003F49                     CWG2CLKCON      equ	16201	;# 
   645   003F4A                     CWG2ISM         equ	16202	;# 
   646   003F4A                     CWG2DAT         equ	16202	;# 
   647   003F4B                     CWG2DBR         equ	16203	;# 
   648   003F4C                     CWG2DBF         equ	16204	;# 
   649   003F4D                     CWG2CON0        equ	16205	;# 
   650   003F4E                     CWG2CON1        equ	16206	;# 
   651   003F4F                     CWG2AS0         equ	16207	;# 
   652   003F50                     CWG2AS1         equ	16208	;# 
   653   003F51                     CWG2STR         equ	16209	;# 
   654   003F52                     CWG1CLK         equ	16210	;# 
   655   003F52                     CWG1CLKCON      equ	16210	;# 
   656   003F53                     CWG1ISM         equ	16211	;# 
   657   003F53                     CWG1DAT         equ	16211	;# 
   658   003F54                     CWG1DBR         equ	16212	;# 
   659   003F55                     CWG1DBF         equ	16213	;# 
   660   003F56                     CWG1CON0        equ	16214	;# 
   661   003F57                     CWG1CON1        equ	16215	;# 
   662   003F58                     CWG1AS0         equ	16216	;# 
   663   003F59                     CWG1AS1         equ	16217	;# 
   664   003F5A                     CWG1STR         equ	16218	;# 
   665   003F5E                     CCPTMRS0        equ	16222	;# 
   666   003F5F                     CCPTMRS1        equ	16223	;# 
   667   003F60                     PWM8DC          equ	16224	;# 
   668   003F60                     PWM8DCL         equ	16224	;# 
   669   003F61                     PWM8DCH         equ	16225	;# 
   670   003F62                     PWM8CON         equ	16226	;# 
   671   003F64                     PWM7DC          equ	16228	;# 
   672   003F64                     PWM7DCL         equ	16228	;# 
   673   003F65                     PWM7DCH         equ	16229	;# 
   674   003F66                     PWM7CON         equ	16230	;# 
   675   003F68                     PWM6DC          equ	16232	;# 
   676   003F68                     PWM6DCL         equ	16232	;# 
   677   003F69                     PWM6DCH         equ	16233	;# 
   678   003F6A                     PWM6CON         equ	16234	;# 
   679   003F6C                     PWM5DC          equ	16236	;# 
   680   003F6C                     PWM5DCL         equ	16236	;# 
   681   003F6D                     PWM5DCH         equ	16237	;# 
   682   003F6E                     PWM5CON         equ	16238	;# 
   683   003F70                     CCPR4           equ	16240	;# 
   684   003F70                     CCPR4L          equ	16240	;# 
   685   003F71                     CCPR4H          equ	16241	;# 
   686   003F72                     CCP4CON         equ	16242	;# 
   687   003F73                     CCP4CAP         equ	16243	;# 
   688   003F74                     CCPR3           equ	16244	;# 
   689   003F74                     CCPR3L          equ	16244	;# 
   690   003F75                     CCPR3H          equ	16245	;# 
   691   003F76                     CCP3CON         equ	16246	;# 
   692   003F77                     CCP3CAP         equ	16247	;# 
   693   003F78                     CCPR2           equ	16248	;# 
   694   003F78                     CCPR2L          equ	16248	;# 
   695   003F79                     CCPR2H          equ	16249	;# 
   696   003F7A                     CCP2CON         equ	16250	;# 
   697   003F7B                     CCP2CAP         equ	16251	;# 
   698   003F7C                     CCPR1           equ	16252	;# 
   699   003F7C                     CCPR1L          equ	16252	;# 
   700   003F7D                     CCPR1H          equ	16253	;# 
   701   003F7E                     CCP1CON         equ	16254	;# 
   702   003F7F                     CCP1CAP         equ	16255	;# 
   703   003F92                     T6TMR           equ	16274	;# 
   704   003F92                     TMR6            equ	16274	;# 
   705   003F93                     T6PR            equ	16275	;# 
   706   003F93                     PR6             equ	16275	;# 
   707   003F94                     T6CON           equ	16276	;# 
   708   003F95                     T6HLT           equ	16277	;# 
   709   003F96                     T6CLKCON        equ	16278	;# 
   710   003F96                     T6CLK           equ	16278	;# 
   711   003F97                     T6RST           equ	16279	;# 
   712   003F98                     TMR5            equ	16280	;# 
   713   003F98                     TMR5L           equ	16280	;# 
   714   003F99                     TMR5H           equ	16281	;# 
   715   003F9A                     T5CON           equ	16282	;# 
   716   003F9A                     TMR5CON         equ	16282	;# 
   717   003F9B                     T5GCON          equ	16283	;# 
   718   003F9B                     TMR5GCON        equ	16283	;# 
   719   003F9C                     T5GATE          equ	16284	;# 
   720   003F9C                     TMR5GATE        equ	16284	;# 
   721   003F9D                     T5CLK           equ	16285	;# 
   722   003F9D                     TMR5CLK         equ	16285	;# 
   723   003F9D                     PR5             equ	16285	;# 
   724   003F9E                     T4TMR           equ	16286	;# 
   725   003F9E                     TMR4            equ	16286	;# 
   726   003F9F                     T4PR            equ	16287	;# 
   727   003F9F                     PR4             equ	16287	;# 
   728   003FA0                     T4CON           equ	16288	;# 
   729   003FA1                     T4HLT           equ	16289	;# 
   730   003FA2                     T4CLKCON        equ	16290	;# 
   731   003FA2                     T4CLK           equ	16290	;# 
   732   003FA3                     T4RST           equ	16291	;# 
   733   003FA4                     TMR3            equ	16292	;# 
   734   003FA4                     TMR3L           equ	16292	;# 
   735   003FA5                     TMR3H           equ	16293	;# 
   736   003FA6                     T3CON           equ	16294	;# 
   737   003FA6                     TMR3CON         equ	16294	;# 
   738   003FA7                     T3GCON          equ	16295	;# 
   739   003FA7                     TMR3GCON        equ	16295	;# 
   740   003FA8                     T3GATE          equ	16296	;# 
   741   003FA8                     TMR3GATE        equ	16296	;# 
   742   003FA9                     T3CLK           equ	16297	;# 
   743   003FA9                     TMR3CLK         equ	16297	;# 
   744   003FA9                     PR3             equ	16297	;# 
   745   003FAA                     T2TMR           equ	16298	;# 
   746   003FAA                     TMR2            equ	16298	;# 
   747   003FAB                     T2PR            equ	16299	;# 
   748   003FAB                     PR2             equ	16299	;# 
   749   003FAC                     T2CON           equ	16300	;# 
   750   003FAD                     T2HLT           equ	16301	;# 
   751   003FAE                     T2CLKCON        equ	16302	;# 
   752   003FAE                     T2CLK           equ	16302	;# 
   753   003FAF                     T2RST           equ	16303	;# 
   754   003FB0                     TMR1            equ	16304	;# 
   755   003FB0                     TMR1L           equ	16304	;# 
   756   003FB1                     TMR1H           equ	16305	;# 
   757   003FB2                     T1CON           equ	16306	;# 
   758   003FB2                     TMR1CON         equ	16306	;# 
   759   003FB3                     T1GCON          equ	16307	;# 
   760   003FB3                     TMR1GCON        equ	16307	;# 
   761   003FB4                     T1GATE          equ	16308	;# 
   762   003FB4                     TMR1GATE        equ	16308	;# 
   763   003FB5                     T1CLK           equ	16309	;# 
   764   003FB5                     TMR1CLK         equ	16309	;# 
   765   003FB5                     PR1             equ	16309	;# 
   766   003FB6                     TMR0L           equ	16310	;# 
   767   003FB6                     TMR0            equ	16310	;# 
   768   003FB7                     TMR0H           equ	16311	;# 
   769   003FB7                     PR0             equ	16311	;# 
   770   003FB8                     T0CON0          equ	16312	;# 
   771   003FB9                     T0CON1          equ	16313	;# 
   772   003FBA                     LATA            equ	16314	;# 
   773   003FBB                     LATB            equ	16315	;# 
   774   003FBC                     LATC            equ	16316	;# 
   775   003FBD                     LATD            equ	16317	;# 
   776   003FBE                     LATE            equ	16318	;# 
   777   003FC2                     TRISA           equ	16322	;# 
   778   003FC3                     TRISB           equ	16323	;# 
   779   003FC4                     TRISC           equ	16324	;# 
   780   003FC5                     TRISD           equ	16325	;# 
   781   003FC6                     TRISE           equ	16326	;# 
   782   003FCA                     PORTA           equ	16330	;# 
   783   003FCB                     PORTB           equ	16331	;# 
   784   003FCC                     PORTC           equ	16332	;# 
   785   003FCD                     PORTD           equ	16333	;# 
   786   003FCE                     PORTE           equ	16334	;# 
   787   003FD2                     INTCON0         equ	16338	;# 
   788   003FD3                     INTCON1         equ	16339	;# 
   789   003FD4                     IVTLOCK         equ	16340	;# 
   790   003FD5                     IVTBASE         equ	16341	;# 
   791   003FD5                     IVTBASEL        equ	16341	;# 
   792   003FD6                     IVTBASEH        equ	16342	;# 
   793   003FD7                     IVTBASEU        equ	16343	;# 
   794   003FD8                     STATUS          equ	16344	;# 
   795   003FD9                     FSR2            equ	16345	;# 
   796   003FD9                     FSR2L           equ	16345	;# 
   797   003FDA                     FSR2H           equ	16346	;# 
   798   003FDB                     PLUSW2          equ	16347	;# 
   799   003FDC                     PREINC2         equ	16348	;# 
   800   003FDD                     POSTDEC2        equ	16349	;# 
   801   003FDE                     POSTINC2        equ	16350	;# 
   802   003FDF                     INDF2           equ	16351	;# 
   803   003FE0                     BSR             equ	16352	;# 
   804   003FE1                     FSR1            equ	16353	;# 
   805   003FE1                     FSR1L           equ	16353	;# 
   806   003FE2                     FSR1H           equ	16354	;# 
   807   003FE3                     PLUSW1          equ	16355	;# 
   808   003FE4                     PREINC1         equ	16356	;# 
   809   003FE5                     POSTDEC1        equ	16357	;# 
   810   003FE6                     POSTINC1        equ	16358	;# 
   811   003FE7                     INDF1           equ	16359	;# 
   812   003FE8                     WREG            equ	16360	;# 
   813   003FE9                     FSR0            equ	16361	;# 
   814   003FE9                     FSR0L           equ	16361	;# 
   815   003FEA                     FSR0H           equ	16362	;# 
   816   003FEB                     PLUSW0          equ	16363	;# 
   817   003FEC                     PREINC0         equ	16364	;# 
   818   003FED                     POSTDEC0        equ	16365	;# 
   819   003FEE                     POSTINC0        equ	16366	;# 
   820   003FEF                     INDF0           equ	16367	;# 
   821   003FF0                     PCON0           equ	16368	;# 
   822   003FF1                     PCON1           equ	16369	;# 
   823   003FF3                     PROD            equ	16371	;# 
   824   003FF3                     PRODL           equ	16371	;# 
   825   003FF4                     PRODH           equ	16372	;# 
   826   003FF5                     TABLAT          equ	16373	;# 
   827   003FF6                     TBLPTR          equ	16374	;# 
   828   003FF6                     TBLPTRL         equ	16374	;# 
   829   003FF7                     TBLPTRH         equ	16375	;# 
   830   003FF8                     TBLPTRU         equ	16376	;# 
   831   003FF9                     PCLAT           equ	16377	;# 
   832   003FF9                     PCL             equ	16377	;# 
   833   003FFA                     PCLATH          equ	16378	;# 
   834   003FFB                     PCLATU          equ	16379	;# 
   835   003FFC                     STKPTR          equ	16380	;# 
   836   003FFD                     TOS             equ	16381	;# 
   837   003FFD                     TOSL            equ	16381	;# 
   838   003FFE                     TOSH            equ	16382	;# 
   839   003FFF                     TOSU            equ	16383	;# 
   840                           
   841                           	psect	idataCOMRAM
   842   002510                     __pidataCOMRAM:
   843                           	callstack 0
   844                           
   845                           ;initializer for getKeyPressed@F16022
   846   002510  31                 	db	49
   847   002511  32                 	db	50
   848   002512  33                 	db	51
   849   002513  41                 	db	65
   850   002514  34                 	db	52
   851   002515  35                 	db	53
   852   002516  36                 	db	54
   853   002517  42                 	db	66
   854   002518  37                 	db	55
   855   002519  38                 	db	56
   856   00251A  39                 	db	57
   857   00251B  43                 	db	67
   858   00251C  2A                 	db	42
   859   00251D  30                 	db	48
   860   00251E  23                 	db	35
   861   00251F  44                 	db	68
   862                           
   863                           ;initializer for getKeyPressed@F16026
   864   002520  FE                 	db	254
   865   002521  FD                 	db	253
   866   002522  FB                 	db	251
   867   002523  F7                 	db	247
   868   003A70                     _ANSELD         set	14960
   869   003A50                     _ANSELB         set	14928
   870   003FCB                     _PORTBbits      set	16331
   871   003FCD                     _PORTD          set	16333
   872   003FBD                     _LATD           set	16317
   873   003FC5                     _TRISD          set	16325
   874   003FCB                     _PORTB          set	16331
   875   003FC3                     _TRISB          set	16323
   876   003FBB                     _LATB           set	16315
   877                           
   878                           ; #config settings
   879                           
   880                           	psect	cinit
   881   002478                     __pcinit:
   882                           	callstack 0
   883   002478                     start_initialization:
   884                           	callstack 0
   885   002478                     __initialization:
   886                           	callstack 0
   887                           
   888                           ; Initialize objects allocated to COMRAM (20 bytes)
   889                           ; load TBLPTR registers with __pidataCOMRAM
   890   002478  0E10               	movlw	low __pidataCOMRAM
   891   00247A  6EF6               	movwf	tblptrl,c
   892   00247C  0E25               	movlw	high __pidataCOMRAM
   893   00247E  6EF7               	movwf	tblptrh,c
   894   002480  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   895   002482  6EF8               	movwf	tblptru,c
   896   002484  EE00  F01B         	lfsr	0,__pdataCOMRAM
   897   002488  EE10 F014          	lfsr	1,20
   898   00248C                     copy_data0:
   899   00248C  0009               	tblrd		*+
   900   00248E  006F FFD7 FFEE     	movff	tablat,postinc0
   901   002494  50E5               	movf	postdec1,w,c
   902   002496  50E1               	movf	fsr1l,w,c
   903   002498  E1F9               	bnz	copy_data0
   904                           
   905                           ; Clear objects allocated to COMRAM (11 bytes)
   906   00249A  EE00  F02F         	lfsr	0,__pbssCOMRAM
   907   00249E  0E0B               	movlw	11
   908   0024A0                     clear_0:
   909   0024A0  6AEE               	clrf	postinc0,c
   910   0024A2  06E8               	decf	wreg,f,c
   911   0024A4  E1FD               	bnz	clear_0
   912   0024A6                     end_of_initialization:
   913                           	callstack 0
   914   0024A6                     __end_of__initialization:
   915                           	callstack 0
   916   0024A6  0100               	movlb	0
   917   0024A8  EF10  F012         	goto	_main	;jump to C main() function
   918                           
   919                           	psect	bssCOMRAM
   920   00002F                     __pbssCOMRAM:
   921                           	callstack 0
   922   00002F                     _isSecond:
   923                           	callstack 0
   924   00002F                     	ds	2
   925   000031                     _digitCount:
   926                           	callstack 0
   927   000031                     	ds	2
   928   000033                     _Display_Result_REG:
   929                           	callstack 0
   930   000033                     	ds	2
   931   000035                     _Y_Input_REG:
   932                           	callstack 0
   933   000035                     	ds	2
   934   000037                     _X_Input_REG:
   935                           	callstack 0
   936   000037                     	ds	2
   937   000039                     _Operation_REG:
   938                           	callstack 0
   939   000039                     	ds	1
   940                           
   941                           	psect	dataCOMRAM
   942   00001B                     __pdataCOMRAM:
   943                           	callstack 0
   944   00001B                     getKeyPressed@F16022:
   945                           	callstack 0
   946   00001B                     	ds	16
   947   00002B                     getKeyPressed@F16026:
   948                           	callstack 0
   949   00002B                     	ds	4
   950                           
   951                           	psect	cstackCOMRAM
   952   000001                     __pcstackCOMRAM:
   953                           	callstack 0
   954   000001                     ?___awdiv:
   955                           	callstack 0
   956   000001                     displayOnLEDs@value:
   957                           	callstack 0
   958   000001                     ___awdiv@dividend:
   959                           	callstack 0
   960   000001                     ??_getKeyPressed:
   961   000001                     
   962                           ; 1 bytes @ 0x0
   963   000001                     	ds	1
   964   000002                     getKeyPressed@keys:
   965                           	callstack 0
   966                           
   967                           ; 16 bytes @ 0x1
   968   000002                     	ds	1
   969   000003                     ___awdiv@divisor:
   970                           	callstack 0
   971   000003                     
   972                           ; 1 bytes @ 0x2
   973   000003                     	ds	2
   974   000005                     ___awdiv@counter:
   975                           	callstack 0
   976   000005                     
   977                           ; 1 bytes @ 0x4
   978   000005                     	ds	1
   979   000006                     ___awdiv@sign:
   980                           	callstack 0
   981                           
   982                           ; 1 bytes @ 0x5
   983   000006                     	ds	1
   984   000007                     ___awdiv@quotient:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x6
   988   000007                     	ds	2
   989   000009                     ??_calculate:
   990                           
   991                           ; 1 bytes @ 0x8
   992   000009                     	ds	2
   993   00000B                     ??_handleInput:
   994                           
   995                           ; 1 bytes @ 0xA
   996   00000B                     	ds	2
   997   00000D                     handleInput@key:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0xC
  1001   00000D                     	ds	5
  1002   000012                     getKeyPressed@row_values:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x11
  1006   000012                     	ds	4
  1007   000016                     getKeyPressed@row:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x15
  1011   000016                     	ds	2
  1012   000018                     ??_main:
  1013                           
  1014                           ; 1 bytes @ 0x17
  1015   000018                     	ds	2
  1016   00001A                     main@key:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x19
  1020   00001A                     	ds	1
  1021                           
  1022 ;;
  1023 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1024 ;;
  1025 ;; *************** function _main *****************
  1026 ;; Defined at:
  1027 ;;		line 212 in file "main.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  key             1   25[COMRAM] unsigned char 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1043 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1044 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1045 ;;Total ram usage:        3 bytes
  1046 ;; Hardware stack levels required when called: 3
  1047 ;; This function calls:
  1048 ;;		_getKeyPressed
  1049 ;;		_handleInput
  1050 ;;		_resetAll
  1051 ;;		_setup
  1052 ;; This function is called by:
  1053 ;;		Startup code after reset
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text0
  1058   002420                     __ptext0:
  1059                           	callstack 0
  1060   002420                     _main:
  1061                           	callstack 28
  1062   002420                     
  1063                           ;main.c: 213:     setup();
  1064   002420  EC7C  F012         	call	_setup	;wreg free
  1065                           
  1066                           ;main.c: 214:     resetAll();
  1067   002424  EC56  F012         	call	_resetAll	;wreg free
  1068   002428                     l1075:
  1069                           
  1070                           ;main.c: 217:         char key = getKeyPressed();
  1071   002428  ECB3  F010         	call	_getKeyPressed	;wreg free
  1072   00242C  6E1A               	movwf	main@key^0,c
  1073   00242E                     
  1074                           ;main.c: 218:         if (key != 0) {
  1075   00242E  501A               	movf	main@key^0,w,c
  1076   002430  B4D8               	btfsc	status,2,c
  1077   002432  EF1D  F012         	goto	u551
  1078   002436  EF1F  F012         	goto	u550
  1079   00243A                     u551:
  1080   00243A  EF14  F012         	goto	l1075
  1081   00243E                     u550:
  1082   00243E                     
  1083                           ;main.c: 219:             handleInput(key);
  1084   00243E  501A               	movf	main@key^0,w,c
  1085   002440  EC01  F010         	call	_handleInput
  1086   002444                     
  1087                           ;main.c: 220:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1088   002444  0E02               	movlw	2
  1089   002446  6E19               	movwf	(??_main+1)^0,c
  1090   002448  0E86               	movlw	134
  1091   00244A  6E18               	movwf	??_main^0,c
  1092   00244C  0E99               	movlw	153
  1093   00244E                     u577:
  1094   00244E  2EE8               	decfsz	wreg,f,c
  1095   002450  D7FE               	bra	u577
  1096   002452  2E18               	decfsz	??_main^0,f,c
  1097   002454  D7FC               	bra	u577
  1098   002456  2E19               	decfsz	(??_main+1)^0,f,c
  1099   002458  D7FA               	bra	u577
  1100   00245A  0000               	nop	
  1101   00245C                     l1083:
  1102   00245C  ECB3  F010         	call	_getKeyPressed	;wreg free
  1103   002460  0900               	iorlw	0
  1104   002462  A4D8               	btfss	status,2,c
  1105   002464  EF36  F012         	goto	u561
  1106   002468  EF38  F012         	goto	u560
  1107   00246C                     u561:
  1108   00246C  EF2E  F012         	goto	l1083
  1109   002470                     u560:
  1110   002470  EF14  F012         	goto	l1075
  1111   002474  EFFE  F0FF         	goto	start
  1112   002478                     __end_of_main:
  1113                           	callstack 0
  1114                           
  1115 ;; *************** function _setup *****************
  1116 ;; Defined at:
  1117 ;;		line 60 in file "main.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;		None
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;		None
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1135 ;;Total ram usage:        0 bytes
  1136 ;; Hardware stack levels used: 1
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_main
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text1
  1145   0024F8                     __ptext1:
  1146                           	callstack 0
  1147   0024F8                     _setup:
  1148                           	callstack 30
  1149   0024F8                     
  1150                           ;main.c: 62:     LATB = 0x0F;
  1151   0024F8  0E0F               	movlw	15
  1152   0024FA  6EBB               	movwf	187,c	;volatile
  1153   0024FC                     
  1154                           ;main.c: 63:     ANSELB = 0x00;
  1155   0024FC  013A               	movlb	58	; () banked
  1156   0024FE  6B50               	clrf	80,b	;volatile
  1157                           
  1158                           ;main.c: 64:     TRISB = 0b11110000;
  1159   002500  0EF0               	movlw	240
  1160   002502  6EC3               	movwf	195,c	;volatile
  1161   002504                     
  1162                           ; BSR set to: 58
  1163                           ;main.c: 65:     PORTB = 0xFF;
  1164   002504  68CB               	setf	203,c	;volatile
  1165   002506                     
  1166                           ; BSR set to: 58
  1167                           ;main.c: 68:     ANSELD = 0x00;
  1168   002506  6B70               	clrf	112,b	;volatile
  1169   002508                     
  1170                           ; BSR set to: 58
  1171                           ;main.c: 69:     TRISD = 0x00;
  1172   002508  6AC5               	clrf	197,c	;volatile
  1173   00250A                     
  1174                           ; BSR set to: 58
  1175                           ;main.c: 70:     LATD = 0x00;
  1176   00250A  6ABD               	clrf	189,c	;volatile
  1177   00250C                     
  1178                           ; BSR set to: 58
  1179                           ;main.c: 71:     PORTD = 0x00;
  1180   00250C  6ACD               	clrf	205,c	;volatile
  1181   00250E                     
  1182                           ; BSR set to: 58
  1183   00250E  0012               	return		;funcret
  1184   002510                     __end_of_setup:
  1185                           	callstack 0
  1186                           
  1187 ;; *************** function _handleInput *****************
  1188 ;; Defined at:
  1189 ;;		line 167 in file "main.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  key             1    wreg     unsigned char 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  key             1   12[COMRAM] unsigned char 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1205 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1206 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1207 ;;Total ram usage:        3 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; Hardware stack levels required when called: 2
  1210 ;; This function calls:
  1211 ;;		_calculate
  1212 ;;		_resetAll
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text2
  1219   002002                     __ptext2:
  1220                           	callstack 0
  1221   002002                     _handleInput:
  1222                           	callstack 28
  1223                           
  1224                           ; BSR set to: 58
  1225                           ;incstack = 0
  1226                           ;handleInput@key stored from wreg
  1227   002002  6E0D               	movwf	handleInput@key^0,c
  1228   002004                     
  1229                           ;main.c: 169:     if (key >= '0' && key <= '9') {
  1230   002004  0E2F               	movlw	47
  1231   002006  640D               	cpfsgt	handleInput@key^0,c
  1232   002008  EF08  F010         	goto	u441
  1233   00200C  EF0A  F010         	goto	u440
  1234   002010                     u441:
  1235   002010  EF71  F010         	goto	l1055
  1236   002014                     u440:
  1237   002014  0E3A               	movlw	58
  1238   002016  600D               	cpfslt	handleInput@key^0,c
  1239   002018  EF10  F010         	goto	u451
  1240   00201C  EF12  F010         	goto	u450
  1241   002020                     u451:
  1242   002020  EF71  F010         	goto	l1055
  1243   002024                     u450:
  1244   002024                     
  1245                           ;main.c: 170:         if (isSecond == 0) {
  1246   002024  502F               	movf	_isSecond^0,w,c
  1247   002026  1030               	iorwf	(_isSecond+1)^0,w,c
  1248   002028  A4D8               	btfss	status,2,c
  1249   00202A  EF19  F010         	goto	u461
  1250   00202E  EF1B  F010         	goto	u460
  1251   002032                     u461:
  1252   002032  EF48  F010         	goto	l1047
  1253   002036                     u460:
  1254   002036                     
  1255                           ;main.c: 171:             X_Input_REG = (X_Input_REG * 10) + (key - '0');
  1256   002036  0E0A               	movlw	10
  1257   002038  0237               	mulwf	_X_Input_REG^0,c
  1258   00203A  006F FFCC  F00B    	movff	prodl,??_handleInput
  1259   002040  006F FFD0  F00C    	movff	prodh,??_handleInput+1
  1260   002046  0238               	mulwf	(_X_Input_REG+1)^0,c
  1261   002048  50F3               	movf	prodl,w,c
  1262   00204A  260C               	addwf	(??_handleInput+1)^0,f,c
  1263   00204C  500D               	movf	handleInput@key^0,w,c
  1264   00204E  260B               	addwf	??_handleInput^0,f,c
  1265   002050  0E00               	movlw	0
  1266   002052  220C               	addwfc	(??_handleInput+1)^0,f,c
  1267   002054  0ED0               	movlw	208
  1268   002056  240B               	addwf	??_handleInput^0,w,c
  1269   002058  6E37               	movwf	_X_Input_REG^0,c
  1270   00205A  0EFF               	movlw	255
  1271   00205C  200C               	addwfc	(??_handleInput+1)^0,w,c
  1272   00205E  6E38               	movwf	(_X_Input_REG+1)^0,c
  1273   002060                     
  1274                           ;main.c: 172:             digitCount++;
  1275   002060  4A31               	infsnz	_digitCount^0,f,c
  1276   002062  2A32               	incf	(_digitCount+1)^0,f,c
  1277   002064                     
  1278                           ;main.c: 173:             if (digitCount == 2) {
  1279   002064  0E02               	movlw	2
  1280   002066  1831               	xorwf	_digitCount^0,w,c
  1281   002068  1032               	iorwf	(_digitCount+1)^0,w,c
  1282   00206A  A4D8               	btfss	status,2,c
  1283   00206C  EF3A  F010         	goto	u471
  1284   002070  EF3C  F010         	goto	u470
  1285   002074                     u471:
  1286   002074  EFB2  F010         	goto	l81
  1287   002078                     u470:
  1288   002078                     
  1289                           ;main.c: 174:                 isSecond = 1;
  1290   002078  0E00               	movlw	0
  1291   00207A  6E30               	movwf	(_isSecond+1)^0,c
  1292   00207C  0E01               	movlw	1
  1293   00207E  6E2F               	movwf	_isSecond^0,c
  1294                           
  1295                           ;main.c: 175:                 digitCount = 0;
  1296   002080  0E00               	movlw	0
  1297   002082  6E32               	movwf	(_digitCount+1)^0,c
  1298   002084  0E00               	movlw	0
  1299   002086  6E31               	movwf	_digitCount^0,c
  1300                           
  1301                           ;main.c: 176:                 PORTD = 0x01;
  1302   002088  0E01               	movlw	1
  1303   00208A  6ECD               	movwf	205,c	;volatile
  1304   00208C  EFB2  F010         	goto	l81
  1305   002090                     l1047:
  1306                           
  1307                           ;main.c: 179:             Y_Input_REG = (Y_Input_REG * 10) + (key - '0');
  1308   002090  0E0A               	movlw	10
  1309   002092  0235               	mulwf	_Y_Input_REG^0,c
  1310   002094  006F FFCC  F00B    	movff	prodl,??_handleInput
  1311   00209A  006F FFD0  F00C    	movff	prodh,??_handleInput+1
  1312   0020A0  0236               	mulwf	(_Y_Input_REG+1)^0,c
  1313   0020A2  50F3               	movf	prodl,w,c
  1314   0020A4  260C               	addwf	(??_handleInput+1)^0,f,c
  1315   0020A6  500D               	movf	handleInput@key^0,w,c
  1316   0020A8  260B               	addwf	??_handleInput^0,f,c
  1317   0020AA  0E00               	movlw	0
  1318   0020AC  220C               	addwfc	(??_handleInput+1)^0,f,c
  1319   0020AE  0ED0               	movlw	208
  1320   0020B0  240B               	addwf	??_handleInput^0,w,c
  1321   0020B2  6E35               	movwf	_Y_Input_REG^0,c
  1322   0020B4  0EFF               	movlw	255
  1323   0020B6  200C               	addwfc	(??_handleInput+1)^0,w,c
  1324   0020B8  6E36               	movwf	(_Y_Input_REG+1)^0,c
  1325   0020BA                     
  1326                           ;main.c: 180:             digitCount++;
  1327   0020BA  4A31               	infsnz	_digitCount^0,f,c
  1328   0020BC  2A32               	incf	(_digitCount+1)^0,f,c
  1329   0020BE                     
  1330                           ;main.c: 181:             if (digitCount == 2) {
  1331   0020BE  0E02               	movlw	2
  1332   0020C0  1831               	xorwf	_digitCount^0,w,c
  1333   0020C2  1032               	iorwf	(_digitCount+1)^0,w,c
  1334   0020C4  A4D8               	btfss	status,2,c
  1335   0020C6  EF67  F010         	goto	u481
  1336   0020CA  EF69  F010         	goto	u480
  1337   0020CE                     u481:
  1338   0020CE  EFB2  F010         	goto	l81
  1339   0020D2                     u480:
  1340   0020D2                     
  1341                           ;main.c: 182:                 digitCount = 0;
  1342   0020D2  0E00               	movlw	0
  1343   0020D4  6E32               	movwf	(_digitCount+1)^0,c
  1344   0020D6  0E00               	movlw	0
  1345   0020D8  6E31               	movwf	_digitCount^0,c
  1346                           
  1347                           ;main.c: 183:                 PORTD = 0x02;
  1348   0020DA  0E02               	movlw	2
  1349   0020DC  6ECD               	movwf	205,c	;volatile
  1350   0020DE  EFB2  F010         	goto	l81
  1351   0020E2                     l1055:
  1352   0020E2  0E41               	movlw	65
  1353   0020E4  180D               	xorwf	handleInput@key^0,w,c
  1354   0020E6  B4D8               	btfsc	status,2,c
  1355   0020E8  EF78  F010         	goto	u491
  1356   0020EC  EF7A  F010         	goto	u490
  1357   0020F0                     u491:
  1358   0020F0  EF95  F010         	goto	l76
  1359   0020F4                     u490:
  1360   0020F4  0E42               	movlw	66
  1361   0020F6  180D               	xorwf	handleInput@key^0,w,c
  1362   0020F8  B4D8               	btfsc	status,2,c
  1363   0020FA  EF81  F010         	goto	u501
  1364   0020FE  EF83  F010         	goto	u500
  1365   002102                     u501:
  1366   002102  EF95  F010         	goto	l76
  1367   002106                     u500:
  1368   002106  0E43               	movlw	67
  1369   002108  180D               	xorwf	handleInput@key^0,w,c
  1370   00210A  B4D8               	btfsc	status,2,c
  1371   00210C  EF8A  F010         	goto	u511
  1372   002110  EF8C  F010         	goto	u510
  1373   002114                     u511:
  1374   002114  EF95  F010         	goto	l76
  1375   002118                     u510:
  1376   002118  0E44               	movlw	68
  1377   00211A  180D               	xorwf	handleInput@key^0,w,c
  1378   00211C  A4D8               	btfss	status,2,c
  1379   00211E  EF93  F010         	goto	u521
  1380   002122  EF95  F010         	goto	u520
  1381   002126                     u521:
  1382   002126  EF99  F010         	goto	l1063
  1383   00212A                     u520:
  1384   00212A                     l76:
  1385                           
  1386                           ;main.c: 190:         Operation_REG = key;
  1387   00212A  C00D  F039         	movff	handleInput@key,_Operation_REG
  1388                           
  1389                           ;main.c: 191:     }
  1390   00212E  EFB2  F010         	goto	l81
  1391   002132                     l1063:
  1392   002132  0E23               	movlw	35
  1393   002134  180D               	xorwf	handleInput@key^0,w,c
  1394   002136  A4D8               	btfss	status,2,c
  1395   002138  EFA0  F010         	goto	u531
  1396   00213C  EFA2  F010         	goto	u530
  1397   002140                     u531:
  1398   002140  EFA7  F010         	goto	l1069
  1399   002144                     u530:
  1400   002144                     
  1401                           ;main.c: 195:         PORTD = 0x00;
  1402   002144  6ACD               	clrf	205,c	;volatile
  1403   002146                     
  1404                           ;main.c: 196:         calculate();
  1405   002146  EC38  F011         	call	_calculate	;wreg free
  1406                           
  1407                           ;main.c: 197:     }
  1408   00214A  EFB2  F010         	goto	l81
  1409   00214E                     l1069:
  1410   00214E  0E2A               	movlw	42
  1411   002150  180D               	xorwf	handleInput@key^0,w,c
  1412   002152  A4D8               	btfss	status,2,c
  1413   002154  EFAE  F010         	goto	u541
  1414   002158  EFB0  F010         	goto	u540
  1415   00215C                     u541:
  1416   00215C  EFB2  F010         	goto	l81
  1417   002160                     u540:
  1418   002160                     
  1419                           ;main.c: 201:         resetAll();
  1420   002160  EC56  F012         	call	_resetAll	;wreg free
  1421   002164                     l81:
  1422   002164  0012               	return		;funcret
  1423   002166                     __end_of_handleInput:
  1424                           	callstack 0
  1425                           
  1426 ;; *************** function _resetAll *****************
  1427 ;; Defined at:
  1428 ;;		line 119 in file "main.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1446 ;;Total ram usage:        0 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; This function calls:
  1449 ;;		Nothing
  1450 ;; This function is called by:
  1451 ;;		_handleInput
  1452 ;;		_main
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text3
  1457   0024AC                     __ptext3:
  1458                           	callstack 0
  1459   0024AC                     _resetAll:
  1460                           	callstack 30
  1461   0024AC                     
  1462                           ;main.c: 120:     X_Input_REG = 0;
  1463   0024AC  0E00               	movlw	0
  1464   0024AE  6E38               	movwf	(_X_Input_REG+1)^0,c
  1465   0024B0  0E00               	movlw	0
  1466   0024B2  6E37               	movwf	_X_Input_REG^0,c
  1467                           
  1468                           ;main.c: 121:     Y_Input_REG = 0;
  1469   0024B4  0E00               	movlw	0
  1470   0024B6  6E36               	movwf	(_Y_Input_REG+1)^0,c
  1471   0024B8  0E00               	movlw	0
  1472   0024BA  6E35               	movwf	_Y_Input_REG^0,c
  1473                           
  1474                           ;main.c: 122:     Display_Result_REG = 0;
  1475   0024BC  0E00               	movlw	0
  1476   0024BE  6E34               	movwf	(_Display_Result_REG+1)^0,c
  1477   0024C0  0E00               	movlw	0
  1478   0024C2  6E33               	movwf	_Display_Result_REG^0,c
  1479   0024C4                     
  1480                           ;main.c: 123:     Operation_REG = 0;
  1481   0024C4  6A39               	clrf	_Operation_REG^0,c
  1482                           
  1483                           ;main.c: 124:     digitCount = 0;
  1484   0024C6  0E00               	movlw	0
  1485   0024C8  6E32               	movwf	(_digitCount+1)^0,c
  1486   0024CA  0E00               	movlw	0
  1487   0024CC  6E31               	movwf	_digitCount^0,c
  1488                           
  1489                           ;main.c: 125:     isSecond = 0;
  1490   0024CE  0E00               	movlw	0
  1491   0024D0  6E30               	movwf	(_isSecond+1)^0,c
  1492   0024D2  0E00               	movlw	0
  1493   0024D4  6E2F               	movwf	_isSecond^0,c
  1494   0024D6                     
  1495                           ;main.c: 126:     PORTD = 0x00;
  1496   0024D6  6ACD               	clrf	205,c	;volatile
  1497   0024D8  0012               	return		;funcret
  1498   0024DA                     __end_of_resetAll:
  1499                           	callstack 0
  1500                           
  1501 ;; *************** function _calculate *****************
  1502 ;; Defined at:
  1503 ;;		line 143 in file "main.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1519 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1520 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1521 ;;Total ram usage:        2 bytes
  1522 ;; Hardware stack levels used: 1
  1523 ;; Hardware stack levels required when called: 1
  1524 ;; This function calls:
  1525 ;;		___awdiv
  1526 ;;		_displayOnLEDs
  1527 ;; This function is called by:
  1528 ;;		_handleInput
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text4
  1533   002270                     __ptext4:
  1534                           	callstack 0
  1535   002270                     _calculate:
  1536                           	callstack 28
  1537   002270                     
  1538                           ;main.c: 144:     if (Operation_REG == 'A') Display_Result_REG = X_Input_REG + Y_Input_R
      +                          EG;
  1539   002270  0E41               	movlw	65
  1540   002272  1839               	xorwf	_Operation_REG^0,w,c
  1541   002274  A4D8               	btfss	status,2,c
  1542   002276  EF3F  F011         	goto	u391
  1543   00227A  EF41  F011         	goto	u390
  1544   00227E                     u391:
  1545   00227E  EF49  F011         	goto	l1011
  1546   002282                     u390:
  1547   002282  5035               	movf	_Y_Input_REG^0,w,c
  1548   002284  2437               	addwf	_X_Input_REG^0,w,c
  1549   002286  6E33               	movwf	_Display_Result_REG^0,c
  1550   002288  5036               	movf	(_Y_Input_REG+1)^0,w,c
  1551   00228A  2038               	addwfc	(_X_Input_REG+1)^0,w,c
  1552   00228C  6E34               	movwf	(_Display_Result_REG+1)^0,c
  1553   00228E  EF98  F011         	goto	l59
  1554   002292                     l1011:
  1555   002292  0E42               	movlw	66
  1556   002294  1839               	xorwf	_Operation_REG^0,w,c
  1557   002296  A4D8               	btfss	status,2,c
  1558   002298  EF50  F011         	goto	u401
  1559   00229C  EF52  F011         	goto	u400
  1560   0022A0                     u401:
  1561   0022A0  EF5A  F011         	goto	l1015
  1562   0022A4                     u400:
  1563   0022A4  5035               	movf	_Y_Input_REG^0,w,c
  1564   0022A6  5C37               	subwf	_X_Input_REG^0,w,c
  1565   0022A8  6E33               	movwf	_Display_Result_REG^0,c
  1566   0022AA  5036               	movf	(_Y_Input_REG+1)^0,w,c
  1567   0022AC  5838               	subwfb	(_X_Input_REG+1)^0,w,c
  1568   0022AE  6E34               	movwf	(_Display_Result_REG+1)^0,c
  1569   0022B0  EF98  F011         	goto	l59
  1570   0022B4                     l1015:
  1571   0022B4  0E43               	movlw	67
  1572   0022B6  1839               	xorwf	_Operation_REG^0,w,c
  1573   0022B8  A4D8               	btfss	status,2,c
  1574   0022BA  EF61  F011         	goto	u411
  1575   0022BE  EF63  F011         	goto	u410
  1576   0022C2                     u411:
  1577   0022C2  EF78  F011         	goto	l1019
  1578   0022C6                     u410:
  1579   0022C6  5035               	movf	_Y_Input_REG^0,w,c
  1580   0022C8  0237               	mulwf	_X_Input_REG^0,c
  1581   0022CA  006F FFCC  F009    	movff	prodl,??_calculate
  1582   0022D0  006F FFD0  F00A    	movff	prodh,??_calculate+1
  1583   0022D6  0238               	mulwf	(_X_Input_REG+1)^0,c
  1584   0022D8  50F3               	movf	prodl,w,c
  1585   0022DA  260A               	addwf	(??_calculate+1)^0,f,c
  1586   0022DC  5036               	movf	(_Y_Input_REG+1)^0,w,c
  1587   0022DE  0237               	mulwf	_X_Input_REG^0,c
  1588   0022E0  50F3               	movf	prodl,w,c
  1589   0022E2  260A               	addwf	(??_calculate+1)^0,f,c
  1590   0022E4  C009  F033         	movff	??_calculate,_Display_Result_REG
  1591   0022E8  C00A  F034         	movff	??_calculate+1,_Display_Result_REG+1
  1592   0022EC  EF98  F011         	goto	l59
  1593   0022F0                     l1019:
  1594   0022F0  0E44               	movlw	68
  1595   0022F2  1839               	xorwf	_Operation_REG^0,w,c
  1596   0022F4  A4D8               	btfss	status,2,c
  1597   0022F6  EF7F  F011         	goto	u421
  1598   0022FA  EF81  F011         	goto	u420
  1599   0022FE                     u421:
  1600   0022FE  EF98  F011         	goto	l59
  1601   002302                     u420:
  1602   002302  5035               	movf	_Y_Input_REG^0,w,c
  1603   002304  1036               	iorwf	(_Y_Input_REG+1)^0,w,c
  1604   002306  B4D8               	btfsc	status,2,c
  1605   002308  EF88  F011         	goto	u431
  1606   00230C  EF8A  F011         	goto	u430
  1607   002310                     u431:
  1608   002310  EF98  F011         	goto	l59
  1609   002314                     u430:
  1610   002314  C037  F001         	movff	_X_Input_REG,___awdiv@dividend
  1611   002318  C038  F002         	movff	_X_Input_REG+1,___awdiv@dividend+1
  1612   00231C  C035  F003         	movff	_Y_Input_REG,___awdiv@divisor
  1613   002320  C036  F004         	movff	_Y_Input_REG+1,___awdiv@divisor+1
  1614   002324  ECAF  F011         	call	___awdiv	;wreg free
  1615   002328  C001  F033         	movff	?___awdiv,_Display_Result_REG
  1616   00232C  C002  F034         	movff	?___awdiv+1,_Display_Result_REG+1
  1617   002330                     l59:
  1618                           
  1619                           ;main.c: 149:     displayOnLEDs(Display_Result_REG);
  1620   002330  C033  F001         	movff	_Display_Result_REG,displayOnLEDs@value
  1621   002334  C034  F002         	movff	_Display_Result_REG+1,displayOnLEDs@value+1
  1622   002338  EC6D  F012         	call	_displayOnLEDs	;wreg free
  1623   00233C                     
  1624                           ;main.c: 153:     X_Input_REG = 0;
  1625   00233C  0E00               	movlw	0
  1626   00233E  6E38               	movwf	(_X_Input_REG+1)^0,c
  1627   002340  0E00               	movlw	0
  1628   002342  6E37               	movwf	_X_Input_REG^0,c
  1629   002344                     
  1630                           ;main.c: 154:     Y_Input_REG = 0;
  1631   002344  0E00               	movlw	0
  1632   002346  6E36               	movwf	(_Y_Input_REG+1)^0,c
  1633   002348  0E00               	movlw	0
  1634   00234A  6E35               	movwf	_Y_Input_REG^0,c
  1635   00234C                     
  1636                           ;main.c: 155:     digitCount = 0;
  1637   00234C  0E00               	movlw	0
  1638   00234E  6E32               	movwf	(_digitCount+1)^0,c
  1639   002350  0E00               	movlw	0
  1640   002352  6E31               	movwf	_digitCount^0,c
  1641   002354                     
  1642                           ;main.c: 156:     isSecond = 0;
  1643   002354  0E00               	movlw	0
  1644   002356  6E30               	movwf	(_isSecond+1)^0,c
  1645   002358  0E00               	movlw	0
  1646   00235A  6E2F               	movwf	_isSecond^0,c
  1647   00235C  0012               	return		;funcret
  1648   00235E                     __end_of_calculate:
  1649                           	callstack 0
  1650                           
  1651 ;; *************** function _displayOnLEDs *****************
  1652 ;; Defined at:
  1653 ;;		line 133 in file "main.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  value           2    0[COMRAM] int 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1670 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1671 ;;Total ram usage:        2 bytes
  1672 ;; Hardware stack levels used: 1
  1673 ;; This function calls:
  1674 ;;		Nothing
  1675 ;; This function is called by:
  1676 ;;		_calculate
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text5
  1681   0024DA                     __ptext5:
  1682                           	callstack 0
  1683   0024DA                     _displayOnLEDs:
  1684                           	callstack 28
  1685   0024DA                     
  1686                           ;main.c: 134:     if (value < 0)
  1687   0024DA  BE02               	btfsc	(displayOnLEDs@value+1)^0,7,c
  1688   0024DC  EF74  F012         	goto	u320
  1689   0024E0  EF72  F012         	goto	u321
  1690   0024E4                     u321:
  1691   0024E4  EF78  F012         	goto	l961
  1692   0024E8                     u320:
  1693   0024E8                     
  1694                           ;main.c: 135:         value = ~value + 1;
  1695   0024E8  6C01               	negf	displayOnLEDs@value^0,c
  1696   0024EA  1E02               	comf	(displayOnLEDs@value+1)^0,f,c
  1697   0024EC  B0D8               	btfsc	status,0,c
  1698   0024EE  2A02               	incf	(displayOnLEDs@value+1)^0,f,c
  1699   0024F0                     l961:
  1700                           
  1701                           ;main.c: 136:     PORTD = (char)value;
  1702   0024F0  0060  F007  FFCD   	movff	displayOnLEDs@value,16333	;volatile
  1703   0024F6  0012               	return		;funcret
  1704   0024F8                     __end_of_displayOnLEDs:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function ___awdiv *****************
  1708 ;; Defined at:
  1709 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  dividend        2    0[COMRAM] int 
  1712 ;;  divisor         2    2[COMRAM] int 
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  quotient        2    6[COMRAM] int 
  1715 ;;  sign            1    5[COMRAM] unsigned char 
  1716 ;;  counter         1    4[COMRAM] unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  2    0[COMRAM] int 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1726 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1727 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1729 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1730 ;;Total ram usage:        8 bytes
  1731 ;; Hardware stack levels used: 1
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_calculate
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text6
  1740   00235E                     __ptext6:
  1741                           	callstack 0
  1742   00235E                     ___awdiv:
  1743                           	callstack 28
  1744   00235E  6A06               	clrf	___awdiv@sign^0,c
  1745   002360  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1746   002362  EFB7  F011         	goto	u330
  1747   002366  EFB5  F011         	goto	u331
  1748   00236A                     u331:
  1749   00236A  EFBD  F011         	goto	l971
  1750   00236E                     u330:
  1751   00236E  6C03               	negf	___awdiv@divisor^0,c
  1752   002370  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1753   002372  B0D8               	btfsc	status,0,c
  1754   002374  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1755   002376  0E01               	movlw	1
  1756   002378  6E06               	movwf	___awdiv@sign^0,c
  1757   00237A                     l971:
  1758   00237A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1759   00237C  EFC4  F011         	goto	u340
  1760   002380  EFC2  F011         	goto	u341
  1761   002384                     u341:
  1762   002384  EFCA  F011         	goto	l977
  1763   002388                     u340:
  1764   002388  6C01               	negf	___awdiv@dividend^0,c
  1765   00238A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1766   00238C  B0D8               	btfsc	status,0,c
  1767   00238E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1768   002390  0E01               	movlw	1
  1769   002392  1A06               	xorwf	___awdiv@sign^0,f,c
  1770   002394                     l977:
  1771   002394  0E00               	movlw	0
  1772   002396  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1773   002398  0E00               	movlw	0
  1774   00239A  6E07               	movwf	___awdiv@quotient^0,c
  1775   00239C  5003               	movf	___awdiv@divisor^0,w,c
  1776   00239E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1777   0023A0  B4D8               	btfsc	status,2,c
  1778   0023A2  EFD5  F011         	goto	u351
  1779   0023A6  EFD7  F011         	goto	u350
  1780   0023AA                     u351:
  1781   0023AA  EFFF  F011         	goto	l999
  1782   0023AE                     u350:
  1783   0023AE  0E01               	movlw	1
  1784   0023B0  6E05               	movwf	___awdiv@counter^0,c
  1785   0023B2  EFDF  F011         	goto	l985
  1786   0023B6                     l983:
  1787   0023B6  90D8               	bcf	status,0,c
  1788   0023B8  3603               	rlcf	___awdiv@divisor^0,f,c
  1789   0023BA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1790   0023BC  2A05               	incf	___awdiv@counter^0,f,c
  1791   0023BE                     l985:
  1792   0023BE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1793   0023C0  EFE4  F011         	goto	u361
  1794   0023C4  EFE6  F011         	goto	u360
  1795   0023C8                     u361:
  1796   0023C8  EFDB  F011         	goto	l983
  1797   0023CC                     u360:
  1798   0023CC                     l987:
  1799   0023CC  90D8               	bcf	status,0,c
  1800   0023CE  3607               	rlcf	___awdiv@quotient^0,f,c
  1801   0023D0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1802   0023D2  5003               	movf	___awdiv@divisor^0,w,c
  1803   0023D4  5C01               	subwf	___awdiv@dividend^0,w,c
  1804   0023D6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1805   0023D8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1806   0023DA  A0D8               	btfss	status,0,c
  1807   0023DC  EFF2  F011         	goto	u371
  1808   0023E0  EFF4  F011         	goto	u370
  1809   0023E4                     u371:
  1810   0023E4  EFF9  F011         	goto	l995
  1811   0023E8                     u370:
  1812   0023E8  5003               	movf	___awdiv@divisor^0,w,c
  1813   0023EA  5E01               	subwf	___awdiv@dividend^0,f,c
  1814   0023EC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1815   0023EE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1816   0023F0  8007               	bsf	___awdiv@quotient^0,0,c
  1817   0023F2                     l995:
  1818   0023F2  90D8               	bcf	status,0,c
  1819   0023F4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1820   0023F6  3203               	rrcf	___awdiv@divisor^0,f,c
  1821   0023F8  2E05               	decfsz	___awdiv@counter^0,f,c
  1822   0023FA  EFE6  F011         	goto	l987
  1823   0023FE                     l999:
  1824   0023FE  5006               	movf	___awdiv@sign^0,w,c
  1825   002400  B4D8               	btfsc	status,2,c
  1826   002402  EF05  F012         	goto	u381
  1827   002406  EF07  F012         	goto	u380
  1828   00240A                     u381:
  1829   00240A  EF0B  F012         	goto	l1003
  1830   00240E                     u380:
  1831   00240E  6C07               	negf	___awdiv@quotient^0,c
  1832   002410  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1833   002412  B0D8               	btfsc	status,0,c
  1834   002414  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1835   002416                     l1003:
  1836   002416  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1837   00241A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1838   00241E  0012               	return		;funcret
  1839   002420                     __end_of___awdiv:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function _getKeyPressed *****************
  1843 ;; Defined at:
  1844 ;;		line 80 in file "main.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;		None
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  row             2   21[COMRAM] int 
  1849 ;;  keys           16    1[COMRAM] unsigned char [4][4]
  1850 ;;  row_values      4   17[COMRAM] unsigned char [4]
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      unsigned char 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1861 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1862 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1863 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1864 ;;Total ram usage:       23 bytes
  1865 ;; Hardware stack levels used: 1
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text7
  1874   002166                     __ptext7:
  1875                           	callstack 0
  1876   002166                     _getKeyPressed:
  1877                           	callstack 30
  1878   002166                     
  1879                           ;main.c: 81:     char keys[4][4] = {
  1880   002166  EE20  F01B         	lfsr	2,getKeyPressed@F16022
  1881   00216A  EE10  F002         	lfsr	1,getKeyPressed@keys
  1882   00216E  0E0F               	movlw	15
  1883   002170                     u131:
  1884   002170  006F FF6F FFE3     	movff	plusw2,plusw1
  1885   002176  06E8               	decf	wreg,f,c
  1886   002178  E2FB               	bc	u131
  1887   00217A                     
  1888                           ;main.c: 89:     unsigned char row_values[4] = {0b11111110, 0b11111101, 0b11111011, 0b11
      +                          110111};
  1889   00217A  C02B  F012         	movff	getKeyPressed@F16026,getKeyPressed@row_values
  1890   00217E  C02C  F013         	movff	getKeyPressed@F16026+1,getKeyPressed@row_values+1
  1891   002182  C02D  F014         	movff	getKeyPressed@F16026+2,getKeyPressed@row_values+2
  1892   002186  C02E  F015         	movff	getKeyPressed@F16026+3,getKeyPressed@row_values+3
  1893   00218A                     
  1894                           ;main.c: 91:     for (int row = 0; row < 4; row++) {
  1895   00218A  0E00               	movlw	0
  1896   00218C  6E17               	movwf	(getKeyPressed@row+1)^0,c
  1897   00218E  0E00               	movlw	0
  1898   002190  6E16               	movwf	getKeyPressed@row^0,c
  1899   002192                     l875:
  1900                           
  1901                           ;main.c: 92:         LATB = row_values[row];
  1902   002192  5016               	movf	getKeyPressed@row^0,w,c
  1903   002194  0F12               	addlw	low getKeyPressed@row_values
  1904   002196  6ED9               	movwf	fsr2l,c
  1905   002198  6ADA               	clrf	fsr2h,c
  1906   00219A  50DF               	movf	indf2,w,c
  1907   00219C  6EBB               	movwf	187,c	;volatile
  1908   00219E                     
  1909                           ;main.c: 93:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1910   00219E  0E07               	movlw	7
  1911   0021A0  6E01               	movwf	??_getKeyPressed^0,c
  1912   0021A2  0E7D               	movlw	125
  1913   0021A4                     u587:
  1914   0021A4  2EE8               	decfsz	wreg,f,c
  1915   0021A6  D7FE               	bra	u587
  1916   0021A8  2E01               	decfsz	??_getKeyPressed^0,f,c
  1917   0021AA  D7FC               	bra	u587
  1918   0021AC  0000               	nop	
  1919   0021AE                     
  1920                           ;main.c: 97:         if (!PORTBbits.RB4) return keys[row][0];
  1921   0021AE  B8CB               	btfsc	203,4,c	;volatile
  1922   0021B0  EFDC  F010         	goto	u141
  1923   0021B4  EFDE  F010         	goto	u140
  1924   0021B8                     u141:
  1925   0021B8  EFE7  F010         	goto	l32
  1926   0021BC                     u140:
  1927   0021BC  5016               	movf	getKeyPressed@row^0,w,c
  1928   0021BE  0D04               	mullw	4
  1929   0021C0  50F3               	movf	243,w,c
  1930   0021C2  0F02               	addlw	low getKeyPressed@keys
  1931   0021C4  6ED9               	movwf	fsr2l,c
  1932   0021C6  6ADA               	clrf	fsr2h,c
  1933   0021C8  50DF               	movf	indf2,w,c
  1934   0021CA  EF37  F011         	goto	l33
  1935   0021CE                     l32:
  1936                           
  1937                           ;main.c: 98:         if (!PORTBbits.RB5) return keys[row][1];
  1938   0021CE  BACB               	btfsc	203,5,c	;volatile
  1939   0021D0  EFEC  F010         	goto	u151
  1940   0021D4  EFEE  F010         	goto	u150
  1941   0021D8                     u151:
  1942   0021D8  EFFC  F010         	goto	l34
  1943   0021DC                     u150:
  1944   0021DC  5016               	movf	getKeyPressed@row^0,w,c
  1945   0021DE  0D04               	mullw	4
  1946   0021E0  006F FFCC  F001    	movff	prodl,??_getKeyPressed
  1947   0021E6  0E01               	movlw	1
  1948   0021E8  2601               	addwf	??_getKeyPressed^0,f,c
  1949   0021EA  5001               	movf	??_getKeyPressed^0,w,c
  1950   0021EC  0F02               	addlw	low getKeyPressed@keys
  1951   0021EE  6ED9               	movwf	fsr2l,c
  1952   0021F0  6ADA               	clrf	fsr2h,c
  1953   0021F2  50DF               	movf	indf2,w,c
  1954   0021F4  EF37  F011         	goto	l33
  1955   0021F8                     l34:
  1956                           
  1957                           ;main.c: 99:         if (!PORTBbits.RB6) return keys[row][2];
  1958   0021F8  BCCB               	btfsc	203,6,c	;volatile
  1959   0021FA  EF01  F011         	goto	u161
  1960   0021FE  EF03  F011         	goto	u160
  1961   002202                     u161:
  1962   002202  EF11  F011         	goto	l35
  1963   002206                     u160:
  1964   002206  5016               	movf	getKeyPressed@row^0,w,c
  1965   002208  0D04               	mullw	4
  1966   00220A  006F FFCC  F001    	movff	prodl,??_getKeyPressed
  1967   002210  0E02               	movlw	2
  1968   002212  2601               	addwf	??_getKeyPressed^0,f,c
  1969   002214  5001               	movf	??_getKeyPressed^0,w,c
  1970   002216  0F02               	addlw	low getKeyPressed@keys
  1971   002218  6ED9               	movwf	fsr2l,c
  1972   00221A  6ADA               	clrf	fsr2h,c
  1973   00221C  50DF               	movf	indf2,w,c
  1974   00221E  EF37  F011         	goto	l33
  1975   002222                     l35:
  1976                           
  1977                           ;main.c: 100:         if (!PORTBbits.RB7) return keys[row][3];
  1978   002222  BECB               	btfsc	203,7,c	;volatile
  1979   002224  EF16  F011         	goto	u171
  1980   002228  EF18  F011         	goto	u170
  1981   00222C                     u171:
  1982   00222C  EF26  F011         	goto	l897
  1983   002230                     u170:
  1984   002230  5016               	movf	getKeyPressed@row^0,w,c
  1985   002232  0D04               	mullw	4
  1986   002234  006F FFCC  F001    	movff	prodl,??_getKeyPressed
  1987   00223A  0E03               	movlw	3
  1988   00223C  2601               	addwf	??_getKeyPressed^0,f,c
  1989   00223E  5001               	movf	??_getKeyPressed^0,w,c
  1990   002240  0F02               	addlw	low getKeyPressed@keys
  1991   002242  6ED9               	movwf	fsr2l,c
  1992   002244  6ADA               	clrf	fsr2h,c
  1993   002246  50DF               	movf	indf2,w,c
  1994   002248  EF37  F011         	goto	l33
  1995   00224C                     l897:
  1996                           
  1997                           ;main.c: 101:     }
  1998   00224C  4A16               	infsnz	getKeyPressed@row^0,f,c
  1999   00224E  2A17               	incf	(getKeyPressed@row+1)^0,f,c
  2000   002250  BE17               	btfsc	(getKeyPressed@row+1)^0,7,c
  2001   002252  EF34  F011         	goto	u181
  2002   002256  5017               	movf	(getKeyPressed@row+1)^0,w,c
  2003   002258  E109               	bnz	u180
  2004   00225A  0E04               	movlw	4
  2005   00225C  5C16               	subwf	getKeyPressed@row^0,w,c
  2006   00225E  A0D8               	btfss	status,0,c
  2007   002260  EF34  F011         	goto	u181
  2008   002264  EF36  F011         	goto	u180
  2009   002268                     u181:
  2010   002268  EFC9  F010         	goto	l875
  2011   00226C                     u180:
  2012   00226C                     
  2013                           ;main.c: 103:     return 0;
  2014   00226C  0E00               	movlw	0
  2015   00226E                     l33:
  2016   00226E  0012               	return		;funcret
  2017   002270                     __end_of_getKeyPressed:
  2018                           	callstack 0
  2019                           
  2020                           	psect	smallconst
  2021   002000                     __psmallconst:
  2022                           	callstack 0
  2023   002000  00                 	db	0
  2024   002001  00                 	db	0	; dummy byte at the end
  2025   002000                     __smallconst    set	__psmallconst
  2026   002000                     __mediumconst   set	__psmallconst
  2027   000000                     __activetblptr  equ	0
  2028                           
  2029                           	psect	rparam
  2030   000001                     ___rparam_used  equ	1
  2031   000000                     ___param_bank   equ	0
  2032   000000                     __Lparam        equ	__Lrparam
  2033   000000                     __Hparam        equ	__Hrparam
  2034                           
  2035                           	psect	config
  2036                           
  2037                           ;Config register CONFIG1L @ 0x300000
  2038                           ;	External Oscillator Selection
  2039                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  2040                           ;	Reset Oscillator Selection
  2041                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2042   300000                     	org	3145728
  2043   300000  F8                 	db	248
  2044                           
  2045                           ;Config register CONFIG1H @ 0x300001
  2046                           ;	Clock out Enable bit
  2047                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2048                           ;	PRLOCKED One-Way Set Enable bit
  2049                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  2050                           ;	Clock Switch Enable bit
  2051                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2052                           ;	Fail-Safe Clock Monitor Enable bit
  2053                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2054   300001                     	org	3145729
  2055   300001  FF                 	db	255
  2056                           
  2057                           ;Config register CONFIG2L @ 0x300002
  2058                           ;	MCLR Enable bit
  2059                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2060                           ;	Power-up timer selection bits
  2061                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2062                           ;	Multi-vector enable bit
  2063                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2064                           ;	IVTLOCK bit One-way set enable bit
  2065                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2066                           ;	Low Power BOR Enable bit
  2067                           ;	LPBOREN = OFF, ULPBOR disabled
  2068                           ;	Brown-out Reset Enable bits
  2069                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2070   300002                     	org	3145730
  2071   300002  FF                 	db	255
  2072                           
  2073                           ;Config register CONFIG2H @ 0x300003
  2074                           ;	Brown-out Reset Voltage Selection bits
  2075                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2076                           ;	ZCD Disable bit
  2077                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2078                           ;	PPSLOCK bit One-Way Set Enable bit
  2079                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2080                           ;	Stack Full/Underflow Reset Enable bit
  2081                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2082                           ;	Debugger Enable bit
  2083                           ;	DEBUG = OFF, Background debugger disabled
  2084                           ;	Extended Instruction Set Enable bit
  2085                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2086   300003                     	org	3145731
  2087   300003  FF                 	db	255
  2088                           
  2089                           ;Config register CONFIG3L @ 0x300004
  2090                           ;	WDT Period selection bits
  2091                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2092                           ;	WDT operating mode
  2093                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2094   300004                     	org	3145732
  2095   300004  9F                 	db	159
  2096                           
  2097                           ;Config register CONFIG3H @ 0x300005
  2098                           ;	WDT Window Select bits
  2099                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2100                           ;	WDT input clock selector
  2101                           ;	WDTCCS = SC, Software Control
  2102   300005                     	org	3145733
  2103   300005  FF                 	db	255
  2104                           
  2105                           ;Config register CONFIG4L @ 0x300006
  2106                           ;	Boot Block Size selection bits
  2107                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2108                           ;	Boot Block enable bit
  2109                           ;	BBEN = OFF, Boot block disabled
  2110                           ;	Storage Area Flash enable bit
  2111                           ;	SAFEN = OFF, SAF disabled
  2112                           ;	Application Block write protection bit
  2113                           ;	WRTAPP = OFF, Application Block not write protected
  2114   300006                     	org	3145734
  2115   300006  FF                 	db	255
  2116                           
  2117                           ;Config register CONFIG4H @ 0x300007
  2118                           ;	Boot Block Write Protection bit
  2119                           ;	WRTB = OFF, Boot Block not write-protected
  2120                           ;	Configuration Register Write Protection bit
  2121                           ;	WRTC = OFF, Configuration registers not write-protected
  2122                           ;	Data EEPROM Write Protection bit
  2123                           ;	WRTD = OFF, Data EEPROM not write-protected
  2124                           ;	SAF Write protection bit
  2125                           ;	WRTSAF = OFF, SAF not Write Protected
  2126                           ;	Low Voltage Programming Enable bit
  2127                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2128   300007                     	org	3145735
  2129   300007  FF                 	db	255
  2130                           
  2131                           ;Config register CONFIG5L @ 0x300008
  2132                           ;	PFM and Data EEPROM Code Protection bit
  2133                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2134   300008                     	org	3145736
  2135   300008  FF                 	db	255
  2136                           
  2137                           ;Config register CONFIG5H @ 0x300009
  2138                           ;	unspecified, using default values
  2139   300009                     	org	3145737
  2140   300009  FF                 	db	255
  2141                           tosu	equ	0x3FFF
  2142                           tosh	equ	0x3FFE
  2143                           tosl	equ	0x3FFD
  2144                           stkptr	equ	0x3FFC
  2145                           pclatu	equ	0x3FFB
  2146                           pclath	equ	0x3FFA
  2147                           pcl	equ	0x3FF9
  2148                           tblptru	equ	0x3FF8
  2149                           tblptrh	equ	0x3FF7
  2150                           tblptrl	equ	0x3FF6
  2151                           tablat	equ	0x3FF5
  2152                           prodh	equ	0x3FF4
  2153                           prodl	equ	0x3FF3
  2154                           indf0	equ	0x3FEF
  2155                           postinc0	equ	0x3FEE
  2156                           postdec0	equ	0x3FED
  2157                           preinc0	equ	0x3FEC
  2158                           plusw0	equ	0x3FEB
  2159                           fsr0h	equ	0x3FEA
  2160                           fsr0l	equ	0x3FE9
  2161                           wreg	equ	0x3FE8
  2162                           indf1	equ	0x3FE7
  2163                           postinc1	equ	0x3FE6
  2164                           postdec1	equ	0x3FE5
  2165                           preinc1	equ	0x3FE4
  2166                           plusw1	equ	0x3FE3
  2167                           fsr1h	equ	0x3FE2
  2168                           fsr1l	equ	0x3FE1
  2169                           bsr	equ	0x3FE0
  2170                           indf2	equ	0x3FDF
  2171                           postinc2	equ	0x3FDE
  2172                           postdec2	equ	0x3FDD
  2173                           preinc2	equ	0x3FDC
  2174                           plusw2	equ	0x3FDB
  2175                           fsr2h	equ	0x3FDA
  2176                           fsr2l	equ	0x3FD9
  2177                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     26      57
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_getKeyPressed
    _handleInput->_calculate
    _calculate->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     914
                                             23 COMRAM     3     3      0
                      _getKeyPressed
                        _handleInput
                           _resetAll
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handleInput                                          3     3      0     689
                                             10 COMRAM     3     3      0
                          _calculate
                           _resetAll
 ---------------------------------------------------------------------------------
 (1) _resetAll                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _calculate                                            2     2      0     370
                                              8 COMRAM     2     2      0
                            ___awdiv
                      _displayOnLEDs
 ---------------------------------------------------------------------------------
 (3) _displayOnLEDs                                        2     0      2      68
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                       23    23      0     180
                                              0 COMRAM    23    23      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getKeyPressed
   _handleInput
     _calculate
       ___awdiv
       _displayOnLEDs
     _resetAll
   _resetAll
   _setup

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRllh      1386      0       0      0.0%
BITBIGSFRlll       592      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     26      57     60.0%
BITBIGSFRh          52      0       0      0.0%
BITBIGSFRlh         15      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      57      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 08 11:46:22 2025

                     l23 250E                       l32 21CE                       l33 226E  
                     l34 21F8                       l35 2222                       l51 24D8  
                     l55 24F6                       l65 235C                       l81 2164  
                     l59 2330                       l76 212A             ___awdiv@sign 0006  
       getKeyPressed@row 0016                      l327 241E                      l901 226C  
                    l821 24C4                      l823 24D6                      l819 24AC  
                    l851 24F8                      l861 250A                      l853 24FC  
                    l863 250C                      l855 2504                      l881 21BC  
                    l865 2166                      l961 24F0                      l857 2506  
                    l875 2192                      l867 217A                      l971 237A  
                    l963 235E                      l859 2508                      l893 2230  
                    l885 21DC                      l877 219E                      l869 218A  
                    l981 23AE                      l973 2388                      l965 2360  
                    l957 24DA                      l879 21AE                      l991 23E8  
                    l983 23B6                      l975 2390                      l967 236E  
                    l959 24E8                      l897 224C                      l889 2206  
                    l993 23F0                      l985 23BE                      l977 2394  
                    l969 2376                      l899 2250                      l995 23F2  
                    l987 23CC                      l979 239C                      l997 23F8  
                    l989 23D2                      l999 23FE                      u131 2170  
                    u140 21BC                      u141 21B8                      u150 21DC  
                    u151 21D8                      u160 2206                      u320 24E8  
                    u400 22A4                      u161 2202                      u321 24E4  
                    u401 22A0                      u170 2230                      u330 236E  
                    u410 22C6                      u171 222C                      u331 236A  
                    u411 22C2                      u180 226C                      u340 2388  
                    u420 2302                      u500 2106                      u181 2268  
                    u341 2384                      u421 22FE                      u501 2102  
                    u350 23AE                      u430 2314                      u510 2118  
                    u351 23AA                      u431 2310                      u511 2114  
                    u360 23CC                      u520 212A                      u440 2014  
                    u361 23C8                      u521 2126                      u441 2010  
                    u370 23E8                      u530 2144                      u450 2024  
                    u371 23E4                      u531 2140                      u451 2020  
                    u380 240E                      u540 2160                      u460 2036  
                    u381 240A                      u541 215C                      u461 2032  
                    u390 2282                      u470 2078                      u550 243E  
                    u391 227E                      u471 2074                      u551 243A  
                    u480 20D2                      u560 2470                      u481 20CE  
                    u561 246C                      u490 20F4                      u491 20F0  
                    u577 244E                      u587 21A4                      wreg 3FE8  
         ?_displayOnLEDs 0001        getKeyPressed@keys 0002                     l1001 240E  
                   l1003 2416                     l1011 2292                     l1021 2302  
                   l1013 22A4                     l1031 2354                     l1023 2314  
                   l1015 22B4                     l1007 2270                     l1025 233C  
                   l1017 22C6                     l1009 2282                     l1041 2060  
                   l1033 2004                     l1027 2344                     l1019 22F0  
                   l1051 20BE                     l1043 2064                     l1035 2014  
                   l1029 234C                     l1061 2118                     l1053 20D2  
                   l1045 2078                     l1037 2024                     l1071 2160  
                   l1063 2132                     l1039 2036                     l1047 2090  
                   l1055 20E2                     l1065 2144                     l1057 20F4  
                   l1049 20BA                     l1081 2444                     l1073 2420  
                   l1067 2146                     l1059 2106                     l1083 245C  
                   l1075 2428                     l1069 214E                     l1077 242E  
                   l1079 243E                     _LATB 3FBB                     _LATD 3FBD  
                   _main 2420                     fsr2h 3FDA                     indf2 3FDF  
                   fsr1l 3FE1                     fsr2l 3FD9                     prodh 3FF4  
                   prodl 3FF3                     start FFFC             ___param_bank 0000  
                  ?_main 0001          __end_of___awdiv 2420          ___awdiv@divisor 0003  
        ___awdiv@counter 0005                    _PORTB 3FCB                    _PORTD 3FCD  
                  _TRISB 3FC3                    _TRISD 3FC5                    _setup 24F8  
    getKeyPressed@F16022 001B      getKeyPressed@F16026 002B                    tablat 3FF5  
                  plusw1 3FE3                    plusw2 3FDB                    status 3FD8  
        __initialization 2478             __end_of_main 2478                   ??_main 0018  
        ??_displayOnLEDs 0003            __activetblptr 0000         ___awdiv@dividend 0001  
                 ?_setup 0001                   _ANSELB 3A50                   _ANSELD 3A70  
              ??___awdiv 0005                   clear_0 24A0         ___awdiv@quotient 0007  
                 isa$std 0001         __end_of_resetAll 24DA             __pdataCOMRAM 001B  
           __mediumconst 2000                   tblptrh 3FF7                   tblptrl 3FF6  
                 tblptru 3FF8               __accesstop 0060  __end_of__initialization 24A6  
          ___rparam_used 0001           __pcstackCOMRAM 0001    __end_of_getKeyPressed 2270  
          __end_of_setup 2510              _X_Input_REG 0037              _Y_Input_REG 0035  
                ??_setup 0001               _digitCount 0031        __end_of_calculate 235E  
                __Hparam 0000                ?_resetAll 0001                  __Lparam 0000  
                ___awdiv 235E             __psmallconst 2000                  __pcinit 2478  
                __ramtop 2000                  __ptext0 2420                  __ptext1 24F8  
                __ptext2 2002                  __ptext3 24AC                  __ptext4 2270  
                __ptext5 24DA                  __ptext6 235E                  __ptext7 2166  
                main@key 001A     end_of_initialization 24A6               ??_resetAll 0001  
                postdec1 3FE5                  postinc0 3FEE                _PORTBbits 3FCB  
          ??_handleInput 000B    __end_of_displayOnLEDs 24F8       displayOnLEDs@value 0001  
          __pidataCOMRAM 2510            _Operation_REG 0039      start_initialization 2478  
    __end_of_handleInput 2166           handleInput@key 000D              __pbssCOMRAM 002F  
getKeyPressed@row_values 0012                _calculate 2270                 ?___awdiv 0001  
            __smallconst 2000              _handleInput 2002               ?_calculate 0001  
          _getKeyPressed 2166                copy_data0 248C                 __Hrparam 0000  
               __Lrparam 0000           ?_getKeyPressed 0001                 _isSecond 002F  
            ??_calculate 0009                 _resetAll 24AC                 isa$xinst 0000  
     _Display_Result_REG 0033          ??_getKeyPressed 0001             ?_handleInput 0001  
          _displayOnLEDs 24DA  
